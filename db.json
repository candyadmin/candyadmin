{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes\\fluid\\source\\img\\avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\xml\\local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1}],"Cache":[{"_id":"source\\_posts\\学习it网站推荐.md","hash":"aedc3011bf769407341ec87091cf4b8992ba9deb","modified":1723082640892},{"_id":"source\\about\\index.md","hash":"3577e59d048ecdfa83f9d1b09a14ea50be1d74bf","modified":1719471059998},{"_id":"source\\_posts\\学习it网站推荐\\image_-m-m1AZh7M.png","hash":"06326b2f927af11f2f6b92c74a8c0a927dcd1c77","modified":1719370387878},{"_id":"source\\_posts\\学习it网站推荐\\image_RtiUPlWbme.png","hash":"0facd847ec0640c285287074d407aa7321a6841a","modified":1719370387919},{"_id":"source\\_posts\\学习it网站推荐\\image_bUw4GOE3i3.png","hash":"971882befb7ce49cdc0b9b35141c78f28f1b57a5","modified":1719370387965},{"_id":"source\\_posts\\学习it网站推荐\\image_qBL4LWSs2U.png","hash":"8cb6d4fc5c472da02a61a45a2effc3e70d890f1d","modified":1719370387981},{"_id":"source\\_posts\\学习it网站推荐\\image_tMLd_Cap6a.png","hash":"ef3b3bf0189dd4e5fc0b0e0fcdde2d5d7f38d0b3","modified":1719370387998},{"_id":"source\\_posts\\学习it网站推荐\\image_PEAqPgamQe.png","hash":"251aee9da55d0cf769bc29e54fbf659c06b1051c","modified":1719370387896},{"_id":"source\\_posts\\学习it网站推荐\\image_zZOb0Uu1MN.png","hash":"8872b7055947069ca0a107a046adb3e21e675d33","modified":1719370388013},{"_id":"themes\\fluid\\source\\css\\_pages\\_tag\\tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1719284523549},{"_id":"themes\\fluid\\.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1719284522472},{"_id":"themes\\fluid\\.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1719284522486},{"_id":"themes\\fluid\\.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1719284522480},{"_id":"themes\\fluid\\.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1719284522492},{"_id":"themes\\fluid\\LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1719284522497},{"_id":"themes\\fluid\\README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":1719368853803},{"_id":"themes\\fluid\\_config.yml","hash":"c77597fecc097d137080a1d0ea2634f5d74e2be3","modified":1719471301477},{"_id":"themes\\fluid\\languages\\de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1719284522603},{"_id":"themes\\fluid\\package.json","hash":"c640b57695b7b6002399711f1a7708b0f6c05b84","modified":1719284522522},{"_id":"themes\\fluid\\languages\\en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1719284522611},{"_id":"themes\\fluid\\languages\\ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1719284522630},{"_id":"themes\\fluid\\languages\\ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1719284522637},{"_id":"themes\\fluid\\languages\\es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1719284522624},{"_id":"themes\\fluid\\languages\\eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1719284522617},{"_id":"themes\\fluid\\languages\\zh-CN.yml","hash":"2253e1bc61694b3bdc5e434ea2660d13d941b50e","modified":1719284522644},{"_id":"themes\\fluid\\languages\\zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1719284522651},{"_id":"themes\\fluid\\layout\\archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1719284522681},{"_id":"themes\\fluid\\layout\\404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1719284522668},{"_id":"themes\\fluid\\layout\\categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1719284522688},{"_id":"themes\\fluid\\languages\\zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1719284522656},{"_id":"themes\\fluid\\layout\\about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1719284522675},{"_id":"themes\\fluid\\layout\\category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1719284522695},{"_id":"themes\\fluid\\layout\\layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1719284522706},{"_id":"themes\\fluid\\layout\\links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1719284522712},{"_id":"themes\\fluid\\layout\\page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1719284522718},{"_id":"themes\\fluid\\layout\\tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1719284522728},{"_id":"themes\\fluid\\layout\\post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":1719284522724},{"_id":"themes\\fluid\\layout\\tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1719284522734},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1719284522536},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1719284522544},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1719284522550},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1719284522562},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1719284522569},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1719284522556},{"_id":"themes\\fluid\\.github\\workflows\\cr.yaml","hash":"19a8a00f5ba9607d82265572fe1202b64a8b0822","modified":1719284522577},{"_id":"themes\\fluid\\.github\\workflows\\limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1719284522586},{"_id":"themes\\fluid\\.github\\workflows\\publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1719284522594},{"_id":"themes\\fluid\\layout\\_partials\\archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1719284522742},{"_id":"themes\\fluid\\layout\\_partials\\category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1719284522748},{"_id":"themes\\fluid\\layout\\_partials\\category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1719284522754},{"_id":"themes\\fluid\\layout\\_partials\\comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1719284522761},{"_id":"themes\\fluid\\layout\\_partials\\css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1719284522768},{"_id":"themes\\fluid\\layout\\_partials\\footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1719284522775},{"_id":"themes\\fluid\\layout\\_partials\\head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1719284522782},{"_id":"themes\\fluid\\layout\\_partials\\header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1719284522787},{"_id":"themes\\fluid\\layout\\_partials\\markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1719284522793},{"_id":"themes\\fluid\\layout\\_partials\\paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1719284522799},{"_id":"themes\\fluid\\layout\\_partials\\scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1719284522804},{"_id":"themes\\fluid\\layout\\_partials\\search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1719284522810},{"_id":"themes\\fluid\\layout\\index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1719284522700},{"_id":"themes\\fluid\\scripts\\events\\index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1719284523000},{"_id":"themes\\fluid\\scripts\\filters\\locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1719284523055},{"_id":"themes\\fluid\\scripts\\filters\\default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1719284523050},{"_id":"themes\\fluid\\scripts\\generators\\index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1719284523068},{"_id":"themes\\fluid\\scripts\\generators\\pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1719284523079},{"_id":"themes\\fluid\\scripts\\filters\\post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":1719284523061},{"_id":"themes\\fluid\\scripts\\generators\\local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1719284523075},{"_id":"themes\\fluid\\scripts\\helpers\\engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1719284523093},{"_id":"themes\\fluid\\scripts\\helpers\\date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1719284523087},{"_id":"themes\\fluid\\scripts\\helpers\\export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1719284523099},{"_id":"themes\\fluid\\scripts\\helpers\\injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1719284523111},{"_id":"themes\\fluid\\scripts\\helpers\\import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1719284523105},{"_id":"themes\\fluid\\scripts\\helpers\\page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1719284523116},{"_id":"themes\\fluid\\scripts\\helpers\\scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1719284523123},{"_id":"themes\\fluid\\scripts\\helpers\\url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1719284523128},{"_id":"themes\\fluid\\scripts\\helpers\\wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":1719284523141},{"_id":"themes\\fluid\\scripts\\tags\\button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1719284523149},{"_id":"themes\\fluid\\scripts\\tags\\checkbox.js","hash":"0857aa86db2a711ae5c77218a9e3fa686d0e87b1","modified":1719284523156},{"_id":"themes\\fluid\\scripts\\tags\\fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":1719284523162},{"_id":"themes\\fluid\\scripts\\helpers\\utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1719284523134},{"_id":"themes\\fluid\\scripts\\tags\\group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1719284523168},{"_id":"themes\\fluid\\scripts\\tags\\label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1719284523174},{"_id":"themes\\fluid\\scripts\\tags\\mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1719284523180},{"_id":"themes\\fluid\\scripts\\utils\\compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1719284523197},{"_id":"themes\\fluid\\scripts\\utils\\crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1719284523203},{"_id":"themes\\fluid\\scripts\\tags\\note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1719284523188},{"_id":"themes\\fluid\\scripts\\utils\\object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1719284523210},{"_id":"themes\\fluid\\scripts\\utils\\resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1719284523215},{"_id":"themes\\fluid\\scripts\\utils\\url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1719284523222},{"_id":"themes\\fluid\\source\\img\\fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1719284523612},{"_id":"themes\\fluid\\source\\img\\avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1719284523588},{"_id":"themes\\fluid\\source\\img\\loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1719284523621},{"_id":"themes\\fluid\\source\\js\\boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1719284523646},{"_id":"themes\\fluid\\source\\img\\police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1719284523635},{"_id":"themes\\fluid\\source\\js\\events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1719284523663},{"_id":"themes\\fluid\\source\\js\\img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1719284523671},{"_id":"themes\\fluid\\source\\js\\color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1719284523654},{"_id":"themes\\fluid\\source\\js\\leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1719284523678},{"_id":"themes\\fluid\\source\\js\\local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1719284523685},{"_id":"themes\\fluid\\source\\js\\plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1719284523693},{"_id":"themes\\fluid\\source\\css\\gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1719284523237},{"_id":"themes\\fluid\\source\\css\\highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1719284523242},{"_id":"themes\\fluid\\source\\css\\highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1719284523247},{"_id":"themes\\fluid\\source\\css\\main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1719284523252},{"_id":"themes\\fluid\\source\\js\\utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1719284523701},{"_id":"themes\\fluid\\source\\xml\\local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1719284523730},{"_id":"themes\\fluid\\layout\\_partials\\comments\\changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1719284522818},{"_id":"themes\\fluid\\layout\\_partials\\comments\\cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1719284522824},{"_id":"themes\\fluid\\layout\\_partials\\comments\\discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1719284522830},{"_id":"themes\\fluid\\layout\\_partials\\comments\\disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1719284522835},{"_id":"themes\\fluid\\layout\\_partials\\comments\\giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1719284522842},{"_id":"themes\\fluid\\layout\\_partials\\comments\\livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1719284522852},{"_id":"themes\\fluid\\layout\\_partials\\comments\\gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1719284522847},{"_id":"themes\\fluid\\layout\\_partials\\comments\\remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1719284522858},{"_id":"themes\\fluid\\layout\\_partials\\comments\\utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1719284522868},{"_id":"themes\\fluid\\layout\\_partials\\comments\\valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1719284522875},{"_id":"themes\\fluid\\layout\\_partials\\comments\\twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1719284522863},{"_id":"themes\\fluid\\layout\\_partials\\comments\\waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1719284522880},{"_id":"themes\\fluid\\layout\\_partials\\footer\\statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1719284522893},{"_id":"themes\\fluid\\layout\\_partials\\footer\\beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1719284522889},{"_id":"themes\\fluid\\layout\\_partials\\header\\banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1719284522900},{"_id":"themes\\fluid\\layout\\_partials\\header\\navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1719284522905},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1719284522912},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1719284522916},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1719284522921},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1719284522925},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1719284522929},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1719284522934},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1719284522939},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1719284522943},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":1719284522947},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1719284522952},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1719284522956},{"_id":"themes\\fluid\\layout\\_partials\\post\\category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1719284522962},{"_id":"themes\\fluid\\layout\\_partials\\post\\copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1719284522967},{"_id":"themes\\fluid\\layout\\_partials\\post\\meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1719284522971},{"_id":"themes\\fluid\\layout\\_partials\\post\\meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1719284522975},{"_id":"themes\\fluid\\layout\\_partials\\post\\sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1719284522980},{"_id":"themes\\fluid\\layout\\_partials\\post\\sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1719284522984},{"_id":"themes\\fluid\\scripts\\events\\lib\\compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1719284523009},{"_id":"themes\\fluid\\scripts\\events\\lib\\footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1719284523015},{"_id":"themes\\fluid\\layout\\_partials\\post\\toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1719284522989},{"_id":"themes\\fluid\\scripts\\events\\lib\\injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1719284523031},{"_id":"themes\\fluid\\scripts\\events\\lib\\highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1719284523025},{"_id":"themes\\fluid\\scripts\\events\\lib\\hello.js","hash":"0874d09075432900d711d146e245a500a578498a","modified":1719372022330},{"_id":"themes\\fluid\\scripts\\events\\lib\\merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1719284523040},{"_id":"themes\\fluid\\source\\css\\_functions\\base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1719284523260},{"_id":"themes\\fluid\\scripts\\events\\lib\\lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1719284523036},{"_id":"themes\\fluid\\source\\css\\_pages\\pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1719284523278},{"_id":"themes\\fluid\\source\\css\\_mixins\\base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1719284523270},{"_id":"themes\\fluid\\source\\css\\_variables\\base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1719284523567},{"_id":"themes\\fluid\\source\\css\\_pages\\_about\\about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1719284523286},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1719284523304},{"_id":"themes\\fluid\\source\\css\\_pages\\_archive\\archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1719284523295},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":1719284523310},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1719284523316},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1719284523323},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1719284523328},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1719284523484},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1719284523471},{"_id":"themes\\fluid\\source\\css\\_pages\\_index\\index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1719284523496},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1719284523479},{"_id":"themes\\fluid\\source\\css\\_pages\\_links\\links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1719284523509},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1719284523519},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1719284523524},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1719284523530},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\post-page.styl","hash":"cd432a6411ccac7df47e6a300fb1a872cfc763e7","modified":1719284523535},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":1719284523540},{"_id":"themes\\fluid\\source\\css\\_pages\\_tag\\tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1719284523554},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1719284523339},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1719284523345},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1719284523365},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1719284523371},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1719284523384},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1719284523376},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1719284523359},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1719284523390},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1719284523397},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1719284523413},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1719284523405},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1719284523421},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1719284523430},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1719284523453},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1719284523441},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1719284523352},{"_id":"source\\_posts\\学习it网站推荐\\image_SOZXE0ImbY.png","hash":"e72edf2eb3099761c51818c99464bbf5d2812395","modified":1719370387945},{"_id":"themes\\fluid\\source\\img\\default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1719284523602},{"_id":"public/local-search.xml","hash":"afa5a9ad881f19d769f3e7098127556778ba25eb","modified":1726038858704},{"_id":"public/about/index.html","hash":"c04b18d71803d7e9bce5bf85a72773d0ffa6d890","modified":1721722788036},{"_id":"public/archives/index.html","hash":"0fdd872f1a2344117fcd810a84171570a61c54e6","modified":1726038858704},{"_id":"public/archives/2024/index.html","hash":"a05bcdbb799a0c514eaebcbdcbd8ad6922ce9943","modified":1726038858704},{"_id":"public/archives/2024/06/index.html","hash":"90d15a02aaf6cee358674015ca0bac816fe8a153","modified":1726038858704},{"_id":"public/index.html","hash":"44f4ef0dacd5c2bd41f4c38c35a51be763524a43","modified":1726038858704},{"_id":"public/404.html","hash":"1fb6f2c76bae1a0c94d7f939f7d0f6c5b2968712","modified":1721722788036},{"_id":"public/tags/index.html","hash":"ad17dd6221622a188110a49febfbf3dea8dd6ff3","modified":1721722788036},{"_id":"public/categories/index.html","hash":"5bbb00615f2876d7c0805a14b82a6951bf25834e","modified":1721722788036},{"_id":"public/links/index.html","hash":"a5483b8dffa6cc442d156c9ec31150fbf4abd3a3","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/index.html","hash":"53712c572d869887ce1c2fd13f1f50b91ad3d026","modified":1723082646426},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1721722788036},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1721722788036},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1721722788036},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1721722788036},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_-m-m1AZh7M.png","hash":"06326b2f927af11f2f6b92c74a8c0a927dcd1c77","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_qBL4LWSs2U.png","hash":"8cb6d4fc5c472da02a61a45a2effc3e70d890f1d","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_RtiUPlWbme.png","hash":"0facd847ec0640c285287074d407aa7321a6841a","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_bUw4GOE3i3.png","hash":"971882befb7ce49cdc0b9b35141c78f28f1b57a5","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_tMLd_Cap6a.png","hash":"ef3b3bf0189dd4e5fc0b0e0fcdde2d5d7f38d0b3","modified":1721722788036},{"_id":"public/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1721722788036},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1721722788036},{"_id":"public/js/events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1721722788036},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1721722788036},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1721722788036},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1721722788036},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1721722788036},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1721722788036},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1721722788036},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1721722788036},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1721722788036},{"_id":"public/css/main.css","hash":"7d7590cfe0261084ad357d5f51cb14d13db826d8","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_PEAqPgamQe.png","hash":"251aee9da55d0cf769bc29e54fbf659c06b1051c","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_zZOb0Uu1MN.png","hash":"8872b7055947069ca0a107a046adb3e21e675d33","modified":1721722788036},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1721722788036},{"_id":"public/2024/06/26/学习it网站推荐/image_SOZXE0ImbY.png","hash":"e72edf2eb3099761c51818c99464bbf5d2812395","modified":1721722788036},{"_id":"source\\_posts\\数据表格.md","hash":"a45772a735c30656ae90249cd0978ab28bd190bb","modified":1719474580738},{"_id":"source\\_posts\\image\\微信截图_20240129101052_2kLtUo59B7.png","hash":"7637838f288a19e94ac614433c874a405a9e0d77","modified":1719474580617},{"_id":"source\\_posts\\image\\微信截图_20240129101736_wj9d7GxuWJ.png","hash":"8ba767e1834941e45b62cd1dcaffaa52f78a0244","modified":1719474580640},{"_id":"source\\_posts\\image\\微信截图_20240129102022_TIcRg0cmvC.png","hash":"ba3d55a9db4bfcc496f36afd3d26d0358a2bc325","modified":1719474580662},{"_id":"source\\_posts\\image\\微信截图_20240129102353_Wl0wM09AJY.png","hash":"13b0e1a37be56d64b9dfcd29ea0340d1a3f04c4a","modified":1719474580672},{"_id":"source\\_posts\\image\\微信截图_20240129102405_SKi1XWM4GG.png","hash":"0ff3a322841ba94ac1241e0b28f8fb42c0957716","modified":1719474580683},{"_id":"source\\_posts\\image\\微信截图_20240129102715_FYbzUnLi2c.png","hash":"a06c8229f31cc958525aea7e757762d17a690acc","modified":1719474580709},{"_id":"source\\_posts\\image\\微信截图_20240129103004_YplUmzZTl9.png","hash":"c98d8e6074067bf2cfd247b71f2b27d812725e51","modified":1719474580731},{"_id":"source\\_posts\\image\\微信截图_20240129101726_GDKMD_EWl8.png","hash":"eb83ee9c6490503f644cdb17b0443e1521fb0356","modified":1719474580629},{"_id":"source\\_posts\\image\\微信图片_20240129100731_uIyvOLNxF0.png","hash":"bbe373dbc75767261185be999c7796c85b43ae86","modified":1719474580605},{"_id":"source\\_posts\\image\\微信截图_20240129102006_1fTD1A_zCD.png","hash":"331dfaaead3c0a753d19f6b3bb67306e15c1ee1c","modified":1719474580651},{"_id":"source\\_posts\\image\\微信截图_20240129102644_RqMdZn4FXP.png","hash":"6175b5fa11595ef04e039bc18a3647492de66438","modified":1719474580697},{"_id":"source\\_posts\\image\\微信截图_20240129102954_X_wPMnYpmb.png","hash":"53998dd7ce3e83b052f1face009309e63a4b27fe","modified":1719474580721},{"_id":"public/2024/06/27/数据表格/index.html","hash":"0f3c0987d4267410cc0b362e1e9d7b4f54690e7f","modified":1719474606407},{"_id":"source\\_posts\\application.yml","hash":"41b13625d327832bbcc70648eda95cbc66239327","modified":1719819918791},{"_id":"source\\_posts\\学习it网站推荐\\application.yml","hash":"41b13625d327832bbcc70648eda95cbc66239327","modified":1719819918791},{"_id":"public/2024/06/26/学习it网站推荐/application.yml","hash":"41b13625d327832bbcc70648eda95cbc66239327","modified":1719821932137},{"_id":"source\\_posts\\update\\application.yml","hash":"41b13625d327832bbcc70648eda95cbc66239327","modified":1719819918791},{"_id":"source\\_posts\\学习it网站推荐\\updates.xml","hash":"ea126686492b2a1982e0252d246d31b3eef35fb0","modified":1719827093876},{"_id":"public/2024/06/26/学习it网站推荐/updates.xml","hash":"ea126686492b2a1982e0252d246d31b3eef35fb0","modified":1719827107084},{"_id":"source\\_posts\\学习it网站推荐\\chrome-seal.crx","hash":"bf80aec88f09e96aa30bc44214a46d2d3444e8b7","modified":1719822332771},{"_id":"public/2024/06/26/学习it网站推荐/chrome-seal.crx","hash":"bf80aec88f09e96aa30bc44214a46d2d3444e8b7","modified":1719827107084},{"_id":"source\\_posts\\linux下实现钉钉告警.md","hash":"fcee8f20acc8024dd25260edded42ff7387c7fc6","modified":1721716409150},{"_id":"public/archives/2024/07/index.html","hash":"50c40ee1d10dabff630ecb8455bb858cab9f2708","modified":1726038858704},{"_id":"public/2024/07/23/linux下实现钉钉告警/index.html","hash":"1b3c0de6d698a90f196d3f8b81395834485106d9","modified":1721722788036},{"_id":"source\\_posts\\docker常用指令.md","hash":"04af792a9d11305ad74e9aaad7876a9aa349b1de","modified":1721716795180},{"_id":"public/2024/07/23/docker常用指令/index.html","hash":"17179f9429349799920a5a0f9a9093b2a323f4cb","modified":1721716823232},{"_id":"source\\_posts\\docker修改应用为自动启动.md","hash":"10fa44366e58daa4edcbf1cffd2731bc6fd31a3d","modified":1721722786060},{"_id":"public/2024/07/23/docker修改应用为自动启动/index.html","hash":"2138788e1f8a767723068aa84c9fe33b166ca92a","modified":1721810079849},{"_id":"source\\_posts\\nginx配置上传文件大小.md","hash":"6692830223f4fdf939560f78cf3bbca90acc02a6","modified":1721810073639},{"_id":"public/2024/07/24/nginx配置上传文件大小/index.html","hash":"949114217b68dbfda3b0183dd4495c0b6f4b59d3","modified":1721900213754},{"_id":"source\\_posts\\tcp6-如何-改成tcp4.md","hash":"e887f350b627ad8b2c98240791df1fdc09d61416","modified":1721900207968},{"_id":"public/2024/07/25/tcp6-如何-改成tcp4/index.html","hash":"83303aba48e42553532d943ead270061d8d8da42","modified":1721905819179},{"_id":"source\\_posts\\select-for-update用法的好处.md","hash":"34c5f78853bc2509cf3b137e8e570afa1571c016","modified":1721905814614},{"_id":"public/2024/07/25/select-for-update用法的好处/index.html","hash":"4341c85219b172e307307e231c78f79cb68fd132","modified":1721959445127},{"_id":"source\\_posts\\在linux上使用代理.md","hash":"cb5258d4974f532a2fcd2aea0a0f37bec7171781","modified":1721959987057},{"_id":"source\\_posts\\在linux上使用代理\\mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1721912142425},{"_id":"public/2024/07/26/在linux上使用代理/index.html","hash":"7f9f56c2c45f2a2d26399797e8144635fb170509","modified":1721984525581},{"_id":"public/2024/07/26/在linux上使用代理/mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1721959445127},{"_id":"source\\_posts\\使用切面或拦截器打印异常日志.md","hash":"120eb9b40d00464d069d31c01d29a08b29f7c772","modified":1721984519753},{"_id":"public/2024/07/26/使用切面或拦截器打印异常日志/index.html","hash":"9aee4b8d1c6f989fa1b20c35565f98771de2c0a4","modified":1722305289373},{"_id":"source\\_posts\\解读redis分布式锁核心逻辑.md","hash":"004e4880e4a14bd507f1c37c3716c715ebfa9ed0","modified":1722305281727},{"_id":"public/2024/07/30/解读redis分布式锁核心逻辑/index.html","hash":"ce0a236d16486052844264a680b26f2c2856a966","modified":1722861534227},{"_id":"source\\_posts\\对linux磁盘进行无损扩容.md","hash":"8a5d63fbc4df51f2ba197080762f897733dbc0d8","modified":1722861527777},{"_id":"public/archives/2024/08/index.html","hash":"945d56be21210978a2cdb017701871c3b4935a9f","modified":1726038858704},{"_id":"public/2024/08/05/对linux磁盘进行无损扩容/index.html","hash":"4ae58e13529e55c41fe85ec2ca8cadfa77130c13","modified":1722946387833},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容.md","hash":"42c5ecb53bd2e6f270c9065891d2939c721a56ae","modified":1722946386390},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200410.png","hash":"f33b4b69c8133bb6f7522812a7f594ff854c9ce3","modified":1722945851808},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806195901.png","hash":"73207df7ab09af55aee8c66a9f9a9816c5f0420e","modified":1722945546325},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200518.png","hash":"6e0ab0e5b70c7856073043ae78573bf39d993af3","modified":1722945920307},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200853.png","hash":"934df7f58206364d1129777a1e317f357e0b4056","modified":1722946134988},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\img.png","hash":"f365826c725e6f50d07f8cb29615e8d4a259d58c","modified":1722946018310},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200831.png","hash":"c754552bfa50ed9de26bcf12bb37a75ca139626d","modified":1722946114203},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200924.png","hash":"262fe8b58283ec1070ba000ff1732e04b028a346","modified":1722946166462},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200751.png","hash":"3e549a4f07a3b94277edc03d6d04ae7ae673d6da","modified":1722946085151},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200913.png","hash":"60bceb6c601ccdd49ad3b4c679511a9b16b30aea","modified":1722946155289},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/index.html","hash":"e27b6150788ee91d78c124e82102e74ab66918c9","modified":1723017861971},{"_id":"public/page/2/index.html","hash":"85824a34af023ed10aefd4d8472a83e6e895cf55","modified":1726038858704},{"_id":"public/archives/page/2/index.html","hash":"ebef0ec29db4b569483fbbaaf9bc2227dcd92dbb","modified":1726038858704},{"_id":"public/archives/2024/page/2/index.html","hash":"0aa1f0048d5d197c02b54227910f8cafb453f9a7","modified":1726038858704},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png","hash":"f33b4b69c8133bb6f7522812a7f594ff854c9ce3","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png","hash":"73207df7ab09af55aee8c66a9f9a9816c5f0420e","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png","hash":"6e0ab0e5b70c7856073043ae78573bf39d993af3","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png","hash":"934df7f58206364d1129777a1e317f357e0b4056","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/img.png","hash":"f365826c725e6f50d07f8cb29615e8d4a259d58c","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png","hash":"c754552bfa50ed9de26bcf12bb37a75ca139626d","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png","hash":"262fe8b58283ec1070ba000ff1732e04b028a346","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png","hash":"3e549a4f07a3b94277edc03d6d04ae7ae673d6da","modified":1722946387833},{"_id":"public/2024/08/06/使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png","hash":"60bceb6c601ccdd49ad3b4c679511a9b16b30aea","modified":1722946387833},{"_id":"source\\_posts\\openvpn-部署脚本.md","hash":"d87e96934c9b45a5b75e313f571ed064f5c8ede4","modified":1723017857899},{"_id":"source\\_posts\\openvpn-部署脚本\\openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1723017349544},{"_id":"public/2024/08/07/openvpn-部署脚本/index.html","hash":"f084af11be6dcd44d0385dc3bf91183a0b0ff2a7","modified":1723186123210},{"_id":"public/2024/08/07/openvpn-部署脚本/openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1723017861971},{"_id":"source\\_posts\\linux下通过端口找到进程.md","hash":"5733e0e0b8a7c8de3baba741edbb1c29b45e77b6","modified":1723186120735},{"_id":"public/2024/08/09/linux下通过端口找到进程/index.html","hash":"c0f39c41b812889a60e0833c588b756726956777","modified":1723537843981},{"_id":"source\\_posts\\github-将远程仓库更新到自己的仓库中.md","hash":"f23fb86a0152d77fb78a1c25cef70ee35a0b7f2e","modified":1723537839035},{"_id":"public/2024/08/13/github-将远程仓库更新到自己的仓库中/index.html","hash":"87c8c8716828dadcc4bf05181cc9822b0b0a8d1a","modified":1726038858704},{"_id":"source\\_posts\\Application-toolkit-trace-cross-thread.md","hash":"62ac1e6dc1b66667a103f24766f76f457d422406","modified":1726038855198},{"_id":"source\\_posts\\交易下单时金额变化.md","hash":"2b109f59da1bb525e3d5882abea254930a64ea13","modified":1724664469985},{"_id":"source\\_posts\\更改点差需要的修改方案（ 账户 - 方法 去洗数据.md","hash":"2b109f59da1bb525e3d5882abea254930a64ea13","modified":1724728463055},{"_id":"public/archives/2024/09/index.html","hash":"08cd6044497b34343717998d6b38b204ab0e775d","modified":1726038858704},{"_id":"public/2024/09/11/Application-toolkit-trace-cross-thread/index.html","hash":"7f08664a1973886a6a75726a86d7768d4b992d44","modified":1726038858704},{"_id":"public/2024/08/26/更改点差需要的修改方案（ 账户 - 方法 去洗数据/index.html","hash":"474cce9f0150ec047a64e9c9fff7f9a7ec2c4319","modified":1726038858704},{"_id":"public/2024/08/26/交易下单时金额变化/index.html","hash":"e234018f02089c440fa28d2ca0a31d311119f489","modified":1726038858704}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2020-02-23T11:20:33.000Z","layout":"about","_content":"\n一刹牵着你 一瞬飞万里\n一秒心动过 一世不忘记\n\n一息间妳的吻幻化我的发肤\n一息间妳的爱让我找到转机\n\n成就这一躺生命旅程不舍不弃\n成就这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 跨越生死\n\n飞过千万里 天已经渐晚\n衰退的视觉 倒退的时间\n\n看不到 靠感觉亦会捉紧你手\n想不起你的脸 但我心跟着走\n\n延续这一躺生命旅程不舍不弃\n延续这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 让我守着妳\n\n忘掉这一切生命色相都认得妳\n能用心于记忆内搜索 感受妳\n明白我跟妳生命线已相连不死\n能在远方再生没了期又再一～起\n\n今世 因为妳来","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\n---\n\n一刹牵着你 一瞬飞万里\n一秒心动过 一世不忘记\n\n一息间妳的吻幻化我的发肤\n一息间妳的爱让我找到转机\n\n成就这一躺生命旅程不舍不弃\n成就这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 跨越生死\n\n飞过千万里 天已经渐晚\n衰退的视觉 倒退的时间\n\n看不到 靠感觉亦会捉紧你手\n想不起你的脸 但我心跟着走\n\n延续这一躺生命旅程不舍不弃\n延续这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 让我守着妳\n\n忘掉这一切生命色相都认得妳\n能用心于记忆内搜索 感受妳\n明白我跟妳生命线已相连不死\n能在远方再生没了期又再一～起\n\n今世 因为妳来","updated":"2024-06-27T06:50:59.998Z","path":"about/index.html","comments":1,"_id":"clxwwokx600007wjddv2p2ahp","content":"<p>一刹牵着你 一瞬飞万里<br>一秒心动过 一世不忘记</p>\n<p>一息间妳的吻幻化我的发肤<br>一息间妳的爱让我找到转机</p>\n<p>成就这一躺生命旅程不舍不弃<br>成就这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 跨越生死</p>\n<p>飞过千万里 天已经渐晚<br>衰退的视觉 倒退的时间</p>\n<p>看不到 靠感觉亦会捉紧你手<br>想不起你的脸 但我心跟着走</p>\n<p>延续这一躺生命旅程不舍不弃<br>延续这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 让我守着妳</p>\n<p>忘掉这一切生命色相都认得妳<br>能用心于记忆内搜索 感受妳<br>明白我跟妳生命线已相连不死<br>能在远方再生没了期又再一～起</p>\n<p>今世 因为妳来</p>\n","excerpt":"","more":"<p>一刹牵着你 一瞬飞万里<br>一秒心动过 一世不忘记</p>\n<p>一息间妳的吻幻化我的发肤<br>一息间妳的爱让我找到转机</p>\n<p>成就这一躺生命旅程不舍不弃<br>成就这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 跨越生死</p>\n<p>飞过千万里 天已经渐晚<br>衰退的视觉 倒退的时间</p>\n<p>看不到 靠感觉亦会捉紧你手<br>想不起你的脸 但我心跟着走</p>\n<p>延续这一躺生命旅程不舍不弃<br>延续这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 让我守着妳</p>\n<p>忘掉这一切生命色相都认得妳<br>能用心于记忆内搜索 感受妳<br>明白我跟妳生命线已相连不死<br>能在远方再生没了期又再一～起</p>\n<p>今世 因为妳来</p>\n"}],"Post":[{"title":"学习it网站推荐","date":"2024-06-26T03:06:14.000Z","_content":"\n分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.\n\n## 网站资源\n\n### 技术学习网站\n- 盗版书网站：https://zh.singlelogin.re/\n- 架构师学习 [https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览](https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览 \"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\")\n  ![](学习it网站推荐/image_PEAqPgamQe.png)\n- 源码学习：[https://doocs.github.io/source-code-hunter/#/](https://doocs.github.io/source-code-hunter/#/ \"https://doocs.github.io/source-code-hunter/#/\")\n  ![](学习it网站推荐/image_qBL4LWSs2U.png)\n- 互联网 Java 工程师进阶知识完全扫盲:  [https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲](https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲 \"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\")\n  ![](学习it网站推荐/image_RtiUPlWbme.png)\n- 叶良辰の学习笔记 [https://yangzhiwen911.github.io/zh/guide/](https://yangzhiwen911.github.io/zh/guide/ \"https://yangzhiwen911.github.io/zh/guide/\")\n  ![](学习it网站推荐/image_tMLd_Cap6a.png)\n- 图灵Java架构师学习路线(点击链接看新版本) [https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map](https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map \"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\")\n  ![](学习it网站推荐/image_-m-m1AZh7M.png)\n- [深入架构原理与实践](https://www.thebyte.com.cn/ \"深入架构原理与实践\") [https://www.thebyte.com.cn/](https://www.thebyte.com.cn/ \"https://www.thebyte.com.cn/\");\n  ![](学习it网站推荐/image_zZOb0Uu1MN.png)\n- Kubernetes 实践指南 [https://imroc.cc/kubernetes/](https://imroc.cc/kubernetes/ \"https://imroc.cc/kubernetes/\");\n  vip破解视频  [https://share.xiaole88.com/其他东西/老齐的IT加油站](https://share.xiaole88.com/其他东西/老齐的IT加油站 \"https://share.xiaole88.com/其他东西/老齐的IT加油站\")\n  [https://share.xiaole88.com/K8渗透工具箱](https://share.xiaole88.com/K8渗透工具箱 \"https://share.xiaole88.com/K8渗透工具箱\")\n\n### 工具网站：\n\n- [https://www.flickr.com/](https://www.flickr.com/ \"https://www.flickr.com/\")   好的照片不能我一个人分享\n\n- [https://markmap.js.org/repl](https://markmap.js.org/repl \"https://markmap.js.org/repl\")  将markmap 生成图例\n  ![](学习it网站推荐/image_bUw4GOE3i3.png)\n\n- 苹果id相关：\n  \n  [https://appleid.stryun.top/](https://appleid.stryun.top/ \"https://appleid.stryun.top/\")\n  \n  [https://apple.hutaosubconverter.com/hutao](https://apple.hutaosubconverter.com/hutao \"https://apple.hutaosubconverter.com/hutao\")\n\n### 营销方向学习：\n\n- 宣传图生成 [https://design.palxp.cn/home?tempid=1188](https://design.palxp.cn/home?tempid=1188 \"https://design.palxp.cn/home?tempid=1188\")\n  \n  ![](学习it网站推荐/image_SOZXE0ImbY.png)\n","source":"_posts/学习it网站推荐.md","raw":"---\n\ntitle: 学习it网站推荐\ndate: 2024-06-26 11:06:14\ntags:\n\n---\n\n分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.\n\n## 网站资源\n\n### 技术学习网站\n- 盗版书网站：https://zh.singlelogin.re/\n- 架构师学习 [https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览](https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览 \"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\")\n  ![](学习it网站推荐/image_PEAqPgamQe.png)\n- 源码学习：[https://doocs.github.io/source-code-hunter/#/](https://doocs.github.io/source-code-hunter/#/ \"https://doocs.github.io/source-code-hunter/#/\")\n  ![](学习it网站推荐/image_qBL4LWSs2U.png)\n- 互联网 Java 工程师进阶知识完全扫盲:  [https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲](https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲 \"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\")\n  ![](学习it网站推荐/image_RtiUPlWbme.png)\n- 叶良辰の学习笔记 [https://yangzhiwen911.github.io/zh/guide/](https://yangzhiwen911.github.io/zh/guide/ \"https://yangzhiwen911.github.io/zh/guide/\")\n  ![](学习it网站推荐/image_tMLd_Cap6a.png)\n- 图灵Java架构师学习路线(点击链接看新版本) [https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map](https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map \"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\")\n  ![](学习it网站推荐/image_-m-m1AZh7M.png)\n- [深入架构原理与实践](https://www.thebyte.com.cn/ \"深入架构原理与实践\") [https://www.thebyte.com.cn/](https://www.thebyte.com.cn/ \"https://www.thebyte.com.cn/\");\n  ![](学习it网站推荐/image_zZOb0Uu1MN.png)\n- Kubernetes 实践指南 [https://imroc.cc/kubernetes/](https://imroc.cc/kubernetes/ \"https://imroc.cc/kubernetes/\");\n  vip破解视频  [https://share.xiaole88.com/其他东西/老齐的IT加油站](https://share.xiaole88.com/其他东西/老齐的IT加油站 \"https://share.xiaole88.com/其他东西/老齐的IT加油站\")\n  [https://share.xiaole88.com/K8渗透工具箱](https://share.xiaole88.com/K8渗透工具箱 \"https://share.xiaole88.com/K8渗透工具箱\")\n\n### 工具网站：\n\n- [https://www.flickr.com/](https://www.flickr.com/ \"https://www.flickr.com/\")   好的照片不能我一个人分享\n\n- [https://markmap.js.org/repl](https://markmap.js.org/repl \"https://markmap.js.org/repl\")  将markmap 生成图例\n  ![](学习it网站推荐/image_bUw4GOE3i3.png)\n\n- 苹果id相关：\n  \n  [https://appleid.stryun.top/](https://appleid.stryun.top/ \"https://appleid.stryun.top/\")\n  \n  [https://apple.hutaosubconverter.com/hutao](https://apple.hutaosubconverter.com/hutao \"https://apple.hutaosubconverter.com/hutao\")\n\n### 营销方向学习：\n\n- 宣传图生成 [https://design.palxp.cn/home?tempid=1188](https://design.palxp.cn/home?tempid=1188 \"https://design.palxp.cn/home?tempid=1188\")\n  \n  ![](学习it网站推荐/image_SOZXE0ImbY.png)\n","slug":"学习it网站推荐","published":1,"updated":"2024-08-08T02:04:00.892Z","_id":"clxwwokx900017wjd3y3c9xhh","comments":1,"layout":"post","photos":[],"content":"<p>分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.</p>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><h3 id=\"技术学习网站\"><a href=\"#技术学习网站\" class=\"headerlink\" title=\"技术学习网站\"></a>技术学习网站</h3><ul>\n<li>盗版书网站：<a href=\"https://zh.singlelogin.re/\">https://zh.singlelogin.re/</a></li>\n<li>架构师学习 <a href=\"https://bugstack.cn/md/other/guide-to-reading.html#%E4%B8%80%E3%80%81%E6%9C%AC%E7%AB%99%E7%9F%A5%E8%AF%86%E9%98%85%E8%A7%88\" title=\"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\">https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_PEAqPgamQe.png\" class></li>\n<li>源码学习：<a href=\"https://doocs.github.io/source-code-hunter/#/\" title=\"https://doocs.github.io/source-code-hunter/#/\">https://doocs.github.io/source-code-hunter/#/</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_qBL4LWSs2U.png\" class></li>\n<li>互联网 Java 工程师进阶知识完全扫盲:  <a href=\"https://doocs.github.io/advanced-java/#/?id=%E4%BA%92%E8%81%94%E7%BD%91-java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AE%8C%E5%85%A8%E6%89%AB%E7%9B%B2\" title=\"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\">https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_RtiUPlWbme.png\" class></li>\n<li>叶良辰の学习笔记 <a href=\"https://yangzhiwen911.github.io/zh/guide/\" title=\"https://yangzhiwen911.github.io/zh/guide/\">https://yangzhiwen911.github.io/zh/guide/</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_tMLd_Cap6a.png\" class></li>\n<li>图灵Java架构师学习路线(点击链接看新版本) <a href=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\" title=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\">https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_-m-m1AZh7M.png\" class></li>\n<li><a href=\"https://www.thebyte.com.cn/\" title=\"深入架构原理与实践\">深入架构原理与实践</a> <a href=\"https://www.thebyte.com.cn/\" title=\"https://www.thebyte.com.cn/\">https://www.thebyte.com.cn/</a>;<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_zZOb0Uu1MN.png\" class></li>\n<li>Kubernetes 实践指南 <a href=\"https://imroc.cc/kubernetes/\" title=\"https://imroc.cc/kubernetes/\">https://imroc.cc/kubernetes/</a>;<br>vip破解视频  <a href=\"https://share.xiaole88.com/%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF/%E8%80%81%E9%BD%90%E7%9A%84IT%E5%8A%A0%E6%B2%B9%E7%AB%99\" title=\"https://share.xiaole88.com/其他东西/老齐的IT加油站\">https://share.xiaole88.com/其他东西/老齐的IT加油站</a><br><a href=\"https://share.xiaole88.com/K8%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%AE%B1\" title=\"https://share.xiaole88.com/K8渗透工具箱\">https://share.xiaole88.com/K8渗透工具箱</a></li>\n</ul>\n<h3 id=\"工具网站：\"><a href=\"#工具网站：\" class=\"headerlink\" title=\"工具网站：\"></a>工具网站：</h3><ul>\n<li><p><a href=\"https://www.flickr.com/\" title=\"https://www.flickr.com/\">https://www.flickr.com/</a>   好的照片不能我一个人分享</p>\n</li>\n<li><p><a href=\"https://markmap.js.org/repl\" title=\"https://markmap.js.org/repl\">https://markmap.js.org/repl</a>  将markmap 生成图例</p>\n<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_bUw4GOE3i3.png\" class>\n</li>\n<li><p>苹果id相关：</p>\n<p><a href=\"https://appleid.stryun.top/\" title=\"https://appleid.stryun.top/\">https://appleid.stryun.top/</a></p>\n<p><a href=\"https://apple.hutaosubconverter.com/hutao\" title=\"https://apple.hutaosubconverter.com/hutao\">https://apple.hutaosubconverter.com/hutao</a></p>\n</li>\n</ul>\n<h3 id=\"营销方向学习：\"><a href=\"#营销方向学习：\" class=\"headerlink\" title=\"营销方向学习：\"></a>营销方向学习：</h3><ul>\n<li><p>宣传图生成 <a href=\"https://design.palxp.cn/home?tempid=1188\" title=\"https://design.palxp.cn/home?tempid=1188\">https://design.palxp.cn/home?tempid=1188</a></p>\n<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_SOZXE0ImbY.png\" class></li>\n</ul>\n","excerpt":"","more":"<p>分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.</p>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><h3 id=\"技术学习网站\"><a href=\"#技术学习网站\" class=\"headerlink\" title=\"技术学习网站\"></a>技术学习网站</h3><ul>\n<li>盗版书网站：<a href=\"https://zh.singlelogin.re/\">https://zh.singlelogin.re/</a></li>\n<li>架构师学习 <a href=\"https://bugstack.cn/md/other/guide-to-reading.html#%E4%B8%80%E3%80%81%E6%9C%AC%E7%AB%99%E7%9F%A5%E8%AF%86%E9%98%85%E8%A7%88\" title=\"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\">https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_PEAqPgamQe.png\" class></li>\n<li>源码学习：<a href=\"https://doocs.github.io/source-code-hunter/#/\" title=\"https://doocs.github.io/source-code-hunter/#/\">https://doocs.github.io/source-code-hunter/#/</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_qBL4LWSs2U.png\" class></li>\n<li>互联网 Java 工程师进阶知识完全扫盲:  <a href=\"https://doocs.github.io/advanced-java/#/?id=%E4%BA%92%E8%81%94%E7%BD%91-java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AE%8C%E5%85%A8%E6%89%AB%E7%9B%B2\" title=\"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\">https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_RtiUPlWbme.png\" class></li>\n<li>叶良辰の学习笔记 <a href=\"https://yangzhiwen911.github.io/zh/guide/\" title=\"https://yangzhiwen911.github.io/zh/guide/\">https://yangzhiwen911.github.io/zh/guide/</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_tMLd_Cap6a.png\" class></li>\n<li>图灵Java架构师学习路线(点击链接看新版本) <a href=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\" title=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\">https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map</a><img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_-m-m1AZh7M.png\" class></li>\n<li><a href=\"https://www.thebyte.com.cn/\" title=\"深入架构原理与实践\">深入架构原理与实践</a> <a href=\"https://www.thebyte.com.cn/\" title=\"https://www.thebyte.com.cn/\">https://www.thebyte.com.cn/</a>;<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_zZOb0Uu1MN.png\" class></li>\n<li>Kubernetes 实践指南 <a href=\"https://imroc.cc/kubernetes/\" title=\"https://imroc.cc/kubernetes/\">https://imroc.cc/kubernetes/</a>;<br>vip破解视频  <a href=\"https://share.xiaole88.com/%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF/%E8%80%81%E9%BD%90%E7%9A%84IT%E5%8A%A0%E6%B2%B9%E7%AB%99\" title=\"https://share.xiaole88.com/其他东西/老齐的IT加油站\">https://share.xiaole88.com/其他东西/老齐的IT加油站</a><br><a href=\"https://share.xiaole88.com/K8%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%AE%B1\" title=\"https://share.xiaole88.com/K8渗透工具箱\">https://share.xiaole88.com/K8渗透工具箱</a></li>\n</ul>\n<h3 id=\"工具网站：\"><a href=\"#工具网站：\" class=\"headerlink\" title=\"工具网站：\"></a>工具网站：</h3><ul>\n<li><p><a href=\"https://www.flickr.com/\" title=\"https://www.flickr.com/\">https://www.flickr.com/</a>   好的照片不能我一个人分享</p>\n</li>\n<li><p><a href=\"https://markmap.js.org/repl\" title=\"https://markmap.js.org/repl\">https://markmap.js.org/repl</a>  将markmap 生成图例</p>\n<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_bUw4GOE3i3.png\" class>\n</li>\n<li><p>苹果id相关：</p>\n<p><a href=\"https://appleid.stryun.top/\" title=\"https://appleid.stryun.top/\">https://appleid.stryun.top/</a></p>\n<p><a href=\"https://apple.hutaosubconverter.com/hutao\" title=\"https://apple.hutaosubconverter.com/hutao\">https://apple.hutaosubconverter.com/hutao</a></p>\n</li>\n</ul>\n<h3 id=\"营销方向学习：\"><a href=\"#营销方向学习：\" class=\"headerlink\" title=\"营销方向学习：\"></a>营销方向学习：</h3><ul>\n<li><p>宣传图生成 <a href=\"https://design.palxp.cn/home?tempid=1188\" title=\"https://design.palxp.cn/home?tempid=1188\">https://design.palxp.cn/home?tempid=1188</a></p>\n<img src=\"/2024/06/26/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_SOZXE0ImbY.png\" class></li>\n</ul>\n"},{"title":"linux下实现钉钉告警","date":"2024-07-23T03:45:38.000Z","_content":"\n在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。\n需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。\n\n以下是实现此功能的步骤：\n\n1. **创建钉钉机器人并获取Webhook URL：**\n    - 登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。\n    \n2. **编写Shell脚本：**\n    - 编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。\n    \n3. **配置定时任务（cron）：**\n    - 将脚本配置为定时任务，定期检查系统资源的使用情况。\n\n### 1. 创建钉钉机器人并获取Webhook URL\n\n在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。\n- 例如：https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\n\n### 2. 编写Shell脚本\n\n下面是一个示例Shell脚本`monitor.sh`：\n\n```sh\n#!/bin/bash\n\n# 获取cpu使用率\nfunction get_cpu_usage(){\n    echo $(top -bn1 | grep \"Cpu(s)\" | awk '{print 100 - $8}' | awk '{printf \"%.2f\", $1}')\n}\n\n# 获取磁盘使用率\ndata_name=\"/\" \ndiskUsage=$(df -h | grep -w $data_name | awk '{print $5}' | sed 's/%//')\n\n# 获取内存情况\nmem_total=$(free -m | awk 'NR==2 {print $2}')\nmem_used=$(free -m | awk 'NR==2 {print $3}')\n\n# 统计内存使用率\nmem_used_percent=$(echo \"scale=2; ($mem_used / $mem_total) * 100\" | bc)\n\n# 获取报警时间\nnow_time=$(date '+%F %T')\n\nuser=\"18857415467\"\n\n# 主机信息\nDate_time=$(date \"+%Y-%m-%d--%H:%M:%S\")\nIP_addr=$(hostname -I | awk '{print $1}')\n\n# webhook url\nDingding_Url=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\"\n\nfunction SendDownMessageToDingding(){\n    # 发送钉钉消息\n    curl -s \"${Dingding_Url}\" -H 'Content-Type: application/json' -d \"\n    {\n     'msgtype': 'text',\n     'text': {'content': '资源耗尽警告！\\n巡查时间：${Date_time}\\nIP地址：${IP_addr}\\n资源状况如下:\\n【CPU使用率：${cpuUsage}%】\\n【磁盘使用率：${diskUsage}%】\\n【内存使用率：${mem_used_percent}%】'},\n     'at': {'atMobiles': ['${user}'], 'isAtAll': true}\n      }\"\n}\n\nfunction check(){\n    cpuUsage=$(get_cpu_usage)\n    if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n        echo \"检测到CPU使用率高于90%，开始1分钟监控...\"\n        high_cpu_duration=0\n        for ((i=0; i<60; i++)); do\n            sleep 1\n            cpuUsage=$(get_cpu_usage)\n            if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n                ((high_cpu_duration++))\n            else\n                high_cpu_duration=0\n            fi\n\n            if (( high_cpu_duration >= 60 )); then\n                echo \"CPU使用率持续高于90%超过1分钟，发送警报...\"\n                SendDownMessageToDingding\n                break\n            fi\n        done\n    fi\n\n    if (( $(echo \"$diskUsage > 80\" | bc -l) )) || (( $(echo \"$mem_used_percent > 80\" | bc -l) )); then\n        SendDownMessageToDingding\n    fi\n}\n\ncheck\n\n```\n\n将`073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5`替换为你从钉钉获取的Webhook URL的token。\n\n### 3. 配置定时任务（cron）\n\n通过cron定期运行这个脚本。首先，编辑cron配置：\n\n```sh\ncrontab -e\n```\n\n然后添加以下内容以每分钟运行一次脚本：\n\n```sh\n* * * * * /path/to/monitor.sh\n```\n\n确保脚本`monitor.sh`有执行权限：\n\n```sh\nchmod +x /path/to/monitor.sh\n```\n\n### 总结\n\n上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。","source":"_posts/linux下实现钉钉告警.md","raw":"---\ntitle: linux下实现钉钉告警\ndate: 2024-07-23 11:45:38\ntags:\n---\n\n在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。\n需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。\n\n以下是实现此功能的步骤：\n\n1. **创建钉钉机器人并获取Webhook URL：**\n    - 登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。\n    \n2. **编写Shell脚本：**\n    - 编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。\n    \n3. **配置定时任务（cron）：**\n    - 将脚本配置为定时任务，定期检查系统资源的使用情况。\n\n### 1. 创建钉钉机器人并获取Webhook URL\n\n在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。\n- 例如：https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\n\n### 2. 编写Shell脚本\n\n下面是一个示例Shell脚本`monitor.sh`：\n\n```sh\n#!/bin/bash\n\n# 获取cpu使用率\nfunction get_cpu_usage(){\n    echo $(top -bn1 | grep \"Cpu(s)\" | awk '{print 100 - $8}' | awk '{printf \"%.2f\", $1}')\n}\n\n# 获取磁盘使用率\ndata_name=\"/\" \ndiskUsage=$(df -h | grep -w $data_name | awk '{print $5}' | sed 's/%//')\n\n# 获取内存情况\nmem_total=$(free -m | awk 'NR==2 {print $2}')\nmem_used=$(free -m | awk 'NR==2 {print $3}')\n\n# 统计内存使用率\nmem_used_percent=$(echo \"scale=2; ($mem_used / $mem_total) * 100\" | bc)\n\n# 获取报警时间\nnow_time=$(date '+%F %T')\n\nuser=\"18857415467\"\n\n# 主机信息\nDate_time=$(date \"+%Y-%m-%d--%H:%M:%S\")\nIP_addr=$(hostname -I | awk '{print $1}')\n\n# webhook url\nDingding_Url=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\"\n\nfunction SendDownMessageToDingding(){\n    # 发送钉钉消息\n    curl -s \"${Dingding_Url}\" -H 'Content-Type: application/json' -d \"\n    {\n     'msgtype': 'text',\n     'text': {'content': '资源耗尽警告！\\n巡查时间：${Date_time}\\nIP地址：${IP_addr}\\n资源状况如下:\\n【CPU使用率：${cpuUsage}%】\\n【磁盘使用率：${diskUsage}%】\\n【内存使用率：${mem_used_percent}%】'},\n     'at': {'atMobiles': ['${user}'], 'isAtAll': true}\n      }\"\n}\n\nfunction check(){\n    cpuUsage=$(get_cpu_usage)\n    if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n        echo \"检测到CPU使用率高于90%，开始1分钟监控...\"\n        high_cpu_duration=0\n        for ((i=0; i<60; i++)); do\n            sleep 1\n            cpuUsage=$(get_cpu_usage)\n            if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n                ((high_cpu_duration++))\n            else\n                high_cpu_duration=0\n            fi\n\n            if (( high_cpu_duration >= 60 )); then\n                echo \"CPU使用率持续高于90%超过1分钟，发送警报...\"\n                SendDownMessageToDingding\n                break\n            fi\n        done\n    fi\n\n    if (( $(echo \"$diskUsage > 80\" | bc -l) )) || (( $(echo \"$mem_used_percent > 80\" | bc -l) )); then\n        SendDownMessageToDingding\n    fi\n}\n\ncheck\n\n```\n\n将`073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5`替换为你从钉钉获取的Webhook URL的token。\n\n### 3. 配置定时任务（cron）\n\n通过cron定期运行这个脚本。首先，编辑cron配置：\n\n```sh\ncrontab -e\n```\n\n然后添加以下内容以每分钟运行一次脚本：\n\n```sh\n* * * * * /path/to/monitor.sh\n```\n\n确保脚本`monitor.sh`有执行权限：\n\n```sh\nchmod +x /path/to/monitor.sh\n```\n\n### 总结\n\n上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。","slug":"linux下实现钉钉告警","published":1,"updated":"2024-07-23T06:33:29.150Z","_id":"clyy0czza0000ekjd56lj7ocd","comments":1,"layout":"post","photos":[],"content":"<p>在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。<br>需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。</p>\n<p>以下是实现此功能的步骤：</p>\n<ol>\n<li><p><strong>创建钉钉机器人并获取Webhook URL：</strong></p>\n<ul>\n<li>登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。</li>\n</ul>\n</li>\n<li><p><strong>编写Shell脚本：</strong></p>\n<ul>\n<li>编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。</li>\n</ul>\n</li>\n<li><p><strong>配置定时任务（cron）：</strong></p>\n<ul>\n<li>将脚本配置为定时任务，定期检查系统资源的使用情况。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-创建钉钉机器人并获取Webhook-URL\"><a href=\"#1-创建钉钉机器人并获取Webhook-URL\" class=\"headerlink\" title=\"1. 创建钉钉机器人并获取Webhook URL\"></a>1. 创建钉钉机器人并获取Webhook URL</h3><p>在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。</p>\n<ul>\n<li>例如：<a href=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\">https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</a></li>\n</ul>\n<h3 id=\"2-编写Shell脚本\"><a href=\"#2-编写Shell脚本\" class=\"headerlink\" title=\"2. 编写Shell脚本\"></a>2. 编写Shell脚本</h3><p>下面是一个示例Shell脚本<code>monitor.sh</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 获取cpu使用率</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">get_cpu_usage</span></span>()&#123;<br>    <span class=\"hljs-built_in\">echo</span> $(top -bn1 | grep <span class=\"hljs-string\">&quot;Cpu(s)&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print 100 - $8&#125;&#x27;</span> | awk <span class=\"hljs-string\">&#x27;&#123;printf &quot;%.2f&quot;, $1&#125;&#x27;</span>)<br>&#125;<br><br><span class=\"hljs-comment\"># 获取磁盘使用率</span><br>data_name=<span class=\"hljs-string\">&quot;/&quot;</span> <br>diskUsage=$(<span class=\"hljs-built_in\">df</span> -h | grep -w <span class=\"hljs-variable\">$data_name</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $5&#125;&#x27;</span> | sed <span class=\"hljs-string\">&#x27;s/%//&#x27;</span>)<br><br><span class=\"hljs-comment\"># 获取内存情况</span><br>mem_total=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $2&#125;&#x27;</span>)<br>mem_used=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $3&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># 统计内存使用率</span><br>mem_used_percent=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;scale=2; (<span class=\"hljs-variable\">$mem_used</span> / <span class=\"hljs-variable\">$mem_total</span>) * 100&quot;</span> | bc)<br><br><span class=\"hljs-comment\"># 获取报警时间</span><br>now_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&#x27;+%F %T&#x27;</span>)<br><br>user=<span class=\"hljs-string\">&quot;18857415467&quot;</span><br><br><span class=\"hljs-comment\"># 主机信息</span><br>Date_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&quot;+%Y-%m-%d--%H:%M:%S&quot;</span>)<br>IP_addr=$(hostname -I | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># webhook url</span><br>Dingding_Url=<span class=\"hljs-string\">&quot;https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5&quot;</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">SendDownMessageToDingding</span></span>()&#123;<br>    <span class=\"hljs-comment\"># 发送钉钉消息</span><br>    curl -s <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;Dingding_Url&#125;</span>&quot;</span> -H <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> -d <span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">    &#123;</span><br><span class=\"hljs-string\">     &#x27;msgtype&#x27;: &#x27;text&#x27;,</span><br><span class=\"hljs-string\">     &#x27;text&#x27;: &#123;&#x27;content&#x27;: &#x27;资源耗尽警告！\\n巡查时间：<span class=\"hljs-variable\">$&#123;Date_time&#125;</span>\\nIP地址：<span class=\"hljs-variable\">$&#123;IP_addr&#125;</span>\\n资源状况如下:\\n【CPU使用率：<span class=\"hljs-variable\">$&#123;cpuUsage&#125;</span>%】\\n【磁盘使用率：<span class=\"hljs-variable\">$&#123;diskUsage&#125;</span>%】\\n【内存使用率：<span class=\"hljs-variable\">$&#123;mem_used_percent&#125;</span>%】&#x27;&#125;,</span><br><span class=\"hljs-string\">     &#x27;at&#x27;: &#123;&#x27;atMobiles&#x27;: [&#x27;<span class=\"hljs-variable\">$&#123;user&#125;</span>&#x27;], &#x27;isAtAll&#x27;: true&#125;</span><br><span class=\"hljs-string\">      &#125;&quot;</span><br>&#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">check</span></span>()&#123;<br>    cpuUsage=$(get_cpu_usage)<br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;检测到CPU使用率高于90%，开始1分钟监控...&quot;</span><br>        high_cpu_duration=0<br>        <span class=\"hljs-keyword\">for</span> ((i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">60</span>; i++)); <span class=\"hljs-keyword\">do</span><br>            <span class=\"hljs-built_in\">sleep</span> 1<br>            cpuUsage=$(get_cpu_usage)<br>            <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>                ((high_cpu_duration++))<br>            <span class=\"hljs-keyword\">else</span><br>                high_cpu_duration=0<br>            <span class=\"hljs-keyword\">fi</span><br><br>            <span class=\"hljs-keyword\">if</span> (( high_cpu_duration &gt;= <span class=\"hljs-number\">60</span> )); <span class=\"hljs-keyword\">then</span><br>                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;CPU使用率持续高于90%超过1分钟，发送警报...&quot;</span><br>                SendDownMessageToDingding<br>                <span class=\"hljs-built_in\">break</span><br>            <span class=\"hljs-keyword\">fi</span><br>        <span class=\"hljs-keyword\">done</span><br>    <span class=\"hljs-keyword\">fi</span><br><br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$diskUsage</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )) || (( $(echo &quot;<span class=\"hljs-variable\">$mem_used_percent</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        SendDownMessageToDingding<br>    <span class=\"hljs-keyword\">fi</span><br>&#125;<br><br>check<br><br></code></pre></td></tr></table></figure>\n\n<p>将<code>073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</code>替换为你从钉钉获取的Webhook URL的token。</p>\n<h3 id=\"3-配置定时任务（cron）\"><a href=\"#3-配置定时任务（cron）\" class=\"headerlink\" title=\"3. 配置定时任务（cron）\"></a>3. 配置定时任务（cron）</h3><p>通过cron定期运行这个脚本。首先，编辑cron配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">crontab -e<br></code></pre></td></tr></table></figure>\n\n<p>然后添加以下内容以每分钟运行一次脚本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">* * * * * /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<p>确保脚本<code>monitor.sh</code>有执行权限：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> +x /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。</p>\n","excerpt":"","more":"<p>在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。<br>需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。</p>\n<p>以下是实现此功能的步骤：</p>\n<ol>\n<li><p><strong>创建钉钉机器人并获取Webhook URL：</strong></p>\n<ul>\n<li>登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。</li>\n</ul>\n</li>\n<li><p><strong>编写Shell脚本：</strong></p>\n<ul>\n<li>编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。</li>\n</ul>\n</li>\n<li><p><strong>配置定时任务（cron）：</strong></p>\n<ul>\n<li>将脚本配置为定时任务，定期检查系统资源的使用情况。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-创建钉钉机器人并获取Webhook-URL\"><a href=\"#1-创建钉钉机器人并获取Webhook-URL\" class=\"headerlink\" title=\"1. 创建钉钉机器人并获取Webhook URL\"></a>1. 创建钉钉机器人并获取Webhook URL</h3><p>在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。</p>\n<ul>\n<li>例如：<a href=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\">https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</a></li>\n</ul>\n<h3 id=\"2-编写Shell脚本\"><a href=\"#2-编写Shell脚本\" class=\"headerlink\" title=\"2. 编写Shell脚本\"></a>2. 编写Shell脚本</h3><p>下面是一个示例Shell脚本<code>monitor.sh</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 获取cpu使用率</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">get_cpu_usage</span></span>()&#123;<br>    <span class=\"hljs-built_in\">echo</span> $(top -bn1 | grep <span class=\"hljs-string\">&quot;Cpu(s)&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print 100 - $8&#125;&#x27;</span> | awk <span class=\"hljs-string\">&#x27;&#123;printf &quot;%.2f&quot;, $1&#125;&#x27;</span>)<br>&#125;<br><br><span class=\"hljs-comment\"># 获取磁盘使用率</span><br>data_name=<span class=\"hljs-string\">&quot;/&quot;</span> <br>diskUsage=$(<span class=\"hljs-built_in\">df</span> -h | grep -w <span class=\"hljs-variable\">$data_name</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $5&#125;&#x27;</span> | sed <span class=\"hljs-string\">&#x27;s/%//&#x27;</span>)<br><br><span class=\"hljs-comment\"># 获取内存情况</span><br>mem_total=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $2&#125;&#x27;</span>)<br>mem_used=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $3&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># 统计内存使用率</span><br>mem_used_percent=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;scale=2; (<span class=\"hljs-variable\">$mem_used</span> / <span class=\"hljs-variable\">$mem_total</span>) * 100&quot;</span> | bc)<br><br><span class=\"hljs-comment\"># 获取报警时间</span><br>now_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&#x27;+%F %T&#x27;</span>)<br><br>user=<span class=\"hljs-string\">&quot;18857415467&quot;</span><br><br><span class=\"hljs-comment\"># 主机信息</span><br>Date_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&quot;+%Y-%m-%d--%H:%M:%S&quot;</span>)<br>IP_addr=$(hostname -I | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># webhook url</span><br>Dingding_Url=<span class=\"hljs-string\">&quot;https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5&quot;</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">SendDownMessageToDingding</span></span>()&#123;<br>    <span class=\"hljs-comment\"># 发送钉钉消息</span><br>    curl -s <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;Dingding_Url&#125;</span>&quot;</span> -H <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> -d <span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">    &#123;</span><br><span class=\"hljs-string\">     &#x27;msgtype&#x27;: &#x27;text&#x27;,</span><br><span class=\"hljs-string\">     &#x27;text&#x27;: &#123;&#x27;content&#x27;: &#x27;资源耗尽警告！\\n巡查时间：<span class=\"hljs-variable\">$&#123;Date_time&#125;</span>\\nIP地址：<span class=\"hljs-variable\">$&#123;IP_addr&#125;</span>\\n资源状况如下:\\n【CPU使用率：<span class=\"hljs-variable\">$&#123;cpuUsage&#125;</span>%】\\n【磁盘使用率：<span class=\"hljs-variable\">$&#123;diskUsage&#125;</span>%】\\n【内存使用率：<span class=\"hljs-variable\">$&#123;mem_used_percent&#125;</span>%】&#x27;&#125;,</span><br><span class=\"hljs-string\">     &#x27;at&#x27;: &#123;&#x27;atMobiles&#x27;: [&#x27;<span class=\"hljs-variable\">$&#123;user&#125;</span>&#x27;], &#x27;isAtAll&#x27;: true&#125;</span><br><span class=\"hljs-string\">      &#125;&quot;</span><br>&#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">check</span></span>()&#123;<br>    cpuUsage=$(get_cpu_usage)<br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;检测到CPU使用率高于90%，开始1分钟监控...&quot;</span><br>        high_cpu_duration=0<br>        <span class=\"hljs-keyword\">for</span> ((i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">60</span>; i++)); <span class=\"hljs-keyword\">do</span><br>            <span class=\"hljs-built_in\">sleep</span> 1<br>            cpuUsage=$(get_cpu_usage)<br>            <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>                ((high_cpu_duration++))<br>            <span class=\"hljs-keyword\">else</span><br>                high_cpu_duration=0<br>            <span class=\"hljs-keyword\">fi</span><br><br>            <span class=\"hljs-keyword\">if</span> (( high_cpu_duration &gt;= <span class=\"hljs-number\">60</span> )); <span class=\"hljs-keyword\">then</span><br>                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;CPU使用率持续高于90%超过1分钟，发送警报...&quot;</span><br>                SendDownMessageToDingding<br>                <span class=\"hljs-built_in\">break</span><br>            <span class=\"hljs-keyword\">fi</span><br>        <span class=\"hljs-keyword\">done</span><br>    <span class=\"hljs-keyword\">fi</span><br><br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$diskUsage</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )) || (( $(echo &quot;<span class=\"hljs-variable\">$mem_used_percent</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        SendDownMessageToDingding<br>    <span class=\"hljs-keyword\">fi</span><br>&#125;<br><br>check<br><br></code></pre></td></tr></table></figure>\n\n<p>将<code>073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</code>替换为你从钉钉获取的Webhook URL的token。</p>\n<h3 id=\"3-配置定时任务（cron）\"><a href=\"#3-配置定时任务（cron）\" class=\"headerlink\" title=\"3. 配置定时任务（cron）\"></a>3. 配置定时任务（cron）</h3><p>通过cron定期运行这个脚本。首先，编辑cron配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">crontab -e<br></code></pre></td></tr></table></figure>\n\n<p>然后添加以下内容以每分钟运行一次脚本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">* * * * * /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<p>确保脚本<code>monitor.sh</code>有执行权限：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> +x /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。</p>\n"},{"title":"docker修改应用为自动启动","date":"2024-07-23T06:39:38.000Z","_content":"是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 `docker update` 命令配置容器的重启策略。\n\n以下是如何使用 `docker update` 命令来配置现有的容器在系统启动时自动启动：\n\n```bash\ndocker update --restart unless-stopped <container_name_or_id>\n```\n\n例如，如果你的容器名为 `mysql-container`，你可以这样配置：\n\n```bash\ndocker update --restart unless-stopped mysql-container\n```\n\n这样配置后，当系统重启时，Docker 会根据 `unless-stopped` 策略自动重启该容器。以下是一些常用的重启策略：\n\n- `no`: 容器不会自动重启（默认值）。\n- `on-failure`: 仅当容器退出状态非零时才重启。\n- `always`: 无论退出状态如何，总是重启容器。\n- `unless-stopped`: 容器除非被手动停止，否则总是重启。\n\n### 示例\n\n以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：\n\n1. 启动一个 MySQL 容器：\n\n    ```bash\n    docker run -d \\\n        --name mysql-container \\\n        -e MYSQL_ROOT_PASSWORD=my-secret-pw \\\n        -v /my/own/datadir:/var/lib/mysql \\\n        mysql:latest\n    ```\n\n2. 配置容器的重启策略：\n\n    ```bash\n    docker update --restart unless-stopped mysql-container\n    ```\n\n### 检查容器重启策略\n\n你可以使用以下命令来检查容器的重启策略：\n\n```bash\ndocker inspect -f '{{ .HostConfig.RestartPolicy.Name }}' mysql-container\n```\n\n这将输出容器的当前重启策略。\n\n### 使用 Docker Compose\n\n如果你使用 Docker Compose，可以在 `docker-compose.yml` 文件中配置重启策略：\n\n```yaml\nversion: '3.8'\n\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql-container\n    environment:\n      MYSQL_ROOT_PASSWORD: my-secret-pw\n    volumes:\n      - /my/own/datadir:/var/lib/mysql\n    restart: unless-stopped\n```\n\n然后，使用以下命令启动容器：\n\n```bash\ndocker-compose up -d\n```\n\n### 总结\n\n通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 `docker run`、`docker update` 还是 `docker-compose`。","source":"_posts/docker修改应用为自动启动.md","raw":"---\ntitle: docker修改应用为自动启动\ndate: 2024-07-23 14:39:38\ntags:\n---\n是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 `docker update` 命令配置容器的重启策略。\n\n以下是如何使用 `docker update` 命令来配置现有的容器在系统启动时自动启动：\n\n```bash\ndocker update --restart unless-stopped <container_name_or_id>\n```\n\n例如，如果你的容器名为 `mysql-container`，你可以这样配置：\n\n```bash\ndocker update --restart unless-stopped mysql-container\n```\n\n这样配置后，当系统重启时，Docker 会根据 `unless-stopped` 策略自动重启该容器。以下是一些常用的重启策略：\n\n- `no`: 容器不会自动重启（默认值）。\n- `on-failure`: 仅当容器退出状态非零时才重启。\n- `always`: 无论退出状态如何，总是重启容器。\n- `unless-stopped`: 容器除非被手动停止，否则总是重启。\n\n### 示例\n\n以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：\n\n1. 启动一个 MySQL 容器：\n\n    ```bash\n    docker run -d \\\n        --name mysql-container \\\n        -e MYSQL_ROOT_PASSWORD=my-secret-pw \\\n        -v /my/own/datadir:/var/lib/mysql \\\n        mysql:latest\n    ```\n\n2. 配置容器的重启策略：\n\n    ```bash\n    docker update --restart unless-stopped mysql-container\n    ```\n\n### 检查容器重启策略\n\n你可以使用以下命令来检查容器的重启策略：\n\n```bash\ndocker inspect -f '{{ .HostConfig.RestartPolicy.Name }}' mysql-container\n```\n\n这将输出容器的当前重启策略。\n\n### 使用 Docker Compose\n\n如果你使用 Docker Compose，可以在 `docker-compose.yml` 文件中配置重启策略：\n\n```yaml\nversion: '3.8'\n\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql-container\n    environment:\n      MYSQL_ROOT_PASSWORD: my-secret-pw\n    volumes:\n      - /my/own/datadir:/var/lib/mysql\n    restart: unless-stopped\n```\n\n然后，使用以下命令启动容器：\n\n```bash\ndocker-compose up -d\n```\n\n### 总结\n\n通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 `docker run`、`docker update` 还是 `docker-compose`。","slug":"docker修改应用为自动启动","published":1,"updated":"2024-07-23T08:19:46.060Z","_id":"clyy530le00002wjdhqbdab90","comments":1,"layout":"post","photos":[],"content":"<p>是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 <code>docker update</code> 命令配置容器的重启策略。</p>\n<p>以下是如何使用 <code>docker update</code> 命令来配置现有的容器在系统启动时自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped &lt;container_name_or_id&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，如果你的容器名为 <code>mysql-container</code>，你可以这样配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这样配置后，当系统重启时，Docker 会根据 <code>unless-stopped</code> 策略自动重启该容器。以下是一些常用的重启策略：</p>\n<ul>\n<li><code>no</code>: 容器不会自动重启（默认值）。</li>\n<li><code>on-failure</code>: 仅当容器退出状态非零时才重启。</li>\n<li><code>always</code>: 无论退出状态如何，总是重启容器。</li>\n<li><code>unless-stopped</code>: 容器除非被手动停止，否则总是重启。</li>\n</ul>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：</p>\n<ol>\n<li><p>启动一个 MySQL 容器：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>    --name mysql-container \\<br>    -e MYSQL_ROOT_PASSWORD=my-secret-pw \\<br>    -v /my/own/datadir:/var/lib/mysql \\<br>    mysql:latest<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>配置容器的重启策略：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"检查容器重启策略\"><a href=\"#检查容器重启策略\" class=\"headerlink\" title=\"检查容器重启策略\"></a>检查容器重启策略</h3><p>你可以使用以下命令来检查容器的重启策略：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect -f <span class=\"hljs-string\">&#x27;&#123;&#123; .HostConfig.RestartPolicy.Name &#125;&#125;&#x27;</span> mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这将输出容器的当前重启策略。</p>\n<h3 id=\"使用-Docker-Compose\"><a href=\"#使用-Docker-Compose\" class=\"headerlink\" title=\"使用 Docker Compose\"></a>使用 Docker Compose</h3><p>如果你使用 Docker Compose，可以在 <code>docker-compose.yml</code> 文件中配置重启策略：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-container</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">my-secret-pw</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/my/own/datadir:/var/lib/mysql</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br></code></pre></td></tr></table></figure>\n\n<p>然后，使用以下命令启动容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 <code>docker run</code>、<code>docker update</code> 还是 <code>docker-compose</code>。</p>\n","excerpt":"","more":"<p>是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 <code>docker update</code> 命令配置容器的重启策略。</p>\n<p>以下是如何使用 <code>docker update</code> 命令来配置现有的容器在系统启动时自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped &lt;container_name_or_id&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，如果你的容器名为 <code>mysql-container</code>，你可以这样配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这样配置后，当系统重启时，Docker 会根据 <code>unless-stopped</code> 策略自动重启该容器。以下是一些常用的重启策略：</p>\n<ul>\n<li><code>no</code>: 容器不会自动重启（默认值）。</li>\n<li><code>on-failure</code>: 仅当容器退出状态非零时才重启。</li>\n<li><code>always</code>: 无论退出状态如何，总是重启容器。</li>\n<li><code>unless-stopped</code>: 容器除非被手动停止，否则总是重启。</li>\n</ul>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：</p>\n<ol>\n<li><p>启动一个 MySQL 容器：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>    --name mysql-container \\<br>    -e MYSQL_ROOT_PASSWORD=my-secret-pw \\<br>    -v /my/own/datadir:/var/lib/mysql \\<br>    mysql:latest<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>配置容器的重启策略：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"检查容器重启策略\"><a href=\"#检查容器重启策略\" class=\"headerlink\" title=\"检查容器重启策略\"></a>检查容器重启策略</h3><p>你可以使用以下命令来检查容器的重启策略：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect -f <span class=\"hljs-string\">&#x27;&#123;&#123; .HostConfig.RestartPolicy.Name &#125;&#125;&#x27;</span> mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这将输出容器的当前重启策略。</p>\n<h3 id=\"使用-Docker-Compose\"><a href=\"#使用-Docker-Compose\" class=\"headerlink\" title=\"使用 Docker Compose\"></a>使用 Docker Compose</h3><p>如果你使用 Docker Compose，可以在 <code>docker-compose.yml</code> 文件中配置重启策略：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-container</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">my-secret-pw</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/my/own/datadir:/var/lib/mysql</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br></code></pre></td></tr></table></figure>\n\n<p>然后，使用以下命令启动容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 <code>docker run</code>、<code>docker update</code> 还是 <code>docker-compose</code>。</p>\n"},{"title":"nginx配置上传文件大小","date":"2024-07-24T08:34:06.000Z","_content":"要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：\n\n1. **配置Nginx处理上传文件的大小限制：**\n\n   打开您的Nginx配置文件（通常位于 `/etc/nginx/nginx.conf` 或 `/etc/nginx/conf.d/default.conf`）并找到 `http` 块或 `server` 块。\n\n   ```nginx\n   http {\n       # 其他配置...\n       \n       # 设置客户端上传文件的最大限制（单位：字节）\n       client_max_body_size 50M;\n\n       server {\n           listen 80;\n           server_name example.com;\n\n           # 其他配置...\n\n           location /upload {\n               # 将文件上传到指定的目录\n               root /var/www/uploads;\n\n               # 其他配置...\n           }\n       }\n   }\n   ```\n\n   在这个示例中，`client_max_body_size` 被设置为 `50M`，这意味着客户端可以上传最大为50MB的文件。\n\n2. **配置上传文件的保存路径：**\n\n   您可以在 `location` 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 `/var/www/uploads` 目录。\n\n3. **重启Nginx以使配置生效：**\n\n   修改完配置文件后，需要重启Nginx服务以使配置生效。\n\n   ```sh\n   sudo systemctl restart nginx\n   ```\n\n4. **处理上传的文件：**\n\n   需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。\n\n   这是一个使用PHP处理文件上传的简单示例：\n\n   ```php\n   <?php\n   if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['file'])) {\n       $uploadDir = '/var/www/uploads/';\n       $uploadFile = $uploadDir . basename($_FILES['file']['name']);\n\n       if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n           echo \"文件上传成功。\";\n       } else {\n           echo \"文件上传失败。\";\n       }\n   }\n   ?>\n   ```\n\n   然后在Nginx的配置文件中，您可以配置一个 `location` 块来处理文件上传请求：\n\n   ```nginx\n   location /upload {\n       root /var/www/uploads;\n\n       # 代理到后端PHP脚本\n       fastcgi_pass 127.0.0.1:9000;\n       include fastcgi_params;\n       fastcgi_param SCRIPT_FILENAME /var/www/html/upload.php;\n   }\n   ```\n","source":"_posts/nginx配置上传文件大小.md","raw":"---\ntitle: nginx配置上传文件大小\ndate: 2024-07-24 16:34:06\ntags:\n---\n要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：\n\n1. **配置Nginx处理上传文件的大小限制：**\n\n   打开您的Nginx配置文件（通常位于 `/etc/nginx/nginx.conf` 或 `/etc/nginx/conf.d/default.conf`）并找到 `http` 块或 `server` 块。\n\n   ```nginx\n   http {\n       # 其他配置...\n       \n       # 设置客户端上传文件的最大限制（单位：字节）\n       client_max_body_size 50M;\n\n       server {\n           listen 80;\n           server_name example.com;\n\n           # 其他配置...\n\n           location /upload {\n               # 将文件上传到指定的目录\n               root /var/www/uploads;\n\n               # 其他配置...\n           }\n       }\n   }\n   ```\n\n   在这个示例中，`client_max_body_size` 被设置为 `50M`，这意味着客户端可以上传最大为50MB的文件。\n\n2. **配置上传文件的保存路径：**\n\n   您可以在 `location` 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 `/var/www/uploads` 目录。\n\n3. **重启Nginx以使配置生效：**\n\n   修改完配置文件后，需要重启Nginx服务以使配置生效。\n\n   ```sh\n   sudo systemctl restart nginx\n   ```\n\n4. **处理上传的文件：**\n\n   需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。\n\n   这是一个使用PHP处理文件上传的简单示例：\n\n   ```php\n   <?php\n   if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['file'])) {\n       $uploadDir = '/var/www/uploads/';\n       $uploadFile = $uploadDir . basename($_FILES['file']['name']);\n\n       if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n           echo \"文件上传成功。\";\n       } else {\n           echo \"文件上传失败。\";\n       }\n   }\n   ?>\n   ```\n\n   然后在Nginx的配置文件中，您可以配置一个 `location` 块来处理文件上传请求：\n\n   ```nginx\n   location /upload {\n       root /var/www/uploads;\n\n       # 代理到后端PHP脚本\n       fastcgi_pass 127.0.0.1:9000;\n       include fastcgi_params;\n       fastcgi_param SCRIPT_FILENAME /var/www/html/upload.php;\n   }\n   ```\n","slug":"nginx配置上传文件大小","published":1,"updated":"2024-07-24T08:34:33.639Z","comments":1,"layout":"post","photos":[],"_id":"clyzl9kol0000sgjdafpg2ks6","content":"<p>要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：</p>\n<ol>\n<li><p><strong>配置Nginx处理上传文件的大小限制：</strong></p>\n<p>打开您的Nginx配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code>）并找到 <code>http</code> 块或 <code>server</code> 块。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">http</span> &#123;<br>    <span class=\"hljs-comment\"># 其他配置...</span><br>    <br>    <span class=\"hljs-comment\"># 设置客户端上传文件的最大限制（单位：字节）</span><br>    <span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">50M</span>;<br><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>        <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>        <span class=\"hljs-comment\"># 其他配置...</span><br><br>        <span class=\"hljs-section\">location</span> /upload &#123;<br>            <span class=\"hljs-comment\"># 将文件上传到指定的目录</span><br>            <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>            <span class=\"hljs-comment\"># 其他配置...</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，<code>client_max_body_size</code> 被设置为 <code>50M</code>，这意味着客户端可以上传最大为50MB的文件。</p>\n</li>\n<li><p><strong>配置上传文件的保存路径：</strong></p>\n<p>您可以在 <code>location</code> 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 <code>/var/www/uploads</code> 目录。</p>\n</li>\n<li><p><strong>重启Nginx以使配置生效：</strong></p>\n<p>修改完配置文件后，需要重启Nginx服务以使配置生效。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl restart nginx<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>处理上传的文件：</strong></p>\n<p>需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。</p>\n<p>这是一个使用PHP处理文件上传的简单示例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REQUEST_METHOD&#x27;</span>] == <span class=\"hljs-string\">&#x27;POST&#x27;</span> &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$uploadDir</span> = <span class=\"hljs-string\">&#x27;/var/www/uploads/&#x27;</span>;<br>    <span class=\"hljs-variable\">$uploadFile</span> = <span class=\"hljs-variable\">$uploadDir</span> . <span class=\"hljs-title function_ invoke__\">basename</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;name&#x27;</span>]);<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">move_uploaded_file</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;tmp_name&#x27;</span>], <span class=\"hljs-variable\">$uploadFile</span>)) &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传成功。&quot;</span>;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传失败。&quot;</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>然后在Nginx的配置文件中，您可以配置一个 <code>location</code> 块来处理文件上传请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">location</span> /upload &#123;<br>    <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>    <span class=\"hljs-comment\"># 代理到后端PHP脚本</span><br>    <span class=\"hljs-attribute\">fastcgi_pass</span> <span class=\"hljs-number\">127.0.0.1:9000</span>;<br>    <span class=\"hljs-attribute\">include</span> fastcgi_params;<br>    <span class=\"hljs-attribute\">fastcgi_param</span> SCRIPT_FILENAME /var/www/html/upload.php;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"","more":"<p>要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：</p>\n<ol>\n<li><p><strong>配置Nginx处理上传文件的大小限制：</strong></p>\n<p>打开您的Nginx配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code>）并找到 <code>http</code> 块或 <code>server</code> 块。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">http</span> &#123;<br>    <span class=\"hljs-comment\"># 其他配置...</span><br>    <br>    <span class=\"hljs-comment\"># 设置客户端上传文件的最大限制（单位：字节）</span><br>    <span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">50M</span>;<br><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>        <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>        <span class=\"hljs-comment\"># 其他配置...</span><br><br>        <span class=\"hljs-section\">location</span> /upload &#123;<br>            <span class=\"hljs-comment\"># 将文件上传到指定的目录</span><br>            <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>            <span class=\"hljs-comment\"># 其他配置...</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，<code>client_max_body_size</code> 被设置为 <code>50M</code>，这意味着客户端可以上传最大为50MB的文件。</p>\n</li>\n<li><p><strong>配置上传文件的保存路径：</strong></p>\n<p>您可以在 <code>location</code> 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 <code>/var/www/uploads</code> 目录。</p>\n</li>\n<li><p><strong>重启Nginx以使配置生效：</strong></p>\n<p>修改完配置文件后，需要重启Nginx服务以使配置生效。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl restart nginx<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>处理上传的文件：</strong></p>\n<p>需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。</p>\n<p>这是一个使用PHP处理文件上传的简单示例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REQUEST_METHOD&#x27;</span>] == <span class=\"hljs-string\">&#x27;POST&#x27;</span> &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$uploadDir</span> = <span class=\"hljs-string\">&#x27;/var/www/uploads/&#x27;</span>;<br>    <span class=\"hljs-variable\">$uploadFile</span> = <span class=\"hljs-variable\">$uploadDir</span> . <span class=\"hljs-title function_ invoke__\">basename</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;name&#x27;</span>]);<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">move_uploaded_file</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;tmp_name&#x27;</span>], <span class=\"hljs-variable\">$uploadFile</span>)) &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传成功。&quot;</span>;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传失败。&quot;</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>然后在Nginx的配置文件中，您可以配置一个 <code>location</code> 块来处理文件上传请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">location</span> /upload &#123;<br>    <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>    <span class=\"hljs-comment\"># 代理到后端PHP脚本</span><br>    <span class=\"hljs-attribute\">fastcgi_pass</span> <span class=\"hljs-number\">127.0.0.1:9000</span>;<br>    <span class=\"hljs-attribute\">include</span> fastcgi_params;<br>    <span class=\"hljs-attribute\">fastcgi_param</span> SCRIPT_FILENAME /var/www/html/upload.php;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"tcp6 如何 改成tcp4","date":"2024-07-25T09:36:35.000Z","_content":"要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：\n\n### 1. 修改系统配置\n如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。\n\n#### Linux\n编辑 `/etc/gai.conf` 文件，取消 `precedence ::ffff:0:0/96  100` 的注释。这会让系统优先使用 IPv4。\n\n```bash\nsudo nano /etc/gai.conf\n```\n\n取消下面这行的注释：\n```bash\nprecedence ::ffff:0:0/96  100\n```\n\n#### Windows\n可以通过命令行禁用IPv6：\n```bash\nnetsh interface ipv6 set prefixpolicy ::ffff:0:0/96  40 1\n```\n\n### 2. 配置网络服务\n对于具体的网络服务，你可以在配置文件中指定使用 IPv4。\n\n#### Nginx\n在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：\n\n```nginx\nserver {\n    listen 80;\n    listen [::]:80 ipv6only=off;\n    ...\n}\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```nginx\nserver {\n    listen 80;\n    ...\n}\n```\n\n#### Apache\n在 Apache 的配置文件中，你可以指定监听的 IP 地址：\n\n```apache\nListen 80\nListen [::]:80\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```apache\nListen 80\n```\n\n### 3. 修改应用程序配置\n对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。\n\n#### Python\n在 Python 应用中，你可以通过 `socket` 模块指定仅使用 IPv4：\n\n```python\nimport socket\n\n# 创建一个IPv4的TCP socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('0.0.0.0', 8080))\nsock.listen(5)\n```\n\n#### Java\n在 Java 应用中，你可以设置 `java.net.preferIPv4Stack` 系统属性：\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n        // 其他代码\n    }\n}\n```\n\n### 总结\n具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。","source":"_posts/tcp6-如何-改成tcp4.md","raw":"---\ntitle: tcp6 如何 改成tcp4\ndate: 2024-07-25 17:36:35\ntags:\n---\n要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：\n\n### 1. 修改系统配置\n如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。\n\n#### Linux\n编辑 `/etc/gai.conf` 文件，取消 `precedence ::ffff:0:0/96  100` 的注释。这会让系统优先使用 IPv4。\n\n```bash\nsudo nano /etc/gai.conf\n```\n\n取消下面这行的注释：\n```bash\nprecedence ::ffff:0:0/96  100\n```\n\n#### Windows\n可以通过命令行禁用IPv6：\n```bash\nnetsh interface ipv6 set prefixpolicy ::ffff:0:0/96  40 1\n```\n\n### 2. 配置网络服务\n对于具体的网络服务，你可以在配置文件中指定使用 IPv4。\n\n#### Nginx\n在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：\n\n```nginx\nserver {\n    listen 80;\n    listen [::]:80 ipv6only=off;\n    ...\n}\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```nginx\nserver {\n    listen 80;\n    ...\n}\n```\n\n#### Apache\n在 Apache 的配置文件中，你可以指定监听的 IP 地址：\n\n```apache\nListen 80\nListen [::]:80\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```apache\nListen 80\n```\n\n### 3. 修改应用程序配置\n对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。\n\n#### Python\n在 Python 应用中，你可以通过 `socket` 模块指定仅使用 IPv4：\n\n```python\nimport socket\n\n# 创建一个IPv4的TCP socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('0.0.0.0', 8080))\nsock.listen(5)\n```\n\n#### Java\n在 Java 应用中，你可以设置 `java.net.preferIPv4Stack` 系统属性：\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n        // 其他代码\n    }\n}\n```\n\n### 总结\n具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。","slug":"tcp6-如何-改成tcp4","published":1,"updated":"2024-07-25T09:36:47.968Z","comments":1,"layout":"post","photos":[],"_id":"clz12xggl0000nojd0msu2vet","content":"<p>要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：</p>\n<h3 id=\"1-修改系统配置\"><a href=\"#1-修改系统配置\" class=\"headerlink\" title=\"1. 修改系统配置\"></a>1. 修改系统配置</h3><p>如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>编辑 <code>/etc/gai.conf</code> 文件，取消 <code>precedence ::ffff:0:0/96  100</code> 的注释。这会让系统优先使用 IPv4。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo nano /etc/gai.conf<br></code></pre></td></tr></table></figure>\n\n<p>取消下面这行的注释：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">precedence ::ffff:0:0/96  100<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><p>可以通过命令行禁用IPv6：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netsh interface ipv6 <span class=\"hljs-built_in\">set</span> prefixpolicy ::ffff:0:0/96  40 1<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置网络服务\"><a href=\"#2-配置网络服务\" class=\"headerlink\" title=\"2. 配置网络服务\"></a>2. 配置网络服务</h3><p>对于具体的网络服务，你可以在配置文件中指定使用 IPv4。</p>\n<h4 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h4><p>在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">listen</span> [::]:<span class=\"hljs-number\">80</span> ipv6only=<span class=\"hljs-literal\">off</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h4><p>在 Apache 的配置文件中，你可以指定监听的 IP 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br><span class=\"hljs-attribute\">Listen</span><span class=\"hljs-meta\"> [::]:80</span><br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改应用程序配置\"><a href=\"#3-修改应用程序配置\" class=\"headerlink\" title=\"3. 修改应用程序配置\"></a>3. 修改应用程序配置</h3><p>对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。</p>\n<h4 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h4><p>在 Python 应用中，你可以通过 <code>socket</code> 模块指定仅使用 IPv4：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> socket<br><br><span class=\"hljs-comment\"># 创建一个IPv4的TCP socket</span><br>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>sock.bind((<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-number\">8080</span>))<br>sock.listen(<span class=\"hljs-number\">5</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p>在 Java 应用中，你可以设置 <code>java.net.preferIPv4Stack</code> 系统属性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.setProperty(<span class=\"hljs-string\">&quot;java.net.preferIPv4Stack&quot;</span>, <span class=\"hljs-string\">&quot;true&quot;</span>);<br>        <span class=\"hljs-comment\">// 其他代码</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。</p>\n","excerpt":"","more":"<p>要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：</p>\n<h3 id=\"1-修改系统配置\"><a href=\"#1-修改系统配置\" class=\"headerlink\" title=\"1. 修改系统配置\"></a>1. 修改系统配置</h3><p>如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>编辑 <code>/etc/gai.conf</code> 文件，取消 <code>precedence ::ffff:0:0/96  100</code> 的注释。这会让系统优先使用 IPv4。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo nano /etc/gai.conf<br></code></pre></td></tr></table></figure>\n\n<p>取消下面这行的注释：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">precedence ::ffff:0:0/96  100<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><p>可以通过命令行禁用IPv6：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netsh interface ipv6 <span class=\"hljs-built_in\">set</span> prefixpolicy ::ffff:0:0/96  40 1<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置网络服务\"><a href=\"#2-配置网络服务\" class=\"headerlink\" title=\"2. 配置网络服务\"></a>2. 配置网络服务</h3><p>对于具体的网络服务，你可以在配置文件中指定使用 IPv4。</p>\n<h4 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h4><p>在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">listen</span> [::]:<span class=\"hljs-number\">80</span> ipv6only=<span class=\"hljs-literal\">off</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h4><p>在 Apache 的配置文件中，你可以指定监听的 IP 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br><span class=\"hljs-attribute\">Listen</span><span class=\"hljs-meta\"> [::]:80</span><br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改应用程序配置\"><a href=\"#3-修改应用程序配置\" class=\"headerlink\" title=\"3. 修改应用程序配置\"></a>3. 修改应用程序配置</h3><p>对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。</p>\n<h4 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h4><p>在 Python 应用中，你可以通过 <code>socket</code> 模块指定仅使用 IPv4：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> socket<br><br><span class=\"hljs-comment\"># 创建一个IPv4的TCP socket</span><br>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>sock.bind((<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-number\">8080</span>))<br>sock.listen(<span class=\"hljs-number\">5</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p>在 Java 应用中，你可以设置 <code>java.net.preferIPv4Stack</code> 系统属性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.setProperty(<span class=\"hljs-string\">&quot;java.net.preferIPv4Stack&quot;</span>, <span class=\"hljs-string\">&quot;true&quot;</span>);<br>        <span class=\"hljs-comment\">// 其他代码</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。</p>\n"},{"title":"select for update用法的好处","date":"2024-07-25T11:10:03.000Z","_content":"`SELECT FOR UPDATE` 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：\n\n### 1. **避免脏读、不可重复读和幻读**\n通过使用 `SELECT FOR UPDATE`，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：\n- **脏读**：一个事务可以读取到另一个未提交事务的修改。\n- **不可重复读**：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。\n- **幻读**：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。\n\n### 2. **确保一致性和完整性**\n在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 `SELECT FOR UPDATE` 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。\n\n### 3. **防止丢失更新**\n当多个事务试图同时更新同一行时，`SELECT FOR UPDATE` 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。\n\n### 4. **优化并发控制**\n使用 `SELECT FOR UPDATE` 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。\n\n### 5. **简化编程模型**\n`SELECT FOR UPDATE` 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。\n\n### 使用示例\n```sql\nBEGIN;\nSELECT * FROM accounts WHERE account_id = 1 FOR UPDATE;\n-- 执行一些需要锁定这行的操作，例如更新账户余额\nUPDATE accounts SET balance = balance - 100 WHERE account_id = 1;\nCOMMIT;\n```\n\n在这个示例中，通过 `SELECT FOR UPDATE` 锁定 `account_id = 1` 的行，确保在事务提交之前，没有其他事务可以修改该行。\n\n总的来说，`SELECT FOR UPDATE` 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。","source":"_posts/select-for-update用法的好处.md","raw":"---\ntitle: select for update用法的好处\ndate: 2024-07-25 19:10:03\ntags:\n---\n`SELECT FOR UPDATE` 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：\n\n### 1. **避免脏读、不可重复读和幻读**\n通过使用 `SELECT FOR UPDATE`，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：\n- **脏读**：一个事务可以读取到另一个未提交事务的修改。\n- **不可重复读**：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。\n- **幻读**：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。\n\n### 2. **确保一致性和完整性**\n在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 `SELECT FOR UPDATE` 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。\n\n### 3. **防止丢失更新**\n当多个事务试图同时更新同一行时，`SELECT FOR UPDATE` 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。\n\n### 4. **优化并发控制**\n使用 `SELECT FOR UPDATE` 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。\n\n### 5. **简化编程模型**\n`SELECT FOR UPDATE` 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。\n\n### 使用示例\n```sql\nBEGIN;\nSELECT * FROM accounts WHERE account_id = 1 FOR UPDATE;\n-- 执行一些需要锁定这行的操作，例如更新账户余额\nUPDATE accounts SET balance = balance - 100 WHERE account_id = 1;\nCOMMIT;\n```\n\n在这个示例中，通过 `SELECT FOR UPDATE` 锁定 `account_id = 1` 的行，确保在事务提交之前，没有其他事务可以修改该行。\n\n总的来说，`SELECT FOR UPDATE` 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。","slug":"select-for-update用法的好处","published":1,"updated":"2024-07-25T11:10:14.614Z","comments":1,"layout":"post","photos":[],"_id":"clz169lmq0000dsjd2rxq25rr","content":"<p><code>SELECT FOR UPDATE</code> 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：</p>\n<h3 id=\"1-避免脏读、不可重复读和幻读\"><a href=\"#1-避免脏读、不可重复读和幻读\" class=\"headerlink\" title=\"1. 避免脏读、不可重复读和幻读\"></a>1. <strong>避免脏读、不可重复读和幻读</strong></h3><p>通过使用 <code>SELECT FOR UPDATE</code>，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：</p>\n<ul>\n<li><strong>脏读</strong>：一个事务可以读取到另一个未提交事务的修改。</li>\n<li><strong>不可重复读</strong>：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。</li>\n<li><strong>幻读</strong>：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。</li>\n</ul>\n<h3 id=\"2-确保一致性和完整性\"><a href=\"#2-确保一致性和完整性\" class=\"headerlink\" title=\"2. 确保一致性和完整性\"></a>2. <strong>确保一致性和完整性</strong></h3><p>在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 <code>SELECT FOR UPDATE</code> 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。</p>\n<h3 id=\"3-防止丢失更新\"><a href=\"#3-防止丢失更新\" class=\"headerlink\" title=\"3. 防止丢失更新\"></a>3. <strong>防止丢失更新</strong></h3><p>当多个事务试图同时更新同一行时，<code>SELECT FOR UPDATE</code> 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。</p>\n<h3 id=\"4-优化并发控制\"><a href=\"#4-优化并发控制\" class=\"headerlink\" title=\"4. 优化并发控制\"></a>4. <strong>优化并发控制</strong></h3><p>使用 <code>SELECT FOR UPDATE</code> 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。</p>\n<h3 id=\"5-简化编程模型\"><a href=\"#5-简化编程模型\" class=\"headerlink\" title=\"5. 简化编程模型\"></a>5. <strong>简化编程模型</strong></h3><p><code>SELECT FOR UPDATE</code> 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。</p>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">BEGIN</span>;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> accounts <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">UPDATE</span>;<br><span class=\"hljs-comment\">-- 执行一些需要锁定这行的操作，例如更新账户余额</span><br><span class=\"hljs-keyword\">UPDATE</span> accounts <span class=\"hljs-keyword\">SET</span> balance <span class=\"hljs-operator\">=</span> balance <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">100</span> <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">COMMIT</span>;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，通过 <code>SELECT FOR UPDATE</code> 锁定 <code>account_id = 1</code> 的行，确保在事务提交之前，没有其他事务可以修改该行。</p>\n<p>总的来说，<code>SELECT FOR UPDATE</code> 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。</p>\n","excerpt":"","more":"<p><code>SELECT FOR UPDATE</code> 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：</p>\n<h3 id=\"1-避免脏读、不可重复读和幻读\"><a href=\"#1-避免脏读、不可重复读和幻读\" class=\"headerlink\" title=\"1. 避免脏读、不可重复读和幻读\"></a>1. <strong>避免脏读、不可重复读和幻读</strong></h3><p>通过使用 <code>SELECT FOR UPDATE</code>，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：</p>\n<ul>\n<li><strong>脏读</strong>：一个事务可以读取到另一个未提交事务的修改。</li>\n<li><strong>不可重复读</strong>：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。</li>\n<li><strong>幻读</strong>：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。</li>\n</ul>\n<h3 id=\"2-确保一致性和完整性\"><a href=\"#2-确保一致性和完整性\" class=\"headerlink\" title=\"2. 确保一致性和完整性\"></a>2. <strong>确保一致性和完整性</strong></h3><p>在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 <code>SELECT FOR UPDATE</code> 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。</p>\n<h3 id=\"3-防止丢失更新\"><a href=\"#3-防止丢失更新\" class=\"headerlink\" title=\"3. 防止丢失更新\"></a>3. <strong>防止丢失更新</strong></h3><p>当多个事务试图同时更新同一行时，<code>SELECT FOR UPDATE</code> 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。</p>\n<h3 id=\"4-优化并发控制\"><a href=\"#4-优化并发控制\" class=\"headerlink\" title=\"4. 优化并发控制\"></a>4. <strong>优化并发控制</strong></h3><p>使用 <code>SELECT FOR UPDATE</code> 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。</p>\n<h3 id=\"5-简化编程模型\"><a href=\"#5-简化编程模型\" class=\"headerlink\" title=\"5. 简化编程模型\"></a>5. <strong>简化编程模型</strong></h3><p><code>SELECT FOR UPDATE</code> 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。</p>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">BEGIN</span>;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> accounts <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">UPDATE</span>;<br><span class=\"hljs-comment\">-- 执行一些需要锁定这行的操作，例如更新账户余额</span><br><span class=\"hljs-keyword\">UPDATE</span> accounts <span class=\"hljs-keyword\">SET</span> balance <span class=\"hljs-operator\">=</span> balance <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">100</span> <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">COMMIT</span>;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，通过 <code>SELECT FOR UPDATE</code> 锁定 <code>account_id = 1</code> 的行，确保在事务提交之前，没有其他事务可以修改该行。</p>\n<p>总的来说，<code>SELECT FOR UPDATE</code> 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。</p>\n"},{"title":"在linux上使用代理","date":"2024-07-26T01:56:32.000Z","_content":"要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：\n\n### 1. 安装 Clash Verge\n\n首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。\n\n#### 下载 Clash\n\n[mihomo-linux-amd64-v1.18.6.deb](在linux上使用代理/mihomo-linux-amd64-v1.18.6.deb)\n```bash\ndpkg -i mihomo-linux-amd64-v1.18.6.deb     \nchmod 777 mihomo-linux-amd64-v1.18.6.deb \nsudo mv mihomo-linux-amd64-v1.18.6 clash\n```\n\n### 2. 配置 Clash\n在使用 Clash Verge 之前，需要先配置 Clash 的 `config.yaml` 文件。\n\n```bash\n拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml\nwget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml\n```\n### 3. 启动 Clash\n在命令行中启动 Clash：\n```bash\nnohup ./clash &\n```\nClash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 `http://localhost:7899` 或者其他配置文件中指定的端口。\n\n\n\n1. **创建代理配置文件**：在Kali系统的Docker配置目录下创建一个名为`/etc/systemd/system/docker.service.d/http-proxy.conf`的文件。如果该目录不存在，请先创建它。\n\n```sh\nsudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n```\n\n2. **配置代理**：在`http-proxy.conf`文件中添加以下内容，将`http://127.0.0.1:7899`替换为你的代理服务器地址和端口。\n\n```ini\n[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n```\n\n3. **重新加载守护进程并重启Docker服务**：\n\n```sh\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n4. **验证代理配置**：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：\n\n```sh\ndocker info\n```\n\n在输出信息中找到`HTTP Proxy`和`HTTPS Proxy`条目，检查它们是否显示了你配置的代理服务器地址。\n\n如果你需要为Docker客户端配置代理（如`docker build`命令），可以在你的shell配置文件（如`~/.bashrc`或`~/.zshrc`）中添加以下行：\n\n```sh\nexport HTTP_PROXY=\"http://your-proxy.example.com:8080\"\nexport HTTPS_PROXY=\"http://your-proxy.example.com:8080\"\nexport NO_PROXY=\"localhost,127.0.0.1\"\n```\n\n保存文件并加载新的配置：\n\n```sh\nsource ~/.bashrc  # 或者 source ~/.zshrc\n```\n\n这样，Docker客户端在运行时也会通过代理服务器进行连接。","source":"_posts/在linux上使用代理.md","raw":"---\ntitle: 在linux上使用代理\ndate: 2024-07-26 09:56:32\ntags:\n---\n要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：\n\n### 1. 安装 Clash Verge\n\n首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。\n\n#### 下载 Clash\n\n[mihomo-linux-amd64-v1.18.6.deb](在linux上使用代理/mihomo-linux-amd64-v1.18.6.deb)\n```bash\ndpkg -i mihomo-linux-amd64-v1.18.6.deb     \nchmod 777 mihomo-linux-amd64-v1.18.6.deb \nsudo mv mihomo-linux-amd64-v1.18.6 clash\n```\n\n### 2. 配置 Clash\n在使用 Clash Verge 之前，需要先配置 Clash 的 `config.yaml` 文件。\n\n```bash\n拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml\nwget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml\n```\n### 3. 启动 Clash\n在命令行中启动 Clash：\n```bash\nnohup ./clash &\n```\nClash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 `http://localhost:7899` 或者其他配置文件中指定的端口。\n\n\n\n1. **创建代理配置文件**：在Kali系统的Docker配置目录下创建一个名为`/etc/systemd/system/docker.service.d/http-proxy.conf`的文件。如果该目录不存在，请先创建它。\n\n```sh\nsudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n```\n\n2. **配置代理**：在`http-proxy.conf`文件中添加以下内容，将`http://127.0.0.1:7899`替换为你的代理服务器地址和端口。\n\n```ini\n[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n```\n\n3. **重新加载守护进程并重启Docker服务**：\n\n```sh\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n4. **验证代理配置**：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：\n\n```sh\ndocker info\n```\n\n在输出信息中找到`HTTP Proxy`和`HTTPS Proxy`条目，检查它们是否显示了你配置的代理服务器地址。\n\n如果你需要为Docker客户端配置代理（如`docker build`命令），可以在你的shell配置文件（如`~/.bashrc`或`~/.zshrc`）中添加以下行：\n\n```sh\nexport HTTP_PROXY=\"http://your-proxy.example.com:8080\"\nexport HTTPS_PROXY=\"http://your-proxy.example.com:8080\"\nexport NO_PROXY=\"localhost,127.0.0.1\"\n```\n\n保存文件并加载新的配置：\n\n```sh\nsource ~/.bashrc  # 或者 source ~/.zshrc\n```\n\n这样，Docker客户端在运行时也会通过代理服务器进行连接。","slug":"在linux上使用代理","published":1,"updated":"2024-07-26T02:13:07.057Z","_id":"clz226zqt0000mcjdddb70zak","comments":1,"layout":"post","photos":[],"content":"<p>要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：</p>\n<h3 id=\"1-安装-Clash-Verge\"><a href=\"#1-安装-Clash-Verge\" class=\"headerlink\" title=\"1. 安装 Clash Verge\"></a>1. 安装 Clash Verge</h3><p>首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。</p>\n<h4 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h4><p><a href=\"%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/mihomo-linux-amd64-v1.18.6.deb\">mihomo-linux-amd64-v1.18.6.deb</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -i mihomo-linux-amd64-v1.18.6.deb     <br><span class=\"hljs-built_in\">chmod</span> 777 mihomo-linux-amd64-v1.18.6.deb <br>sudo <span class=\"hljs-built_in\">mv</span> mihomo-linux-amd64-v1.18.6 clash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置-Clash\"><a href=\"#2-配置-Clash\" class=\"headerlink\" title=\"2. 配置 Clash\"></a>2. 配置 Clash</h3><p>在使用 Clash Verge 之前，需要先配置 Clash 的 <code>config.yaml</code> 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<br>wget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-启动-Clash\"><a href=\"#3-启动-Clash\" class=\"headerlink\" title=\"3. 启动 Clash\"></a>3. 启动 Clash</h3><p>在命令行中启动 Clash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> ./clash &amp;<br></code></pre></td></tr></table></figure>\n<p>Clash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 <code>http://localhost:7899</code> 或者其他配置文件中指定的端口。</p>\n<ol>\n<li><strong>创建代理配置文件</strong>：在Kali系统的Docker配置目录下创建一个名为<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>的文件。如果该目录不存在，请先创建它。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>配置代理</strong>：在<code>http-proxy.conf</code>文件中添加以下内容，将<code>http://127.0.0.1:7899</code>替换为你的代理服务器地址和端口。</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><strong>重新加载守护进程并重启Docker服务</strong>：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>验证代理配置</strong>：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker info<br></code></pre></td></tr></table></figure>\n\n<p>在输出信息中找到<code>HTTP Proxy</code>和<code>HTTPS Proxy</code>条目，检查它们是否显示了你配置的代理服务器地址。</p>\n<p>如果你需要为Docker客户端配置代理（如<code>docker build</code>命令），可以在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> HTTPS_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> NO_PROXY=<span class=\"hljs-string\">&quot;localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存文件并加载新的配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">source</span> ~/.bashrc  <span class=\"hljs-comment\"># 或者 source ~/.zshrc</span><br></code></pre></td></tr></table></figure>\n\n<p>这样，Docker客户端在运行时也会通过代理服务器进行连接。</p>\n","excerpt":"","more":"<p>要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：</p>\n<h3 id=\"1-安装-Clash-Verge\"><a href=\"#1-安装-Clash-Verge\" class=\"headerlink\" title=\"1. 安装 Clash Verge\"></a>1. 安装 Clash Verge</h3><p>首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。</p>\n<h4 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h4><p><a href=\"%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86/mihomo-linux-amd64-v1.18.6.deb\">mihomo-linux-amd64-v1.18.6.deb</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -i mihomo-linux-amd64-v1.18.6.deb     <br><span class=\"hljs-built_in\">chmod</span> 777 mihomo-linux-amd64-v1.18.6.deb <br>sudo <span class=\"hljs-built_in\">mv</span> mihomo-linux-amd64-v1.18.6 clash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置-Clash\"><a href=\"#2-配置-Clash\" class=\"headerlink\" title=\"2. 配置 Clash\"></a>2. 配置 Clash</h3><p>在使用 Clash Verge 之前，需要先配置 Clash 的 <code>config.yaml</code> 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<br>wget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-启动-Clash\"><a href=\"#3-启动-Clash\" class=\"headerlink\" title=\"3. 启动 Clash\"></a>3. 启动 Clash</h3><p>在命令行中启动 Clash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> ./clash &amp;<br></code></pre></td></tr></table></figure>\n<p>Clash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 <code>http://localhost:7899</code> 或者其他配置文件中指定的端口。</p>\n<ol>\n<li><strong>创建代理配置文件</strong>：在Kali系统的Docker配置目录下创建一个名为<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>的文件。如果该目录不存在，请先创建它。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>配置代理</strong>：在<code>http-proxy.conf</code>文件中添加以下内容，将<code>http://127.0.0.1:7899</code>替换为你的代理服务器地址和端口。</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><strong>重新加载守护进程并重启Docker服务</strong>：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>验证代理配置</strong>：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker info<br></code></pre></td></tr></table></figure>\n\n<p>在输出信息中找到<code>HTTP Proxy</code>和<code>HTTPS Proxy</code>条目，检查它们是否显示了你配置的代理服务器地址。</p>\n<p>如果你需要为Docker客户端配置代理（如<code>docker build</code>命令），可以在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> HTTPS_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> NO_PROXY=<span class=\"hljs-string\">&quot;localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存文件并加载新的配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">source</span> ~/.bashrc  <span class=\"hljs-comment\"># 或者 source ~/.zshrc</span><br></code></pre></td></tr></table></figure>\n\n<p>这样，Docker客户端在运行时也会通过代理服务器进行连接。</p>\n"},{"title":"使用切面或拦截器打印异常日志","date":"2024-07-26T09:01:47.000Z","_content":"在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。\n\n### 1. 使用切面（Aspect）记录异常日志\n\nSpring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。\n\n#### 步骤：\n\n1. **添加依赖**：\n   确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保`spring-boot-starter-aop`已经在你的`pom.xml`中。\n\n    ```xml\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-aop</artifactId>\n    </dependency>\n    ```\n\n2. **创建切面类**：\n\n    ```java\n    import org.aspectj.lang.annotation.AfterThrowing;\n    import org.aspectj.lang.annotation.Aspect;\n    import org.springframework.stereotype.Component;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    @Aspect\n    @Component\n    public class ExceptionLoggingAspect {\n\n        private static final Logger logger = LoggerFactory.getLogger(ExceptionLoggingAspect.class);\n\n        // 定义一个切入点，拦截所有方法\n        @AfterThrowing(pointcut = \"execution(* com.yourpackage..*(..))\", throwing = \"exception\")\n        public void logException(Exception exception) {\n            logger.error(\"Exception caught: \", exception);\n        }\n    }\n    ```\n\n   在上述代码中，`@AfterThrowing`注解用于定义在方法抛出异常后执行的通知。`execution(* com.yourpackage..*(..))`表示拦截`com.yourpackage`包及其子包中所有类的所有方法。\n\n### 2. 使用拦截器（Interceptor）记录异常日志\n\nSpring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。\n\n#### 步骤：\n\n1. **创建拦截器类**：\n\n    ```java\n    import org.springframework.stereotype.Component;\n    import org.springframework.web.servlet.HandlerInterceptor;\n    import org.springframework.web.servlet.ModelAndView;\n\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n\n    @Component\n    public class ExceptionLoggingInterceptor implements HandlerInterceptor {\n\n        @Override\n        public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n            return true;\n        }\n\n        @Override\n        public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        }\n\n        @Override\n        public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n            if (ex != null) {\n                // 记录异常日志\n                Logger logger = LoggerFactory.getLogger(handler.getClass());\n                logger.error(\"Exception caught during request processing: \", ex);\n            }\n        }\n    }\n    ```\n\n2. **注册拦截器**：\n\n   在Spring Boot应用中，通过配置类注册拦截器。\n\n    ```java\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.web.servlet.config.annotation.InterceptorRegistry;\n    import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n    @Configuration\n    public class WebConfig implements WebMvcConfigurer {\n\n        @Autowired\n        private ExceptionLoggingInterceptor exceptionLoggingInterceptor;\n\n        @Override\n        public void addInterceptors(InterceptorRegistry registry) {\n            registry.addInterceptor(exceptionLoggingInterceptor);\n        }\n    }\n    ```\n\n### 总结\n\n这两种方式各有优劣：\n\n- **切面（Aspect）**适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。\n- **拦截器（Interceptor）**适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。\n\n选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。","source":"_posts/使用切面或拦截器打印异常日志.md","raw":"---\ntitle: 使用切面或拦截器打印异常日志\ndate: 2024-07-26 17:01:47\ntags:\n---\n在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。\n\n### 1. 使用切面（Aspect）记录异常日志\n\nSpring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。\n\n#### 步骤：\n\n1. **添加依赖**：\n   确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保`spring-boot-starter-aop`已经在你的`pom.xml`中。\n\n    ```xml\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-aop</artifactId>\n    </dependency>\n    ```\n\n2. **创建切面类**：\n\n    ```java\n    import org.aspectj.lang.annotation.AfterThrowing;\n    import org.aspectj.lang.annotation.Aspect;\n    import org.springframework.stereotype.Component;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    @Aspect\n    @Component\n    public class ExceptionLoggingAspect {\n\n        private static final Logger logger = LoggerFactory.getLogger(ExceptionLoggingAspect.class);\n\n        // 定义一个切入点，拦截所有方法\n        @AfterThrowing(pointcut = \"execution(* com.yourpackage..*(..))\", throwing = \"exception\")\n        public void logException(Exception exception) {\n            logger.error(\"Exception caught: \", exception);\n        }\n    }\n    ```\n\n   在上述代码中，`@AfterThrowing`注解用于定义在方法抛出异常后执行的通知。`execution(* com.yourpackage..*(..))`表示拦截`com.yourpackage`包及其子包中所有类的所有方法。\n\n### 2. 使用拦截器（Interceptor）记录异常日志\n\nSpring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。\n\n#### 步骤：\n\n1. **创建拦截器类**：\n\n    ```java\n    import org.springframework.stereotype.Component;\n    import org.springframework.web.servlet.HandlerInterceptor;\n    import org.springframework.web.servlet.ModelAndView;\n\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n\n    @Component\n    public class ExceptionLoggingInterceptor implements HandlerInterceptor {\n\n        @Override\n        public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n            return true;\n        }\n\n        @Override\n        public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        }\n\n        @Override\n        public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n            if (ex != null) {\n                // 记录异常日志\n                Logger logger = LoggerFactory.getLogger(handler.getClass());\n                logger.error(\"Exception caught during request processing: \", ex);\n            }\n        }\n    }\n    ```\n\n2. **注册拦截器**：\n\n   在Spring Boot应用中，通过配置类注册拦截器。\n\n    ```java\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.web.servlet.config.annotation.InterceptorRegistry;\n    import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n    @Configuration\n    public class WebConfig implements WebMvcConfigurer {\n\n        @Autowired\n        private ExceptionLoggingInterceptor exceptionLoggingInterceptor;\n\n        @Override\n        public void addInterceptors(InterceptorRegistry registry) {\n            registry.addInterceptor(exceptionLoggingInterceptor);\n        }\n    }\n    ```\n\n### 总结\n\n这两种方式各有优劣：\n\n- **切面（Aspect）**适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。\n- **拦截器（Interceptor）**适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。\n\n选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。","slug":"使用切面或拦截器打印异常日志","published":1,"updated":"2024-07-26T09:01:59.753Z","comments":1,"layout":"post","photos":[],"_id":"clz2h4juv000000jddkizd7kv","content":"<p>在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。</p>\n<h3 id=\"1-使用切面（Aspect）记录异常日志\"><a href=\"#1-使用切面（Aspect）记录异常日志\" class=\"headerlink\" title=\"1. 使用切面（Aspect）记录异常日志\"></a>1. 使用切面（Aspect）记录异常日志</h3><p>Spring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>添加依赖</strong>：<br>确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保<code>spring-boot-starter-aop</code>已经在你的<code>pom.xml</code>中。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>创建切面类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.AfterThrowing;<br><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.Aspect;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.slf4j.Logger;<br><span class=\"hljs-keyword\">import</span> org.slf4j.LoggerFactory;<br><br><span class=\"hljs-meta\">@Aspect</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingAspect</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(ExceptionLoggingAspect.class);<br><br>    <span class=\"hljs-comment\">// 定义一个切入点，拦截所有方法</span><br>    <span class=\"hljs-meta\">@AfterThrowing(pointcut = &quot;execution(* com.yourpackage..*(..))&quot;, throwing = &quot;exception&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">logException</span><span class=\"hljs-params\">(Exception exception)</span> &#123;<br>        logger.error(<span class=\"hljs-string\">&quot;Exception caught: &quot;</span>, exception);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上述代码中，<code>@AfterThrowing</code>注解用于定义在方法抛出异常后执行的通知。<code>execution(* com.yourpackage..*(..))</code>表示拦截<code>com.yourpackage</code>包及其子包中所有类的所有方法。</p>\n</li>\n</ol>\n<h3 id=\"2-使用拦截器（Interceptor）记录异常日志\"><a href=\"#2-使用拦截器（Interceptor）记录异常日志\" class=\"headerlink\" title=\"2. 使用拦截器（Interceptor）记录异常日志\"></a>2. 使用拦截器（Interceptor）记录异常日志</h3><p>Spring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。</p>\n<h4 id=\"步骤：-1\"><a href=\"#步骤：-1\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>创建拦截器类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletRequest;<br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingInterceptor</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">HandlerInterceptor</span> &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">preHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">postHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">afterCompletion</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">if</span> (ex != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-comment\">// 记录异常日志</span><br>            <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(handler.getClass());<br>            logger.error(<span class=\"hljs-string\">&quot;Exception caught during request processing: &quot;</span>, ex);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>注册拦截器</strong>：</p>\n<p>在Spring Boot应用中，通过配置类注册拦截器。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WebConfig</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">WebMvcConfigurer</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ExceptionLoggingInterceptor exceptionLoggingInterceptor;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInterceptors</span><span class=\"hljs-params\">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(exceptionLoggingInterceptor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这两种方式各有优劣：</p>\n<ul>\n<li><strong>切面（Aspect）</strong>适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。</li>\n<li><strong>拦截器（Interceptor）</strong>适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。</li>\n</ul>\n<p>选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。</p>\n","excerpt":"","more":"<p>在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。</p>\n<h3 id=\"1-使用切面（Aspect）记录异常日志\"><a href=\"#1-使用切面（Aspect）记录异常日志\" class=\"headerlink\" title=\"1. 使用切面（Aspect）记录异常日志\"></a>1. 使用切面（Aspect）记录异常日志</h3><p>Spring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>添加依赖</strong>：<br>确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保<code>spring-boot-starter-aop</code>已经在你的<code>pom.xml</code>中。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>创建切面类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.AfterThrowing;<br><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.Aspect;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.slf4j.Logger;<br><span class=\"hljs-keyword\">import</span> org.slf4j.LoggerFactory;<br><br><span class=\"hljs-meta\">@Aspect</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingAspect</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(ExceptionLoggingAspect.class);<br><br>    <span class=\"hljs-comment\">// 定义一个切入点，拦截所有方法</span><br>    <span class=\"hljs-meta\">@AfterThrowing(pointcut = &quot;execution(* com.yourpackage..*(..))&quot;, throwing = &quot;exception&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">logException</span><span class=\"hljs-params\">(Exception exception)</span> &#123;<br>        logger.error(<span class=\"hljs-string\">&quot;Exception caught: &quot;</span>, exception);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上述代码中，<code>@AfterThrowing</code>注解用于定义在方法抛出异常后执行的通知。<code>execution(* com.yourpackage..*(..))</code>表示拦截<code>com.yourpackage</code>包及其子包中所有类的所有方法。</p>\n</li>\n</ol>\n<h3 id=\"2-使用拦截器（Interceptor）记录异常日志\"><a href=\"#2-使用拦截器（Interceptor）记录异常日志\" class=\"headerlink\" title=\"2. 使用拦截器（Interceptor）记录异常日志\"></a>2. 使用拦截器（Interceptor）记录异常日志</h3><p>Spring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。</p>\n<h4 id=\"步骤：-1\"><a href=\"#步骤：-1\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>创建拦截器类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletRequest;<br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingInterceptor</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">HandlerInterceptor</span> &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">preHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">postHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">afterCompletion</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">if</span> (ex != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-comment\">// 记录异常日志</span><br>            <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(handler.getClass());<br>            logger.error(<span class=\"hljs-string\">&quot;Exception caught during request processing: &quot;</span>, ex);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>注册拦截器</strong>：</p>\n<p>在Spring Boot应用中，通过配置类注册拦截器。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WebConfig</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">WebMvcConfigurer</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ExceptionLoggingInterceptor exceptionLoggingInterceptor;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInterceptors</span><span class=\"hljs-params\">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(exceptionLoggingInterceptor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这两种方式各有优劣：</p>\n<ul>\n<li><strong>切面（Aspect）</strong>适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。</li>\n<li><strong>拦截器（Interceptor）</strong>适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。</li>\n</ul>\n<p>选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。</p>\n"},{"title":"解读redis分布式锁核心逻辑","date":"2024-07-30T02:07:27.000Z","_content":"   ```lua\n  local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); if value == false then insertable = true; else local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[5]); if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then insertable = true; end; end; if insertable == true then if tonumber(ARGV[2]) > 0 then redis.call('zadd', KEYS[2], ARGV[2], ARGV[5]); else redis.call('zrem', KEYS[2], ARGV[5]); end; if tonumber(ARGV[3]) > 0 then redis.call('zadd', KEYS[3], ARGV[3], ARGV[5]); else redis.call('zrem', KEYS[3], ARGV[5]); end; local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size')); if maxSize ~= nil and maxSize ~= 0 then     local currentTime = tonumber(ARGV[1]);     local lastAccessTimeSetName = KEYS[5]; local mode = redis.call('hget', KEYS[7], 'mode'); if mode == false or mode == 'LRU' then redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5]); end;     local cacheSize = tonumber(redis.call('hlen', KEYS[1]));     if cacheSize >= maxSize then         local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize);         for index, lruItem in ipairs(lruItems) do             if lruItem and lruItem ~= ARGV[5] then                 local lruItemValue = redis.call('hget', KEYS[1], lruItem);                 redis.call('hdel', KEYS[1], lruItem);                 redis.call('zrem', KEYS[2], lruItem);                 redis.call('zrem', KEYS[3], lruItem);                 redis.call('zrem', lastAccessTimeSetName, lruItem);                 if lruItemValue ~= false then                 local removedChannelName = KEYS[6]; local ttl, obj = struct.unpack('dLc0', lruItemValue);                    local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj);                redis.call('publish', removedChannelName, msg); end;             end;         end;     end; if mode == 'LFU' then redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]); end; end; local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6]); redis.call('hset', KEYS[1], ARGV[5], val); local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6]); redis.call('publish', KEYS[4], msg); return nil; else local t, val = struct.unpack('dLc0', value); redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5]); return val; end; \n   ```\n\n这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：\n- 判断是否需要插入或更新缓存。\n- 处理缓存的过期逻辑。\n- 实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。\n- 在缓存项插入或更新时发布相关消息。\n\n具体的解读如下：\n\n1. **初始化和获取当前值**：\n   ```lua\n   local insertable = false\n   local value = redis.call('hget', KEYS[1], ARGV[5])\n   ```\n\n2. **判断当前缓存项是否存在**：\n    - 如果不存在，则设置`insertable`为`true`，表示可以插入新的缓存项。\n    - 如果存在，继续判断其过期时间。\n   ```lua\n   if value == false then \n       insertable = true \n   else\n       local t, val = struct.unpack('dLc0', value)\n       local expireDate = 92233720368547758\n       local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5])\n       if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end\n       if t ~= 0 then\n           local expireIdle = redis.call('zscore', KEYS[3], ARGV[5])\n           if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end\n       end\n       if expireDate <= tonumber(ARGV[1]) then insertable = true end\n   end\n   ```\n\n3. **处理可插入的情况**：\n    - 更新或删除过期时间。\n    - 检查缓存大小，并根据LRU或LFU策略进行淘汰。\n   ```lua\n   if insertable == true then \n       if tonumber(ARGV[2]) > 0 then \n           redis.call('zadd', KEYS[2], ARGV[2], ARGV[5])\n       else \n           redis.call('zrem', KEYS[2], ARGV[5]) \n       end\n       if tonumber(ARGV[3]) > 0 then \n           redis.call('zadd', KEYS[3], ARGV[3], ARGV[5])\n       else \n           redis.call('zrem', KEYS[3], ARGV[5]) \n       end\n       local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size'))\n       if maxSize ~= nil and maxSize ~= 0 then\n           local currentTime = tonumber(ARGV[1])\n           local lastAccessTimeSetName = KEYS[5]\n           local mode = redis.call('hget', KEYS[7], 'mode')\n           if mode == false or mode == 'LRU' then \n               redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5])\n           end\n           local cacheSize = tonumber(redis.call('hlen', KEYS[1]))\n           if cacheSize >= maxSize then\n               local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize)\n               for index, lruItem in ipairs(lruItems) do\n                   if lruItem and lruItem ~= ARGV[5] then\n                       local lruItemValue = redis.call('hget', KEYS[1], lruItem)\n                       redis.call('hdel', KEYS[1], lruItem)\n                       redis.call('zrem', KEYS[2], lruItem)\n                       redis.call('zrem', KEYS[3], lruItem)\n                       redis.call('zrem', lastAccessTimeSetName, lruItem)\n                       if lruItemValue ~= false then\n                           local removedChannelName = KEYS[6]\n                           local ttl, obj = struct.unpack('dLc0', lruItemValue)\n                           local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj)\n                           redis.call('publish', removedChannelName, msg)\n                       end\n                   end\n               end\n           end\n           if mode == 'LFU' then \n               redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]) \n           end\n       end\n       local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6])\n       redis.call('hset', KEYS[1], ARGV[5], val)\n       local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6])\n       redis.call('publish', KEYS[4], msg)\n       return nil\n   ```\n\n4. **处理不可插入的情况**：\n    - 更新过期时间，并返回现有值。\n   ```lua\n   else \n       local t, val = struct.unpack('dLc0', value)\n       redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5])\n       return val\n   end\n   ```\n\n### 参数和键值解释\n\n- `KEYS[1]`: 哈希表存储缓存项。\n- `KEYS[2]`: 有序集合存储过期时间。\n- `KEYS[3]`: 有序集合存储空闲时间。\n- `KEYS[4]`: 频道名称，用于发布缓存项变更消息。\n- `KEYS[5]`: 有序集合存储最近访问时间（LRU模式）。\n- `KEYS[6]`: 频道名称，用于发布被淘汰的缓存项。\n- `KEYS[7]`: 存储缓存配置（如最大尺寸、模式等）。\n\n- `ARGV[1]`: 当前时间戳。\n- `ARGV[2]`: 新的过期时间。\n- `ARGV[3]`: 新的空闲时间。\n- `ARGV[4]`: 新缓存项的TTL。\n- `ARGV[5]`: 缓存项的键名。\n- `ARGV[6]`: 缓存项的值。","source":"_posts/解读redis分布式锁核心逻辑.md","raw":"---\ntitle: 解读redis分布式锁核心逻辑\ndate: 2024-07-30 10:07:27\ntags:\n---\n   ```lua\n  local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); if value == false then insertable = true; else local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[5]); if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then insertable = true; end; end; if insertable == true then if tonumber(ARGV[2]) > 0 then redis.call('zadd', KEYS[2], ARGV[2], ARGV[5]); else redis.call('zrem', KEYS[2], ARGV[5]); end; if tonumber(ARGV[3]) > 0 then redis.call('zadd', KEYS[3], ARGV[3], ARGV[5]); else redis.call('zrem', KEYS[3], ARGV[5]); end; local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size')); if maxSize ~= nil and maxSize ~= 0 then     local currentTime = tonumber(ARGV[1]);     local lastAccessTimeSetName = KEYS[5]; local mode = redis.call('hget', KEYS[7], 'mode'); if mode == false or mode == 'LRU' then redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5]); end;     local cacheSize = tonumber(redis.call('hlen', KEYS[1]));     if cacheSize >= maxSize then         local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize);         for index, lruItem in ipairs(lruItems) do             if lruItem and lruItem ~= ARGV[5] then                 local lruItemValue = redis.call('hget', KEYS[1], lruItem);                 redis.call('hdel', KEYS[1], lruItem);                 redis.call('zrem', KEYS[2], lruItem);                 redis.call('zrem', KEYS[3], lruItem);                 redis.call('zrem', lastAccessTimeSetName, lruItem);                 if lruItemValue ~= false then                 local removedChannelName = KEYS[6]; local ttl, obj = struct.unpack('dLc0', lruItemValue);                    local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj);                redis.call('publish', removedChannelName, msg); end;             end;         end;     end; if mode == 'LFU' then redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]); end; end; local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6]); redis.call('hset', KEYS[1], ARGV[5], val); local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6]); redis.call('publish', KEYS[4], msg); return nil; else local t, val = struct.unpack('dLc0', value); redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5]); return val; end; \n   ```\n\n这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：\n- 判断是否需要插入或更新缓存。\n- 处理缓存的过期逻辑。\n- 实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。\n- 在缓存项插入或更新时发布相关消息。\n\n具体的解读如下：\n\n1. **初始化和获取当前值**：\n   ```lua\n   local insertable = false\n   local value = redis.call('hget', KEYS[1], ARGV[5])\n   ```\n\n2. **判断当前缓存项是否存在**：\n    - 如果不存在，则设置`insertable`为`true`，表示可以插入新的缓存项。\n    - 如果存在，继续判断其过期时间。\n   ```lua\n   if value == false then \n       insertable = true \n   else\n       local t, val = struct.unpack('dLc0', value)\n       local expireDate = 92233720368547758\n       local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5])\n       if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end\n       if t ~= 0 then\n           local expireIdle = redis.call('zscore', KEYS[3], ARGV[5])\n           if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end\n       end\n       if expireDate <= tonumber(ARGV[1]) then insertable = true end\n   end\n   ```\n\n3. **处理可插入的情况**：\n    - 更新或删除过期时间。\n    - 检查缓存大小，并根据LRU或LFU策略进行淘汰。\n   ```lua\n   if insertable == true then \n       if tonumber(ARGV[2]) > 0 then \n           redis.call('zadd', KEYS[2], ARGV[2], ARGV[5])\n       else \n           redis.call('zrem', KEYS[2], ARGV[5]) \n       end\n       if tonumber(ARGV[3]) > 0 then \n           redis.call('zadd', KEYS[3], ARGV[3], ARGV[5])\n       else \n           redis.call('zrem', KEYS[3], ARGV[5]) \n       end\n       local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size'))\n       if maxSize ~= nil and maxSize ~= 0 then\n           local currentTime = tonumber(ARGV[1])\n           local lastAccessTimeSetName = KEYS[5]\n           local mode = redis.call('hget', KEYS[7], 'mode')\n           if mode == false or mode == 'LRU' then \n               redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5])\n           end\n           local cacheSize = tonumber(redis.call('hlen', KEYS[1]))\n           if cacheSize >= maxSize then\n               local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize)\n               for index, lruItem in ipairs(lruItems) do\n                   if lruItem and lruItem ~= ARGV[5] then\n                       local lruItemValue = redis.call('hget', KEYS[1], lruItem)\n                       redis.call('hdel', KEYS[1], lruItem)\n                       redis.call('zrem', KEYS[2], lruItem)\n                       redis.call('zrem', KEYS[3], lruItem)\n                       redis.call('zrem', lastAccessTimeSetName, lruItem)\n                       if lruItemValue ~= false then\n                           local removedChannelName = KEYS[6]\n                           local ttl, obj = struct.unpack('dLc0', lruItemValue)\n                           local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj)\n                           redis.call('publish', removedChannelName, msg)\n                       end\n                   end\n               end\n           end\n           if mode == 'LFU' then \n               redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]) \n           end\n       end\n       local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6])\n       redis.call('hset', KEYS[1], ARGV[5], val)\n       local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6])\n       redis.call('publish', KEYS[4], msg)\n       return nil\n   ```\n\n4. **处理不可插入的情况**：\n    - 更新过期时间，并返回现有值。\n   ```lua\n   else \n       local t, val = struct.unpack('dLc0', value)\n       redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5])\n       return val\n   end\n   ```\n\n### 参数和键值解释\n\n- `KEYS[1]`: 哈希表存储缓存项。\n- `KEYS[2]`: 有序集合存储过期时间。\n- `KEYS[3]`: 有序集合存储空闲时间。\n- `KEYS[4]`: 频道名称，用于发布缓存项变更消息。\n- `KEYS[5]`: 有序集合存储最近访问时间（LRU模式）。\n- `KEYS[6]`: 频道名称，用于发布被淘汰的缓存项。\n- `KEYS[7]`: 存储缓存配置（如最大尺寸、模式等）。\n\n- `ARGV[1]`: 当前时间戳。\n- `ARGV[2]`: 新的过期时间。\n- `ARGV[3]`: 新的空闲时间。\n- `ARGV[4]`: 新缓存项的TTL。\n- `ARGV[5]`: 缓存项的键名。\n- `ARGV[6]`: 缓存项的值。","slug":"解读redis分布式锁核心逻辑","published":1,"updated":"2024-07-30T02:08:01.727Z","comments":1,"layout":"post","photos":[],"_id":"clz7s3ms8000084jd9wowci8r","content":"   <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span>; <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>)); <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span>     <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]);     <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]; <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>); <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]));     <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span>         <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize);         <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span>             <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem);                 <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]; <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue);                    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj);                redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg); <span class=\"hljs-keyword\">end</span>;             <span class=\"hljs-keyword\">end</span>;         <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val); <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">return</span> val; <span class=\"hljs-keyword\">end</span>; <br></code></pre></td></tr></table></figure>\n\n<p>这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：</p>\n<ul>\n<li>判断是否需要插入或更新缓存。</li>\n<li>处理缓存的过期逻辑。</li>\n<li>实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。</li>\n<li>在缓存项插入或更新时发布相关消息。</li>\n</ul>\n<p>具体的解读如下：</p>\n<ol>\n<li><p><strong>初始化和获取当前值</strong>：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span><br><span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>判断当前缓存项是否存在</strong>：</p>\n<ul>\n<li>如果不存在，则设置<code>insertable</code>为<code>true</code>，表示可以插入新的缓存项。</li>\n<li>如果存在，继续判断其过期时间。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> <br>    insertable = <span class=\"hljs-literal\">true</span> <br><span class=\"hljs-keyword\">else</span><br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span><br>    <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">end</span><br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理可插入的情况</strong>：</p>\n<ul>\n<li>更新或删除过期时间。</li>\n<li>检查缓存大小，并根据LRU或LFU策略进行淘汰。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>))<br>    <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>])<br>        <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]<br>        <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>)<br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]))<br>        <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span><br>            <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize)<br>            <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span><br>                <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span><br>                    <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem)<br>                    <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span><br>                        <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]<br>                        <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue)<br>                        <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj)<br>                        redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg)<br>                    <span class=\"hljs-keyword\">end</span><br>                <span class=\"hljs-keyword\">end</span><br>            <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]) <br>        <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val)<br>    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理不可插入的情况</strong>：</p>\n<ul>\n<li>更新过期时间，并返回现有值。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">else</span> <br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">return</span> val<br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参数和键值解释\"><a href=\"#参数和键值解释\" class=\"headerlink\" title=\"参数和键值解释\"></a>参数和键值解释</h3><ul>\n<li><p><code>KEYS[1]</code>: 哈希表存储缓存项。</p>\n</li>\n<li><p><code>KEYS[2]</code>: 有序集合存储过期时间。</p>\n</li>\n<li><p><code>KEYS[3]</code>: 有序集合存储空闲时间。</p>\n</li>\n<li><p><code>KEYS[4]</code>: 频道名称，用于发布缓存项变更消息。</p>\n</li>\n<li><p><code>KEYS[5]</code>: 有序集合存储最近访问时间（LRU模式）。</p>\n</li>\n<li><p><code>KEYS[6]</code>: 频道名称，用于发布被淘汰的缓存项。</p>\n</li>\n<li><p><code>KEYS[7]</code>: 存储缓存配置（如最大尺寸、模式等）。</p>\n</li>\n<li><p><code>ARGV[1]</code>: 当前时间戳。</p>\n</li>\n<li><p><code>ARGV[2]</code>: 新的过期时间。</p>\n</li>\n<li><p><code>ARGV[3]</code>: 新的空闲时间。</p>\n</li>\n<li><p><code>ARGV[4]</code>: 新缓存项的TTL。</p>\n</li>\n<li><p><code>ARGV[5]</code>: 缓存项的键名。</p>\n</li>\n<li><p><code>ARGV[6]</code>: 缓存项的值。</p>\n</li>\n</ul>\n","excerpt":"","more":"   <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span>; <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>)); <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span>     <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]);     <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]; <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>); <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]));     <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span>         <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize);         <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span>             <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem);                 <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]; <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue);                    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj);                redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg); <span class=\"hljs-keyword\">end</span>;             <span class=\"hljs-keyword\">end</span>;         <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val); <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">return</span> val; <span class=\"hljs-keyword\">end</span>; <br></code></pre></td></tr></table></figure>\n\n<p>这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：</p>\n<ul>\n<li>判断是否需要插入或更新缓存。</li>\n<li>处理缓存的过期逻辑。</li>\n<li>实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。</li>\n<li>在缓存项插入或更新时发布相关消息。</li>\n</ul>\n<p>具体的解读如下：</p>\n<ol>\n<li><p><strong>初始化和获取当前值</strong>：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span><br><span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>判断当前缓存项是否存在</strong>：</p>\n<ul>\n<li>如果不存在，则设置<code>insertable</code>为<code>true</code>，表示可以插入新的缓存项。</li>\n<li>如果存在，继续判断其过期时间。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> <br>    insertable = <span class=\"hljs-literal\">true</span> <br><span class=\"hljs-keyword\">else</span><br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span><br>    <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">end</span><br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理可插入的情况</strong>：</p>\n<ul>\n<li>更新或删除过期时间。</li>\n<li>检查缓存大小，并根据LRU或LFU策略进行淘汰。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>))<br>    <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>])<br>        <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]<br>        <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>)<br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]))<br>        <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span><br>            <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize)<br>            <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span><br>                <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span><br>                    <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem)<br>                    <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span><br>                        <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]<br>                        <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue)<br>                        <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj)<br>                        redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg)<br>                    <span class=\"hljs-keyword\">end</span><br>                <span class=\"hljs-keyword\">end</span><br>            <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]) <br>        <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val)<br>    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理不可插入的情况</strong>：</p>\n<ul>\n<li>更新过期时间，并返回现有值。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">else</span> <br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">return</span> val<br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参数和键值解释\"><a href=\"#参数和键值解释\" class=\"headerlink\" title=\"参数和键值解释\"></a>参数和键值解释</h3><ul>\n<li><p><code>KEYS[1]</code>: 哈希表存储缓存项。</p>\n</li>\n<li><p><code>KEYS[2]</code>: 有序集合存储过期时间。</p>\n</li>\n<li><p><code>KEYS[3]</code>: 有序集合存储空闲时间。</p>\n</li>\n<li><p><code>KEYS[4]</code>: 频道名称，用于发布缓存项变更消息。</p>\n</li>\n<li><p><code>KEYS[5]</code>: 有序集合存储最近访问时间（LRU模式）。</p>\n</li>\n<li><p><code>KEYS[6]</code>: 频道名称，用于发布被淘汰的缓存项。</p>\n</li>\n<li><p><code>KEYS[7]</code>: 存储缓存配置（如最大尺寸、模式等）。</p>\n</li>\n<li><p><code>ARGV[1]</code>: 当前时间戳。</p>\n</li>\n<li><p><code>ARGV[2]</code>: 新的过期时间。</p>\n</li>\n<li><p><code>ARGV[3]</code>: 新的空闲时间。</p>\n</li>\n<li><p><code>ARGV[4]</code>: 新缓存项的TTL。</p>\n</li>\n<li><p><code>ARGV[5]</code>: 缓存项的键名。</p>\n</li>\n<li><p><code>ARGV[6]</code>: 缓存项的值。</p>\n</li>\n</ul>\n"},{"title":"对linux磁盘进行无损扩容","date":"2024-08-05T12:37:35.000Z","_content":"\n执行 lsblk 命令得到的数据如下\n   ```bash\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS\nsda      8:0    0  150G  0 disk \n├─sda1   8:1    0   49G  0 part /\n├─sda2   8:2    0    1K  0 part \n└─sda5   8:5    0  975M  0 part [SWAP]\nsr0     11:0    1  4.6G  0 rom  \n   ```\n此时，想将sda1从49G扩容到150G。进行无损扩展 `/dev/sda1` 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 `fdisk` 或 `parted` 工具来调整分区大小，然后扩展文件系统。\n\n### 无损扩展分区的步骤\n\n#### 1. **备份数据**\n\n在进行任何磁盘操作之前，务必备份重要数据以防万一。\n\n#### 2. **使用 `parted` 调整分区大小**\n\n假设现有的 `/dev/sda1` 是 `ext4` 文件系统。\n\n1. **查看当前磁盘布局**\n\n   ```bash\n   lsblk\n   sudo fdisk -l /dev/sda\n   ```\n\n2. **调整分区大小**\n\n   使用 `parted` 调整分区大小。\n\n   ```bash\n   sudo parted /dev/sda\n   ```\n\n   在 `parted` 交互界面中执行以下步骤：\n\n   ```bash\n   (parted) print\n   ```\n\n   确认分区表，并记下 `/dev/sda1` 的起始位置（例如 `2048s`）。\n\n   ```bash\n   (parted) resizepart 1 150GB\n   ```\n\n   这会扩展分区1到150GB。\n\n   ```bash\n   (parted) quit\n   ```\n\n#### 3. **更新分区表**\n\n有时，系统需要重新加载分区表。\n\n```bash\nsudo partprobe /dev/sda\n```\n\n#### 4. **扩展文件系统**\n\n根据你的文件系统类型，执行以下步骤来扩展文件系统。\n\n##### 对于 `ext4` 文件系统：\n\n```bash\nsudo resize2fs /dev/sda1\n```\n\n##### 对于 `xfs` 文件系统：\n\n```bash\nsudo xfs_growfs /dev/sda1\n```\n\n#### 5. **验证扩展是否成功**\n\n```bash\ndf -h\n```\n\n### 示例步骤\n\n完整的命令和步骤如下：\n\n```bash\n# 查看当前磁盘布局\nlsblk\nsudo fdisk -l /dev/sda\n\n# 调整分区大小\nsudo parted /dev/sda\n\n# 在 parted 交互界面中\n(parted) print\n(parted) resizepart 1 150GB\n(parted) quit\n\n# 更新分区表\nsudo partprobe /dev/sda\n\n# 扩展文件系统（假设是 ext4 文件系统）\nsudo resize2fs /dev/sda1\n\n# 验证扩展是否成功\ndf -h\n```\n\n### 注意事项\n\n- 确保你的 `/dev/sda1` 分区后面有足够的未分配空间来扩展到 150GB。\n- 在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。\n- 如果你无法进入系统，可以通过 live CD/USB 启动系统并执行这些操作。\n\n这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。","source":"_posts/对linux磁盘进行无损扩容.md","raw":"---\ntitle: 对linux磁盘进行无损扩容\ndate: 2024-08-05 20:37:35\ntags:\n---\n\n执行 lsblk 命令得到的数据如下\n   ```bash\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS\nsda      8:0    0  150G  0 disk \n├─sda1   8:1    0   49G  0 part /\n├─sda2   8:2    0    1K  0 part \n└─sda5   8:5    0  975M  0 part [SWAP]\nsr0     11:0    1  4.6G  0 rom  \n   ```\n此时，想将sda1从49G扩容到150G。进行无损扩展 `/dev/sda1` 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 `fdisk` 或 `parted` 工具来调整分区大小，然后扩展文件系统。\n\n### 无损扩展分区的步骤\n\n#### 1. **备份数据**\n\n在进行任何磁盘操作之前，务必备份重要数据以防万一。\n\n#### 2. **使用 `parted` 调整分区大小**\n\n假设现有的 `/dev/sda1` 是 `ext4` 文件系统。\n\n1. **查看当前磁盘布局**\n\n   ```bash\n   lsblk\n   sudo fdisk -l /dev/sda\n   ```\n\n2. **调整分区大小**\n\n   使用 `parted` 调整分区大小。\n\n   ```bash\n   sudo parted /dev/sda\n   ```\n\n   在 `parted` 交互界面中执行以下步骤：\n\n   ```bash\n   (parted) print\n   ```\n\n   确认分区表，并记下 `/dev/sda1` 的起始位置（例如 `2048s`）。\n\n   ```bash\n   (parted) resizepart 1 150GB\n   ```\n\n   这会扩展分区1到150GB。\n\n   ```bash\n   (parted) quit\n   ```\n\n#### 3. **更新分区表**\n\n有时，系统需要重新加载分区表。\n\n```bash\nsudo partprobe /dev/sda\n```\n\n#### 4. **扩展文件系统**\n\n根据你的文件系统类型，执行以下步骤来扩展文件系统。\n\n##### 对于 `ext4` 文件系统：\n\n```bash\nsudo resize2fs /dev/sda1\n```\n\n##### 对于 `xfs` 文件系统：\n\n```bash\nsudo xfs_growfs /dev/sda1\n```\n\n#### 5. **验证扩展是否成功**\n\n```bash\ndf -h\n```\n\n### 示例步骤\n\n完整的命令和步骤如下：\n\n```bash\n# 查看当前磁盘布局\nlsblk\nsudo fdisk -l /dev/sda\n\n# 调整分区大小\nsudo parted /dev/sda\n\n# 在 parted 交互界面中\n(parted) print\n(parted) resizepart 1 150GB\n(parted) quit\n\n# 更新分区表\nsudo partprobe /dev/sda\n\n# 扩展文件系统（假设是 ext4 文件系统）\nsudo resize2fs /dev/sda1\n\n# 验证扩展是否成功\ndf -h\n```\n\n### 注意事项\n\n- 确保你的 `/dev/sda1` 分区后面有足够的未分配空间来扩展到 150GB。\n- 在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。\n- 如果你无法进入系统，可以通过 live CD/USB 启动系统并执行这些操作。\n\n这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。","slug":"对linux磁盘进行无损扩容","published":1,"updated":"2024-08-05T12:38:47.777Z","comments":1,"layout":"post","photos":[],"_id":"clzgz9w450000bgjd1zto5som","content":"<p>执行 lsblk 命令得到的数据如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0  150G  0 disk <br>├─sda1   8:1    0   49G  0 part /<br>├─sda2   8:2    0    1K  0 part <br>└─sda5   8:5    0  975M  0 part [SWAP]<br>sr0     11:0    1  4.6G  0 rom  <br></code></pre></td></tr></table></figure><br>此时，想将sda1从49G扩容到150G。进行无损扩展 <code>/dev/sda1</code> 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 <code>fdisk</code> 或 <code>parted</code> 工具来调整分区大小，然后扩展文件系统。</p>\n<h3 id=\"无损扩展分区的步骤\"><a href=\"#无损扩展分区的步骤\" class=\"headerlink\" title=\"无损扩展分区的步骤\"></a>无损扩展分区的步骤</h3><h4 id=\"1-备份数据\"><a href=\"#1-备份数据\" class=\"headerlink\" title=\"1. 备份数据\"></a>1. <strong>备份数据</strong></h4><p>在进行任何磁盘操作之前，务必备份重要数据以防万一。</p>\n<h4 id=\"2-使用-parted-调整分区大小\"><a href=\"#2-使用-parted-调整分区大小\" class=\"headerlink\" title=\"2. 使用 parted 调整分区大小\"></a>2. <strong>使用 <code>parted</code> 调整分区大小</strong></h4><p>假设现有的 <code>/dev/sda1</code> 是 <code>ext4</code> 文件系统。</p>\n<ol>\n<li><p><strong>查看当前磁盘布局</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk<br>sudo fdisk -l /dev/sda<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>调整分区大小</strong></p>\n<p>使用 <code>parted</code> 调整分区大小。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo parted /dev/sda<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>parted</code> 交互界面中执行以下步骤：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) <span class=\"hljs-built_in\">print</span><br></code></pre></td></tr></table></figure>\n\n<p>确认分区表，并记下 <code>/dev/sda1</code> 的起始位置（例如 <code>2048s</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) resizepart 1 150GB<br></code></pre></td></tr></table></figure>\n\n<p>这会扩展分区1到150GB。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) quit<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"3-更新分区表\"><a href=\"#3-更新分区表\" class=\"headerlink\" title=\"3. 更新分区表\"></a>3. <strong>更新分区表</strong></h4><p>有时，系统需要重新加载分区表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo partprobe /dev/sda<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-扩展文件系统\"><a href=\"#4-扩展文件系统\" class=\"headerlink\" title=\"4. 扩展文件系统\"></a>4. <strong>扩展文件系统</strong></h4><p>根据你的文件系统类型，执行以下步骤来扩展文件系统。</p>\n<h5 id=\"对于-ext4-文件系统：\"><a href=\"#对于-ext4-文件系统：\" class=\"headerlink\" title=\"对于 ext4 文件系统：\"></a>对于 <code>ext4</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"对于-xfs-文件系统：\"><a href=\"#对于-xfs-文件系统：\" class=\"headerlink\" title=\"对于 xfs 文件系统：\"></a>对于 <code>xfs</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo xfs_growfs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-验证扩展是否成功\"><a href=\"#5-验证扩展是否成功\" class=\"headerlink\" title=\"5. 验证扩展是否成功\"></a>5. <strong>验证扩展是否成功</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"示例步骤\"><a href=\"#示例步骤\" class=\"headerlink\" title=\"示例步骤\"></a>示例步骤</h3><p>完整的命令和步骤如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前磁盘布局</span><br>lsblk<br>sudo fdisk -l /dev/sda<br><br><span class=\"hljs-comment\"># 调整分区大小</span><br>sudo parted /dev/sda<br><br><span class=\"hljs-comment\"># 在 parted 交互界面中</span><br>(parted) <span class=\"hljs-built_in\">print</span><br>(parted) resizepart 1 150GB<br>(parted) quit<br><br><span class=\"hljs-comment\"># 更新分区表</span><br>sudo partprobe /dev/sda<br><br><span class=\"hljs-comment\"># 扩展文件系统（假设是 ext4 文件系统）</span><br>sudo resize2fs /dev/sda1<br><br><span class=\"hljs-comment\"># 验证扩展是否成功</span><br><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>确保你的 <code>/dev/sda1</code> 分区后面有足够的未分配空间来扩展到 150GB。</li>\n<li>在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。</li>\n<li>如果你无法进入系统，可以通过 live CD&#x2F;USB 启动系统并执行这些操作。</li>\n</ul>\n<p>这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。</p>\n","excerpt":"","more":"<p>执行 lsblk 命令得到的数据如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0  150G  0 disk <br>├─sda1   8:1    0   49G  0 part /<br>├─sda2   8:2    0    1K  0 part <br>└─sda5   8:5    0  975M  0 part [SWAP]<br>sr0     11:0    1  4.6G  0 rom  <br></code></pre></td></tr></table></figure><br>此时，想将sda1从49G扩容到150G。进行无损扩展 <code>/dev/sda1</code> 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 <code>fdisk</code> 或 <code>parted</code> 工具来调整分区大小，然后扩展文件系统。</p>\n<h3 id=\"无损扩展分区的步骤\"><a href=\"#无损扩展分区的步骤\" class=\"headerlink\" title=\"无损扩展分区的步骤\"></a>无损扩展分区的步骤</h3><h4 id=\"1-备份数据\"><a href=\"#1-备份数据\" class=\"headerlink\" title=\"1. 备份数据\"></a>1. <strong>备份数据</strong></h4><p>在进行任何磁盘操作之前，务必备份重要数据以防万一。</p>\n<h4 id=\"2-使用-parted-调整分区大小\"><a href=\"#2-使用-parted-调整分区大小\" class=\"headerlink\" title=\"2. 使用 parted 调整分区大小\"></a>2. <strong>使用 <code>parted</code> 调整分区大小</strong></h4><p>假设现有的 <code>/dev/sda1</code> 是 <code>ext4</code> 文件系统。</p>\n<ol>\n<li><p><strong>查看当前磁盘布局</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk<br>sudo fdisk -l /dev/sda<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>调整分区大小</strong></p>\n<p>使用 <code>parted</code> 调整分区大小。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo parted /dev/sda<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>parted</code> 交互界面中执行以下步骤：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) <span class=\"hljs-built_in\">print</span><br></code></pre></td></tr></table></figure>\n\n<p>确认分区表，并记下 <code>/dev/sda1</code> 的起始位置（例如 <code>2048s</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) resizepart 1 150GB<br></code></pre></td></tr></table></figure>\n\n<p>这会扩展分区1到150GB。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) quit<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"3-更新分区表\"><a href=\"#3-更新分区表\" class=\"headerlink\" title=\"3. 更新分区表\"></a>3. <strong>更新分区表</strong></h4><p>有时，系统需要重新加载分区表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo partprobe /dev/sda<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-扩展文件系统\"><a href=\"#4-扩展文件系统\" class=\"headerlink\" title=\"4. 扩展文件系统\"></a>4. <strong>扩展文件系统</strong></h4><p>根据你的文件系统类型，执行以下步骤来扩展文件系统。</p>\n<h5 id=\"对于-ext4-文件系统：\"><a href=\"#对于-ext4-文件系统：\" class=\"headerlink\" title=\"对于 ext4 文件系统：\"></a>对于 <code>ext4</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"对于-xfs-文件系统：\"><a href=\"#对于-xfs-文件系统：\" class=\"headerlink\" title=\"对于 xfs 文件系统：\"></a>对于 <code>xfs</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo xfs_growfs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-验证扩展是否成功\"><a href=\"#5-验证扩展是否成功\" class=\"headerlink\" title=\"5. 验证扩展是否成功\"></a>5. <strong>验证扩展是否成功</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"示例步骤\"><a href=\"#示例步骤\" class=\"headerlink\" title=\"示例步骤\"></a>示例步骤</h3><p>完整的命令和步骤如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前磁盘布局</span><br>lsblk<br>sudo fdisk -l /dev/sda<br><br><span class=\"hljs-comment\"># 调整分区大小</span><br>sudo parted /dev/sda<br><br><span class=\"hljs-comment\"># 在 parted 交互界面中</span><br>(parted) <span class=\"hljs-built_in\">print</span><br>(parted) resizepart 1 150GB<br>(parted) quit<br><br><span class=\"hljs-comment\"># 更新分区表</span><br>sudo partprobe /dev/sda<br><br><span class=\"hljs-comment\"># 扩展文件系统（假设是 ext4 文件系统）</span><br>sudo resize2fs /dev/sda1<br><br><span class=\"hljs-comment\"># 验证扩展是否成功</span><br><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>确保你的 <code>/dev/sda1</code> 分区后面有足够的未分配空间来扩展到 150GB。</li>\n<li>在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。</li>\n<li>如果你无法进入系统，可以通过 live CD&#x2F;USB 启动系统并执行这些操作。</li>\n</ul>\n<p>这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。</p>\n"},{"title":"使用图形化对linux磁盘进行扩容","date":"2024-08-06T11:55:45.000Z","_content":"![微信截图_20240806195901.png](使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png)\n磁盘空间不足的提示。\n我就在终端输入df -h查看了一下磁盘的使用情况。\n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1        48G   46G   47M  100% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\ntmpfs           2.7G   52K  2.7G    1% /run/user/0\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\n\n\n发现/dev/sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。\n网上各种找方法….\n网上一堆复制粘贴的坑逼教程可把我给坑惨了。\n最后找到了两篇文章综合起来才成功。\n写出来的目的仅仅为了方便记忆，那么就来说说吧。\n第一步:\n使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。\n![微信截图_20240806200518.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png)\n第二步:\n下载Gparted镜像文件。\nhttps://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\n\n然后在虚拟机的设置–CD/DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：\n![微信截图_20240806200410.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png)\n\n第三步:\n启动BIOS方法:\n用记事本打开ubantu.vmx文件，在第一行添加这段代码\nbios.forceSetupOnce = “TRUE”\n\n![img.png](使用图形化对linux磁盘进行扩容/img.png)\n\n保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。\n\n\n\n进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。\n\n开机后即可进入这个界面。\n![微信截图_20240806200751.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png)\n\n![微信截图_20240806200831.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png)\n输入26选择简体中文，敲回车\n![微信截图_20240806200853.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png)\n输入0，敲回车\n![微信截图_20240806200913.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png)\n进入Gparted的界面会自动弹出Gparted的分区界面。\n![微信截图_20240806200924.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png)\n依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，\n将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。 \n再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出 \n然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功\n\n└─# df -h     \n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1       144G   34G  104G   25% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\ntmpfs           2.7G   56K  2.7G    1% /run/user/0\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782/merged","source":"_posts/使用图形化对linux磁盘进行扩容.md","raw":"---\ntitle: 使用图形化对linux磁盘进行扩容\ndate: 2024-08-06 19:55:45\ntags:\n---\n![微信截图_20240806195901.png](使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png)\n磁盘空间不足的提示。\n我就在终端输入df -h查看了一下磁盘的使用情况。\n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1        48G   46G   47M  100% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\ntmpfs           2.7G   52K  2.7G    1% /run/user/0\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\n\n\n发现/dev/sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。\n网上各种找方法….\n网上一堆复制粘贴的坑逼教程可把我给坑惨了。\n最后找到了两篇文章综合起来才成功。\n写出来的目的仅仅为了方便记忆，那么就来说说吧。\n第一步:\n使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。\n![微信截图_20240806200518.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png)\n第二步:\n下载Gparted镜像文件。\nhttps://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\n\n然后在虚拟机的设置–CD/DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：\n![微信截图_20240806200410.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png)\n\n第三步:\n启动BIOS方法:\n用记事本打开ubantu.vmx文件，在第一行添加这段代码\nbios.forceSetupOnce = “TRUE”\n\n![img.png](使用图形化对linux磁盘进行扩容/img.png)\n\n保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。\n\n\n\n进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。\n\n开机后即可进入这个界面。\n![微信截图_20240806200751.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png)\n\n![微信截图_20240806200831.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png)\n输入26选择简体中文，敲回车\n![微信截图_20240806200853.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png)\n输入0，敲回车\n![微信截图_20240806200913.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png)\n进入Gparted的界面会自动弹出Gparted的分区界面。\n![微信截图_20240806200924.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png)\n依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，\n将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。 \n再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出 \n然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功\n\n└─# df -h     \n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1       144G   34G  104G   25% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\ntmpfs           2.7G   56K  2.7G    1% /run/user/0\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782/merged","slug":"使用图形化对linux磁盘进行扩容","published":1,"updated":"2024-08-06T12:13:06.390Z","_id":"clzidp6qv0000cwjddut971gs","comments":1,"layout":"post","photos":[],"content":"<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806195901.png\" class alt=\"微信截图_20240806195901.png\">\n<p>磁盘空间不足的提示。<br>我就在终端输入df -h查看了一下磁盘的使用情况。<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1        48G   46G   47M  100% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>tmpfs           2.7G   52K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged</p>\n<p>发现&#x2F;dev&#x2F;sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。<br>网上各种找方法….<br>网上一堆复制粘贴的坑逼教程可把我给坑惨了。<br>最后找到了两篇文章综合起来才成功。<br>写出来的目的仅仅为了方便记忆，那么就来说说吧。<br>第一步:<br>使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200518.png\" class alt=\"微信截图_20240806200518.png\">\n<p>第二步:<br>下载Gparted镜像文件。<br><a href=\"https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\">https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1</a></p>\n<p>然后在虚拟机的设置–CD&#x2F;DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200410.png\" class alt=\"微信截图_20240806200410.png\">\n\n<p>第三步:<br>启动BIOS方法:<br>用记事本打开ubantu.vmx文件，在第一行添加这段代码<br>bios.forceSetupOnce &#x3D; “TRUE”</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/img.png\" class alt=\"img.png\">\n\n<p>保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。</p>\n<p>进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。</p>\n<p>开机后即可进入这个界面。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200751.png\" class alt=\"微信截图_20240806200751.png\">\n\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200831.png\" class alt=\"微信截图_20240806200831.png\">\n<p>输入26选择简体中文，敲回车</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200853.png\" class alt=\"微信截图_20240806200853.png\">\n<p>输入0，敲回车</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200913.png\" class alt=\"微信截图_20240806200913.png\">\n<p>进入Gparted的界面会自动弹出Gparted的分区界面。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200924.png\" class alt=\"微信截图_20240806200924.png\">\n<p>依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，<br>将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。<br>再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出<br>然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功</p>\n<p>└─# df -h<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1       144G   34G  104G   25% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged<br>tmpfs           2.7G   56K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782&#x2F;merged</p>\n","excerpt":"","more":"<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806195901.png\" class alt=\"微信截图_20240806195901.png\">\n<p>磁盘空间不足的提示。<br>我就在终端输入df -h查看了一下磁盘的使用情况。<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1        48G   46G   47M  100% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>tmpfs           2.7G   52K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged</p>\n<p>发现&#x2F;dev&#x2F;sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。<br>网上各种找方法….<br>网上一堆复制粘贴的坑逼教程可把我给坑惨了。<br>最后找到了两篇文章综合起来才成功。<br>写出来的目的仅仅为了方便记忆，那么就来说说吧。<br>第一步:<br>使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200518.png\" class alt=\"微信截图_20240806200518.png\">\n<p>第二步:<br>下载Gparted镜像文件。<br><a href=\"https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\">https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1</a></p>\n<p>然后在虚拟机的设置–CD&#x2F;DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200410.png\" class alt=\"微信截图_20240806200410.png\">\n\n<p>第三步:<br>启动BIOS方法:<br>用记事本打开ubantu.vmx文件，在第一行添加这段代码<br>bios.forceSetupOnce &#x3D; “TRUE”</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/img.png\" class alt=\"img.png\">\n\n<p>保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。</p>\n<p>进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。</p>\n<p>开机后即可进入这个界面。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200751.png\" class alt=\"微信截图_20240806200751.png\">\n\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200831.png\" class alt=\"微信截图_20240806200831.png\">\n<p>输入26选择简体中文，敲回车</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200853.png\" class alt=\"微信截图_20240806200853.png\">\n<p>输入0，敲回车</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200913.png\" class alt=\"微信截图_20240806200913.png\">\n<p>进入Gparted的界面会自动弹出Gparted的分区界面。</p>\n<img src=\"/2024/08/06/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200924.png\" class alt=\"微信截图_20240806200924.png\">\n<p>依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，<br>将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。<br>再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出<br>然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功</p>\n<p>└─# df -h<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1       144G   34G  104G   25% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged<br>tmpfs           2.7G   56K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782&#x2F;merged</p>\n"},{"title":"openvpn-部署脚本","date":"2024-08-07T08:02:35.000Z","_content":"脚本连接：\n[openvpn.sh](openvpn-部署脚本/openvpn.sh)\n\n```shell\n#!/bin/bash\n#\n# https://github.com/hwdsl2/openvpn-install\n#\n# Based on the work of Nyr and contributors at:\n# https://github.com/Nyr/openvpn-install\n#\n# Copyright (c) 2022-2024 Lin Song <linsongui@gmail.com>\n# Copyright (c) 2013-2023 Nyr\n#\n# Released under the MIT License, see the accompanying file LICENSE.txt\n# or https://opensource.org/licenses/MIT\n\nexiterr()  { echo \"Error: $1\" >&2; exit 1; }\nexiterr2() { exiterr \"'apt-get install' failed.\"; }\nexiterr3() { exiterr \"'yum install' failed.\"; }\nexiterr4() { exiterr \"'zypper install' failed.\"; }\n\ncheck_ip() {\n\tIP_REGEX='^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'\n\tprintf '%s' \"$1\" | tr -d '\\n' | grep -Eq \"$IP_REGEX\"\n}\n\ncheck_dns_name() {\n\tFQDN_REGEX='^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$'\n\tprintf '%s' \"$1\" | tr -d '\\n' | grep -Eq \"$FQDN_REGEX\"\n}\n\ncheck_root() {\n\tif [ \"$(id -u)\" != 0 ]; then\n\t\texiterr \"This installer must be run as root. Try 'sudo bash $0'\"\n\tfi\n}\n\ncheck_shell() {\n\t# Detect Debian users running the script with \"sh\" instead of bash\n\tif readlink /proc/$$/exe | grep -q \"dash\"; then\n\t\texiterr 'This installer needs to be run with \"bash\", not \"sh\".'\n\tfi\n}\n\ncheck_kernel() {\n\t# Detect OpenVZ 6\n\tif [[ $(uname -r | cut -d \".\" -f 1) -eq 2 ]]; then\n\t\texiterr \"The system is running an old kernel, which is incompatible with this installer.\"\n\tfi\n}\n\ncheck_os() {\n\tif grep -qs \"ubuntu\" /etc/os-release; then\n\t\tos=\"ubuntu\"\n\t\tos_version=$(grep 'VERSION_ID' /etc/os-release | cut -d '\"' -f 2 | tr -d '.')\n\t\tgroup_name=\"nogroup\"\n\telif [[ -e /etc/debian_version ]]; then\n\t\tos=\"debian\"\n\t\tos_version=$(grep -oE '[0-9]+' /etc/debian_version | head -1)\n\t\tgroup_name=\"nogroup\"\n\telif [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; then\n\t\tos=\"centos\"\n\t\tos_version=$(grep -shoE '[0-9]+' /etc/almalinux-release /etc/rocky-release /etc/centos-release | head -1)\n\t\tgroup_name=\"nobody\"\n\telif grep -qs \"Amazon Linux release 2 \" /etc/system-release; then\n\t\tos=\"centos\"\n\t\tos_version=\"7\"\n\t\tgroup_name=\"nobody\"\n\telif grep -qs \"Amazon Linux release 2023\" /etc/system-release; then\n\t\texiterr \"Amazon Linux 2023 is not supported.\"\n\telif [[ -e /etc/fedora-release ]]; then\n\t\tos=\"fedora\"\n\t\tos_version=$(grep -oE '[0-9]+' /etc/fedora-release | head -1)\n\t\tgroup_name=\"nobody\"\n\telif [[ -e /etc/SUSE-brand && \"$(head -1 /etc/SUSE-brand)\" == \"openSUSE\" ]]; then\n\t\tos=\"openSUSE\"\n\t\tos_version=$(tail -1 /etc/SUSE-brand | grep -oE '[0-9\\\\.]+')\n\t\tgroup_name=\"nogroup\"\n\telse\n\t\texiterr \"This installer seems to be running on an unsupported distribution.\nSupported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Amazon Linux 2.\"\n\tfi\n}\n\ncheck_os_ver() {\n\tif [[ \"$os\" == \"ubuntu\" && \"$os_version\" -lt 2004 ]]; then\n\t\texiterr \"Ubuntu 20.04 or higher is required to use this installer.\nThis version of Ubuntu is too old and unsupported.\"\n\tfi\n\tif [[ \"$os\" == \"debian\" && \"$os_version\" -lt 10 ]]; then\n\t\texiterr \"Debian 10 or higher is required to use this installer.\nThis version of Debian is too old and unsupported.\"\n\tfi\n\tif [[ \"$os\" == \"centos\" && \"$os_version\" -lt 7 ]]; then\n\t\texiterr \"CentOS 7 or higher is required to use this installer.\nThis version of CentOS is too old and unsupported.\"\n\tfi\n}\n\ncheck_tun() {\n\tif [[ ! -e /dev/net/tun ]] || ! ( exec 7<>/dev/net/tun ) 2>/dev/null; then\n\t\texiterr \"The system does not have the TUN device available.\nTUN needs to be enabled before running this installer.\"\n\tfi\n}\n\nset_client_name() {\n\t# Allow a limited set of characters to avoid conflicts\n\tclient=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<< \"$unsanitized_client\")\n}\n\nparse_args() {\n\twhile [ \"$#\" -gt 0 ]; do\n\t\tcase $1 in\n\t\t\t--auto)\n\t\t\t\tauto=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--addclient)\n\t\t\t\tadd_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--exportclient)\n\t\t\t\texport_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--listclients)\n\t\t\t\tlist_clients=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--revokeclient)\n\t\t\t\trevoke_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--uninstall)\n\t\t\t\tremove_ovpn=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t-y|--yes)\n\t\t\t\tassume_yes=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t-h|--help)\n\t\t\t\tshow_usage\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tshow_usage \"Unknown parameter: $1\"\n\t\t\t\t;;\n\t\tesac\n\tdone\n}\n\ncheck_args() {\n\tif [ \"$auto\" = 1 ] && [ -e \"$OVPN_CONF\" ]; then\n\t\techo \"Error: Invalid parameter '--auto'. OpenVPN is already set up on this server.\" >&2\n\t\techo \"       To manage OpenVPN clients, re-run this script without '--auto'.\" >&2\n\t\texit 1\n\tfi\n\tif [ \"$((add_client + export_client + list_clients + revoke_client))\" -gt 1 ]; then\n\t\tshow_usage \"Invalid parameters. Specify only one of '--addclient', '--exportclient', '--listclients' or '--revokeclient'.\"\n\tfi\n\tif [ \"$remove_ovpn\" = 1 ]; then\n\t\tif [ \"$((add_client + export_client + list_clients + revoke_client + auto))\" -gt 0 ]; then\n\t\t\tshow_usage \"Invalid parameters. '--uninstall' cannot be specified with other parameters.\"\n\t\tfi\n\tfi\n\tif [ ! -e \"$OVPN_CONF\" ]; then\n\t\t[ \"$add_client\" = 1 ] && exiterr \"You must first set up OpenVPN before adding a client.\"\n\t\t[ \"$export_client\" = 1 ] && exiterr \"You must first set up OpenVPN before exporting a client.\"\n\t\t[ \"$list_clients\" = 1 ] && exiterr \"You must first set up OpenVPN before listing clients.\"\n\t\t[ \"$revoke_client\" = 1 ] && exiterr \"You must first set up OpenVPN before revoking a client.\"\n\t\t[ \"$remove_ovpn\" = 1 ] && exiterr \"Cannot remove OpenVPN because it has not been set up on this server.\"\n\tfi\n\tif [ \"$add_client\" = 1 ]; then\n\t\tset_client_name\n\t\tif [ -z \"$client\" ]; then\n\t\t\texiterr \"Invalid client name. Use one word only, no special characters except '-' and '_'.\"\n\t\telif [ -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]; then\n\t\t\texiterr \"$client: invalid name. Client already exists.\"\n\t\tfi\n\tfi\n\tif [ \"$export_client\" = 1 ] || [ \"$revoke_client\" = 1 ]; then\n\t\tset_client_name\n\t\tif [ -z \"$client\" ] || [ ! -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]; then\n\t\t\texiterr \"Invalid client name, or client does not exist.\"\n\t\tfi\n\tfi\n}\n\ncheck_nftables() {\n\tif [ \"$os\" = \"centos\" ]; then\n\t\tif grep -qs \"hwdsl2 VPN script\" /etc/sysconfig/nftables.conf \\\n\t\t\t|| systemctl is-active --quiet nftables 2>/dev/null; then\n\t\t\texiterr \"This system has nftables enabled, which is not supported by this installer.\"\n\t\tfi\n\tfi\n}\n\ninstall_wget() {\n\t# Detect some Debian minimal setups where neither wget nor curl are installed\n\tif ! hash wget 2>/dev/null && ! hash curl 2>/dev/null; then\n\t\tif [ \"$auto\" = 0 ]; then\n\t\t\techo \"Wget is required to use this installer.\"\n\t\t\tread -n1 -r -p \"Press any key to install Wget and continue...\"\n\t\tfi\n\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\tapt-get -yqq install wget >/dev/null\n\t\t) || exiterr2\n\tfi\n}\n\ninstall_iproute() {\n\tif ! hash ip 2>/dev/null; then\n\t\tif [ \"$auto\" = 0 ]; then\n\t\t\techo \"iproute is required to use this installer.\"\n\t\t\tread -n1 -r -p \"Press any key to install iproute and continue...\"\n\t\tfi\n\t\tif [ \"$os\" = \"debian\" ] || [ \"$os\" = \"ubuntu\" ]; then\n\t\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\t\tapt-get -yqq install iproute2 >/dev/null\n\t\t\t) || exiterr2\n\t\telif [ \"$os\" = \"openSUSE\" ]; then\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tzypper install iproute2 >/dev/null\n\t\t\t) || exiterr4\n\t\telse\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tyum -y -q install iproute >/dev/null\n\t\t\t) || exiterr3\n\t\tfi\n\tfi\n}\n\nshow_header() {\ncat <<'EOF'\n\nOpenVPN Script\nhttps://github.com/hwdsl2/openvpn-install\nEOF\n}\n\nshow_header2() {\ncat <<'EOF'\n\nWelcome to this OpenVPN server installer!\nGitHub: https://github.com/hwdsl2/openvpn-install\n\nEOF\n}\n\nshow_header3() {\ncat <<'EOF'\n\nCopyright (c) 2022-2024 Lin Song\nCopyright (c) 2013-2023 Nyr\nEOF\n}\n\nshow_usage() {\n\tif [ -n \"$1\" ]; then\n\t\techo \"Error: $1\" >&2\n\tfi\n\tshow_header\n\tshow_header3\ncat 1>&2 <<EOF\n\nUsage: bash $0 [options]\n\nOptions:\n  --auto                        auto install OpenVPN using default options\n  --addclient [client name]     add a new client\n  --exportclient [client name]  export configuration for an existing client\n  --listclients                 list the names of existing clients\n  --revokeclient [client name]  revoke an existing client\n  --uninstall                   remove OpenVPN and delete all configuration\n  -y, --yes                     assume \"yes\" as answer to prompts when revoking a client or removing OpenVPN\n  -h, --help                    show this help message and exit\n\nTo customize install options, run this script without arguments.\nEOF\n\texit 1\n}\n\nshow_welcome() {\n\tif [ \"$auto\" = 0 ]; then\n\t\tshow_header2\n\t\techo 'I need to ask you a few questions before starting setup.'\n\t\techo 'You can use the default options and just press enter if you are OK with them.'\n\telse\n\t\tshow_header\n\t\techo\n\t\techo 'Starting OpenVPN setup using default options.'\n\tfi\n}\n\nenter_server_address() {\n\techo\n\techo \"Do you want OpenVPN clients to connect to this server using a DNS name,\"\n\tprintf \"e.g. vpn.example.com, instead of its IP address? [y/N] \"\n\tread -r response\n\tcase $response in\n\t\t[yY][eE][sS]|[yY])\n\t\t\tuse_dns_name=1\n\t\t\techo\n\t\t\t;;\n\t\t*)\n\t\t\tuse_dns_name=0\n\t\t\t;;\n\tesac\n\tif [ \"$use_dns_name\" = 1 ]; then\n\t\tread -rp \"Enter the DNS name of this VPN server: \" server_addr\n\t\tuntil check_dns_name \"$server_addr\"; do\n\t\t\techo \"Invalid DNS name. You must enter a fully qualified domain name (FQDN).\"\n\t\t\tread -rp \"Enter the DNS name of this VPN server: \" server_addr\n\t\tdone\n\t\tip=\"$server_addr\"\n\t\techo\n\t\techo \"Note: Make sure this DNS name resolves to the IPv4 address\"\n\t\techo \"      of this server. If you add or update the DNS record\"\n\t\techo \"      at a later time, reboot this server to take effect.\"\n\telse\n\t\tdetect_ip\n\t\tcheck_nat_ip\n\tfi\n}\n\nfind_public_ip() {\n\tip_url1=\"http://ipv4.icanhazip.com\"\n\tip_url2=\"http://ip1.dynupdate.no-ip.com\"\n\t# Get public IP and sanitize with grep\n\tget_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' <<< \"$(wget -T 10 -t 1 -4qO- \"$ip_url1\" || curl -m 10 -4Ls \"$ip_url1\")\")\n\tif ! check_ip \"$get_public_ip\"; then\n\t\tget_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' <<< \"$(wget -T 10 -t 1 -4qO- \"$ip_url2\" || curl -m 10 -4Ls \"$ip_url2\")\")\n\tfi\n}\n\ndetect_ip() {\n\t# If system has a single IPv4, it is selected automatically.\n\tif [[ $(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}') -eq 1 ]]; then\n\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}')\n\telse\n\t\t# Use the IP address on the default route\n\t\tip=$(ip -4 route get 1 | sed 's/ uid .*//' | awk '{print $NF;exit}' 2>/dev/null)\n\t\tif ! check_ip \"$ip\"; then\n\t\t\tfind_public_ip\n\t\t\tip_match=0\n\t\t\tif [ -n \"$get_public_ip\" ]; then\n\t\t\t\tip_list=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}')\n\t\t\t\twhile IFS= read -r line; do\n\t\t\t\t\tif [ \"$line\" = \"$get_public_ip\" ]; then\n\t\t\t\t\t\tip_match=1\n\t\t\t\t\t\tip=\"$line\"\n\t\t\t\t\tfi\n\t\t\t\tdone <<< \"$ip_list\"\n\t\t\tfi\n\t\t\tif [ \"$ip_match\" = 0 ]; then\n\t\t\t\tif [ \"$auto\" = 0 ]; then\n\t\t\t\t\techo\n\t\t\t\t\techo \"Which IPv4 address should be used?\"\n\t\t\t\t\tnum_of_ip=$(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}')\n\t\t\t\t\tip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | nl -s ') '\n\t\t\t\t\tread -rp \"IPv4 address [1]: \" ip_num\n\t\t\t\t\tuntil [[ -z \"$ip_num\" || \"$ip_num\" =~ ^[0-9]+$ && \"$ip_num\" -le \"$num_of_ip\" ]]; do\n\t\t\t\t\t\techo \"$ip_num: invalid selection.\"\n\t\t\t\t\t\tread -rp \"IPv4 address [1]: \" ip_num\n\t\t\t\t\tdone\n\t\t\t\t\t[[ -z \"$ip_num\" ]] && ip_num=1\n\t\t\t\telse\n\t\t\t\t\tip_num=1\n\t\t\t\tfi\n\t\t\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | sed -n \"$ip_num\"p)\n\t\t\tfi\n\t\tfi\n\tfi\n\tif ! check_ip \"$ip\"; then\n\t\techo \"Error: Could not detect this server's IP address.\" >&2\n\t\techo \"Abort. No changes were made.\" >&2\n\t\texit 1\n\tfi\n}\n\ncheck_nat_ip() {\n\t# If $ip is a private IP address, the server must be behind NAT\n\tif printf '%s' \"$ip\" | grep -qE '^(10|127|172\\.(1[6-9]|2[0-9]|3[0-1])|192\\.168|169\\.254)\\.'; then\n\t\tfind_public_ip\n\t\tif ! check_ip \"$get_public_ip\"; then\n\t\t\tif [ \"$auto\" = 0 ]; then\n\t\t\t\techo\n\t\t\t\techo \"This server is behind NAT. What is the public IPv4 address?\"\n\t\t\t\tread -rp \"Public IPv4 address: \" public_ip\n\t\t\t\tuntil check_ip \"$public_ip\"; do\n\t\t\t\t\techo \"Invalid input.\"\n\t\t\t\t\tread -rp \"Public IPv4 address: \" public_ip\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\techo \"Error: Could not detect this server's public IP.\" >&2\n\t\t\t\techo \"Abort. No changes were made.\" >&2\n\t\t\t\texit 1\n\t\t\tfi\n\t\telse\n\t\t\tpublic_ip=\"$get_public_ip\"\n\t\tfi\n\tfi\n}\n\nshow_config() {\n\tif [ \"$auto\" != 0 ]; then\n\t\techo\n\t\tprintf '%s' \"Server IP: \"\n\t\t[ -n \"$public_ip\" ] && printf '%s\\n' \"$public_ip\" || printf '%s\\n' \"$ip\"\n\t\techo \"Port: UDP/1194\"\n\t\techo \"Client name: client\"\n\t\techo \"Client DNS: Google Public DNS\"\n\tfi\n}\n\ndetect_ipv6() {\n\tip6=\"\"\n\tif [[ $(ip -6 addr | grep -c 'inet6 [23]') -ne 0 ]]; then\n\t\tip6=$(ip -6 addr | grep 'inet6 [23]' | cut -d '/' -f 1 | grep -oE '([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}' | sed -n 1p)\n\tfi\n}\n\nselect_protocol() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Which protocol should OpenVPN use?\"\n\t\techo \"   1) UDP (recommended)\"\n\t\techo \"   2) TCP\"\n\t\tread -rp \"Protocol [1]: \" protocol\n\t\tuntil [[ -z \"$protocol\" || \"$protocol\" =~ ^[12]$ ]]; do\n\t\t\techo \"$protocol: invalid selection.\"\n\t\t\tread -rp \"Protocol [1]: \" protocol\n\t\tdone\n\t\tcase \"$protocol\" in\n\t\t\t1|\"\")\n\t\t\tprotocol=udp\n\t\t\t;;\n\t\t\t2)\n\t\t\tprotocol=tcp\n\t\t\t;;\n\t\tesac\n\telse\n\t\tprotocol=udp\n\tfi\n}\n\nselect_port() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Which port should OpenVPN listen to?\"\n\t\tread -rp \"Port [1194]: \" port\n\t\tuntil [[ -z \"$port\" || \"$port\" =~ ^[0-9]+$ && \"$port\" -le 65535 ]]; do\n\t\t\techo \"$port: invalid port.\"\n\t\t\tread -rp \"Port [1194]: \" port\n\t\tdone\n\t\t[[ -z \"$port\" ]] && port=1194\n\telse\n\t\tport=1194\n\tfi\n}\n\nenter_custom_dns() {\n\tread -rp \"Enter primary DNS server: \" dns1\n\tuntil check_ip \"$dns1\"; do\n\t\techo \"Invalid DNS server.\"\n\t\tread -rp \"Enter primary DNS server: \" dns1\n\tdone\n\tread -rp \"Enter secondary DNS server (Enter to skip): \" dns2\n\tuntil [ -z \"$dns2\" ] || check_ip \"$dns2\"; do\n\t\techo \"Invalid DNS server.\"\n\t\tread -rp \"Enter secondary DNS server (Enter to skip): \" dns2\n\tdone\n}\n\nselect_dns() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Select a DNS server for the clients:\"\n\t\techo \"   1) Current system resolvers\"\n\t\techo \"   2) Google Public DNS\"\n\t\techo \"   3) Cloudflare DNS\"\n\t\techo \"   4) OpenDNS\"\n\t\techo \"   5) Quad9\"\n\t\techo \"   6) AdGuard DNS\"\n\t\techo \"   7) Custom\"\n\t\tread -rp \"DNS server [2]: \" dns\n\t\tuntil [[ -z \"$dns\" || \"$dns\" =~ ^[1-7]$ ]]; do\n\t\t\techo \"$dns: invalid selection.\"\n\t\t\tread -rp \"DNS server [2]: \" dns\n\t\tdone\n\telse\n\t\tdns=2\n\tfi\n\tif [ \"$dns\" = 7 ]; then\n\t\tenter_custom_dns\n\tfi\n}\n\nenter_first_client_name() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Enter a name for the first client:\"\n\t\tread -rp \"Name [client]: \" unsanitized_client\n\t\tset_client_name\n\t\t[[ -z \"$client\" ]] && client=client\n\telse\n\t\tclient=client\n\tfi\n}\n\nshow_setup_ready() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"OpenVPN installation is ready to begin.\"\n\tfi\n}\n\ncheck_firewall() {\n\t# Install a firewall if firewalld or iptables are not already available\n\tif ! systemctl is-active --quiet firewalld.service && ! hash iptables 2>/dev/null; then\n\t\tif [[ \"$os\" == \"centos\" || \"$os\" == \"fedora\" ]]; then\n\t\t\tfirewall=\"firewalld\"\n\t\telif [[ \"$os\" == \"openSUSE\" ]]; then\n\t\t\tfirewall=\"firewalld\"\n\t\telif [[ \"$os\" == \"debian\" || \"$os\" == \"ubuntu\" ]]; then\n\t\t\tfirewall=\"iptables\"\n\t\tfi\n\t\tif [[ \"$firewall\" == \"firewalld\" ]]; then\n\t\t\t# We don't want to silently enable firewalld, so we give a subtle warning\n\t\t\t# If the user continues, firewalld will be installed and enabled during setup\n\t\t\techo\n\t\t\techo \"Note: firewalld, which is required to manage routing tables, will also be installed.\"\n\t\tfi\n\tfi\n}\n\nabort_and_exit() {\n\techo \"Abort. No changes were made.\" >&2\n\texit 1\n}\n\nconfirm_setup() {\n\tif [ \"$auto\" = 0 ]; then\n\t\tprintf \"Do you want to continue? [Y/n] \"\n\t\tread -r response\n\t\tcase $response in\n\t\t\t[yY][eE][sS]|[yY]|'')\n\t\t\t\t:\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tabort_and_exit\n\t\t\t\t;;\n\t\tesac\n\tfi\n}\n\nshow_start_setup() {\n\techo\n\techo \"Installing OpenVPN, please wait...\"\n}\n\ndisable_limitnproc() {\n\t# If running inside a container, disable LimitNPROC to prevent conflicts\n\tif systemd-detect-virt -cq; then\n\t\tmkdir /etc/systemd/system/openvpn-server@server.service.d/ 2>/dev/null\n\t\techo \"[Service]\nLimitNPROC=infinity\" > /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf\n\tfi\n}\n\ninstall_pkgs() {\n\tif [[ \"$os\" = \"debian\" || \"$os\" = \"ubuntu\" ]]; then\n\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\tapt-get -yqq --no-install-recommends install openvpn >/dev/null\n\t\t) || exiterr2\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq install openssl ca-certificates $firewall >/dev/null\n\t\t) || exiterr2\n\telif [[ \"$os\" = \"centos\" ]]; then\n\t\tif grep -qs \"Amazon Linux release 2 \" /etc/system-release; then\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tamazon-linux-extras install epel -y >/dev/null\n\t\t\t) || exit 1\n\t\telse\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tyum -y -q install epel-release >/dev/null\n\t\t\t) || exiterr3\n\t\tfi\n\t\t(\n\t\t\tset -x\n\t\t\tyum -y -q install openvpn openssl ca-certificates tar $firewall >/dev/null 2>&1\n\t\t) || exiterr3\n\telif [[ \"$os\" = \"fedora\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tdnf install -y openvpn openssl ca-certificates tar $firewall >/dev/null\n\t\t) || exiterr \"'dnf install' failed.\"\n\telse\n\t\t# Else, OS must be openSUSE\n\t\t(\n\t\t\tset -x\n\t\t\tzypper install -y openvpn openssl ca-certificates tar $firewall >/dev/null\n\t\t) || exiterr4\n\tfi\n\t# If firewalld was just installed, enable it\n\tif [[ \"$firewall\" == \"firewalld\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now firewalld.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nremove_pkgs() {\n\tif [[ \"$os\" = \"debian\" || \"$os\" = \"ubuntu\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\trm -rf /etc/openvpn/server\n\t\t\tapt-get remove --purge -y openvpn >/dev/null\n\t\t)\n\telif [[ \"$os\" = \"openSUSE\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tzypper remove -y openvpn >/dev/null\n\t\t\trm -rf /etc/openvpn/server\n\t\t)\n\t\trm -f /etc/openvpn/ipp.txt\n\telse\n\t\t# Else, OS must be CentOS or Fedora\n\t\t(\n\t\t\tset -x\n\t\t\tyum -y -q remove openvpn >/dev/null\n\t\t\trm -rf /etc/openvpn/server\n\t\t)\n\tfi\n}\n\ncreate_firewall_rules() {\n\tif systemctl is-active --quiet firewalld.service; then\n\t\t# Using both permanent and not permanent rules to avoid a firewalld\n\t\t# reload.\n\t\t# We don't use --add-service=openvpn because that would only work with\n\t\t# the default port and protocol.\n\t\tfirewall-cmd -q --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --zone=trusted --add-source=10.8.0.0/24\n\t\tfirewall-cmd -q --permanent --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=10.8.0.0/24\n\t\t# Set NAT for the VPN subnet\n\t\tfirewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tfirewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\tfirewall-cmd -q --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\t\tfirewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\tfi\n\telse\n\t\t# Create a service to set up persistent iptables rules\n\t\tiptables_path=$(command -v iptables)\n\t\tip6tables_path=$(command -v ip6tables)\n\t\t# nf_tables is not available as standard in OVZ kernels. So use iptables-legacy\n\t\t# if we are in OVZ, with a nf_tables backend and iptables-legacy is available.\n\t\tif [[ $(systemd-detect-virt) == \"openvz\" ]] && readlink -f \"$(command -v iptables)\" | grep -q \"nft\" && hash iptables-legacy 2>/dev/null; then\n\t\t\tiptables_path=$(command -v iptables-legacy)\n\t\t\tip6tables_path=$(command -v ip6tables-legacy)\n\t\tfi\n\t\techo \"[Unit]\nBefore=network.target\n[Service]\nType=oneshot\nExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\nExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT\nExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\nExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT\nExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" > /etc/systemd/system/openvpn-iptables.service\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\techo \"ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\nExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\nExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" >> /etc/systemd/system/openvpn-iptables.service\n\t\tfi\n\t\techo \"RemainAfterExit=yes\n[Install]\nWantedBy=multi-user.target\" >> /etc/systemd/system/openvpn-iptables.service\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn-iptables.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nremove_firewall_rules() {\n\tport=$(grep '^port ' \"$OVPN_CONF\" | cut -d \" \" -f 2)\n\tprotocol=$(grep '^proto ' \"$OVPN_CONF\" | cut -d \" \" -f 2)\n\tif systemctl is-active --quiet firewalld.service; then\n\t\tip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep '\\-s 10.8.0.0/24 '\"'\"'!'\"'\"' -d 10.8.0.0/24' | grep -oE '[^ ]+$')\n\t\t# Using both permanent and not permanent rules to avoid a firewalld reload.\n\t\tfirewall-cmd -q --remove-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --zone=trusted --remove-source=10.8.0.0/24\n\t\tfirewall-cmd -q --permanent --remove-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=10.8.0.0/24\n\t\tfirewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tif grep -qs \"server-ipv6\" \"$OVPN_CONF\"; then\n\t\t\tip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep '\\-s fddd:1194:1194:1194::/64 '\"'\"'!'\"'\"' -d fddd:1194:1194:1194::/64' | grep -oE '[^ ]+$')\n\t\t\tfirewall-cmd -q --zone=trusted --remove-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\tfi\n\telse\n\t\tsystemctl disable --now openvpn-iptables.service\n\t\trm -f /etc/systemd/system/openvpn-iptables.service\n\tfi\n\tif sestatus 2>/dev/null | grep \"Current mode\" | grep -q \"enforcing\" && [[ \"$port\" != 1194 ]]; then\n\t\tsemanage port -d -t openvpn_port_t -p \"$protocol\" \"$port\"\n\tfi\n}\n\ninstall_easyrsa() {\n\t# Get easy-rsa\n\teasy_rsa_url='https://github.com/OpenVPN/easy-rsa/releases/download/v3.2.0/EasyRSA-3.2.0.tgz'\n\tmkdir -p /etc/openvpn/server/easy-rsa/\n\t{ wget -t 3 -T 30 -qO- \"$easy_rsa_url\" 2>/dev/null || curl -m 30 -sL \"$easy_rsa_url\" ; } | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1\n\tif [ ! -f /etc/openvpn/server/easy-rsa/easyrsa ]; then\n\t\texiterr \"Failed to download EasyRSA from $easy_rsa_url.\"\n\tfi\n\tchown -R root:root /etc/openvpn/server/easy-rsa/\n}\n\ncreate_pki_and_certs() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t# Create the PKI, set up the CA and the server and client certificates\n\t\t./easyrsa --batch init-pki >/dev/null\n\t\t./easyrsa --batch build-ca nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 build-server-full server nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 build-client-full \"$client\" nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 gen-crl >/dev/null 2>&1\n\t)\n\t# Move the stuff we need\n\tcp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server\n\t# CRL is read with each client connection, while OpenVPN is dropped to nobody\n\tchown nobody:\"$group_name\" /etc/openvpn/server/crl.pem\n\t# Without +x in the directory, OpenVPN can't run a stat() on the CRL file\n\tchmod o+x /etc/openvpn/server/\n\t(\n\t\tset -x\n\t\t# Generate key for tls-crypt\n\t\topenvpn --genkey --secret /etc/openvpn/server/tc.key >/dev/null\n\t)\n\t# Create the DH parameters file using the predefined ffdhe2048 group\n\techo '-----BEGIN DH PARAMETERS-----\nMIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz\n+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a\n87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7\nYdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi\n7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD\nssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==\n-----END DH PARAMETERS-----' > /etc/openvpn/server/dh.pem\n}\n\ncreate_dns_config() {\n\tcase \"$dns\" in\n\t\t1)\n\t\t\t# Locate the proper resolv.conf\n\t\t\t# Needed for systems running systemd-resolved\n\t\t\tif grep '^nameserver' \"/etc/resolv.conf\" | grep -qv '127.0.0.53' ; then\n\t\t\t\tresolv_conf=\"/etc/resolv.conf\"\n\t\t\telse\n\t\t\t\tresolv_conf=\"/run/systemd/resolve/resolv.conf\"\n\t\t\tfi\n\t\t\t# Obtain the resolvers from resolv.conf and use them for OpenVPN\n\t\t\tgrep -v '^#\\|^;' \"$resolv_conf\" | grep '^nameserver' | grep -v '127.0.0.53' | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | while read line; do\n\t\t\t\techo \"push \\\"dhcp-option DNS $line\\\"\" >> \"$OVPN_CONF\"\n\t\t\tdone\n\t\t;;\n\t\t2|\"\")\n\t\t\techo 'push \"dhcp-option DNS 8.8.8.8\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 8.8.4.4\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t3)\n\t\t\techo 'push \"dhcp-option DNS 1.1.1.1\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 1.0.0.1\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t4)\n\t\t\techo 'push \"dhcp-option DNS 208.67.222.222\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 208.67.220.220\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t5)\n\t\t\techo 'push \"dhcp-option DNS 9.9.9.9\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 149.112.112.112\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t6)\n\t\t\techo 'push \"dhcp-option DNS 94.140.14.14\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 94.140.15.15\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t7)\n\t\t\techo \"push \\\"dhcp-option DNS $dns1\\\"\" >> \"$OVPN_CONF\"\n\t\t\tif [ -n \"$dns2\" ]; then\n\t\t\t\techo \"push \\\"dhcp-option DNS $dns2\\\"\" >> \"$OVPN_CONF\"\n\t\t\tfi\n\t\t;;\n\tesac\n}\n\ncreate_server_config() {\n\t# Generate server.conf\n\techo \"local $ip\nport $port\nproto $protocol\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\nauth SHA256\ntls-crypt tc.key\ntopology subnet\nserver 10.8.0.0 255.255.255.0\" > \"$OVPN_CONF\"\n\t# IPv6\n\tif [[ -z \"$ip6\" ]]; then\n\t\techo 'push \"block-ipv6\"' >> \"$OVPN_CONF\"\n\t\techo 'push \"ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1\"' >> \"$OVPN_CONF\"\n\telse\n\t\techo 'server-ipv6 fddd:1194:1194:1194::/64' >> \"$OVPN_CONF\"\n\tfi\n\techo 'push \"redirect-gateway def1 ipv6 bypass-dhcp\"' >> \"$OVPN_CONF\"\n\techo 'ifconfig-pool-persist ipp.txt' >> \"$OVPN_CONF\"\n\tcreate_dns_config\n\techo 'push \"block-outside-dns\"' >> \"$OVPN_CONF\"\n\techo \"keepalive 10 120\ncipher AES-128-GCM\nuser nobody\ngroup $group_name\npersist-key\npersist-tun\nverb 3\ncrl-verify crl.pem\" >> \"$OVPN_CONF\"\n\tif [[ \"$protocol\" = \"udp\" ]]; then\n\t\techo \"explicit-exit-notify\" >> \"$OVPN_CONF\"\n\tfi\n}\n\nget_export_dir() {\n\texport_to_home_dir=0\n\texport_dir=~/\n\tif [ -n \"$SUDO_USER\" ] && getent group \"$SUDO_USER\" >/dev/null 2>&1; then\n\t\tuser_home_dir=$(getent passwd \"$SUDO_USER\" 2>/dev/null | cut -d: -f6)\n\t\tif [ -d \"$user_home_dir\" ] && [ \"$user_home_dir\" != \"/\" ]; then\n\t\t\texport_dir=\"$user_home_dir/\"\n\t\t\texport_to_home_dir=1\n\t\tfi\n\tfi\n}\n\nnew_client() {\n\tget_export_dir\n\t# Generates the custom client.ovpn\n\t{\n\tcat /etc/openvpn/server/client-common.txt\n\techo \"<ca>\"\n\tcat /etc/openvpn/server/easy-rsa/pki/ca.crt\n\techo \"</ca>\"\n\techo \"<cert>\"\n\tsed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt\n\techo \"</cert>\"\n\techo \"<key>\"\n\tcat /etc/openvpn/server/easy-rsa/pki/private/\"$client\".key\n\techo \"</key>\"\n\techo \"<tls-crypt>\"\n\tsed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key\n\techo \"</tls-crypt>\"\n\t} > \"$export_dir$client\".ovpn\n\tif [ \"$export_to_home_dir\" = 1 ]; then\n\t\tchown \"$SUDO_USER:$SUDO_USER\" \"$export_dir$client\".ovpn\n\tfi\n\tchmod 600 \"$export_dir$client\".ovpn\n}\n\nupdate_sysctl() {\n\tmkdir -p /etc/sysctl.d\n\tconf_fwd=\"/etc/sysctl.d/99-openvpn-forward.conf\"\n\tconf_opt=\"/etc/sysctl.d/99-openvpn-optimize.conf\"\n\t# Enable net.ipv4.ip_forward for the system\n\techo 'net.ipv4.ip_forward=1' > \"$conf_fwd\"\n\tif [[ -n \"$ip6\" ]]; then\n\t\t# Enable net.ipv6.conf.all.forwarding for the system\n\t\techo \"net.ipv6.conf.all.forwarding=1\" >> \"$conf_fwd\"\n\tfi\n\t# Optimize sysctl settings such as TCP buffer sizes\n\tbase_url=\"https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0\"\n\tconf_url=\"$base_url/sysctl-ovpn-$os\"\n\t[ \"$auto\" != 0 ] && conf_url=\"${conf_url}-auto\"\n\twget -t 3 -T 30 -q -O \"$conf_opt\" \"$conf_url\" 2>/dev/null \\\n\t\t|| curl -m 30 -fsL \"$conf_url\" -o \"$conf_opt\" 2>/dev/null \\\n\t\t|| { /bin/rm -f \"$conf_opt\"; touch \"$conf_opt\"; }\n\t# Enable TCP BBR congestion control if kernel version >= 4.20\n\tif modprobe -q tcp_bbr \\\n\t\t&& printf '%s\\n%s' \"4.20\" \"$(uname -r)\" | sort -C -V \\\n\t\t&& [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; then\ncat >> \"$conf_opt\" <<'EOF'\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\nEOF\n\tfi\n\t# Apply sysctl settings\n\tsysctl -e -q -p \"$conf_fwd\"\n\tsysctl -e -q -p \"$conf_opt\"\n}\n\nupdate_rclocal() {\n\tipt_cmd=\"systemctl restart openvpn-iptables.service\"\n\tif ! grep -qs \"$ipt_cmd\" /etc/rc.local; then\n\t\tif [ ! -f /etc/rc.local ]; then\n\t\t\techo '#!/bin/sh' > /etc/rc.local\n\t\telse\n\t\t\tif [ \"$os\" = \"ubuntu\" ] || [ \"$os\" = \"debian\" ]; then\n\t\t\t\tsed --follow-symlinks -i '/^exit 0/d' /etc/rc.local\n\t\t\tfi\n\t\tfi\ncat >> /etc/rc.local <<EOF\n\n$ipt_cmd\nEOF\n\t\tif [ \"$os\" = \"ubuntu\" ] || [ \"$os\" = \"debian\" ]; then\n\t\t\techo \"exit 0\" >> /etc/rc.local\n\t\tfi\n\t\tchmod +x /etc/rc.local\n\tfi\n}\n\nupdate_selinux() {\n\t# If SELinux is enabled and a custom port was selected, we need this\n\tif sestatus 2>/dev/null | grep \"Current mode\" | grep -q \"enforcing\" && [[ \"$port\" != 1194 ]]; then\n\t\t# Install semanage if not already present\n\t\tif ! hash semanage 2>/dev/null; then\n\t\t\tif [[ \"$os_version\" -eq 7 ]]; then\n\t\t\t\t# Centos 7\n\t\t\t\t(\n\t\t\t\t\tset -x\n\t\t\t\t\tyum -y -q install policycoreutils-python >/dev/null\n\t\t\t\t) || exiterr3\n\t\t\telse\n\t\t\t\t# CentOS 8/9 or Fedora\n\t\t\t\t(\n\t\t\t\t\tset -x\n\t\t\t\t\tdnf install -y policycoreutils-python-utils >/dev/null\n\t\t\t\t) || exiterr \"'dnf install' failed.\"\n\t\t\tfi\n\t\tfi\n\t\tsemanage port -a -t openvpn_port_t -p \"$protocol\" \"$port\"\n\tfi\n}\n\ncreate_client_common() {\n\t# If the server is behind NAT, use the correct IP address\n\t[[ -n \"$public_ip\" ]] && ip=\"$public_ip\"\n\t# client-common.txt is created so we have a template to add further users later\n\techo \"client\ndev tun\nproto $protocol\nremote $ip $port\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nremote-cert-tls server\nauth SHA256\ncipher AES-128-GCM\nignore-unknown-option block-outside-dns block-ipv6\nverb 3\" > /etc/openvpn/server/client-common.txt\n}\n\nstart_openvpn_service() {\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn-server@server.service >/dev/null 2>&1\n\t\t)\n\telse\n\t\tln -s /etc/openvpn/server/* /etc/openvpn >/dev/null 2>&1\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn@server.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nfinish_setup() {\n\techo\n\techo \"Finished!\"\n\techo\n\techo \"The client configuration is available in: $export_dir$client.ovpn\"\n\techo \"New clients can be added by running this script again.\"\n}\n\nselect_menu_option() {\n\techo\n\techo \"OpenVPN is already installed.\"\n\techo\n\techo \"Select an option:\"\n\techo \"   1) Add a new client\"\n\techo \"   2) Export config for an existing client\"\n\techo \"   3) List existing clients\"\n\techo \"   4) Revoke an existing client\"\n\techo \"   5) Remove OpenVPN\"\n\techo \"   6) Exit\"\n\tread -rp \"Option: \" option\n\tuntil [[ \"$option\" =~ ^[1-6]$ ]]; do\n\t\techo \"$option: invalid selection.\"\n\t\tread -rp \"Option: \" option\n\tdone\n}\n\nshow_clients() {\n\ttail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep \"^V\" | cut -d '=' -f 2 | nl -s ') '\n}\n\nenter_client_name() {\n\techo\n\techo \"Provide a name for the client:\"\n\tread -rp \"Name: \" unsanitized_client\n\t[ -z \"$unsanitized_client\" ] && abort_and_exit\n\tset_client_name\n\twhile [[ -z \"$client\" || -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]]; do\n\t\tif [ -z \"$client\" ]; then\n\t\t\techo \"Invalid client name. Use one word only, no special characters except '-' and '_'.\"\n\t\telse\n\t\t\techo \"$client: invalid name. Client already exists.\"\n\t\tfi\n\t\tread -rp \"Name: \" unsanitized_client\n\t\t[ -z \"$unsanitized_client\" ] && abort_and_exit\n\t\tset_client_name\n\tdone\n}\n\nbuild_client_config() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t./easyrsa --batch --days=3650 build-client-full \"$client\" nopass >/dev/null 2>&1\n\t)\n}\n\nprint_client_action() {\n\techo\n\techo \"$client $1. Configuration available in: $export_dir$client.ovpn\"\n}\n\nprint_check_clients() {\n\techo\n\techo \"Checking for existing client(s)...\"\n}\n\ncheck_clients() {\n\tnum_of_clients=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep -c \"^V\")\n\tif [[ \"$num_of_clients\" = 0 ]]; then\n\t\techo\n\t\techo \"There are no existing clients!\"\n\t\texit 1\n\tfi\n}\n\nprint_client_total() {\n\tif [ \"$num_of_clients\" = 1 ]; then\n\t\tprintf '\\n%s\\n' \"Total: 1 client\"\n\telif [ -n \"$num_of_clients\" ]; then\n\t\tprintf '\\n%s\\n' \"Total: $num_of_clients clients\"\n\tfi\n}\n\nselect_client_to() {\n\techo\n\techo \"Select the client to $1:\"\n\tshow_clients\n\tread -rp \"Client: \" client_num\n\t[ -z \"$client_num\" ] && abort_and_exit\n\tuntil [[ \"$client_num\" =~ ^[0-9]+$ && \"$client_num\" -le \"$num_of_clients\" ]]; do\n\t\techo \"$client_num: invalid selection.\"\n\t\tread -rp \"Client: \" client_num\n\t\t[ -z \"$client_num\" ] && abort_and_exit\n\tdone\n\tclient=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep \"^V\" | cut -d '=' -f 2 | sed -n \"$client_num\"p)\n}\n\nconfirm_revoke_client() {\n\tif [ \"$assume_yes\" != 1 ]; then\n\t\techo\n\t\tread -rp \"Confirm $client revocation? [y/N]: \" revoke\n\t\tuntil [[ \"$revoke\" =~ ^[yYnN]*$ ]]; do\n\t\t\techo \"$revoke: invalid selection.\"\n\t\t\tread -rp \"Confirm $client revocation? [y/N]: \" revoke\n\t\tdone\n\telse\n\t\trevoke=y\n\tfi\n}\n\nprint_revoke_client() {\n\techo\n\techo \"Revoking $client...\"\n}\n\nremove_client_conf() {\n\tget_export_dir\n\tovpn_file=\"$export_dir$client.ovpn\"\n\tif [ -f \"$ovpn_file\" ]; then\n\t\techo \"Removing $ovpn_file...\"\n\t\trm -f \"$ovpn_file\"\n\tfi\n}\n\nrevoke_client_ovpn() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t./easyrsa --batch revoke \"$client\" >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 gen-crl >/dev/null 2>&1\n\t)\n\trm -f /etc/openvpn/server/crl.pem\n\tcp /etc/openvpn/server/easy-rsa/pki/crl.pem /etc/openvpn/server/crl.pem\n\t# CRL is read with each client connection, when OpenVPN is dropped to nobody\n\tchown nobody:\"$group_name\" /etc/openvpn/server/crl.pem\n\tremove_client_conf\n}\n\nprint_client_revoked() {\n\techo\n\techo \"$client revoked!\"\n}\n\nprint_client_revocation_aborted() {\n\techo\n\techo \"$client revocation aborted!\"\n}\n\nconfirm_remove_ovpn() {\n\tif [ \"$assume_yes\" != 1 ]; then\n\t\techo\n\t\tread -rp \"Confirm OpenVPN removal? [y/N]: \" remove\n\t\tuntil [[ \"$remove\" =~ ^[yYnN]*$ ]]; do\n\t\t\techo \"$remove: invalid selection.\"\n\t\t\tread -rp \"Confirm OpenVPN removal? [y/N]: \" remove\n\t\tdone\n\telse\n\t\tremove=y\n\tfi\n}\n\nprint_remove_ovpn() {\n\techo\n\techo \"Removing OpenVPN, please wait...\"\n}\n\ndisable_ovpn_service() {\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\tsystemctl disable --now openvpn-server@server.service\n\telse\n\t\tsystemctl disable --now openvpn@server.service\n\tfi\n\trm -f /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf\n}\n\nremove_sysctl_rules() {\n\trm -f /etc/sysctl.d/99-openvpn-forward.conf /etc/sysctl.d/99-openvpn-optimize.conf\n\tif [ ! -f /usr/bin/wg-quick ] && [ ! -f /usr/sbin/ipsec ] \\\n\t\t&& [ ! -f /usr/local/sbin/ipsec ]; then\n\t\techo 0 > /proc/sys/net/ipv4/ip_forward\n\t\techo 0 > /proc/sys/net/ipv6/conf/all/forwarding\n\tfi\n}\n\nremove_rclocal_rules() {\n\tipt_cmd=\"systemctl restart openvpn-iptables.service\"\n\tif grep -qs \"$ipt_cmd\" /etc/rc.local; then\n\t\tsed --follow-symlinks -i \"/^$ipt_cmd/d\" /etc/rc.local\n\tfi\n}\n\nprint_ovpn_removed() {\n\techo\n\techo \"OpenVPN removed!\"\n}\n\nprint_ovpn_removal_aborted() {\n\techo\n\techo \"OpenVPN removal aborted!\"\n}\n\novpnsetup() {\n\nexport PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\ncheck_root\ncheck_shell\ncheck_kernel\ncheck_os\ncheck_os_ver\ncheck_tun\n\nOVPN_CONF=\"/etc/openvpn/server/server.conf\"\n\nauto=0\nassume_yes=0\nadd_client=0\nexport_client=0\nlist_clients=0\nrevoke_client=0\nremove_ovpn=0\n\nparse_args \"$@\"\ncheck_args\n\nif [ \"$add_client\" = 1 ]; then\n\tshow_header\n\techo\n\tbuild_client_config\n\tnew_client\n\tprint_client_action added\n\texit 0\nfi\n\nif [ \"$export_client\" = 1 ]; then\n\tshow_header\n\tnew_client\n\tprint_client_action exported\n\texit 0\nfi\n\nif [ \"$list_clients\" = 1 ]; then\n\tshow_header\n\tprint_check_clients\n\tcheck_clients\n\techo\n\tshow_clients\n\tprint_client_total\n\texit 0\nfi\n\nif [ \"$revoke_client\" = 1 ]; then\n\tshow_header\n\tconfirm_revoke_client\n\tif [[ \"$revoke\" =~ ^[yY]$ ]]; then\n\t\tprint_revoke_client\n\t\trevoke_client_ovpn\n\t\tprint_client_revoked\n\t\texit 0\n\telse\n\t\tprint_client_revocation_aborted\n\t\texit 1\n\tfi\nfi\n\nif [ \"$remove_ovpn\" = 1 ]; then\n\tshow_header\n\tconfirm_remove_ovpn\n\tif [[ \"$remove\" =~ ^[yY]$ ]]; then\n\t\tprint_remove_ovpn\n\t\tremove_firewall_rules\n\t\tdisable_ovpn_service\n\t\tremove_sysctl_rules\n\t\tremove_rclocal_rules\n\t\tremove_pkgs\n\t\tprint_ovpn_removed\n\t\texit 0\n\telse\n\t\tprint_ovpn_removal_aborted\n\t\texit 1\n\tfi\nfi\n\nif [[ ! -e \"$OVPN_CONF\" ]]; then\n\tcheck_nftables\n\tinstall_wget\n\tinstall_iproute\n\tshow_welcome\n\tpublic_ip=\"\"\n\tif [ \"$auto\" = 0 ]; then\n\t\tenter_server_address\n\telse\n\t\tdetect_ip\n\t\tcheck_nat_ip\n\tfi\n\tshow_config\n\tdetect_ipv6\n\tselect_protocol\n\tselect_port\n\tselect_dns\n\tenter_first_client_name\n\tshow_setup_ready\n\tcheck_firewall\n\tconfirm_setup\n\tshow_start_setup\n\tdisable_limitnproc\n\tinstall_pkgs\n\tinstall_easyrsa\n\tcreate_pki_and_certs\n\tcreate_server_config\n\tupdate_sysctl\n\tcreate_firewall_rules\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\tupdate_rclocal\n\tfi\n\tupdate_selinux\n\tcreate_client_common\n\tstart_openvpn_service\n\tnew_client\n\tfinish_setup\nelse\n\tshow_header\n\tselect_menu_option\n\tcase \"$option\" in\n\t\t1)\n\t\t\tenter_client_name\n\t\t\tbuild_client_config\n\t\t\tnew_client\n\t\t\tprint_client_action added\n\t\t\texit 0\n\t\t;;\n\t\t2)\n\t\t\tcheck_clients\n\t\t\tselect_client_to export\n\t\t\tnew_client\n\t\t\tprint_client_action exported\n\t\t\texit 0\n\t\t;;\n\t\t3)\n\t\t\tprint_check_clients\n\t\t\tcheck_clients\n\t\t\techo\n\t\t\tshow_clients\n\t\t\tprint_client_total\n\t\t\texit 0\n\t\t;;\n\t\t4)\n\t\t\tcheck_clients\n\t\t\tselect_client_to revoke\n\t\t\tconfirm_revoke_client\n\t\t\tif [[ \"$revoke\" =~ ^[yY]$ ]]; then\n\t\t\t\tprint_revoke_client\n\t\t\t\trevoke_client_ovpn\n\t\t\t\tprint_client_revoked\n\t\t\t\texit 0\n\t\t\telse\n\t\t\t\tprint_client_revocation_aborted\n\t\t\t\texit 1\n\t\t\tfi\n\t\t;;\n\t\t5)\n\t\t\tconfirm_remove_ovpn\n\t\t\tif [[ \"$remove\" =~ ^[yY]$ ]]; then\n\t\t\t\tprint_remove_ovpn\n\t\t\t\tremove_firewall_rules\n\t\t\t\tdisable_ovpn_service\n\t\t\t\tremove_sysctl_rules\n\t\t\t\tremove_rclocal_rules\n\t\t\t\tremove_pkgs\n\t\t\t\tprint_ovpn_removed\n\t\t\t\texit 0\n\t\t\telse\n\t\t\t\tprint_ovpn_removal_aborted\n\t\t\t\texit 1\n\t\t\tfi\n\t\t;;\n\t\t6)\n\t\t\texit 0\n\t\t;;\n\tesac\nfi\n}\n\n## Defer setup until we have the complete script\novpnsetup \"$@\"\n\nexit 0\n\n```","source":"_posts/openvpn-部署脚本.md","raw":"---\ntitle: openvpn-部署脚本\ndate: 2024-08-07 16:02:35\ntags:\n---\n脚本连接：\n[openvpn.sh](openvpn-部署脚本/openvpn.sh)\n\n```shell\n#!/bin/bash\n#\n# https://github.com/hwdsl2/openvpn-install\n#\n# Based on the work of Nyr and contributors at:\n# https://github.com/Nyr/openvpn-install\n#\n# Copyright (c) 2022-2024 Lin Song <linsongui@gmail.com>\n# Copyright (c) 2013-2023 Nyr\n#\n# Released under the MIT License, see the accompanying file LICENSE.txt\n# or https://opensource.org/licenses/MIT\n\nexiterr()  { echo \"Error: $1\" >&2; exit 1; }\nexiterr2() { exiterr \"'apt-get install' failed.\"; }\nexiterr3() { exiterr \"'yum install' failed.\"; }\nexiterr4() { exiterr \"'zypper install' failed.\"; }\n\ncheck_ip() {\n\tIP_REGEX='^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'\n\tprintf '%s' \"$1\" | tr -d '\\n' | grep -Eq \"$IP_REGEX\"\n}\n\ncheck_dns_name() {\n\tFQDN_REGEX='^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$'\n\tprintf '%s' \"$1\" | tr -d '\\n' | grep -Eq \"$FQDN_REGEX\"\n}\n\ncheck_root() {\n\tif [ \"$(id -u)\" != 0 ]; then\n\t\texiterr \"This installer must be run as root. Try 'sudo bash $0'\"\n\tfi\n}\n\ncheck_shell() {\n\t# Detect Debian users running the script with \"sh\" instead of bash\n\tif readlink /proc/$$/exe | grep -q \"dash\"; then\n\t\texiterr 'This installer needs to be run with \"bash\", not \"sh\".'\n\tfi\n}\n\ncheck_kernel() {\n\t# Detect OpenVZ 6\n\tif [[ $(uname -r | cut -d \".\" -f 1) -eq 2 ]]; then\n\t\texiterr \"The system is running an old kernel, which is incompatible with this installer.\"\n\tfi\n}\n\ncheck_os() {\n\tif grep -qs \"ubuntu\" /etc/os-release; then\n\t\tos=\"ubuntu\"\n\t\tos_version=$(grep 'VERSION_ID' /etc/os-release | cut -d '\"' -f 2 | tr -d '.')\n\t\tgroup_name=\"nogroup\"\n\telif [[ -e /etc/debian_version ]]; then\n\t\tos=\"debian\"\n\t\tos_version=$(grep -oE '[0-9]+' /etc/debian_version | head -1)\n\t\tgroup_name=\"nogroup\"\n\telif [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; then\n\t\tos=\"centos\"\n\t\tos_version=$(grep -shoE '[0-9]+' /etc/almalinux-release /etc/rocky-release /etc/centos-release | head -1)\n\t\tgroup_name=\"nobody\"\n\telif grep -qs \"Amazon Linux release 2 \" /etc/system-release; then\n\t\tos=\"centos\"\n\t\tos_version=\"7\"\n\t\tgroup_name=\"nobody\"\n\telif grep -qs \"Amazon Linux release 2023\" /etc/system-release; then\n\t\texiterr \"Amazon Linux 2023 is not supported.\"\n\telif [[ -e /etc/fedora-release ]]; then\n\t\tos=\"fedora\"\n\t\tos_version=$(grep -oE '[0-9]+' /etc/fedora-release | head -1)\n\t\tgroup_name=\"nobody\"\n\telif [[ -e /etc/SUSE-brand && \"$(head -1 /etc/SUSE-brand)\" == \"openSUSE\" ]]; then\n\t\tos=\"openSUSE\"\n\t\tos_version=$(tail -1 /etc/SUSE-brand | grep -oE '[0-9\\\\.]+')\n\t\tgroup_name=\"nogroup\"\n\telse\n\t\texiterr \"This installer seems to be running on an unsupported distribution.\nSupported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Amazon Linux 2.\"\n\tfi\n}\n\ncheck_os_ver() {\n\tif [[ \"$os\" == \"ubuntu\" && \"$os_version\" -lt 2004 ]]; then\n\t\texiterr \"Ubuntu 20.04 or higher is required to use this installer.\nThis version of Ubuntu is too old and unsupported.\"\n\tfi\n\tif [[ \"$os\" == \"debian\" && \"$os_version\" -lt 10 ]]; then\n\t\texiterr \"Debian 10 or higher is required to use this installer.\nThis version of Debian is too old and unsupported.\"\n\tfi\n\tif [[ \"$os\" == \"centos\" && \"$os_version\" -lt 7 ]]; then\n\t\texiterr \"CentOS 7 or higher is required to use this installer.\nThis version of CentOS is too old and unsupported.\"\n\tfi\n}\n\ncheck_tun() {\n\tif [[ ! -e /dev/net/tun ]] || ! ( exec 7<>/dev/net/tun ) 2>/dev/null; then\n\t\texiterr \"The system does not have the TUN device available.\nTUN needs to be enabled before running this installer.\"\n\tfi\n}\n\nset_client_name() {\n\t# Allow a limited set of characters to avoid conflicts\n\tclient=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<< \"$unsanitized_client\")\n}\n\nparse_args() {\n\twhile [ \"$#\" -gt 0 ]; do\n\t\tcase $1 in\n\t\t\t--auto)\n\t\t\t\tauto=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--addclient)\n\t\t\t\tadd_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--exportclient)\n\t\t\t\texport_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--listclients)\n\t\t\t\tlist_clients=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--revokeclient)\n\t\t\t\trevoke_client=1\n\t\t\t\tunsanitized_client=\"$2\"\n\t\t\t\tshift\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--uninstall)\n\t\t\t\tremove_ovpn=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t-y|--yes)\n\t\t\t\tassume_yes=1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t-h|--help)\n\t\t\t\tshow_usage\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tshow_usage \"Unknown parameter: $1\"\n\t\t\t\t;;\n\t\tesac\n\tdone\n}\n\ncheck_args() {\n\tif [ \"$auto\" = 1 ] && [ -e \"$OVPN_CONF\" ]; then\n\t\techo \"Error: Invalid parameter '--auto'. OpenVPN is already set up on this server.\" >&2\n\t\techo \"       To manage OpenVPN clients, re-run this script without '--auto'.\" >&2\n\t\texit 1\n\tfi\n\tif [ \"$((add_client + export_client + list_clients + revoke_client))\" -gt 1 ]; then\n\t\tshow_usage \"Invalid parameters. Specify only one of '--addclient', '--exportclient', '--listclients' or '--revokeclient'.\"\n\tfi\n\tif [ \"$remove_ovpn\" = 1 ]; then\n\t\tif [ \"$((add_client + export_client + list_clients + revoke_client + auto))\" -gt 0 ]; then\n\t\t\tshow_usage \"Invalid parameters. '--uninstall' cannot be specified with other parameters.\"\n\t\tfi\n\tfi\n\tif [ ! -e \"$OVPN_CONF\" ]; then\n\t\t[ \"$add_client\" = 1 ] && exiterr \"You must first set up OpenVPN before adding a client.\"\n\t\t[ \"$export_client\" = 1 ] && exiterr \"You must first set up OpenVPN before exporting a client.\"\n\t\t[ \"$list_clients\" = 1 ] && exiterr \"You must first set up OpenVPN before listing clients.\"\n\t\t[ \"$revoke_client\" = 1 ] && exiterr \"You must first set up OpenVPN before revoking a client.\"\n\t\t[ \"$remove_ovpn\" = 1 ] && exiterr \"Cannot remove OpenVPN because it has not been set up on this server.\"\n\tfi\n\tif [ \"$add_client\" = 1 ]; then\n\t\tset_client_name\n\t\tif [ -z \"$client\" ]; then\n\t\t\texiterr \"Invalid client name. Use one word only, no special characters except '-' and '_'.\"\n\t\telif [ -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]; then\n\t\t\texiterr \"$client: invalid name. Client already exists.\"\n\t\tfi\n\tfi\n\tif [ \"$export_client\" = 1 ] || [ \"$revoke_client\" = 1 ]; then\n\t\tset_client_name\n\t\tif [ -z \"$client\" ] || [ ! -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]; then\n\t\t\texiterr \"Invalid client name, or client does not exist.\"\n\t\tfi\n\tfi\n}\n\ncheck_nftables() {\n\tif [ \"$os\" = \"centos\" ]; then\n\t\tif grep -qs \"hwdsl2 VPN script\" /etc/sysconfig/nftables.conf \\\n\t\t\t|| systemctl is-active --quiet nftables 2>/dev/null; then\n\t\t\texiterr \"This system has nftables enabled, which is not supported by this installer.\"\n\t\tfi\n\tfi\n}\n\ninstall_wget() {\n\t# Detect some Debian minimal setups where neither wget nor curl are installed\n\tif ! hash wget 2>/dev/null && ! hash curl 2>/dev/null; then\n\t\tif [ \"$auto\" = 0 ]; then\n\t\t\techo \"Wget is required to use this installer.\"\n\t\t\tread -n1 -r -p \"Press any key to install Wget and continue...\"\n\t\tfi\n\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\tapt-get -yqq install wget >/dev/null\n\t\t) || exiterr2\n\tfi\n}\n\ninstall_iproute() {\n\tif ! hash ip 2>/dev/null; then\n\t\tif [ \"$auto\" = 0 ]; then\n\t\t\techo \"iproute is required to use this installer.\"\n\t\t\tread -n1 -r -p \"Press any key to install iproute and continue...\"\n\t\tfi\n\t\tif [ \"$os\" = \"debian\" ] || [ \"$os\" = \"ubuntu\" ]; then\n\t\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\t\tapt-get -yqq install iproute2 >/dev/null\n\t\t\t) || exiterr2\n\t\telif [ \"$os\" = \"openSUSE\" ]; then\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tzypper install iproute2 >/dev/null\n\t\t\t) || exiterr4\n\t\telse\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tyum -y -q install iproute >/dev/null\n\t\t\t) || exiterr3\n\t\tfi\n\tfi\n}\n\nshow_header() {\ncat <<'EOF'\n\nOpenVPN Script\nhttps://github.com/hwdsl2/openvpn-install\nEOF\n}\n\nshow_header2() {\ncat <<'EOF'\n\nWelcome to this OpenVPN server installer!\nGitHub: https://github.com/hwdsl2/openvpn-install\n\nEOF\n}\n\nshow_header3() {\ncat <<'EOF'\n\nCopyright (c) 2022-2024 Lin Song\nCopyright (c) 2013-2023 Nyr\nEOF\n}\n\nshow_usage() {\n\tif [ -n \"$1\" ]; then\n\t\techo \"Error: $1\" >&2\n\tfi\n\tshow_header\n\tshow_header3\ncat 1>&2 <<EOF\n\nUsage: bash $0 [options]\n\nOptions:\n  --auto                        auto install OpenVPN using default options\n  --addclient [client name]     add a new client\n  --exportclient [client name]  export configuration for an existing client\n  --listclients                 list the names of existing clients\n  --revokeclient [client name]  revoke an existing client\n  --uninstall                   remove OpenVPN and delete all configuration\n  -y, --yes                     assume \"yes\" as answer to prompts when revoking a client or removing OpenVPN\n  -h, --help                    show this help message and exit\n\nTo customize install options, run this script without arguments.\nEOF\n\texit 1\n}\n\nshow_welcome() {\n\tif [ \"$auto\" = 0 ]; then\n\t\tshow_header2\n\t\techo 'I need to ask you a few questions before starting setup.'\n\t\techo 'You can use the default options and just press enter if you are OK with them.'\n\telse\n\t\tshow_header\n\t\techo\n\t\techo 'Starting OpenVPN setup using default options.'\n\tfi\n}\n\nenter_server_address() {\n\techo\n\techo \"Do you want OpenVPN clients to connect to this server using a DNS name,\"\n\tprintf \"e.g. vpn.example.com, instead of its IP address? [y/N] \"\n\tread -r response\n\tcase $response in\n\t\t[yY][eE][sS]|[yY])\n\t\t\tuse_dns_name=1\n\t\t\techo\n\t\t\t;;\n\t\t*)\n\t\t\tuse_dns_name=0\n\t\t\t;;\n\tesac\n\tif [ \"$use_dns_name\" = 1 ]; then\n\t\tread -rp \"Enter the DNS name of this VPN server: \" server_addr\n\t\tuntil check_dns_name \"$server_addr\"; do\n\t\t\techo \"Invalid DNS name. You must enter a fully qualified domain name (FQDN).\"\n\t\t\tread -rp \"Enter the DNS name of this VPN server: \" server_addr\n\t\tdone\n\t\tip=\"$server_addr\"\n\t\techo\n\t\techo \"Note: Make sure this DNS name resolves to the IPv4 address\"\n\t\techo \"      of this server. If you add or update the DNS record\"\n\t\techo \"      at a later time, reboot this server to take effect.\"\n\telse\n\t\tdetect_ip\n\t\tcheck_nat_ip\n\tfi\n}\n\nfind_public_ip() {\n\tip_url1=\"http://ipv4.icanhazip.com\"\n\tip_url2=\"http://ip1.dynupdate.no-ip.com\"\n\t# Get public IP and sanitize with grep\n\tget_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' <<< \"$(wget -T 10 -t 1 -4qO- \"$ip_url1\" || curl -m 10 -4Ls \"$ip_url1\")\")\n\tif ! check_ip \"$get_public_ip\"; then\n\t\tget_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' <<< \"$(wget -T 10 -t 1 -4qO- \"$ip_url2\" || curl -m 10 -4Ls \"$ip_url2\")\")\n\tfi\n}\n\ndetect_ip() {\n\t# If system has a single IPv4, it is selected automatically.\n\tif [[ $(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}') -eq 1 ]]; then\n\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}')\n\telse\n\t\t# Use the IP address on the default route\n\t\tip=$(ip -4 route get 1 | sed 's/ uid .*//' | awk '{print $NF;exit}' 2>/dev/null)\n\t\tif ! check_ip \"$ip\"; then\n\t\t\tfind_public_ip\n\t\t\tip_match=0\n\t\t\tif [ -n \"$get_public_ip\" ]; then\n\t\t\t\tip_list=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}')\n\t\t\t\twhile IFS= read -r line; do\n\t\t\t\t\tif [ \"$line\" = \"$get_public_ip\" ]; then\n\t\t\t\t\t\tip_match=1\n\t\t\t\t\t\tip=\"$line\"\n\t\t\t\t\tfi\n\t\t\t\tdone <<< \"$ip_list\"\n\t\t\tfi\n\t\t\tif [ \"$ip_match\" = 0 ]; then\n\t\t\t\tif [ \"$auto\" = 0 ]; then\n\t\t\t\t\techo\n\t\t\t\t\techo \"Which IPv4 address should be used?\"\n\t\t\t\t\tnum_of_ip=$(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}')\n\t\t\t\t\tip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | nl -s ') '\n\t\t\t\t\tread -rp \"IPv4 address [1]: \" ip_num\n\t\t\t\t\tuntil [[ -z \"$ip_num\" || \"$ip_num\" =~ ^[0-9]+$ && \"$ip_num\" -le \"$num_of_ip\" ]]; do\n\t\t\t\t\t\techo \"$ip_num: invalid selection.\"\n\t\t\t\t\t\tread -rp \"IPv4 address [1]: \" ip_num\n\t\t\t\t\tdone\n\t\t\t\t\t[[ -z \"$ip_num\" ]] && ip_num=1\n\t\t\t\telse\n\t\t\t\t\tip_num=1\n\t\t\t\tfi\n\t\t\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | sed -n \"$ip_num\"p)\n\t\t\tfi\n\t\tfi\n\tfi\n\tif ! check_ip \"$ip\"; then\n\t\techo \"Error: Could not detect this server's IP address.\" >&2\n\t\techo \"Abort. No changes were made.\" >&2\n\t\texit 1\n\tfi\n}\n\ncheck_nat_ip() {\n\t# If $ip is a private IP address, the server must be behind NAT\n\tif printf '%s' \"$ip\" | grep -qE '^(10|127|172\\.(1[6-9]|2[0-9]|3[0-1])|192\\.168|169\\.254)\\.'; then\n\t\tfind_public_ip\n\t\tif ! check_ip \"$get_public_ip\"; then\n\t\t\tif [ \"$auto\" = 0 ]; then\n\t\t\t\techo\n\t\t\t\techo \"This server is behind NAT. What is the public IPv4 address?\"\n\t\t\t\tread -rp \"Public IPv4 address: \" public_ip\n\t\t\t\tuntil check_ip \"$public_ip\"; do\n\t\t\t\t\techo \"Invalid input.\"\n\t\t\t\t\tread -rp \"Public IPv4 address: \" public_ip\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\techo \"Error: Could not detect this server's public IP.\" >&2\n\t\t\t\techo \"Abort. No changes were made.\" >&2\n\t\t\t\texit 1\n\t\t\tfi\n\t\telse\n\t\t\tpublic_ip=\"$get_public_ip\"\n\t\tfi\n\tfi\n}\n\nshow_config() {\n\tif [ \"$auto\" != 0 ]; then\n\t\techo\n\t\tprintf '%s' \"Server IP: \"\n\t\t[ -n \"$public_ip\" ] && printf '%s\\n' \"$public_ip\" || printf '%s\\n' \"$ip\"\n\t\techo \"Port: UDP/1194\"\n\t\techo \"Client name: client\"\n\t\techo \"Client DNS: Google Public DNS\"\n\tfi\n}\n\ndetect_ipv6() {\n\tip6=\"\"\n\tif [[ $(ip -6 addr | grep -c 'inet6 [23]') -ne 0 ]]; then\n\t\tip6=$(ip -6 addr | grep 'inet6 [23]' | cut -d '/' -f 1 | grep -oE '([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}' | sed -n 1p)\n\tfi\n}\n\nselect_protocol() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Which protocol should OpenVPN use?\"\n\t\techo \"   1) UDP (recommended)\"\n\t\techo \"   2) TCP\"\n\t\tread -rp \"Protocol [1]: \" protocol\n\t\tuntil [[ -z \"$protocol\" || \"$protocol\" =~ ^[12]$ ]]; do\n\t\t\techo \"$protocol: invalid selection.\"\n\t\t\tread -rp \"Protocol [1]: \" protocol\n\t\tdone\n\t\tcase \"$protocol\" in\n\t\t\t1|\"\")\n\t\t\tprotocol=udp\n\t\t\t;;\n\t\t\t2)\n\t\t\tprotocol=tcp\n\t\t\t;;\n\t\tesac\n\telse\n\t\tprotocol=udp\n\tfi\n}\n\nselect_port() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Which port should OpenVPN listen to?\"\n\t\tread -rp \"Port [1194]: \" port\n\t\tuntil [[ -z \"$port\" || \"$port\" =~ ^[0-9]+$ && \"$port\" -le 65535 ]]; do\n\t\t\techo \"$port: invalid port.\"\n\t\t\tread -rp \"Port [1194]: \" port\n\t\tdone\n\t\t[[ -z \"$port\" ]] && port=1194\n\telse\n\t\tport=1194\n\tfi\n}\n\nenter_custom_dns() {\n\tread -rp \"Enter primary DNS server: \" dns1\n\tuntil check_ip \"$dns1\"; do\n\t\techo \"Invalid DNS server.\"\n\t\tread -rp \"Enter primary DNS server: \" dns1\n\tdone\n\tread -rp \"Enter secondary DNS server (Enter to skip): \" dns2\n\tuntil [ -z \"$dns2\" ] || check_ip \"$dns2\"; do\n\t\techo \"Invalid DNS server.\"\n\t\tread -rp \"Enter secondary DNS server (Enter to skip): \" dns2\n\tdone\n}\n\nselect_dns() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Select a DNS server for the clients:\"\n\t\techo \"   1) Current system resolvers\"\n\t\techo \"   2) Google Public DNS\"\n\t\techo \"   3) Cloudflare DNS\"\n\t\techo \"   4) OpenDNS\"\n\t\techo \"   5) Quad9\"\n\t\techo \"   6) AdGuard DNS\"\n\t\techo \"   7) Custom\"\n\t\tread -rp \"DNS server [2]: \" dns\n\t\tuntil [[ -z \"$dns\" || \"$dns\" =~ ^[1-7]$ ]]; do\n\t\t\techo \"$dns: invalid selection.\"\n\t\t\tread -rp \"DNS server [2]: \" dns\n\t\tdone\n\telse\n\t\tdns=2\n\tfi\n\tif [ \"$dns\" = 7 ]; then\n\t\tenter_custom_dns\n\tfi\n}\n\nenter_first_client_name() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"Enter a name for the first client:\"\n\t\tread -rp \"Name [client]: \" unsanitized_client\n\t\tset_client_name\n\t\t[[ -z \"$client\" ]] && client=client\n\telse\n\t\tclient=client\n\tfi\n}\n\nshow_setup_ready() {\n\tif [ \"$auto\" = 0 ]; then\n\t\techo\n\t\techo \"OpenVPN installation is ready to begin.\"\n\tfi\n}\n\ncheck_firewall() {\n\t# Install a firewall if firewalld or iptables are not already available\n\tif ! systemctl is-active --quiet firewalld.service && ! hash iptables 2>/dev/null; then\n\t\tif [[ \"$os\" == \"centos\" || \"$os\" == \"fedora\" ]]; then\n\t\t\tfirewall=\"firewalld\"\n\t\telif [[ \"$os\" == \"openSUSE\" ]]; then\n\t\t\tfirewall=\"firewalld\"\n\t\telif [[ \"$os\" == \"debian\" || \"$os\" == \"ubuntu\" ]]; then\n\t\t\tfirewall=\"iptables\"\n\t\tfi\n\t\tif [[ \"$firewall\" == \"firewalld\" ]]; then\n\t\t\t# We don't want to silently enable firewalld, so we give a subtle warning\n\t\t\t# If the user continues, firewalld will be installed and enabled during setup\n\t\t\techo\n\t\t\techo \"Note: firewalld, which is required to manage routing tables, will also be installed.\"\n\t\tfi\n\tfi\n}\n\nabort_and_exit() {\n\techo \"Abort. No changes were made.\" >&2\n\texit 1\n}\n\nconfirm_setup() {\n\tif [ \"$auto\" = 0 ]; then\n\t\tprintf \"Do you want to continue? [Y/n] \"\n\t\tread -r response\n\t\tcase $response in\n\t\t\t[yY][eE][sS]|[yY]|'')\n\t\t\t\t:\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tabort_and_exit\n\t\t\t\t;;\n\t\tesac\n\tfi\n}\n\nshow_start_setup() {\n\techo\n\techo \"Installing OpenVPN, please wait...\"\n}\n\ndisable_limitnproc() {\n\t# If running inside a container, disable LimitNPROC to prevent conflicts\n\tif systemd-detect-virt -cq; then\n\t\tmkdir /etc/systemd/system/openvpn-server@server.service.d/ 2>/dev/null\n\t\techo \"[Service]\nLimitNPROC=infinity\" > /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf\n\tfi\n}\n\ninstall_pkgs() {\n\tif [[ \"$os\" = \"debian\" || \"$os\" = \"ubuntu\" ]]; then\n\t\texport DEBIAN_FRONTEND=noninteractive\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq update || apt-get -yqq update\n\t\t\tapt-get -yqq --no-install-recommends install openvpn >/dev/null\n\t\t) || exiterr2\n\t\t(\n\t\t\tset -x\n\t\t\tapt-get -yqq install openssl ca-certificates $firewall >/dev/null\n\t\t) || exiterr2\n\telif [[ \"$os\" = \"centos\" ]]; then\n\t\tif grep -qs \"Amazon Linux release 2 \" /etc/system-release; then\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tamazon-linux-extras install epel -y >/dev/null\n\t\t\t) || exit 1\n\t\telse\n\t\t\t(\n\t\t\t\tset -x\n\t\t\t\tyum -y -q install epel-release >/dev/null\n\t\t\t) || exiterr3\n\t\tfi\n\t\t(\n\t\t\tset -x\n\t\t\tyum -y -q install openvpn openssl ca-certificates tar $firewall >/dev/null 2>&1\n\t\t) || exiterr3\n\telif [[ \"$os\" = \"fedora\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tdnf install -y openvpn openssl ca-certificates tar $firewall >/dev/null\n\t\t) || exiterr \"'dnf install' failed.\"\n\telse\n\t\t# Else, OS must be openSUSE\n\t\t(\n\t\t\tset -x\n\t\t\tzypper install -y openvpn openssl ca-certificates tar $firewall >/dev/null\n\t\t) || exiterr4\n\tfi\n\t# If firewalld was just installed, enable it\n\tif [[ \"$firewall\" == \"firewalld\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now firewalld.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nremove_pkgs() {\n\tif [[ \"$os\" = \"debian\" || \"$os\" = \"ubuntu\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\trm -rf /etc/openvpn/server\n\t\t\tapt-get remove --purge -y openvpn >/dev/null\n\t\t)\n\telif [[ \"$os\" = \"openSUSE\" ]]; then\n\t\t(\n\t\t\tset -x\n\t\t\tzypper remove -y openvpn >/dev/null\n\t\t\trm -rf /etc/openvpn/server\n\t\t)\n\t\trm -f /etc/openvpn/ipp.txt\n\telse\n\t\t# Else, OS must be CentOS or Fedora\n\t\t(\n\t\t\tset -x\n\t\t\tyum -y -q remove openvpn >/dev/null\n\t\t\trm -rf /etc/openvpn/server\n\t\t)\n\tfi\n}\n\ncreate_firewall_rules() {\n\tif systemctl is-active --quiet firewalld.service; then\n\t\t# Using both permanent and not permanent rules to avoid a firewalld\n\t\t# reload.\n\t\t# We don't use --add-service=openvpn because that would only work with\n\t\t# the default port and protocol.\n\t\tfirewall-cmd -q --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --zone=trusted --add-source=10.8.0.0/24\n\t\tfirewall-cmd -q --permanent --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=10.8.0.0/24\n\t\t# Set NAT for the VPN subnet\n\t\tfirewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tfirewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\tfirewall-cmd -q --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\t\tfirewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\tfi\n\telse\n\t\t# Create a service to set up persistent iptables rules\n\t\tiptables_path=$(command -v iptables)\n\t\tip6tables_path=$(command -v ip6tables)\n\t\t# nf_tables is not available as standard in OVZ kernels. So use iptables-legacy\n\t\t# if we are in OVZ, with a nf_tables backend and iptables-legacy is available.\n\t\tif [[ $(systemd-detect-virt) == \"openvz\" ]] && readlink -f \"$(command -v iptables)\" | grep -q \"nft\" && hash iptables-legacy 2>/dev/null; then\n\t\t\tiptables_path=$(command -v iptables-legacy)\n\t\t\tip6tables_path=$(command -v ip6tables-legacy)\n\t\tfi\n\t\techo \"[Unit]\nBefore=network.target\n[Service]\nType=oneshot\nExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\nExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT\nExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\nExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT\nExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" > /etc/systemd/system/openvpn-iptables.service\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\techo \"ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\nExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\nExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" >> /etc/systemd/system/openvpn-iptables.service\n\t\tfi\n\t\techo \"RemainAfterExit=yes\n[Install]\nWantedBy=multi-user.target\" >> /etc/systemd/system/openvpn-iptables.service\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn-iptables.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nremove_firewall_rules() {\n\tport=$(grep '^port ' \"$OVPN_CONF\" | cut -d \" \" -f 2)\n\tprotocol=$(grep '^proto ' \"$OVPN_CONF\" | cut -d \" \" -f 2)\n\tif systemctl is-active --quiet firewalld.service; then\n\t\tip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep '\\-s 10.8.0.0/24 '\"'\"'!'\"'\"' -d 10.8.0.0/24' | grep -oE '[^ ]+$')\n\t\t# Using both permanent and not permanent rules to avoid a firewalld reload.\n\t\tfirewall-cmd -q --remove-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --zone=trusted --remove-source=10.8.0.0/24\n\t\tfirewall-cmd -q --permanent --remove-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=10.8.0.0/24\n\t\tfirewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE\n\t\tif grep -qs \"server-ipv6\" \"$OVPN_CONF\"; then\n\t\t\tip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep '\\-s fddd:1194:1194:1194::/64 '\"'\"'!'\"'\"' -d fddd:1194:1194:1194::/64' | grep -oE '[^ ]+$')\n\t\t\tfirewall-cmd -q --zone=trusted --remove-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE\n\t\tfi\n\telse\n\t\tsystemctl disable --now openvpn-iptables.service\n\t\trm -f /etc/systemd/system/openvpn-iptables.service\n\tfi\n\tif sestatus 2>/dev/null | grep \"Current mode\" | grep -q \"enforcing\" && [[ \"$port\" != 1194 ]]; then\n\t\tsemanage port -d -t openvpn_port_t -p \"$protocol\" \"$port\"\n\tfi\n}\n\ninstall_easyrsa() {\n\t# Get easy-rsa\n\teasy_rsa_url='https://github.com/OpenVPN/easy-rsa/releases/download/v3.2.0/EasyRSA-3.2.0.tgz'\n\tmkdir -p /etc/openvpn/server/easy-rsa/\n\t{ wget -t 3 -T 30 -qO- \"$easy_rsa_url\" 2>/dev/null || curl -m 30 -sL \"$easy_rsa_url\" ; } | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1\n\tif [ ! -f /etc/openvpn/server/easy-rsa/easyrsa ]; then\n\t\texiterr \"Failed to download EasyRSA from $easy_rsa_url.\"\n\tfi\n\tchown -R root:root /etc/openvpn/server/easy-rsa/\n}\n\ncreate_pki_and_certs() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t# Create the PKI, set up the CA and the server and client certificates\n\t\t./easyrsa --batch init-pki >/dev/null\n\t\t./easyrsa --batch build-ca nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 build-server-full server nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 build-client-full \"$client\" nopass >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 gen-crl >/dev/null 2>&1\n\t)\n\t# Move the stuff we need\n\tcp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server\n\t# CRL is read with each client connection, while OpenVPN is dropped to nobody\n\tchown nobody:\"$group_name\" /etc/openvpn/server/crl.pem\n\t# Without +x in the directory, OpenVPN can't run a stat() on the CRL file\n\tchmod o+x /etc/openvpn/server/\n\t(\n\t\tset -x\n\t\t# Generate key for tls-crypt\n\t\topenvpn --genkey --secret /etc/openvpn/server/tc.key >/dev/null\n\t)\n\t# Create the DH parameters file using the predefined ffdhe2048 group\n\techo '-----BEGIN DH PARAMETERS-----\nMIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz\n+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a\n87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7\nYdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi\n7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD\nssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==\n-----END DH PARAMETERS-----' > /etc/openvpn/server/dh.pem\n}\n\ncreate_dns_config() {\n\tcase \"$dns\" in\n\t\t1)\n\t\t\t# Locate the proper resolv.conf\n\t\t\t# Needed for systems running systemd-resolved\n\t\t\tif grep '^nameserver' \"/etc/resolv.conf\" | grep -qv '127.0.0.53' ; then\n\t\t\t\tresolv_conf=\"/etc/resolv.conf\"\n\t\t\telse\n\t\t\t\tresolv_conf=\"/run/systemd/resolve/resolv.conf\"\n\t\t\tfi\n\t\t\t# Obtain the resolvers from resolv.conf and use them for OpenVPN\n\t\t\tgrep -v '^#\\|^;' \"$resolv_conf\" | grep '^nameserver' | grep -v '127.0.0.53' | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | while read line; do\n\t\t\t\techo \"push \\\"dhcp-option DNS $line\\\"\" >> \"$OVPN_CONF\"\n\t\t\tdone\n\t\t;;\n\t\t2|\"\")\n\t\t\techo 'push \"dhcp-option DNS 8.8.8.8\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 8.8.4.4\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t3)\n\t\t\techo 'push \"dhcp-option DNS 1.1.1.1\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 1.0.0.1\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t4)\n\t\t\techo 'push \"dhcp-option DNS 208.67.222.222\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 208.67.220.220\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t5)\n\t\t\techo 'push \"dhcp-option DNS 9.9.9.9\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 149.112.112.112\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t6)\n\t\t\techo 'push \"dhcp-option DNS 94.140.14.14\"' >> \"$OVPN_CONF\"\n\t\t\techo 'push \"dhcp-option DNS 94.140.15.15\"' >> \"$OVPN_CONF\"\n\t\t;;\n\t\t7)\n\t\t\techo \"push \\\"dhcp-option DNS $dns1\\\"\" >> \"$OVPN_CONF\"\n\t\t\tif [ -n \"$dns2\" ]; then\n\t\t\t\techo \"push \\\"dhcp-option DNS $dns2\\\"\" >> \"$OVPN_CONF\"\n\t\t\tfi\n\t\t;;\n\tesac\n}\n\ncreate_server_config() {\n\t# Generate server.conf\n\techo \"local $ip\nport $port\nproto $protocol\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\nauth SHA256\ntls-crypt tc.key\ntopology subnet\nserver 10.8.0.0 255.255.255.0\" > \"$OVPN_CONF\"\n\t# IPv6\n\tif [[ -z \"$ip6\" ]]; then\n\t\techo 'push \"block-ipv6\"' >> \"$OVPN_CONF\"\n\t\techo 'push \"ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1\"' >> \"$OVPN_CONF\"\n\telse\n\t\techo 'server-ipv6 fddd:1194:1194:1194::/64' >> \"$OVPN_CONF\"\n\tfi\n\techo 'push \"redirect-gateway def1 ipv6 bypass-dhcp\"' >> \"$OVPN_CONF\"\n\techo 'ifconfig-pool-persist ipp.txt' >> \"$OVPN_CONF\"\n\tcreate_dns_config\n\techo 'push \"block-outside-dns\"' >> \"$OVPN_CONF\"\n\techo \"keepalive 10 120\ncipher AES-128-GCM\nuser nobody\ngroup $group_name\npersist-key\npersist-tun\nverb 3\ncrl-verify crl.pem\" >> \"$OVPN_CONF\"\n\tif [[ \"$protocol\" = \"udp\" ]]; then\n\t\techo \"explicit-exit-notify\" >> \"$OVPN_CONF\"\n\tfi\n}\n\nget_export_dir() {\n\texport_to_home_dir=0\n\texport_dir=~/\n\tif [ -n \"$SUDO_USER\" ] && getent group \"$SUDO_USER\" >/dev/null 2>&1; then\n\t\tuser_home_dir=$(getent passwd \"$SUDO_USER\" 2>/dev/null | cut -d: -f6)\n\t\tif [ -d \"$user_home_dir\" ] && [ \"$user_home_dir\" != \"/\" ]; then\n\t\t\texport_dir=\"$user_home_dir/\"\n\t\t\texport_to_home_dir=1\n\t\tfi\n\tfi\n}\n\nnew_client() {\n\tget_export_dir\n\t# Generates the custom client.ovpn\n\t{\n\tcat /etc/openvpn/server/client-common.txt\n\techo \"<ca>\"\n\tcat /etc/openvpn/server/easy-rsa/pki/ca.crt\n\techo \"</ca>\"\n\techo \"<cert>\"\n\tsed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt\n\techo \"</cert>\"\n\techo \"<key>\"\n\tcat /etc/openvpn/server/easy-rsa/pki/private/\"$client\".key\n\techo \"</key>\"\n\techo \"<tls-crypt>\"\n\tsed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key\n\techo \"</tls-crypt>\"\n\t} > \"$export_dir$client\".ovpn\n\tif [ \"$export_to_home_dir\" = 1 ]; then\n\t\tchown \"$SUDO_USER:$SUDO_USER\" \"$export_dir$client\".ovpn\n\tfi\n\tchmod 600 \"$export_dir$client\".ovpn\n}\n\nupdate_sysctl() {\n\tmkdir -p /etc/sysctl.d\n\tconf_fwd=\"/etc/sysctl.d/99-openvpn-forward.conf\"\n\tconf_opt=\"/etc/sysctl.d/99-openvpn-optimize.conf\"\n\t# Enable net.ipv4.ip_forward for the system\n\techo 'net.ipv4.ip_forward=1' > \"$conf_fwd\"\n\tif [[ -n \"$ip6\" ]]; then\n\t\t# Enable net.ipv6.conf.all.forwarding for the system\n\t\techo \"net.ipv6.conf.all.forwarding=1\" >> \"$conf_fwd\"\n\tfi\n\t# Optimize sysctl settings such as TCP buffer sizes\n\tbase_url=\"https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0\"\n\tconf_url=\"$base_url/sysctl-ovpn-$os\"\n\t[ \"$auto\" != 0 ] && conf_url=\"${conf_url}-auto\"\n\twget -t 3 -T 30 -q -O \"$conf_opt\" \"$conf_url\" 2>/dev/null \\\n\t\t|| curl -m 30 -fsL \"$conf_url\" -o \"$conf_opt\" 2>/dev/null \\\n\t\t|| { /bin/rm -f \"$conf_opt\"; touch \"$conf_opt\"; }\n\t# Enable TCP BBR congestion control if kernel version >= 4.20\n\tif modprobe -q tcp_bbr \\\n\t\t&& printf '%s\\n%s' \"4.20\" \"$(uname -r)\" | sort -C -V \\\n\t\t&& [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; then\ncat >> \"$conf_opt\" <<'EOF'\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\nEOF\n\tfi\n\t# Apply sysctl settings\n\tsysctl -e -q -p \"$conf_fwd\"\n\tsysctl -e -q -p \"$conf_opt\"\n}\n\nupdate_rclocal() {\n\tipt_cmd=\"systemctl restart openvpn-iptables.service\"\n\tif ! grep -qs \"$ipt_cmd\" /etc/rc.local; then\n\t\tif [ ! -f /etc/rc.local ]; then\n\t\t\techo '#!/bin/sh' > /etc/rc.local\n\t\telse\n\t\t\tif [ \"$os\" = \"ubuntu\" ] || [ \"$os\" = \"debian\" ]; then\n\t\t\t\tsed --follow-symlinks -i '/^exit 0/d' /etc/rc.local\n\t\t\tfi\n\t\tfi\ncat >> /etc/rc.local <<EOF\n\n$ipt_cmd\nEOF\n\t\tif [ \"$os\" = \"ubuntu\" ] || [ \"$os\" = \"debian\" ]; then\n\t\t\techo \"exit 0\" >> /etc/rc.local\n\t\tfi\n\t\tchmod +x /etc/rc.local\n\tfi\n}\n\nupdate_selinux() {\n\t# If SELinux is enabled and a custom port was selected, we need this\n\tif sestatus 2>/dev/null | grep \"Current mode\" | grep -q \"enforcing\" && [[ \"$port\" != 1194 ]]; then\n\t\t# Install semanage if not already present\n\t\tif ! hash semanage 2>/dev/null; then\n\t\t\tif [[ \"$os_version\" -eq 7 ]]; then\n\t\t\t\t# Centos 7\n\t\t\t\t(\n\t\t\t\t\tset -x\n\t\t\t\t\tyum -y -q install policycoreutils-python >/dev/null\n\t\t\t\t) || exiterr3\n\t\t\telse\n\t\t\t\t# CentOS 8/9 or Fedora\n\t\t\t\t(\n\t\t\t\t\tset -x\n\t\t\t\t\tdnf install -y policycoreutils-python-utils >/dev/null\n\t\t\t\t) || exiterr \"'dnf install' failed.\"\n\t\t\tfi\n\t\tfi\n\t\tsemanage port -a -t openvpn_port_t -p \"$protocol\" \"$port\"\n\tfi\n}\n\ncreate_client_common() {\n\t# If the server is behind NAT, use the correct IP address\n\t[[ -n \"$public_ip\" ]] && ip=\"$public_ip\"\n\t# client-common.txt is created so we have a template to add further users later\n\techo \"client\ndev tun\nproto $protocol\nremote $ip $port\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nremote-cert-tls server\nauth SHA256\ncipher AES-128-GCM\nignore-unknown-option block-outside-dns block-ipv6\nverb 3\" > /etc/openvpn/server/client-common.txt\n}\n\nstart_openvpn_service() {\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn-server@server.service >/dev/null 2>&1\n\t\t)\n\telse\n\t\tln -s /etc/openvpn/server/* /etc/openvpn >/dev/null 2>&1\n\t\t(\n\t\t\tset -x\n\t\t\tsystemctl enable --now openvpn@server.service >/dev/null 2>&1\n\t\t)\n\tfi\n}\n\nfinish_setup() {\n\techo\n\techo \"Finished!\"\n\techo\n\techo \"The client configuration is available in: $export_dir$client.ovpn\"\n\techo \"New clients can be added by running this script again.\"\n}\n\nselect_menu_option() {\n\techo\n\techo \"OpenVPN is already installed.\"\n\techo\n\techo \"Select an option:\"\n\techo \"   1) Add a new client\"\n\techo \"   2) Export config for an existing client\"\n\techo \"   3) List existing clients\"\n\techo \"   4) Revoke an existing client\"\n\techo \"   5) Remove OpenVPN\"\n\techo \"   6) Exit\"\n\tread -rp \"Option: \" option\n\tuntil [[ \"$option\" =~ ^[1-6]$ ]]; do\n\t\techo \"$option: invalid selection.\"\n\t\tread -rp \"Option: \" option\n\tdone\n}\n\nshow_clients() {\n\ttail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep \"^V\" | cut -d '=' -f 2 | nl -s ') '\n}\n\nenter_client_name() {\n\techo\n\techo \"Provide a name for the client:\"\n\tread -rp \"Name: \" unsanitized_client\n\t[ -z \"$unsanitized_client\" ] && abort_and_exit\n\tset_client_name\n\twhile [[ -z \"$client\" || -e /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt ]]; do\n\t\tif [ -z \"$client\" ]; then\n\t\t\techo \"Invalid client name. Use one word only, no special characters except '-' and '_'.\"\n\t\telse\n\t\t\techo \"$client: invalid name. Client already exists.\"\n\t\tfi\n\t\tread -rp \"Name: \" unsanitized_client\n\t\t[ -z \"$unsanitized_client\" ] && abort_and_exit\n\t\tset_client_name\n\tdone\n}\n\nbuild_client_config() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t./easyrsa --batch --days=3650 build-client-full \"$client\" nopass >/dev/null 2>&1\n\t)\n}\n\nprint_client_action() {\n\techo\n\techo \"$client $1. Configuration available in: $export_dir$client.ovpn\"\n}\n\nprint_check_clients() {\n\techo\n\techo \"Checking for existing client(s)...\"\n}\n\ncheck_clients() {\n\tnum_of_clients=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep -c \"^V\")\n\tif [[ \"$num_of_clients\" = 0 ]]; then\n\t\techo\n\t\techo \"There are no existing clients!\"\n\t\texit 1\n\tfi\n}\n\nprint_client_total() {\n\tif [ \"$num_of_clients\" = 1 ]; then\n\t\tprintf '\\n%s\\n' \"Total: 1 client\"\n\telif [ -n \"$num_of_clients\" ]; then\n\t\tprintf '\\n%s\\n' \"Total: $num_of_clients clients\"\n\tfi\n}\n\nselect_client_to() {\n\techo\n\techo \"Select the client to $1:\"\n\tshow_clients\n\tread -rp \"Client: \" client_num\n\t[ -z \"$client_num\" ] && abort_and_exit\n\tuntil [[ \"$client_num\" =~ ^[0-9]+$ && \"$client_num\" -le \"$num_of_clients\" ]]; do\n\t\techo \"$client_num: invalid selection.\"\n\t\tread -rp \"Client: \" client_num\n\t\t[ -z \"$client_num\" ] && abort_and_exit\n\tdone\n\tclient=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep \"^V\" | cut -d '=' -f 2 | sed -n \"$client_num\"p)\n}\n\nconfirm_revoke_client() {\n\tif [ \"$assume_yes\" != 1 ]; then\n\t\techo\n\t\tread -rp \"Confirm $client revocation? [y/N]: \" revoke\n\t\tuntil [[ \"$revoke\" =~ ^[yYnN]*$ ]]; do\n\t\t\techo \"$revoke: invalid selection.\"\n\t\t\tread -rp \"Confirm $client revocation? [y/N]: \" revoke\n\t\tdone\n\telse\n\t\trevoke=y\n\tfi\n}\n\nprint_revoke_client() {\n\techo\n\techo \"Revoking $client...\"\n}\n\nremove_client_conf() {\n\tget_export_dir\n\tovpn_file=\"$export_dir$client.ovpn\"\n\tif [ -f \"$ovpn_file\" ]; then\n\t\techo \"Removing $ovpn_file...\"\n\t\trm -f \"$ovpn_file\"\n\tfi\n}\n\nrevoke_client_ovpn() {\n\tcd /etc/openvpn/server/easy-rsa/ || exit 1\n\t(\n\t\tset -x\n\t\t./easyrsa --batch revoke \"$client\" >/dev/null 2>&1\n\t\t./easyrsa --batch --days=3650 gen-crl >/dev/null 2>&1\n\t)\n\trm -f /etc/openvpn/server/crl.pem\n\tcp /etc/openvpn/server/easy-rsa/pki/crl.pem /etc/openvpn/server/crl.pem\n\t# CRL is read with each client connection, when OpenVPN is dropped to nobody\n\tchown nobody:\"$group_name\" /etc/openvpn/server/crl.pem\n\tremove_client_conf\n}\n\nprint_client_revoked() {\n\techo\n\techo \"$client revoked!\"\n}\n\nprint_client_revocation_aborted() {\n\techo\n\techo \"$client revocation aborted!\"\n}\n\nconfirm_remove_ovpn() {\n\tif [ \"$assume_yes\" != 1 ]; then\n\t\techo\n\t\tread -rp \"Confirm OpenVPN removal? [y/N]: \" remove\n\t\tuntil [[ \"$remove\" =~ ^[yYnN]*$ ]]; do\n\t\t\techo \"$remove: invalid selection.\"\n\t\t\tread -rp \"Confirm OpenVPN removal? [y/N]: \" remove\n\t\tdone\n\telse\n\t\tremove=y\n\tfi\n}\n\nprint_remove_ovpn() {\n\techo\n\techo \"Removing OpenVPN, please wait...\"\n}\n\ndisable_ovpn_service() {\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\tsystemctl disable --now openvpn-server@server.service\n\telse\n\t\tsystemctl disable --now openvpn@server.service\n\tfi\n\trm -f /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf\n}\n\nremove_sysctl_rules() {\n\trm -f /etc/sysctl.d/99-openvpn-forward.conf /etc/sysctl.d/99-openvpn-optimize.conf\n\tif [ ! -f /usr/bin/wg-quick ] && [ ! -f /usr/sbin/ipsec ] \\\n\t\t&& [ ! -f /usr/local/sbin/ipsec ]; then\n\t\techo 0 > /proc/sys/net/ipv4/ip_forward\n\t\techo 0 > /proc/sys/net/ipv6/conf/all/forwarding\n\tfi\n}\n\nremove_rclocal_rules() {\n\tipt_cmd=\"systemctl restart openvpn-iptables.service\"\n\tif grep -qs \"$ipt_cmd\" /etc/rc.local; then\n\t\tsed --follow-symlinks -i \"/^$ipt_cmd/d\" /etc/rc.local\n\tfi\n}\n\nprint_ovpn_removed() {\n\techo\n\techo \"OpenVPN removed!\"\n}\n\nprint_ovpn_removal_aborted() {\n\techo\n\techo \"OpenVPN removal aborted!\"\n}\n\novpnsetup() {\n\nexport PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\ncheck_root\ncheck_shell\ncheck_kernel\ncheck_os\ncheck_os_ver\ncheck_tun\n\nOVPN_CONF=\"/etc/openvpn/server/server.conf\"\n\nauto=0\nassume_yes=0\nadd_client=0\nexport_client=0\nlist_clients=0\nrevoke_client=0\nremove_ovpn=0\n\nparse_args \"$@\"\ncheck_args\n\nif [ \"$add_client\" = 1 ]; then\n\tshow_header\n\techo\n\tbuild_client_config\n\tnew_client\n\tprint_client_action added\n\texit 0\nfi\n\nif [ \"$export_client\" = 1 ]; then\n\tshow_header\n\tnew_client\n\tprint_client_action exported\n\texit 0\nfi\n\nif [ \"$list_clients\" = 1 ]; then\n\tshow_header\n\tprint_check_clients\n\tcheck_clients\n\techo\n\tshow_clients\n\tprint_client_total\n\texit 0\nfi\n\nif [ \"$revoke_client\" = 1 ]; then\n\tshow_header\n\tconfirm_revoke_client\n\tif [[ \"$revoke\" =~ ^[yY]$ ]]; then\n\t\tprint_revoke_client\n\t\trevoke_client_ovpn\n\t\tprint_client_revoked\n\t\texit 0\n\telse\n\t\tprint_client_revocation_aborted\n\t\texit 1\n\tfi\nfi\n\nif [ \"$remove_ovpn\" = 1 ]; then\n\tshow_header\n\tconfirm_remove_ovpn\n\tif [[ \"$remove\" =~ ^[yY]$ ]]; then\n\t\tprint_remove_ovpn\n\t\tremove_firewall_rules\n\t\tdisable_ovpn_service\n\t\tremove_sysctl_rules\n\t\tremove_rclocal_rules\n\t\tremove_pkgs\n\t\tprint_ovpn_removed\n\t\texit 0\n\telse\n\t\tprint_ovpn_removal_aborted\n\t\texit 1\n\tfi\nfi\n\nif [[ ! -e \"$OVPN_CONF\" ]]; then\n\tcheck_nftables\n\tinstall_wget\n\tinstall_iproute\n\tshow_welcome\n\tpublic_ip=\"\"\n\tif [ \"$auto\" = 0 ]; then\n\t\tenter_server_address\n\telse\n\t\tdetect_ip\n\t\tcheck_nat_ip\n\tfi\n\tshow_config\n\tdetect_ipv6\n\tselect_protocol\n\tselect_port\n\tselect_dns\n\tenter_first_client_name\n\tshow_setup_ready\n\tcheck_firewall\n\tconfirm_setup\n\tshow_start_setup\n\tdisable_limitnproc\n\tinstall_pkgs\n\tinstall_easyrsa\n\tcreate_pki_and_certs\n\tcreate_server_config\n\tupdate_sysctl\n\tcreate_firewall_rules\n\tif [ \"$os\" != \"openSUSE\" ]; then\n\t\tupdate_rclocal\n\tfi\n\tupdate_selinux\n\tcreate_client_common\n\tstart_openvpn_service\n\tnew_client\n\tfinish_setup\nelse\n\tshow_header\n\tselect_menu_option\n\tcase \"$option\" in\n\t\t1)\n\t\t\tenter_client_name\n\t\t\tbuild_client_config\n\t\t\tnew_client\n\t\t\tprint_client_action added\n\t\t\texit 0\n\t\t;;\n\t\t2)\n\t\t\tcheck_clients\n\t\t\tselect_client_to export\n\t\t\tnew_client\n\t\t\tprint_client_action exported\n\t\t\texit 0\n\t\t;;\n\t\t3)\n\t\t\tprint_check_clients\n\t\t\tcheck_clients\n\t\t\techo\n\t\t\tshow_clients\n\t\t\tprint_client_total\n\t\t\texit 0\n\t\t;;\n\t\t4)\n\t\t\tcheck_clients\n\t\t\tselect_client_to revoke\n\t\t\tconfirm_revoke_client\n\t\t\tif [[ \"$revoke\" =~ ^[yY]$ ]]; then\n\t\t\t\tprint_revoke_client\n\t\t\t\trevoke_client_ovpn\n\t\t\t\tprint_client_revoked\n\t\t\t\texit 0\n\t\t\telse\n\t\t\t\tprint_client_revocation_aborted\n\t\t\t\texit 1\n\t\t\tfi\n\t\t;;\n\t\t5)\n\t\t\tconfirm_remove_ovpn\n\t\t\tif [[ \"$remove\" =~ ^[yY]$ ]]; then\n\t\t\t\tprint_remove_ovpn\n\t\t\t\tremove_firewall_rules\n\t\t\t\tdisable_ovpn_service\n\t\t\t\tremove_sysctl_rules\n\t\t\t\tremove_rclocal_rules\n\t\t\t\tremove_pkgs\n\t\t\t\tprint_ovpn_removed\n\t\t\t\texit 0\n\t\t\telse\n\t\t\t\tprint_ovpn_removal_aborted\n\t\t\t\texit 1\n\t\t\tfi\n\t\t;;\n\t\t6)\n\t\t\texit 0\n\t\t;;\n\tesac\nfi\n}\n\n## Defer setup until we have the complete script\novpnsetup \"$@\"\n\nexit 0\n\n```","slug":"openvpn-部署脚本","published":1,"updated":"2024-08-07T08:04:17.899Z","comments":1,"layout":"post","photos":[],"_id":"clzjkcjlo00005cjdg6gi1mo5","content":"<p>脚本连接：<br><a href=\"openvpn-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/openvpn.sh\">openvpn.sh</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br><span class=\"line\">1027</span><br><span class=\"line\">1028</span><br><span class=\"line\">1029</span><br><span class=\"line\">1030</span><br><span class=\"line\">1031</span><br><span class=\"line\">1032</span><br><span class=\"line\">1033</span><br><span class=\"line\">1034</span><br><span class=\"line\">1035</span><br><span class=\"line\">1036</span><br><span class=\"line\">1037</span><br><span class=\"line\">1038</span><br><span class=\"line\">1039</span><br><span class=\"line\">1040</span><br><span class=\"line\">1041</span><br><span class=\"line\">1042</span><br><span class=\"line\">1043</span><br><span class=\"line\">1044</span><br><span class=\"line\">1045</span><br><span class=\"line\">1046</span><br><span class=\"line\">1047</span><br><span class=\"line\">1048</span><br><span class=\"line\">1049</span><br><span class=\"line\">1050</span><br><span class=\"line\">1051</span><br><span class=\"line\">1052</span><br><span class=\"line\">1053</span><br><span class=\"line\">1054</span><br><span class=\"line\">1055</span><br><span class=\"line\">1056</span><br><span class=\"line\">1057</span><br><span class=\"line\">1058</span><br><span class=\"line\">1059</span><br><span class=\"line\">1060</span><br><span class=\"line\">1061</span><br><span class=\"line\">1062</span><br><span class=\"line\">1063</span><br><span class=\"line\">1064</span><br><span class=\"line\">1065</span><br><span class=\"line\">1066</span><br><span class=\"line\">1067</span><br><span class=\"line\">1068</span><br><span class=\"line\">1069</span><br><span class=\"line\">1070</span><br><span class=\"line\">1071</span><br><span class=\"line\">1072</span><br><span class=\"line\">1073</span><br><span class=\"line\">1074</span><br><span class=\"line\">1075</span><br><span class=\"line\">1076</span><br><span class=\"line\">1077</span><br><span class=\"line\">1078</span><br><span class=\"line\">1079</span><br><span class=\"line\">1080</span><br><span class=\"line\">1081</span><br><span class=\"line\">1082</span><br><span class=\"line\">1083</span><br><span class=\"line\">1084</span><br><span class=\"line\">1085</span><br><span class=\"line\">1086</span><br><span class=\"line\">1087</span><br><span class=\"line\">1088</span><br><span class=\"line\">1089</span><br><span class=\"line\">1090</span><br><span class=\"line\">1091</span><br><span class=\"line\">1092</span><br><span class=\"line\">1093</span><br><span class=\"line\">1094</span><br><span class=\"line\">1095</span><br><span class=\"line\">1096</span><br><span class=\"line\">1097</span><br><span class=\"line\">1098</span><br><span class=\"line\">1099</span><br><span class=\"line\">1100</span><br><span class=\"line\">1101</span><br><span class=\"line\">1102</span><br><span class=\"line\">1103</span><br><span class=\"line\">1104</span><br><span class=\"line\">1105</span><br><span class=\"line\">1106</span><br><span class=\"line\">1107</span><br><span class=\"line\">1108</span><br><span class=\"line\">1109</span><br><span class=\"line\">1110</span><br><span class=\"line\">1111</span><br><span class=\"line\">1112</span><br><span class=\"line\">1113</span><br><span class=\"line\">1114</span><br><span class=\"line\">1115</span><br><span class=\"line\">1116</span><br><span class=\"line\">1117</span><br><span class=\"line\">1118</span><br><span class=\"line\">1119</span><br><span class=\"line\">1120</span><br><span class=\"line\">1121</span><br><span class=\"line\">1122</span><br><span class=\"line\">1123</span><br><span class=\"line\">1124</span><br><span class=\"line\">1125</span><br><span class=\"line\">1126</span><br><span class=\"line\">1127</span><br><span class=\"line\">1128</span><br><span class=\"line\">1129</span><br><span class=\"line\">1130</span><br><span class=\"line\">1131</span><br><span class=\"line\">1132</span><br><span class=\"line\">1133</span><br><span class=\"line\">1134</span><br><span class=\"line\">1135</span><br><span class=\"line\">1136</span><br><span class=\"line\">1137</span><br><span class=\"line\">1138</span><br><span class=\"line\">1139</span><br><span class=\"line\">1140</span><br><span class=\"line\">1141</span><br><span class=\"line\">1142</span><br><span class=\"line\">1143</span><br><span class=\"line\">1144</span><br><span class=\"line\">1145</span><br><span class=\"line\">1146</span><br><span class=\"line\">1147</span><br><span class=\"line\">1148</span><br><span class=\"line\">1149</span><br><span class=\"line\">1150</span><br><span class=\"line\">1151</span><br><span class=\"line\">1152</span><br><span class=\"line\">1153</span><br><span class=\"line\">1154</span><br><span class=\"line\">1155</span><br><span class=\"line\">1156</span><br><span class=\"line\">1157</span><br><span class=\"line\">1158</span><br><span class=\"line\">1159</span><br><span class=\"line\">1160</span><br><span class=\"line\">1161</span><br><span class=\"line\">1162</span><br><span class=\"line\">1163</span><br><span class=\"line\">1164</span><br><span class=\"line\">1165</span><br><span class=\"line\">1166</span><br><span class=\"line\">1167</span><br><span class=\"line\">1168</span><br><span class=\"line\">1169</span><br><span class=\"line\">1170</span><br><span class=\"line\">1171</span><br><span class=\"line\">1172</span><br><span class=\"line\">1173</span><br><span class=\"line\">1174</span><br><span class=\"line\">1175</span><br><span class=\"line\">1176</span><br><span class=\"line\">1177</span><br><span class=\"line\">1178</span><br><span class=\"line\">1179</span><br><span class=\"line\">1180</span><br><span class=\"line\">1181</span><br><span class=\"line\">1182</span><br><span class=\"line\">1183</span><br><span class=\"line\">1184</span><br><span class=\"line\">1185</span><br><span class=\"line\">1186</span><br><span class=\"line\">1187</span><br><span class=\"line\">1188</span><br><span class=\"line\">1189</span><br><span class=\"line\">1190</span><br><span class=\"line\">1191</span><br><span class=\"line\">1192</span><br><span class=\"line\">1193</span><br><span class=\"line\">1194</span><br><span class=\"line\">1195</span><br><span class=\"line\">1196</span><br><span class=\"line\">1197</span><br><span class=\"line\">1198</span><br><span class=\"line\">1199</span><br><span class=\"line\">1200</span><br><span class=\"line\">1201</span><br><span class=\"line\">1202</span><br><span class=\"line\">1203</span><br><span class=\"line\">1204</span><br><span class=\"line\">1205</span><br><span class=\"line\">1206</span><br><span class=\"line\">1207</span><br><span class=\"line\">1208</span><br><span class=\"line\">1209</span><br><span class=\"line\">1210</span><br><span class=\"line\">1211</span><br><span class=\"line\">1212</span><br><span class=\"line\">1213</span><br><span class=\"line\">1214</span><br><span class=\"line\">1215</span><br><span class=\"line\">1216</span><br><span class=\"line\">1217</span><br><span class=\"line\">1218</span><br><span class=\"line\">1219</span><br><span class=\"line\">1220</span><br><span class=\"line\">1221</span><br><span class=\"line\">1222</span><br><span class=\"line\">1223</span><br><span class=\"line\">1224</span><br><span class=\"line\">1225</span><br><span class=\"line\">1226</span><br><span class=\"line\">1227</span><br><span class=\"line\">1228</span><br><span class=\"line\">1229</span><br><span class=\"line\">1230</span><br><span class=\"line\">1231</span><br><span class=\"line\">1232</span><br><span class=\"line\">1233</span><br><span class=\"line\">1234</span><br><span class=\"line\">1235</span><br><span class=\"line\">1236</span><br><span class=\"line\">1237</span><br><span class=\"line\">1238</span><br><span class=\"line\">1239</span><br><span class=\"line\">1240</span><br><span class=\"line\">1241</span><br><span class=\"line\">1242</span><br><span class=\"line\">1243</span><br><span class=\"line\">1244</span><br><span class=\"line\">1245</span><br><span class=\"line\">1246</span><br><span class=\"line\">1247</span><br><span class=\"line\">1248</span><br><span class=\"line\">1249</span><br><span class=\"line\">1250</span><br><span class=\"line\">1251</span><br><span class=\"line\">1252</span><br><span class=\"line\">1253</span><br><span class=\"line\">1254</span><br><span class=\"line\">1255</span><br><span class=\"line\">1256</span><br><span class=\"line\">1257</span><br><span class=\"line\">1258</span><br><span class=\"line\">1259</span><br><span class=\"line\">1260</span><br><span class=\"line\">1261</span><br><span class=\"line\">1262</span><br><span class=\"line\">1263</span><br><span class=\"line\">1264</span><br><span class=\"line\">1265</span><br><span class=\"line\">1266</span><br><span class=\"line\">1267</span><br><span class=\"line\">1268</span><br><span class=\"line\">1269</span><br><span class=\"line\">1270</span><br><span class=\"line\">1271</span><br><span class=\"line\">1272</span><br><span class=\"line\">1273</span><br><span class=\"line\">1274</span><br><span class=\"line\">1275</span><br><span class=\"line\">1276</span><br><span class=\"line\">1277</span><br><span class=\"line\">1278</span><br><span class=\"line\">1279</span><br><span class=\"line\">1280</span><br><span class=\"line\">1281</span><br><span class=\"line\">1282</span><br><span class=\"line\">1283</span><br><span class=\"line\">1284</span><br><span class=\"line\">1285</span><br><span class=\"line\">1286</span><br><span class=\"line\">1287</span><br><span class=\"line\">1288</span><br><span class=\"line\">1289</span><br><span class=\"line\">1290</span><br><span class=\"line\">1291</span><br><span class=\"line\">1292</span><br><span class=\"line\">1293</span><br><span class=\"line\">1294</span><br><span class=\"line\">1295</span><br><span class=\"line\">1296</span><br><span class=\"line\">1297</span><br><span class=\"line\">1298</span><br><span class=\"line\">1299</span><br><span class=\"line\">1300</span><br><span class=\"line\">1301</span><br><span class=\"line\">1302</span><br><span class=\"line\">1303</span><br><span class=\"line\">1304</span><br><span class=\"line\">1305</span><br><span class=\"line\">1306</span><br><span class=\"line\">1307</span><br><span class=\"line\">1308</span><br><span class=\"line\">1309</span><br><span class=\"line\">1310</span><br><span class=\"line\">1311</span><br><span class=\"line\">1312</span><br><span class=\"line\">1313</span><br><span class=\"line\">1314</span><br><span class=\"line\">1315</span><br><span class=\"line\">1316</span><br><span class=\"line\">1317</span><br><span class=\"line\">1318</span><br><span class=\"line\">1319</span><br><span class=\"line\">1320</span><br><span class=\"line\">1321</span><br><span class=\"line\">1322</span><br><span class=\"line\">1323</span><br><span class=\"line\">1324</span><br><span class=\"line\">1325</span><br><span class=\"line\">1326</span><br><span class=\"line\">1327</span><br><span class=\"line\">1328</span><br><span class=\"line\">1329</span><br><span class=\"line\">1330</span><br><span class=\"line\">1331</span><br><span class=\"line\">1332</span><br><span class=\"line\">1333</span><br><span class=\"line\">1334</span><br><span class=\"line\">1335</span><br><span class=\"line\">1336</span><br><span class=\"line\">1337</span><br><span class=\"line\">1338</span><br><span class=\"line\">1339</span><br><span class=\"line\">1340</span><br><span class=\"line\">1341</span><br><span class=\"line\">1342</span><br><span class=\"line\">1343</span><br><span class=\"line\">1344</span><br><span class=\"line\">1345</span><br><span class=\"line\">1346</span><br><span class=\"line\">1347</span><br><span class=\"line\">1348</span><br><span class=\"line\">1349</span><br><span class=\"line\">1350</span><br><span class=\"line\">1351</span><br><span class=\"line\">1352</span><br><span class=\"line\">1353</span><br><span class=\"line\">1354</span><br><span class=\"line\">1355</span><br><span class=\"line\">1356</span><br><span class=\"line\">1357</span><br><span class=\"line\">1358</span><br><span class=\"line\">1359</span><br><span class=\"line\">1360</span><br><span class=\"line\">1361</span><br><span class=\"line\">1362</span><br><span class=\"line\">1363</span><br><span class=\"line\">1364</span><br><span class=\"line\">1365</span><br><span class=\"line\">1366</span><br><span class=\"line\">1367</span><br><span class=\"line\">1368</span><br><span class=\"line\">1369</span><br><span class=\"line\">1370</span><br><span class=\"line\">1371</span><br><span class=\"line\">1372</span><br><span class=\"line\">1373</span><br><span class=\"line\">1374</span><br><span class=\"line\">1375</span><br><span class=\"line\">1376</span><br><span class=\"line\">1377</span><br><span class=\"line\">1378</span><br><span class=\"line\">1379</span><br><span class=\"line\">1380</span><br><span class=\"line\">1381</span><br><span class=\"line\">1382</span><br><span class=\"line\">1383</span><br><span class=\"line\">1384</span><br><span class=\"line\">1385</span><br><span class=\"line\">1386</span><br><span class=\"line\">1387</span><br><span class=\"line\">1388</span><br><span class=\"line\">1389</span><br><span class=\"line\">1390</span><br><span class=\"line\">1391</span><br><span class=\"line\">1392</span><br><span class=\"line\">1393</span><br><span class=\"line\">1394</span><br><span class=\"line\">1395</span><br><span class=\"line\">1396</span><br><span class=\"line\">1397</span><br><span class=\"line\">1398</span><br><span class=\"line\">1399</span><br><span class=\"line\">1400</span><br><span class=\"line\">1401</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># https://github.com/hwdsl2/openvpn-install</span></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Based on the work of Nyr and contributors at:</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">https://github.com/Nyr/openvpn-install</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Copyright (c) 2022-2024 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Copyright (c) 2013-2023 Nyr</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Released under the MIT License, see the accompanying file LICENSE.txt</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">or https://opensource.org/licenses/MIT</span><br><br>exiterr()  &#123; echo &quot;Error: $1&quot; &gt;&amp;2; exit 1; &#125;<br>exiterr2() &#123; exiterr &quot;&#x27;apt-get install&#x27; failed.&quot;; &#125;<br>exiterr3() &#123; exiterr &quot;&#x27;yum install&#x27; failed.&quot;; &#125;<br>exiterr4() &#123; exiterr &quot;&#x27;zypper install&#x27; failed.&quot;; &#125;<br><br>check_ip() &#123;<br>\tIP_REGEX=&#x27;^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$&#x27;<br>\tprintf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\\n&#x27; | grep -Eq &quot;$IP_REGEX&quot;<br>&#125;<br><br>check_dns_name() &#123;<br>\tFQDN_REGEX=&#x27;^([a-zA-Z0-9]([a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?\\.)+[a-zA-Z]&#123;2,&#125;$&#x27;<br>\tprintf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\\n&#x27; | grep -Eq &quot;$FQDN_REGEX&quot;<br>&#125;<br><br>check_root() &#123;<br>\tif [ &quot;$(id -u)&quot; != 0 ]; then<br>\t\texiterr &quot;This installer must be run as root. Try &#x27;sudo bash $0&#x27;&quot;<br>\tfi<br>&#125;<br><br>check_shell() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect Debian <span class=\"hljs-built_in\">users</span> running the script with <span class=\"hljs-string\">&quot;sh&quot;</span> instead of bash</span><br>\tif readlink /proc/$$/exe | grep -q &quot;dash&quot;; then<br>\t\texiterr &#x27;This installer needs to be run with &quot;bash&quot;, not &quot;sh&quot;.&#x27;<br>\tfi<br>&#125;<br><br>check_kernel() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect OpenVZ 6</span><br>\tif [[ $(uname -r | cut -d &quot;.&quot; -f 1) -eq 2 ]]; then<br>\t\texiterr &quot;The system is running an old kernel, which is incompatible with this installer.&quot;<br>\tfi<br>&#125;<br><br>check_os() &#123;<br>\tif grep -qs &quot;ubuntu&quot; /etc/os-release; then<br>\t\tos=&quot;ubuntu&quot;<br>\t\tos_version=$(grep &#x27;VERSION_ID&#x27; /etc/os-release | cut -d &#x27;&quot;&#x27; -f 2 | tr -d &#x27;.&#x27;)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telif [[ -e /etc/debian_version ]]; then<br>\t\tos=&quot;debian&quot;<br>\t\tos_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/debian_version | head -1)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telif [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; then<br>\t\tos=&quot;centos&quot;<br>\t\tos_version=$(grep -shoE &#x27;[0-9]+&#x27; /etc/almalinux-release /etc/rocky-release /etc/centos-release | head -1)<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>\t\tos=&quot;centos&quot;<br>\t\tos_version=&quot;7&quot;<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif grep -qs &quot;Amazon Linux release 2023&quot; /etc/system-release; then<br>\t\texiterr &quot;Amazon Linux 2023 is not supported.&quot;<br>\telif [[ -e /etc/fedora-release ]]; then<br>\t\tos=&quot;fedora&quot;<br>\t\tos_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/fedora-release | head -1)<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif [[ -e /etc/SUSE-brand &amp;&amp; &quot;$(head -1 /etc/SUSE-brand)&quot; == &quot;openSUSE&quot; ]]; then<br>\t\tos=&quot;openSUSE&quot;<br>\t\tos_version=$(tail -1 /etc/SUSE-brand | grep -oE &#x27;[0-9\\\\.]+&#x27;)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telse<br>\t\texiterr &quot;This installer seems to be running on an unsupported distribution.<br>Supported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Amazon Linux 2.&quot;<br>\tfi<br>&#125;<br><br>check_os_ver() &#123;<br>\tif [[ &quot;$os&quot; == &quot;ubuntu&quot; &amp;&amp; &quot;$os_version&quot; -lt 2004 ]]; then<br>\t\texiterr &quot;Ubuntu 20.04 or higher is required to use this installer.<br>This version of Ubuntu is too old and unsupported.&quot;<br>\tfi<br>\tif [[ &quot;$os&quot; == &quot;debian&quot; &amp;&amp; &quot;$os_version&quot; -lt 10 ]]; then<br>\t\texiterr &quot;Debian 10 or higher is required to use this installer.<br>This version of Debian is too old and unsupported.&quot;<br>\tfi<br>\tif [[ &quot;$os&quot; == &quot;centos&quot; &amp;&amp; &quot;$os_version&quot; -lt 7 ]]; then<br>\t\texiterr &quot;CentOS 7 or higher is required to use this installer.<br>This version of CentOS is too old and unsupported.&quot;<br>\tfi<br>&#125;<br><br>check_tun() &#123;<br>\tif [[ ! -e /dev/net/tun ]] || ! ( exec 7&lt;&gt;/dev/net/tun ) 2&gt;/dev/null; then<br>\t\texiterr &quot;The system does not have the TUN device available.<br>TUN needs to be enabled before running this installer.&quot;<br>\tfi<br>&#125;<br><br>set_client_name() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Allow a limited <span class=\"hljs-built_in\">set</span> of characters to avoid conflicts</span><br>\tclient=$(sed &#x27;s/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g&#x27; &lt;&lt;&lt; &quot;$unsanitized_client&quot;)<br>&#125;<br><br>parse_args() &#123;<br>\twhile [ &quot;$#&quot; -gt 0 ]; do<br>\t\tcase $1 in<br>\t\t\t--auto)<br>\t\t\t\tauto=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--addclient)<br>\t\t\t\tadd_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--exportclient)<br>\t\t\t\texport_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--listclients)<br>\t\t\t\tlist_clients=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--revokeclient)<br>\t\t\t\trevoke_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--uninstall)<br>\t\t\t\tremove_ovpn=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t-y|--yes)<br>\t\t\t\tassume_yes=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t-h|--help)<br>\t\t\t\tshow_usage<br>\t\t\t\t;;<br>\t\t\t*)<br>\t\t\t\tshow_usage &quot;Unknown parameter: $1&quot;<br>\t\t\t\t;;<br>\t\tesac<br>\tdone<br>&#125;<br><br>check_args() &#123;<br>\tif [ &quot;$auto&quot; = 1 ] &amp;&amp; [ -e &quot;$OVPN_CONF&quot; ]; then<br>\t\techo &quot;Error: Invalid parameter &#x27;--auto&#x27;. OpenVPN is already set up on this server.&quot; &gt;&amp;2<br>\t\techo &quot;       To manage OpenVPN clients, re-run this script without &#x27;--auto&#x27;.&quot; &gt;&amp;2<br>\t\texit 1<br>\tfi<br>\tif [ &quot;$((add_client + export_client + list_clients + revoke_client))&quot; -gt 1 ]; then<br>\t\tshow_usage &quot;Invalid parameters. Specify only one of &#x27;--addclient&#x27;, &#x27;--exportclient&#x27;, &#x27;--listclients&#x27; or &#x27;--revokeclient&#x27;.&quot;<br>\tfi<br>\tif [ &quot;$remove_ovpn&quot; = 1 ]; then<br>\t\tif [ &quot;$((add_client + export_client + list_clients + revoke_client + auto))&quot; -gt 0 ]; then<br>\t\t\tshow_usage &quot;Invalid parameters. &#x27;--uninstall&#x27; cannot be specified with other parameters.&quot;<br>\t\tfi<br>\tfi<br>\tif [ ! -e &quot;$OVPN_CONF&quot; ]; then<br>\t\t[ &quot;$add_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before adding a client.&quot;<br>\t\t[ &quot;$export_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before exporting a client.&quot;<br>\t\t[ &quot;$list_clients&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before listing clients.&quot;<br>\t\t[ &quot;$revoke_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before revoking a client.&quot;<br>\t\t[ &quot;$remove_ovpn&quot; = 1 ] &amp;&amp; exiterr &quot;Cannot remove OpenVPN because it has not been set up on this server.&quot;<br>\tfi<br>\tif [ &quot;$add_client&quot; = 1 ]; then<br>\t\tset_client_name<br>\t\tif [ -z &quot;$client&quot; ]; then<br>\t\t\texiterr &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>\t\telif [ -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>\t\t\texiterr &quot;$client: invalid name. Client already exists.&quot;<br>\t\tfi<br>\tfi<br>\tif [ &quot;$export_client&quot; = 1 ] || [ &quot;$revoke_client&quot; = 1 ]; then<br>\t\tset_client_name<br>\t\tif [ -z &quot;$client&quot; ] || [ ! -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>\t\t\texiterr &quot;Invalid client name, or client does not exist.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>check_nftables() &#123;<br>\tif [ &quot;$os&quot; = &quot;centos&quot; ]; then<br>\t\tif grep -qs &quot;hwdsl2 VPN script&quot; /etc/sysconfig/nftables.conf \\<br>\t\t\t|| systemctl is-active --quiet nftables 2&gt;/dev/null; then<br>\t\t\texiterr &quot;This system has nftables enabled, which is not supported by this installer.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>install_wget() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect some Debian minimal setups <span class=\"hljs-built_in\">where</span> neither wget nor curl are installed</span><br>\tif ! hash wget 2&gt;/dev/null &amp;&amp; ! hash curl 2&gt;/dev/null; then<br>\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\techo &quot;Wget is required to use this installer.&quot;<br>\t\t\tread -n1 -r -p &quot;Press any key to install Wget and continue...&quot;<br>\t\tfi<br>\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\tapt-get -yqq install wget &gt;/dev/null<br>\t\t) || exiterr2<br>\tfi<br>&#125;<br><br>install_iproute() &#123;<br>\tif ! hash ip 2&gt;/dev/null; then<br>\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\techo &quot;iproute is required to use this installer.&quot;<br>\t\t\tread -n1 -r -p &quot;Press any key to install iproute and continue...&quot;<br>\t\tfi<br>\t\tif [ &quot;$os&quot; = &quot;debian&quot; ] || [ &quot;$os&quot; = &quot;ubuntu&quot; ]; then<br>\t\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\t\tapt-get -yqq install iproute2 &gt;/dev/null<br>\t\t\t) || exiterr2<br>\t\telif [ &quot;$os&quot; = &quot;openSUSE&quot; ]; then<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tzypper install iproute2 &gt;/dev/null<br>\t\t\t) || exiterr4<br>\t\telse<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tyum -y -q install iproute &gt;/dev/null<br>\t\t\t) || exiterr3<br>\t\tfi<br>\tfi<br>&#125;<br><br>show_header() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>OpenVPN Script<br>https://github.com/hwdsl2/openvpn-install<br>EOF<br>&#125;<br><br>show_header2() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Welcome to this OpenVPN server installer!<br>GitHub: https://github.com/hwdsl2/openvpn-install<br><br>EOF<br>&#125;<br><br>show_header3() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Copyright (c) 2022-2024 Lin Song<br>Copyright (c) 2013-2023 Nyr<br>EOF<br>&#125;<br><br>show_usage() &#123;<br>\tif [ -n &quot;$1&quot; ]; then<br>\t\techo &quot;Error: $1&quot; &gt;&amp;2<br>\tfi<br>\tshow_header<br>\tshow_header3<br>cat 1&gt;&amp;2 &lt;&lt;EOF<br><br>Usage: bash $0 [options]<br><br>Options:<br>  --auto                        auto install OpenVPN using default options<br>  --addclient [client name]     add a new client<br>  --exportclient [client name]  export configuration for an existing client<br>  --listclients                 list the names of existing clients<br>  --revokeclient [client name]  revoke an existing client<br>  --uninstall                   remove OpenVPN and delete all configuration<br>  -y, --yes                     assume &quot;yes&quot; as answer to prompts when revoking a client or removing OpenVPN<br>  -h, --help                    show this help message and exit<br><br>To customize install options, run this script without arguments.<br>EOF<br>\texit 1<br>&#125;<br><br>show_welcome() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tshow_header2<br>\t\techo &#x27;I need to ask you a few questions before starting setup.&#x27;<br>\t\techo &#x27;You can use the default options and just press enter if you are OK with them.&#x27;<br>\telse<br>\t\tshow_header<br>\t\techo<br>\t\techo &#x27;Starting OpenVPN setup using default options.&#x27;<br>\tfi<br>&#125;<br><br>enter_server_address() &#123;<br>\techo<br>\techo &quot;Do you want OpenVPN clients to connect to this server using a DNS name,&quot;<br>\tprintf &quot;e.g. vpn.example.com, instead of its IP address? [y/N] &quot;<br>\tread -r response<br>\tcase $response in<br>\t\t[yY][eE][sS]|[yY])<br>\t\t\tuse_dns_name=1<br>\t\t\techo<br>\t\t\t;;<br>\t\t*)<br>\t\t\tuse_dns_name=0<br>\t\t\t;;<br>\tesac<br>\tif [ &quot;$use_dns_name&quot; = 1 ]; then<br>\t\tread -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>\t\tuntil check_dns_name &quot;$server_addr&quot;; do<br>\t\t\techo &quot;Invalid DNS name. You must enter a fully qualified domain name (FQDN).&quot;<br>\t\t\tread -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>\t\tdone<br>\t\tip=&quot;$server_addr&quot;<br>\t\techo<br>\t\techo &quot;Note: Make sure this DNS name resolves to the IPv4 address&quot;<br>\t\techo &quot;      of this server. If you add or update the DNS record&quot;<br>\t\techo &quot;      at a later time, reboot this server to take effect.&quot;<br>\telse<br>\t\tdetect_ip<br>\t\tcheck_nat_ip<br>\tfi<br>&#125;<br><br>find_public_ip() &#123;<br>\tip_url1=&quot;http://ipv4.icanhazip.com&quot;<br>\tip_url2=&quot;http://ip1.dynupdate.no-ip.com&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Get public IP and sanitize with grep</span><br>\tget_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url1&quot; || curl -m 10 -4Ls &quot;$ip_url1&quot;)&quot;)<br>\tif ! check_ip &quot;$get_public_ip&quot;; then<br>\t\tget_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url2&quot; || curl -m 10 -4Ls &quot;$ip_url2&quot;)&quot;)<br>\tfi<br>&#125;<br><br>detect_ip() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">If system has a single IPv4, it is selected automatically.</span><br>\tif [[ $(ip -4 addr | grep inet | grep -vEc &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;) -eq 1 ]]; then<br>\t\tip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Use the IP address on the default route</span><br>\t\tip=$(ip -4 route get 1 | sed &#x27;s/ uid .*//&#x27; | awk &#x27;&#123;print $NF;exit&#125;&#x27; 2&gt;/dev/null)<br>\t\tif ! check_ip &quot;$ip&quot;; then<br>\t\t\tfind_public_ip<br>\t\t\tip_match=0<br>\t\t\tif [ -n &quot;$get_public_ip&quot; ]; then<br>\t\t\t\tip_list=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\t\t\t\twhile IFS= read -r line; do<br>\t\t\t\t\tif [ &quot;$line&quot; = &quot;$get_public_ip&quot; ]; then<br>\t\t\t\t\t\tip_match=1<br>\t\t\t\t\t\tip=&quot;$line&quot;<br>\t\t\t\t\tfi<br>\t\t\t\tdone &lt;&lt;&lt; &quot;$ip_list&quot;<br>\t\t\tfi<br>\t\t\tif [ &quot;$ip_match&quot; = 0 ]; then<br>\t\t\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\t\t\techo<br>\t\t\t\t\techo &quot;Which IPv4 address should be used?&quot;<br>\t\t\t\t\tnum_of_ip=$(ip -4 addr | grep inet | grep -vEc &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\t\t\t\t\tip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | nl -s &#x27;) &#x27;<br>\t\t\t\t\tread -rp &quot;IPv4 address [1]: &quot; ip_num<br>\t\t\t\t\tuntil [[ -z &quot;$ip_num&quot; || &quot;$ip_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$ip_num&quot; -le &quot;$num_of_ip&quot; ]]; do<br>\t\t\t\t\t\techo &quot;$ip_num: invalid selection.&quot;<br>\t\t\t\t\t\tread -rp &quot;IPv4 address [1]: &quot; ip_num<br>\t\t\t\t\tdone<br>\t\t\t\t\t[[ -z &quot;$ip_num&quot; ]] &amp;&amp; ip_num=1<br>\t\t\t\telse<br>\t\t\t\t\tip_num=1<br>\t\t\t\tfi<br>\t\t\t\tip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | sed -n &quot;$ip_num&quot;p)<br>\t\t\tfi<br>\t\tfi<br>\tfi<br>\tif ! check_ip &quot;$ip&quot;; then<br>\t\techo &quot;Error: Could not detect this server&#x27;s IP address.&quot; &gt;&amp;2<br>\t\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\t\texit 1<br>\tfi<br>&#125;<br><br>check_nat_ip() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">If <span class=\"hljs-variable\">$ip</span> is a private IP address, the server must be behind NAT</span><br>\tif printf &#x27;%s&#x27; &quot;$ip&quot; | grep -qE &#x27;^(10|127|172\\.(1[6-9]|2[0-9]|3[0-1])|192\\.168|169\\.254)\\.&#x27;; then<br>\t\tfind_public_ip<br>\t\tif ! check_ip &quot;$get_public_ip&quot;; then<br>\t\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\t\techo<br>\t\t\t\techo &quot;This server is behind NAT. What is the public IPv4 address?&quot;<br>\t\t\t\tread -rp &quot;Public IPv4 address: &quot; public_ip<br>\t\t\t\tuntil check_ip &quot;$public_ip&quot;; do<br>\t\t\t\t\techo &quot;Invalid input.&quot;<br>\t\t\t\t\tread -rp &quot;Public IPv4 address: &quot; public_ip<br>\t\t\t\tdone<br>\t\t\telse<br>\t\t\t\techo &quot;Error: Could not detect this server&#x27;s public IP.&quot; &gt;&amp;2<br>\t\t\t\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\telse<br>\t\t\tpublic_ip=&quot;$get_public_ip&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>show_config() &#123;<br>\tif [ &quot;$auto&quot; != 0 ]; then<br>\t\techo<br>\t\tprintf &#x27;%s&#x27; &quot;Server IP: &quot;<br>\t\t[ -n &quot;$public_ip&quot; ] &amp;&amp; printf &#x27;%s\\n&#x27; &quot;$public_ip&quot; || printf &#x27;%s\\n&#x27; &quot;$ip&quot;<br>\t\techo &quot;Port: UDP/1194&quot;<br>\t\techo &quot;Client name: client&quot;<br>\t\techo &quot;Client DNS: Google Public DNS&quot;<br>\tfi<br>&#125;<br><br>detect_ipv6() &#123;<br>\tip6=&quot;&quot;<br>\tif [[ $(ip -6 addr | grep -c &#x27;inet6 [23]&#x27;) -ne 0 ]]; then<br>\t\tip6=$(ip -6 addr | grep &#x27;inet6 [23]&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27; | sed -n 1p)<br>\tfi<br>&#125;<br><br>select_protocol() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Which protocol should OpenVPN use?&quot;<br>\t\techo &quot;   1) UDP (recommended)&quot;<br>\t\techo &quot;   2) TCP&quot;<br>\t\tread -rp &quot;Protocol [1]: &quot; protocol<br>\t\tuntil [[ -z &quot;$protocol&quot; || &quot;$protocol&quot; =~ ^[12]$ ]]; do<br>\t\t\techo &quot;$protocol: invalid selection.&quot;<br>\t\t\tread -rp &quot;Protocol [1]: &quot; protocol<br>\t\tdone<br>\t\tcase &quot;$protocol&quot; in<br>\t\t\t1|&quot;&quot;)<br>\t\t\tprotocol=udp<br>\t\t\t;;<br>\t\t\t2)<br>\t\t\tprotocol=tcp<br>\t\t\t;;<br>\t\tesac<br>\telse<br>\t\tprotocol=udp<br>\tfi<br>&#125;<br><br>select_port() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Which port should OpenVPN listen to?&quot;<br>\t\tread -rp &quot;Port [1194]: &quot; port<br>\t\tuntil [[ -z &quot;$port&quot; || &quot;$port&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$port&quot; -le 65535 ]]; do<br>\t\t\techo &quot;$port: invalid port.&quot;<br>\t\t\tread -rp &quot;Port [1194]: &quot; port<br>\t\tdone<br>\t\t[[ -z &quot;$port&quot; ]] &amp;&amp; port=1194<br>\telse<br>\t\tport=1194<br>\tfi<br>&#125;<br><br>enter_custom_dns() &#123;<br>\tread -rp &quot;Enter primary DNS server: &quot; dns1<br>\tuntil check_ip &quot;$dns1&quot;; do<br>\t\techo &quot;Invalid DNS server.&quot;<br>\t\tread -rp &quot;Enter primary DNS server: &quot; dns1<br>\tdone<br>\tread -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>\tuntil [ -z &quot;$dns2&quot; ] || check_ip &quot;$dns2&quot;; do<br>\t\techo &quot;Invalid DNS server.&quot;<br>\t\tread -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>\tdone<br>&#125;<br><br>select_dns() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Select a DNS server for the clients:&quot;<br>\t\techo &quot;   1) Current system resolvers&quot;<br>\t\techo &quot;   2) Google Public DNS&quot;<br>\t\techo &quot;   3) Cloudflare DNS&quot;<br>\t\techo &quot;   4) OpenDNS&quot;<br>\t\techo &quot;   5) Quad9&quot;<br>\t\techo &quot;   6) AdGuard DNS&quot;<br>\t\techo &quot;   7) Custom&quot;<br>\t\tread -rp &quot;DNS server [2]: &quot; dns<br>\t\tuntil [[ -z &quot;$dns&quot; || &quot;$dns&quot; =~ ^[1-7]$ ]]; do<br>\t\t\techo &quot;$dns: invalid selection.&quot;<br>\t\t\tread -rp &quot;DNS server [2]: &quot; dns<br>\t\tdone<br>\telse<br>\t\tdns=2<br>\tfi<br>\tif [ &quot;$dns&quot; = 7 ]; then<br>\t\tenter_custom_dns<br>\tfi<br>&#125;<br><br>enter_first_client_name() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Enter a name for the first client:&quot;<br>\t\tread -rp &quot;Name [client]: &quot; unsanitized_client<br>\t\tset_client_name<br>\t\t[[ -z &quot;$client&quot; ]] &amp;&amp; client=client<br>\telse<br>\t\tclient=client<br>\tfi<br>&#125;<br><br>show_setup_ready() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;OpenVPN installation is ready to begin.&quot;<br>\tfi<br>&#125;<br><br>check_firewall() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Install a firewall <span class=\"hljs-keyword\">if</span> firewalld or iptables are not already available</span><br>\tif ! systemctl is-active --quiet firewalld.service &amp;&amp; ! hash iptables 2&gt;/dev/null; then<br>\t\tif [[ &quot;$os&quot; == &quot;centos&quot; || &quot;$os&quot; == &quot;fedora&quot; ]]; then<br>\t\t\tfirewall=&quot;firewalld&quot;<br>\t\telif [[ &quot;$os&quot; == &quot;openSUSE&quot; ]]; then<br>\t\t\tfirewall=&quot;firewalld&quot;<br>\t\telif [[ &quot;$os&quot; == &quot;debian&quot; || &quot;$os&quot; == &quot;ubuntu&quot; ]]; then<br>\t\t\tfirewall=&quot;iptables&quot;<br>\t\tfi<br>\t\tif [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\">We don<span class=\"hljs-string\">&#x27;t want to silently enable firewalld, so we give a subtle warning</span></span><br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If the user continues, firewalld will be installed and enabled during setup</span></span><br>\t\t\techo<br>\t\t\techo &quot;Note: firewalld, which is required to manage routing tables, will also be installed.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>abort_and_exit() &#123;<br>\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\texit 1<br>&#125;<br><br>confirm_setup() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tprintf &quot;Do you want to continue? [Y/n] &quot;<br>\t\tread -r response<br>\t\tcase $response in<br>\t\t\t[yY][eE][sS]|[yY]|&#x27;&#x27;)<br>\t\t\t\t:<br>\t\t\t\t;;<br>\t\t\t*)<br>\t\t\t\tabort_and_exit<br>\t\t\t\t;;<br>\t\tesac<br>\tfi<br>&#125;<br><br>show_start_setup() &#123;<br>\techo<br>\techo &quot;Installing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_limitnproc() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If running inside a container, disable LimitNPROC to prevent conflicts</span></span><br>\tif systemd-detect-virt -cq; then<br>\t\tmkdir /etc/systemd/system/openvpn-server@server.service.d/ 2&gt;/dev/null<br>\t\techo &quot;[Service]<br>LimitNPROC=infinity&quot; &gt; /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>\tfi<br>&#125;<br><br>install_pkgs() &#123;<br>\tif [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\tapt-get -yqq --no-install-recommends install openvpn &gt;/dev/null<br>\t\t) || exiterr2<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq install openssl ca-certificates $firewall &gt;/dev/null<br>\t\t) || exiterr2<br>\telif [[ &quot;$os&quot; = &quot;centos&quot; ]]; then<br>\t\tif grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tamazon-linux-extras install epel -y &gt;/dev/null<br>\t\t\t) || exit 1<br>\t\telse<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tyum -y -q install epel-release &gt;/dev/null<br>\t\t\t) || exiterr3<br>\t\tfi<br>\t\t(<br>\t\t\tset -x<br>\t\t\tyum -y -q install openvpn openssl ca-certificates tar $firewall &gt;/dev/null 2&gt;&amp;1<br>\t\t) || exiterr3<br>\telif [[ &quot;$os&quot; = &quot;fedora&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tdnf install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>\t\t) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Else, OS must be openSUSE</span></span><br>\t\t(<br>\t\t\tset -x<br>\t\t\tzypper install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>\t\t) || exiterr4<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If firewalld was just installed, enable it</span></span><br>\tif [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now firewalld.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>remove_pkgs() &#123;<br>\tif [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t\tapt-get remove --purge -y openvpn &gt;/dev/null<br>\t\t)<br>\telif [[ &quot;$os&quot; = &quot;openSUSE&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tzypper remove -y openvpn &gt;/dev/null<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t)<br>\t\trm -f /etc/openvpn/ipp.txt<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Else, OS must be CentOS or Fedora</span></span><br>\t\t(<br>\t\t\tset -x<br>\t\t\tyum -y -q remove openvpn &gt;/dev/null<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t)<br>\tfi<br>&#125;<br><br>create_firewall_rules() &#123;<br>\tif systemctl is-active --quiet firewalld.service; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Using both permanent and not permanent rules to avoid a firewalld</span></span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">reload.</span></span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">We don&#x27;</span>t use --add-service=openvpn because that would only work with</span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">the default port and protocol.</span><br>\t\tfirewall-cmd -q --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --zone=trusted --add-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --permanent --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=10.8.0.0/24<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Set NAT <span class=\"hljs-keyword\">for</span> the VPN subnet</span><br>\t\tfirewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tfirewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tif [[ -n &quot;$ip6&quot; ]]; then<br>\t\t\tfirewall-cmd -q --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\t\tfirewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\tfi<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Create a service to <span class=\"hljs-built_in\">set</span> up persistent iptables rules</span><br>\t\tiptables_path=$(command -v iptables)<br>\t\tip6tables_path=$(command -v ip6tables)<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">nf_tables is not available as standard <span class=\"hljs-keyword\">in</span> OVZ kernels. So use iptables-legacy</span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-keyword\">if</span> we are <span class=\"hljs-keyword\">in</span> OVZ, with a nf_tables backend and iptables-legacy is available.</span><br>\t\tif [[ $(systemd-detect-virt) == &quot;openvz&quot; ]] &amp;&amp; readlink -f &quot;$(command -v iptables)&quot; | grep -q &quot;nft&quot; &amp;&amp; hash iptables-legacy 2&gt;/dev/null; then<br>\t\t\tiptables_path=$(command -v iptables-legacy)<br>\t\t\tip6tables_path=$(command -v ip6tables-legacy)<br>\t\tfi<br>\t\techo &quot;[Unit]<br>Before=network.target<br>[Service]<br>Type=oneshot<br>ExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt; /etc/systemd/system/openvpn-iptables.service<br>\t\tif [[ -n &quot;$ip6&quot; ]]; then<br>\t\t\techo &quot;ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>\t\tfi<br>\t\techo &quot;RemainAfterExit=yes<br>[Install]<br>WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn-iptables.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>remove_firewall_rules() &#123;<br>\tport=$(grep &#x27;^port &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>\tprotocol=$(grep &#x27;^proto &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>\tif systemctl is-active --quiet firewalld.service; then<br>\t\tip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep &#x27;\\-s 10.8.0.0/24 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d 10.8.0.0/24&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Using both permanent and not permanent rules to avoid a firewalld reload.</span><br>\t\tfirewall-cmd -q --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --zone=trusted --remove-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --permanent --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tif grep -qs &quot;server-ipv6&quot; &quot;$OVPN_CONF&quot;; then<br>\t\t\tip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep &#x27;\\-s fddd:1194:1194:1194::/64 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d fddd:1194:1194:1194::/64&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br>\t\t\tfirewall-cmd -q --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\tfi<br>\telse<br>\t\tsystemctl disable --now openvpn-iptables.service<br>\t\trm -f /etc/systemd/system/openvpn-iptables.service<br>\tfi<br>\tif sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br>\t\tsemanage port -d -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>\tfi<br>&#125;<br><br>install_easyrsa() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Get easy-rsa</span><br>\teasy_rsa_url=&#x27;https://github.com/OpenVPN/easy-rsa/releases/download/v3.2.0/EasyRSA-3.2.0.tgz&#x27;<br>\tmkdir -p /etc/openvpn/server/easy-rsa/<br>\t&#123; wget -t 3 -T 30 -qO- &quot;$easy_rsa_url&quot; 2&gt;/dev/null || curl -m 30 -sL &quot;$easy_rsa_url&quot; ; &#125; | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1<br>\tif [ ! -f /etc/openvpn/server/easy-rsa/easyrsa ]; then<br>\t\texiterr &quot;Failed to download EasyRSA from $easy_rsa_url.&quot;<br>\tfi<br>\tchown -R root:root /etc/openvpn/server/easy-rsa/<br>&#125;<br><br>create_pki_and_certs() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Create the PKI, <span class=\"hljs-built_in\">set</span> up the CA and the server and client certificates</span><br>\t\t./easyrsa --batch init-pki &gt;/dev/null<br>\t\t./easyrsa --batch build-ca nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 build-server-full server nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>\t)<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Move the stuff we need</span><br>\tcp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">CRL is <span class=\"hljs-built_in\">read</span> with each client connection, <span class=\"hljs-keyword\">while</span> OpenVPN is dropped to nobody</span><br>\tchown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Without +x <span class=\"hljs-keyword\">in</span> the directory, OpenVPN can<span class=\"hljs-string\">&#x27;t run a stat() on the CRL file</span></span><br>\tchmod o+x /etc/openvpn/server/<br>\t(<br>\t\tset -x<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generate key for tls-crypt</span></span><br>\t\topenvpn --genkey --secret /etc/openvpn/server/tc.key &gt;/dev/null<br>\t)<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Create the DH parameters file using the predefined ffdhe2048 group</span></span><br>\techo &#x27;-----BEGIN DH PARAMETERS-----<br>MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz<br>+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a<br>87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7<br>YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi<br>7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD<br>ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==<br>-----END DH PARAMETERS-----&#x27; &gt; /etc/openvpn/server/dh.pem<br>&#125;<br><br>create_dns_config() &#123;<br>\tcase &quot;$dns&quot; in<br>\t\t1)<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Locate the proper resolv.conf</span></span><br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Needed for systems running systemd-resolved</span></span><br>\t\t\tif grep &#x27;^nameserver&#x27; &quot;/etc/resolv.conf&quot; | grep -qv &#x27;127.0.0.53&#x27; ; then<br>\t\t\t\tresolv_conf=&quot;/etc/resolv.conf&quot;<br>\t\t\telse<br>\t\t\t\tresolv_conf=&quot;/run/systemd/resolve/resolv.conf&quot;<br>\t\t\tfi<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Obtain the resolvers from resolv.conf and use them for OpenVPN</span></span><br>\t\t\tgrep -v &#x27;^#\\|^;&#x27; &quot;$resolv_conf&quot; | grep &#x27;^nameserver&#x27; | grep -v &#x27;127.0.0.53&#x27; | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | while read line; do<br>\t\t\t\techo &quot;push \\&quot;dhcp-option DNS $line\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tdone<br>\t\t;;<br>\t\t2|&quot;&quot;)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 8.8.8.8&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 8.8.4.4&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t3)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 1.1.1.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 1.0.0.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t4)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 208.67.222.222&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 208.67.220.220&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t5)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 9.9.9.9&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 149.112.112.112&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t6)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 94.140.14.14&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 94.140.15.15&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t7)<br>\t\t\techo &quot;push \\&quot;dhcp-option DNS $dns1\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tif [ -n &quot;$dns2&quot; ]; then<br>\t\t\t\techo &quot;push \\&quot;dhcp-option DNS $dns2\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tfi<br>\t\t;;<br>\tesac<br>&#125;<br><br>create_server_config() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generate server.conf</span></span><br>\techo &quot;local $ip<br>port $port<br>proto $protocol<br>dev tun<br>ca ca.crt<br>cert server.crt<br>key server.key<br>dh dh.pem<br>auth SHA256<br>tls-crypt tc.key<br>topology subnet<br>server 10.8.0.0 255.255.255.0&quot; &gt; &quot;$OVPN_CONF&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">IPv6</span></span><br>\tif [[ -z &quot;$ip6&quot; ]]; then<br>\t\techo &#x27;push &quot;block-ipv6&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\techo &#x27;push &quot;ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\telse<br>\t\techo &#x27;server-ipv6 fddd:1194:1194:1194::/64&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tfi<br>\techo &#x27;push &quot;redirect-gateway def1 ipv6 bypass-dhcp&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\techo &#x27;ifconfig-pool-persist ipp.txt&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tcreate_dns_config<br>\techo &#x27;push &quot;block-outside-dns&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\techo &quot;keepalive 10 120<br>cipher AES-128-GCM<br>user nobody<br>group $group_name<br>persist-key<br>persist-tun<br>verb 3<br>crl-verify crl.pem&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tif [[ &quot;$protocol&quot; = &quot;udp&quot; ]]; then<br>\t\techo &quot;explicit-exit-notify&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tfi<br>&#125;<br><br>get_export_dir() &#123;<br>\texport_to_home_dir=0<br>\texport_dir=~/<br>\tif [ -n &quot;$SUDO_USER&quot; ] &amp;&amp; getent group &quot;$SUDO_USER&quot; &gt;/dev/null 2&gt;&amp;1; then<br>\t\tuser_home_dir=$(getent passwd &quot;$SUDO_USER&quot; 2&gt;/dev/null | cut -d: -f6)<br>\t\tif [ -d &quot;$user_home_dir&quot; ] &amp;&amp; [ &quot;$user_home_dir&quot; != &quot;/&quot; ]; then<br>\t\t\texport_dir=&quot;$user_home_dir/&quot;<br>\t\t\texport_to_home_dir=1<br>\t\tfi<br>\tfi<br>&#125;<br><br>new_client() &#123;<br>\tget_export_dir<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generates the custom client.ovpn</span></span><br>\t&#123;<br>\tcat /etc/openvpn/server/client-common.txt<br>\techo &quot;&lt;ca&gt;&quot;<br>\tcat /etc/openvpn/server/easy-rsa/pki/ca.crt<br>\techo &quot;&lt;/ca&gt;&quot;<br>\techo &quot;&lt;cert&gt;&quot;<br>\tsed -ne &#x27;/BEGIN CERTIFICATE/,$ p&#x27; /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt<br>\techo &quot;&lt;/cert&gt;&quot;<br>\techo &quot;&lt;key&gt;&quot;<br>\tcat /etc/openvpn/server/easy-rsa/pki/private/&quot;$client&quot;.key<br>\techo &quot;&lt;/key&gt;&quot;<br>\techo &quot;&lt;tls-crypt&gt;&quot;<br>\tsed -ne &#x27;/BEGIN OpenVPN Static key/,$ p&#x27; /etc/openvpn/server/tc.key<br>\techo &quot;&lt;/tls-crypt&gt;&quot;<br>\t&#125; &gt; &quot;$export_dir$client&quot;.ovpn<br>\tif [ &quot;$export_to_home_dir&quot; = 1 ]; then<br>\t\tchown &quot;$SUDO_USER:$SUDO_USER&quot; &quot;$export_dir$client&quot;.ovpn<br>\tfi<br>\tchmod 600 &quot;$export_dir$client&quot;.ovpn<br>&#125;<br><br>update_sysctl() &#123;<br>\tmkdir -p /etc/sysctl.d<br>\tconf_fwd=&quot;/etc/sysctl.d/99-openvpn-forward.conf&quot;<br>\tconf_opt=&quot;/etc/sysctl.d/99-openvpn-optimize.conf&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable net.ipv4.ip_forward for the system</span></span><br>\techo &#x27;net.ipv4.ip_forward=1&#x27; &gt; &quot;$conf_fwd&quot;<br>\tif [[ -n &quot;$ip6&quot; ]]; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable net.ipv6.conf.all.forwarding for the system</span></span><br>\t\techo &quot;net.ipv6.conf.all.forwarding=1&quot; &gt;&gt; &quot;$conf_fwd&quot;<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Optimize sysctl settings such as TCP buffer sizes</span></span><br>\tbase_url=&quot;https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0&quot;<br>\tconf_url=&quot;$base_url/sysctl-ovpn-$os&quot;<br>\t[ &quot;$auto&quot; != 0 ] &amp;&amp; conf_url=&quot;$&#123;conf_url&#125;-auto&quot;<br>\twget -t 3 -T 30 -q -O &quot;$conf_opt&quot; &quot;$conf_url&quot; 2&gt;/dev/null \\<br>\t\t|| curl -m 30 -fsL &quot;$conf_url&quot; -o &quot;$conf_opt&quot; 2&gt;/dev/null \\<br>\t\t|| &#123; /bin/rm -f &quot;$conf_opt&quot;; touch &quot;$conf_opt&quot;; &#125;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable TCP BBR congestion control if kernel version &gt;= 4.20</span></span><br>\tif modprobe -q tcp_bbr \\<br>\t\t&amp;&amp; printf &#x27;%s\\n%s&#x27; &quot;4.20&quot; &quot;$(uname -r)&quot; | sort -C -V \\<br>\t\t&amp;&amp; [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; then<br>cat &gt;&gt; &quot;$conf_opt&quot; &lt;&lt;&#x27;EOF&#x27;<br>net.core.default_qdisc = fq<br>net.ipv4.tcp_congestion_control = bbr<br>EOF<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Apply sysctl settings</span></span><br>\tsysctl -e -q -p &quot;$conf_fwd&quot;<br>\tsysctl -e -q -p &quot;$conf_opt&quot;<br>&#125;<br><br>update_rclocal() &#123;<br>\tipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>\tif ! grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>\t\tif [ ! -f /etc/rc.local ]; then<br>\t\t\techo &#x27;#!/bin/sh&#x27; &gt; /etc/rc.local<br>\t\telse<br>\t\t\tif [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>\t\t\t\tsed --follow-symlinks -i &#x27;/^exit 0/d&#x27; /etc/rc.local<br>\t\t\tfi<br>\t\tfi<br>cat &gt;&gt; /etc/rc.local &lt;&lt;EOF<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\"><span class=\"hljs-string\">ipt_cmd</span></span><br>EOF<br>\t\tif [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>\t\t\techo &quot;exit 0&quot; &gt;&gt; /etc/rc.local<br>\t\tfi<br>\t\tchmod +x /etc/rc.local<br>\tfi<br>&#125;<br><br>update_selinux() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If SELinux is enabled and a custom port was selected, we need this</span></span><br>\tif sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Install semanage if not already present</span></span><br>\t\tif ! hash semanage 2&gt;/dev/null; then<br>\t\t\tif [[ &quot;$os_version&quot; -eq 7 ]]; then<br>\t\t\t\t# Centos 7<br>\t\t\t\t(<br>\t\t\t\t\tset -x<br>\t\t\t\t\tyum -y -q install policycoreutils-python &gt;/dev/null<br>\t\t\t\t) || exiterr3<br>\t\t\telse<br>\t\t\t\t# CentOS 8/9 or Fedora<br>\t\t\t\t(<br>\t\t\t\t\tset -x<br>\t\t\t\t\tdnf install -y policycoreutils-python-utils &gt;/dev/null<br>\t\t\t\t) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>\t\t\tfi<br>\t\tfi<br>\t\tsemanage port -a -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>\tfi<br>&#125;<br><br>create_client_common() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If the server is behind NAT, use the correct IP address</span></span><br>\t[[ -n &quot;$public_ip&quot; ]] &amp;&amp; ip=&quot;$public_ip&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">client-common.txt is created so we have a template to add further users later</span></span><br>\techo &quot;client<br>dev tun<br>proto $protocol<br>remote $ip $port<br>resolv-retry infinite<br>nobind<br>persist-key<br>persist-tun<br>remote-cert-tls server<br>auth SHA256<br>cipher AES-128-GCM<br>ignore-unknown-option block-outside-dns block-ipv6<br>verb 3&quot; &gt; /etc/openvpn/server/client-common.txt<br>&#125;<br><br>start_openvpn_service() &#123;<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn-server@server.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\telse<br>\t\tln -s /etc/openvpn/server/* /etc/openvpn &gt;/dev/null 2&gt;&amp;1<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn@server.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>finish_setup() &#123;<br>\techo<br>\techo &quot;Finished!&quot;<br>\techo<br>\techo &quot;The client configuration is available in: $export_dir$client.ovpn&quot;<br>\techo &quot;New clients can be added by running this script again.&quot;<br>&#125;<br><br>select_menu_option() &#123;<br>\techo<br>\techo &quot;OpenVPN is already installed.&quot;<br>\techo<br>\techo &quot;Select an option:&quot;<br>\techo &quot;   1) Add a new client&quot;<br>\techo &quot;   2) Export config for an existing client&quot;<br>\techo &quot;   3) List existing clients&quot;<br>\techo &quot;   4) Revoke an existing client&quot;<br>\techo &quot;   5) Remove OpenVPN&quot;<br>\techo &quot;   6) Exit&quot;<br>\tread -rp &quot;Option: &quot; option<br>\tuntil [[ &quot;$option&quot; =~ ^[1-6]$ ]]; do<br>\t\techo &quot;$option: invalid selection.&quot;<br>\t\tread -rp &quot;Option: &quot; option<br>\tdone<br>&#125;<br><br>show_clients() &#123;<br>\ttail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | nl -s &#x27;) &#x27;<br>&#125;<br><br>enter_client_name() &#123;<br>\techo<br>\techo &quot;Provide a name for the client:&quot;<br>\tread -rp &quot;Name: &quot; unsanitized_client<br>\t[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>\tset_client_name<br>\twhile [[ -z &quot;$client&quot; || -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]]; do<br>\t\tif [ -z &quot;$client&quot; ]; then<br>\t\t\techo &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>\t\telse<br>\t\t\techo &quot;$client: invalid name. Client already exists.&quot;<br>\t\tfi<br>\t\tread -rp &quot;Name: &quot; unsanitized_client<br>\t\t[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>\t\tset_client_name<br>\tdone<br>&#125;<br><br>build_client_config() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br>\t\t./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>\t)<br>&#125;<br><br>print_client_action() &#123;<br>\techo<br>\techo &quot;$client $1. Configuration available in: $export_dir$client.ovpn&quot;<br>&#125;<br><br>print_check_clients() &#123;<br>\techo<br>\techo &quot;Checking for existing client(s)...&quot;<br>&#125;<br><br>check_clients() &#123;<br>\tnum_of_clients=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep -c &quot;^V&quot;)<br>\tif [[ &quot;$num_of_clients&quot; = 0 ]]; then<br>\t\techo<br>\t\techo &quot;There are no existing clients!&quot;<br>\t\texit 1<br>\tfi<br>&#125;<br><br>print_client_total() &#123;<br>\tif [ &quot;$num_of_clients&quot; = 1 ]; then<br>\t\tprintf &#x27;\\n%s\\n&#x27; &quot;Total: 1 client&quot;<br>\telif [ -n &quot;$num_of_clients&quot; ]; then<br>\t\tprintf &#x27;\\n%s\\n&#x27; &quot;Total: $num_of_clients clients&quot;<br>\tfi<br>&#125;<br><br>select_client_to() &#123;<br>\techo<br>\techo &quot;Select the client to $1:&quot;<br>\tshow_clients<br>\tread -rp &quot;Client: &quot; client_num<br>\t[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>\tuntil [[ &quot;$client_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$client_num&quot; -le &quot;$num_of_clients&quot; ]]; do<br>\t\techo &quot;$client_num: invalid selection.&quot;<br>\t\tread -rp &quot;Client: &quot; client_num<br>\t\t[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>\tdone<br>\tclient=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | sed -n &quot;$client_num&quot;p)<br>&#125;<br><br>confirm_revoke_client() &#123;<br>\tif [ &quot;$assume_yes&quot; != 1 ]; then<br>\t\techo<br>\t\tread -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>\t\tuntil [[ &quot;$revoke&quot; =~ ^[yYnN]*$ ]]; do<br>\t\t\techo &quot;$revoke: invalid selection.&quot;<br>\t\t\tread -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>\t\tdone<br>\telse<br>\t\trevoke=y<br>\tfi<br>&#125;<br><br>print_revoke_client() &#123;<br>\techo<br>\techo &quot;Revoking $client...&quot;<br>&#125;<br><br>remove_client_conf() &#123;<br>\tget_export_dir<br>\tovpn_file=&quot;$export_dir$client.ovpn&quot;<br>\tif [ -f &quot;$ovpn_file&quot; ]; then<br>\t\techo &quot;Removing $ovpn_file...&quot;<br>\t\trm -f &quot;$ovpn_file&quot;<br>\tfi<br>&#125;<br><br>revoke_client_ovpn() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br>\t\t./easyrsa --batch revoke &quot;$client&quot; &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>\t)<br>\trm -f /etc/openvpn/server/crl.pem<br>\tcp /etc/openvpn/server/easy-rsa/pki/crl.pem /etc/openvpn/server/crl.pem<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">CRL is read with each client connection, when OpenVPN is dropped to nobody</span></span><br>\tchown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br>\tremove_client_conf<br>&#125;<br><br>print_client_revoked() &#123;<br>\techo<br>\techo &quot;$client revoked!&quot;<br>&#125;<br><br>print_client_revocation_aborted() &#123;<br>\techo<br>\techo &quot;$client revocation aborted!&quot;<br>&#125;<br><br>confirm_remove_ovpn() &#123;<br>\tif [ &quot;$assume_yes&quot; != 1 ]; then<br>\t\techo<br>\t\tread -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>\t\tuntil [[ &quot;$remove&quot; =~ ^[yYnN]*$ ]]; do<br>\t\t\techo &quot;$remove: invalid selection.&quot;<br>\t\t\tread -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>\t\tdone<br>\telse<br>\t\tremove=y<br>\tfi<br>&#125;<br><br>print_remove_ovpn() &#123;<br>\techo<br>\techo &quot;Removing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_ovpn_service() &#123;<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\tsystemctl disable --now openvpn-server@server.service<br>\telse<br>\t\tsystemctl disable --now openvpn@server.service<br>\tfi<br>\trm -f /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>&#125;<br><br>remove_sysctl_rules() &#123;<br>\trm -f /etc/sysctl.d/99-openvpn-forward.conf /etc/sysctl.d/99-openvpn-optimize.conf<br>\tif [ ! -f /usr/bin/wg-quick ] &amp;&amp; [ ! -f /usr/sbin/ipsec ] \\<br>\t\t&amp;&amp; [ ! -f /usr/local/sbin/ipsec ]; then<br>\t\techo 0 &gt; /proc/sys/net/ipv4/ip_forward<br>\t\techo 0 &gt; /proc/sys/net/ipv6/conf/all/forwarding<br>\tfi<br>&#125;<br><br>remove_rclocal_rules() &#123;<br>\tipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>\tif grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>\t\tsed --follow-symlinks -i &quot;/^$ipt_cmd/d&quot; /etc/rc.local<br>\tfi<br>&#125;<br><br>print_ovpn_removed() &#123;<br>\techo<br>\techo &quot;OpenVPN removed!&quot;<br>&#125;<br><br>print_ovpn_removal_aborted() &#123;<br>\techo<br>\techo &quot;OpenVPN removal aborted!&quot;<br>&#125;<br><br>ovpnsetup() &#123;<br><br>export PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;<br><br>check_root<br>check_shell<br>check_kernel<br>check_os<br>check_os_ver<br>check_tun<br><br>OVPN_CONF=&quot;/etc/openvpn/server/server.conf&quot;<br><br>auto=0<br>assume_yes=0<br>add_client=0<br>export_client=0<br>list_clients=0<br>revoke_client=0<br>remove_ovpn=0<br><br>parse_args &quot;$@&quot;<br>check_args<br><br>if [ &quot;$add_client&quot; = 1 ]; then<br>\tshow_header<br>\techo<br>\tbuild_client_config<br>\tnew_client<br>\tprint_client_action added<br>\texit 0<br>fi<br><br>if [ &quot;$export_client&quot; = 1 ]; then<br>\tshow_header<br>\tnew_client<br>\tprint_client_action exported<br>\texit 0<br>fi<br><br>if [ &quot;$list_clients&quot; = 1 ]; then<br>\tshow_header<br>\tprint_check_clients<br>\tcheck_clients<br>\techo<br>\tshow_clients<br>\tprint_client_total<br>\texit 0<br>fi<br><br>if [ &quot;$revoke_client&quot; = 1 ]; then<br>\tshow_header<br>\tconfirm_revoke_client<br>\tif [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>\t\tprint_revoke_client<br>\t\trevoke_client_ovpn<br>\t\tprint_client_revoked<br>\t\texit 0<br>\telse<br>\t\tprint_client_revocation_aborted<br>\t\texit 1<br>\tfi<br>fi<br><br>if [ &quot;$remove_ovpn&quot; = 1 ]; then<br>\tshow_header<br>\tconfirm_remove_ovpn<br>\tif [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>\t\tprint_remove_ovpn<br>\t\tremove_firewall_rules<br>\t\tdisable_ovpn_service<br>\t\tremove_sysctl_rules<br>\t\tremove_rclocal_rules<br>\t\tremove_pkgs<br>\t\tprint_ovpn_removed<br>\t\texit 0<br>\telse<br>\t\tprint_ovpn_removal_aborted<br>\t\texit 1<br>\tfi<br>fi<br><br>if [[ ! -e &quot;$OVPN_CONF&quot; ]]; then<br>\tcheck_nftables<br>\tinstall_wget<br>\tinstall_iproute<br>\tshow_welcome<br>\tpublic_ip=&quot;&quot;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tenter_server_address<br>\telse<br>\t\tdetect_ip<br>\t\tcheck_nat_ip<br>\tfi<br>\tshow_config<br>\tdetect_ipv6<br>\tselect_protocol<br>\tselect_port<br>\tselect_dns<br>\tenter_first_client_name<br>\tshow_setup_ready<br>\tcheck_firewall<br>\tconfirm_setup<br>\tshow_start_setup<br>\tdisable_limitnproc<br>\tinstall_pkgs<br>\tinstall_easyrsa<br>\tcreate_pki_and_certs<br>\tcreate_server_config<br>\tupdate_sysctl<br>\tcreate_firewall_rules<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\tupdate_rclocal<br>\tfi<br>\tupdate_selinux<br>\tcreate_client_common<br>\tstart_openvpn_service<br>\tnew_client<br>\tfinish_setup<br>else<br>\tshow_header<br>\tselect_menu_option<br>\tcase &quot;$option&quot; in<br>\t\t1)<br>\t\t\tenter_client_name<br>\t\t\tbuild_client_config<br>\t\t\tnew_client<br>\t\t\tprint_client_action added<br>\t\t\texit 0<br>\t\t;;<br>\t\t2)<br>\t\t\tcheck_clients<br>\t\t\tselect_client_to export<br>\t\t\tnew_client<br>\t\t\tprint_client_action exported<br>\t\t\texit 0<br>\t\t;;<br>\t\t3)<br>\t\t\tprint_check_clients<br>\t\t\tcheck_clients<br>\t\t\techo<br>\t\t\tshow_clients<br>\t\t\tprint_client_total<br>\t\t\texit 0<br>\t\t;;<br>\t\t4)<br>\t\t\tcheck_clients<br>\t\t\tselect_client_to revoke<br>\t\t\tconfirm_revoke_client<br>\t\t\tif [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>\t\t\t\tprint_revoke_client<br>\t\t\t\trevoke_client_ovpn<br>\t\t\t\tprint_client_revoked<br>\t\t\t\texit 0<br>\t\t\telse<br>\t\t\t\tprint_client_revocation_aborted<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\t;;<br>\t\t5)<br>\t\t\tconfirm_remove_ovpn<br>\t\t\tif [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>\t\t\t\tprint_remove_ovpn<br>\t\t\t\tremove_firewall_rules<br>\t\t\t\tdisable_ovpn_service<br>\t\t\t\tremove_sysctl_rules<br>\t\t\t\tremove_rclocal_rules<br>\t\t\t\tremove_pkgs<br>\t\t\t\tprint_ovpn_removed<br>\t\t\t\texit 0<br>\t\t\telse<br>\t\t\t\tprint_ovpn_removal_aborted<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\t;;<br>\t\t6)<br>\t\t\texit 0<br>\t\t;;<br>\tesac<br>fi<br>&#125;<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-string\"># Defer setup until we have the complete script</span></span><br>ovpnsetup &quot;$@&quot;<br><br>exit 0<br><br></code></pre></td></tr></table></figure>","excerpt":"","more":"<p>脚本连接：<br><a href=\"openvpn-%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/openvpn.sh\">openvpn.sh</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br><span class=\"line\">1027</span><br><span class=\"line\">1028</span><br><span class=\"line\">1029</span><br><span class=\"line\">1030</span><br><span class=\"line\">1031</span><br><span class=\"line\">1032</span><br><span class=\"line\">1033</span><br><span class=\"line\">1034</span><br><span class=\"line\">1035</span><br><span class=\"line\">1036</span><br><span class=\"line\">1037</span><br><span class=\"line\">1038</span><br><span class=\"line\">1039</span><br><span class=\"line\">1040</span><br><span class=\"line\">1041</span><br><span class=\"line\">1042</span><br><span class=\"line\">1043</span><br><span class=\"line\">1044</span><br><span class=\"line\">1045</span><br><span class=\"line\">1046</span><br><span class=\"line\">1047</span><br><span class=\"line\">1048</span><br><span class=\"line\">1049</span><br><span class=\"line\">1050</span><br><span class=\"line\">1051</span><br><span class=\"line\">1052</span><br><span class=\"line\">1053</span><br><span class=\"line\">1054</span><br><span class=\"line\">1055</span><br><span class=\"line\">1056</span><br><span class=\"line\">1057</span><br><span class=\"line\">1058</span><br><span class=\"line\">1059</span><br><span class=\"line\">1060</span><br><span class=\"line\">1061</span><br><span class=\"line\">1062</span><br><span class=\"line\">1063</span><br><span class=\"line\">1064</span><br><span class=\"line\">1065</span><br><span class=\"line\">1066</span><br><span class=\"line\">1067</span><br><span class=\"line\">1068</span><br><span class=\"line\">1069</span><br><span class=\"line\">1070</span><br><span class=\"line\">1071</span><br><span class=\"line\">1072</span><br><span class=\"line\">1073</span><br><span class=\"line\">1074</span><br><span class=\"line\">1075</span><br><span class=\"line\">1076</span><br><span class=\"line\">1077</span><br><span class=\"line\">1078</span><br><span class=\"line\">1079</span><br><span class=\"line\">1080</span><br><span class=\"line\">1081</span><br><span class=\"line\">1082</span><br><span class=\"line\">1083</span><br><span class=\"line\">1084</span><br><span class=\"line\">1085</span><br><span class=\"line\">1086</span><br><span class=\"line\">1087</span><br><span class=\"line\">1088</span><br><span class=\"line\">1089</span><br><span class=\"line\">1090</span><br><span class=\"line\">1091</span><br><span class=\"line\">1092</span><br><span class=\"line\">1093</span><br><span class=\"line\">1094</span><br><span class=\"line\">1095</span><br><span class=\"line\">1096</span><br><span class=\"line\">1097</span><br><span class=\"line\">1098</span><br><span class=\"line\">1099</span><br><span class=\"line\">1100</span><br><span class=\"line\">1101</span><br><span class=\"line\">1102</span><br><span class=\"line\">1103</span><br><span class=\"line\">1104</span><br><span class=\"line\">1105</span><br><span class=\"line\">1106</span><br><span class=\"line\">1107</span><br><span class=\"line\">1108</span><br><span class=\"line\">1109</span><br><span class=\"line\">1110</span><br><span class=\"line\">1111</span><br><span class=\"line\">1112</span><br><span class=\"line\">1113</span><br><span class=\"line\">1114</span><br><span class=\"line\">1115</span><br><span class=\"line\">1116</span><br><span class=\"line\">1117</span><br><span class=\"line\">1118</span><br><span class=\"line\">1119</span><br><span class=\"line\">1120</span><br><span class=\"line\">1121</span><br><span class=\"line\">1122</span><br><span class=\"line\">1123</span><br><span class=\"line\">1124</span><br><span class=\"line\">1125</span><br><span class=\"line\">1126</span><br><span class=\"line\">1127</span><br><span class=\"line\">1128</span><br><span class=\"line\">1129</span><br><span class=\"line\">1130</span><br><span class=\"line\">1131</span><br><span class=\"line\">1132</span><br><span class=\"line\">1133</span><br><span class=\"line\">1134</span><br><span class=\"line\">1135</span><br><span class=\"line\">1136</span><br><span class=\"line\">1137</span><br><span class=\"line\">1138</span><br><span class=\"line\">1139</span><br><span class=\"line\">1140</span><br><span class=\"line\">1141</span><br><span class=\"line\">1142</span><br><span class=\"line\">1143</span><br><span class=\"line\">1144</span><br><span class=\"line\">1145</span><br><span class=\"line\">1146</span><br><span class=\"line\">1147</span><br><span class=\"line\">1148</span><br><span class=\"line\">1149</span><br><span class=\"line\">1150</span><br><span class=\"line\">1151</span><br><span class=\"line\">1152</span><br><span class=\"line\">1153</span><br><span class=\"line\">1154</span><br><span class=\"line\">1155</span><br><span class=\"line\">1156</span><br><span class=\"line\">1157</span><br><span class=\"line\">1158</span><br><span class=\"line\">1159</span><br><span class=\"line\">1160</span><br><span class=\"line\">1161</span><br><span class=\"line\">1162</span><br><span class=\"line\">1163</span><br><span class=\"line\">1164</span><br><span class=\"line\">1165</span><br><span class=\"line\">1166</span><br><span class=\"line\">1167</span><br><span class=\"line\">1168</span><br><span class=\"line\">1169</span><br><span class=\"line\">1170</span><br><span class=\"line\">1171</span><br><span class=\"line\">1172</span><br><span class=\"line\">1173</span><br><span class=\"line\">1174</span><br><span class=\"line\">1175</span><br><span class=\"line\">1176</span><br><span class=\"line\">1177</span><br><span class=\"line\">1178</span><br><span class=\"line\">1179</span><br><span class=\"line\">1180</span><br><span class=\"line\">1181</span><br><span class=\"line\">1182</span><br><span class=\"line\">1183</span><br><span class=\"line\">1184</span><br><span class=\"line\">1185</span><br><span class=\"line\">1186</span><br><span class=\"line\">1187</span><br><span class=\"line\">1188</span><br><span class=\"line\">1189</span><br><span class=\"line\">1190</span><br><span class=\"line\">1191</span><br><span class=\"line\">1192</span><br><span class=\"line\">1193</span><br><span class=\"line\">1194</span><br><span class=\"line\">1195</span><br><span class=\"line\">1196</span><br><span class=\"line\">1197</span><br><span class=\"line\">1198</span><br><span class=\"line\">1199</span><br><span class=\"line\">1200</span><br><span class=\"line\">1201</span><br><span class=\"line\">1202</span><br><span class=\"line\">1203</span><br><span class=\"line\">1204</span><br><span class=\"line\">1205</span><br><span class=\"line\">1206</span><br><span class=\"line\">1207</span><br><span class=\"line\">1208</span><br><span class=\"line\">1209</span><br><span class=\"line\">1210</span><br><span class=\"line\">1211</span><br><span class=\"line\">1212</span><br><span class=\"line\">1213</span><br><span class=\"line\">1214</span><br><span class=\"line\">1215</span><br><span class=\"line\">1216</span><br><span class=\"line\">1217</span><br><span class=\"line\">1218</span><br><span class=\"line\">1219</span><br><span class=\"line\">1220</span><br><span class=\"line\">1221</span><br><span class=\"line\">1222</span><br><span class=\"line\">1223</span><br><span class=\"line\">1224</span><br><span class=\"line\">1225</span><br><span class=\"line\">1226</span><br><span class=\"line\">1227</span><br><span class=\"line\">1228</span><br><span class=\"line\">1229</span><br><span class=\"line\">1230</span><br><span class=\"line\">1231</span><br><span class=\"line\">1232</span><br><span class=\"line\">1233</span><br><span class=\"line\">1234</span><br><span class=\"line\">1235</span><br><span class=\"line\">1236</span><br><span class=\"line\">1237</span><br><span class=\"line\">1238</span><br><span class=\"line\">1239</span><br><span class=\"line\">1240</span><br><span class=\"line\">1241</span><br><span class=\"line\">1242</span><br><span class=\"line\">1243</span><br><span class=\"line\">1244</span><br><span class=\"line\">1245</span><br><span class=\"line\">1246</span><br><span class=\"line\">1247</span><br><span class=\"line\">1248</span><br><span class=\"line\">1249</span><br><span class=\"line\">1250</span><br><span class=\"line\">1251</span><br><span class=\"line\">1252</span><br><span class=\"line\">1253</span><br><span class=\"line\">1254</span><br><span class=\"line\">1255</span><br><span class=\"line\">1256</span><br><span class=\"line\">1257</span><br><span class=\"line\">1258</span><br><span class=\"line\">1259</span><br><span class=\"line\">1260</span><br><span class=\"line\">1261</span><br><span class=\"line\">1262</span><br><span class=\"line\">1263</span><br><span class=\"line\">1264</span><br><span class=\"line\">1265</span><br><span class=\"line\">1266</span><br><span class=\"line\">1267</span><br><span class=\"line\">1268</span><br><span class=\"line\">1269</span><br><span class=\"line\">1270</span><br><span class=\"line\">1271</span><br><span class=\"line\">1272</span><br><span class=\"line\">1273</span><br><span class=\"line\">1274</span><br><span class=\"line\">1275</span><br><span class=\"line\">1276</span><br><span class=\"line\">1277</span><br><span class=\"line\">1278</span><br><span class=\"line\">1279</span><br><span class=\"line\">1280</span><br><span class=\"line\">1281</span><br><span class=\"line\">1282</span><br><span class=\"line\">1283</span><br><span class=\"line\">1284</span><br><span class=\"line\">1285</span><br><span class=\"line\">1286</span><br><span class=\"line\">1287</span><br><span class=\"line\">1288</span><br><span class=\"line\">1289</span><br><span class=\"line\">1290</span><br><span class=\"line\">1291</span><br><span class=\"line\">1292</span><br><span class=\"line\">1293</span><br><span class=\"line\">1294</span><br><span class=\"line\">1295</span><br><span class=\"line\">1296</span><br><span class=\"line\">1297</span><br><span class=\"line\">1298</span><br><span class=\"line\">1299</span><br><span class=\"line\">1300</span><br><span class=\"line\">1301</span><br><span class=\"line\">1302</span><br><span class=\"line\">1303</span><br><span class=\"line\">1304</span><br><span class=\"line\">1305</span><br><span class=\"line\">1306</span><br><span class=\"line\">1307</span><br><span class=\"line\">1308</span><br><span class=\"line\">1309</span><br><span class=\"line\">1310</span><br><span class=\"line\">1311</span><br><span class=\"line\">1312</span><br><span class=\"line\">1313</span><br><span class=\"line\">1314</span><br><span class=\"line\">1315</span><br><span class=\"line\">1316</span><br><span class=\"line\">1317</span><br><span class=\"line\">1318</span><br><span class=\"line\">1319</span><br><span class=\"line\">1320</span><br><span class=\"line\">1321</span><br><span class=\"line\">1322</span><br><span class=\"line\">1323</span><br><span class=\"line\">1324</span><br><span class=\"line\">1325</span><br><span class=\"line\">1326</span><br><span class=\"line\">1327</span><br><span class=\"line\">1328</span><br><span class=\"line\">1329</span><br><span class=\"line\">1330</span><br><span class=\"line\">1331</span><br><span class=\"line\">1332</span><br><span class=\"line\">1333</span><br><span class=\"line\">1334</span><br><span class=\"line\">1335</span><br><span class=\"line\">1336</span><br><span class=\"line\">1337</span><br><span class=\"line\">1338</span><br><span class=\"line\">1339</span><br><span class=\"line\">1340</span><br><span class=\"line\">1341</span><br><span class=\"line\">1342</span><br><span class=\"line\">1343</span><br><span class=\"line\">1344</span><br><span class=\"line\">1345</span><br><span class=\"line\">1346</span><br><span class=\"line\">1347</span><br><span class=\"line\">1348</span><br><span class=\"line\">1349</span><br><span class=\"line\">1350</span><br><span class=\"line\">1351</span><br><span class=\"line\">1352</span><br><span class=\"line\">1353</span><br><span class=\"line\">1354</span><br><span class=\"line\">1355</span><br><span class=\"line\">1356</span><br><span class=\"line\">1357</span><br><span class=\"line\">1358</span><br><span class=\"line\">1359</span><br><span class=\"line\">1360</span><br><span class=\"line\">1361</span><br><span class=\"line\">1362</span><br><span class=\"line\">1363</span><br><span class=\"line\">1364</span><br><span class=\"line\">1365</span><br><span class=\"line\">1366</span><br><span class=\"line\">1367</span><br><span class=\"line\">1368</span><br><span class=\"line\">1369</span><br><span class=\"line\">1370</span><br><span class=\"line\">1371</span><br><span class=\"line\">1372</span><br><span class=\"line\">1373</span><br><span class=\"line\">1374</span><br><span class=\"line\">1375</span><br><span class=\"line\">1376</span><br><span class=\"line\">1377</span><br><span class=\"line\">1378</span><br><span class=\"line\">1379</span><br><span class=\"line\">1380</span><br><span class=\"line\">1381</span><br><span class=\"line\">1382</span><br><span class=\"line\">1383</span><br><span class=\"line\">1384</span><br><span class=\"line\">1385</span><br><span class=\"line\">1386</span><br><span class=\"line\">1387</span><br><span class=\"line\">1388</span><br><span class=\"line\">1389</span><br><span class=\"line\">1390</span><br><span class=\"line\">1391</span><br><span class=\"line\">1392</span><br><span class=\"line\">1393</span><br><span class=\"line\">1394</span><br><span class=\"line\">1395</span><br><span class=\"line\">1396</span><br><span class=\"line\">1397</span><br><span class=\"line\">1398</span><br><span class=\"line\">1399</span><br><span class=\"line\">1400</span><br><span class=\"line\">1401</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># https://github.com/hwdsl2/openvpn-install</span></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Based on the work of Nyr and contributors at:</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">https://github.com/Nyr/openvpn-install</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Copyright (c) 2022-2024 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Copyright (c) 2013-2023 Nyr</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"></span><br><span class=\"language-bash\"><span class=\"hljs-comment\"># Released under the MIT License, see the accompanying file LICENSE.txt</span></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">or https://opensource.org/licenses/MIT</span><br><br>exiterr()  &#123; echo &quot;Error: $1&quot; &gt;&amp;2; exit 1; &#125;<br>exiterr2() &#123; exiterr &quot;&#x27;apt-get install&#x27; failed.&quot;; &#125;<br>exiterr3() &#123; exiterr &quot;&#x27;yum install&#x27; failed.&quot;; &#125;<br>exiterr4() &#123; exiterr &quot;&#x27;zypper install&#x27; failed.&quot;; &#125;<br><br>check_ip() &#123;<br>\tIP_REGEX=&#x27;^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$&#x27;<br>\tprintf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\\n&#x27; | grep -Eq &quot;$IP_REGEX&quot;<br>&#125;<br><br>check_dns_name() &#123;<br>\tFQDN_REGEX=&#x27;^([a-zA-Z0-9]([a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?\\.)+[a-zA-Z]&#123;2,&#125;$&#x27;<br>\tprintf &#x27;%s&#x27; &quot;$1&quot; | tr -d &#x27;\\n&#x27; | grep -Eq &quot;$FQDN_REGEX&quot;<br>&#125;<br><br>check_root() &#123;<br>\tif [ &quot;$(id -u)&quot; != 0 ]; then<br>\t\texiterr &quot;This installer must be run as root. Try &#x27;sudo bash $0&#x27;&quot;<br>\tfi<br>&#125;<br><br>check_shell() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect Debian <span class=\"hljs-built_in\">users</span> running the script with <span class=\"hljs-string\">&quot;sh&quot;</span> instead of bash</span><br>\tif readlink /proc/$$/exe | grep -q &quot;dash&quot;; then<br>\t\texiterr &#x27;This installer needs to be run with &quot;bash&quot;, not &quot;sh&quot;.&#x27;<br>\tfi<br>&#125;<br><br>check_kernel() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect OpenVZ 6</span><br>\tif [[ $(uname -r | cut -d &quot;.&quot; -f 1) -eq 2 ]]; then<br>\t\texiterr &quot;The system is running an old kernel, which is incompatible with this installer.&quot;<br>\tfi<br>&#125;<br><br>check_os() &#123;<br>\tif grep -qs &quot;ubuntu&quot; /etc/os-release; then<br>\t\tos=&quot;ubuntu&quot;<br>\t\tos_version=$(grep &#x27;VERSION_ID&#x27; /etc/os-release | cut -d &#x27;&quot;&#x27; -f 2 | tr -d &#x27;.&#x27;)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telif [[ -e /etc/debian_version ]]; then<br>\t\tos=&quot;debian&quot;<br>\t\tos_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/debian_version | head -1)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telif [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; then<br>\t\tos=&quot;centos&quot;<br>\t\tos_version=$(grep -shoE &#x27;[0-9]+&#x27; /etc/almalinux-release /etc/rocky-release /etc/centos-release | head -1)<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>\t\tos=&quot;centos&quot;<br>\t\tos_version=&quot;7&quot;<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif grep -qs &quot;Amazon Linux release 2023&quot; /etc/system-release; then<br>\t\texiterr &quot;Amazon Linux 2023 is not supported.&quot;<br>\telif [[ -e /etc/fedora-release ]]; then<br>\t\tos=&quot;fedora&quot;<br>\t\tos_version=$(grep -oE &#x27;[0-9]+&#x27; /etc/fedora-release | head -1)<br>\t\tgroup_name=&quot;nobody&quot;<br>\telif [[ -e /etc/SUSE-brand &amp;&amp; &quot;$(head -1 /etc/SUSE-brand)&quot; == &quot;openSUSE&quot; ]]; then<br>\t\tos=&quot;openSUSE&quot;<br>\t\tos_version=$(tail -1 /etc/SUSE-brand | grep -oE &#x27;[0-9\\\\.]+&#x27;)<br>\t\tgroup_name=&quot;nogroup&quot;<br>\telse<br>\t\texiterr &quot;This installer seems to be running on an unsupported distribution.<br>Supported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS, Fedora, openSUSE and Amazon Linux 2.&quot;<br>\tfi<br>&#125;<br><br>check_os_ver() &#123;<br>\tif [[ &quot;$os&quot; == &quot;ubuntu&quot; &amp;&amp; &quot;$os_version&quot; -lt 2004 ]]; then<br>\t\texiterr &quot;Ubuntu 20.04 or higher is required to use this installer.<br>This version of Ubuntu is too old and unsupported.&quot;<br>\tfi<br>\tif [[ &quot;$os&quot; == &quot;debian&quot; &amp;&amp; &quot;$os_version&quot; -lt 10 ]]; then<br>\t\texiterr &quot;Debian 10 or higher is required to use this installer.<br>This version of Debian is too old and unsupported.&quot;<br>\tfi<br>\tif [[ &quot;$os&quot; == &quot;centos&quot; &amp;&amp; &quot;$os_version&quot; -lt 7 ]]; then<br>\t\texiterr &quot;CentOS 7 or higher is required to use this installer.<br>This version of CentOS is too old and unsupported.&quot;<br>\tfi<br>&#125;<br><br>check_tun() &#123;<br>\tif [[ ! -e /dev/net/tun ]] || ! ( exec 7&lt;&gt;/dev/net/tun ) 2&gt;/dev/null; then<br>\t\texiterr &quot;The system does not have the TUN device available.<br>TUN needs to be enabled before running this installer.&quot;<br>\tfi<br>&#125;<br><br>set_client_name() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Allow a limited <span class=\"hljs-built_in\">set</span> of characters to avoid conflicts</span><br>\tclient=$(sed &#x27;s/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g&#x27; &lt;&lt;&lt; &quot;$unsanitized_client&quot;)<br>&#125;<br><br>parse_args() &#123;<br>\twhile [ &quot;$#&quot; -gt 0 ]; do<br>\t\tcase $1 in<br>\t\t\t--auto)<br>\t\t\t\tauto=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--addclient)<br>\t\t\t\tadd_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--exportclient)<br>\t\t\t\texport_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--listclients)<br>\t\t\t\tlist_clients=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--revokeclient)<br>\t\t\t\trevoke_client=1<br>\t\t\t\tunsanitized_client=&quot;$2&quot;<br>\t\t\t\tshift<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t--uninstall)<br>\t\t\t\tremove_ovpn=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t-y|--yes)<br>\t\t\t\tassume_yes=1<br>\t\t\t\tshift<br>\t\t\t\t;;<br>\t\t\t-h|--help)<br>\t\t\t\tshow_usage<br>\t\t\t\t;;<br>\t\t\t*)<br>\t\t\t\tshow_usage &quot;Unknown parameter: $1&quot;<br>\t\t\t\t;;<br>\t\tesac<br>\tdone<br>&#125;<br><br>check_args() &#123;<br>\tif [ &quot;$auto&quot; = 1 ] &amp;&amp; [ -e &quot;$OVPN_CONF&quot; ]; then<br>\t\techo &quot;Error: Invalid parameter &#x27;--auto&#x27;. OpenVPN is already set up on this server.&quot; &gt;&amp;2<br>\t\techo &quot;       To manage OpenVPN clients, re-run this script without &#x27;--auto&#x27;.&quot; &gt;&amp;2<br>\t\texit 1<br>\tfi<br>\tif [ &quot;$((add_client + export_client + list_clients + revoke_client))&quot; -gt 1 ]; then<br>\t\tshow_usage &quot;Invalid parameters. Specify only one of &#x27;--addclient&#x27;, &#x27;--exportclient&#x27;, &#x27;--listclients&#x27; or &#x27;--revokeclient&#x27;.&quot;<br>\tfi<br>\tif [ &quot;$remove_ovpn&quot; = 1 ]; then<br>\t\tif [ &quot;$((add_client + export_client + list_clients + revoke_client + auto))&quot; -gt 0 ]; then<br>\t\t\tshow_usage &quot;Invalid parameters. &#x27;--uninstall&#x27; cannot be specified with other parameters.&quot;<br>\t\tfi<br>\tfi<br>\tif [ ! -e &quot;$OVPN_CONF&quot; ]; then<br>\t\t[ &quot;$add_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before adding a client.&quot;<br>\t\t[ &quot;$export_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before exporting a client.&quot;<br>\t\t[ &quot;$list_clients&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before listing clients.&quot;<br>\t\t[ &quot;$revoke_client&quot; = 1 ] &amp;&amp; exiterr &quot;You must first set up OpenVPN before revoking a client.&quot;<br>\t\t[ &quot;$remove_ovpn&quot; = 1 ] &amp;&amp; exiterr &quot;Cannot remove OpenVPN because it has not been set up on this server.&quot;<br>\tfi<br>\tif [ &quot;$add_client&quot; = 1 ]; then<br>\t\tset_client_name<br>\t\tif [ -z &quot;$client&quot; ]; then<br>\t\t\texiterr &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>\t\telif [ -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>\t\t\texiterr &quot;$client: invalid name. Client already exists.&quot;<br>\t\tfi<br>\tfi<br>\tif [ &quot;$export_client&quot; = 1 ] || [ &quot;$revoke_client&quot; = 1 ]; then<br>\t\tset_client_name<br>\t\tif [ -z &quot;$client&quot; ] || [ ! -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]; then<br>\t\t\texiterr &quot;Invalid client name, or client does not exist.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>check_nftables() &#123;<br>\tif [ &quot;$os&quot; = &quot;centos&quot; ]; then<br>\t\tif grep -qs &quot;hwdsl2 VPN script&quot; /etc/sysconfig/nftables.conf \\<br>\t\t\t|| systemctl is-active --quiet nftables 2&gt;/dev/null; then<br>\t\t\texiterr &quot;This system has nftables enabled, which is not supported by this installer.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>install_wget() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Detect some Debian minimal setups <span class=\"hljs-built_in\">where</span> neither wget nor curl are installed</span><br>\tif ! hash wget 2&gt;/dev/null &amp;&amp; ! hash curl 2&gt;/dev/null; then<br>\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\techo &quot;Wget is required to use this installer.&quot;<br>\t\t\tread -n1 -r -p &quot;Press any key to install Wget and continue...&quot;<br>\t\tfi<br>\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\tapt-get -yqq install wget &gt;/dev/null<br>\t\t) || exiterr2<br>\tfi<br>&#125;<br><br>install_iproute() &#123;<br>\tif ! hash ip 2&gt;/dev/null; then<br>\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\techo &quot;iproute is required to use this installer.&quot;<br>\t\t\tread -n1 -r -p &quot;Press any key to install iproute and continue...&quot;<br>\t\tfi<br>\t\tif [ &quot;$os&quot; = &quot;debian&quot; ] || [ &quot;$os&quot; = &quot;ubuntu&quot; ]; then<br>\t\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\t\tapt-get -yqq install iproute2 &gt;/dev/null<br>\t\t\t) || exiterr2<br>\t\telif [ &quot;$os&quot; = &quot;openSUSE&quot; ]; then<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tzypper install iproute2 &gt;/dev/null<br>\t\t\t) || exiterr4<br>\t\telse<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tyum -y -q install iproute &gt;/dev/null<br>\t\t\t) || exiterr3<br>\t\tfi<br>\tfi<br>&#125;<br><br>show_header() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>OpenVPN Script<br>https://github.com/hwdsl2/openvpn-install<br>EOF<br>&#125;<br><br>show_header2() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Welcome to this OpenVPN server installer!<br>GitHub: https://github.com/hwdsl2/openvpn-install<br><br>EOF<br>&#125;<br><br>show_header3() &#123;<br>cat &lt;&lt;&#x27;EOF&#x27;<br><br>Copyright (c) 2022-2024 Lin Song<br>Copyright (c) 2013-2023 Nyr<br>EOF<br>&#125;<br><br>show_usage() &#123;<br>\tif [ -n &quot;$1&quot; ]; then<br>\t\techo &quot;Error: $1&quot; &gt;&amp;2<br>\tfi<br>\tshow_header<br>\tshow_header3<br>cat 1&gt;&amp;2 &lt;&lt;EOF<br><br>Usage: bash $0 [options]<br><br>Options:<br>  --auto                        auto install OpenVPN using default options<br>  --addclient [client name]     add a new client<br>  --exportclient [client name]  export configuration for an existing client<br>  --listclients                 list the names of existing clients<br>  --revokeclient [client name]  revoke an existing client<br>  --uninstall                   remove OpenVPN and delete all configuration<br>  -y, --yes                     assume &quot;yes&quot; as answer to prompts when revoking a client or removing OpenVPN<br>  -h, --help                    show this help message and exit<br><br>To customize install options, run this script without arguments.<br>EOF<br>\texit 1<br>&#125;<br><br>show_welcome() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tshow_header2<br>\t\techo &#x27;I need to ask you a few questions before starting setup.&#x27;<br>\t\techo &#x27;You can use the default options and just press enter if you are OK with them.&#x27;<br>\telse<br>\t\tshow_header<br>\t\techo<br>\t\techo &#x27;Starting OpenVPN setup using default options.&#x27;<br>\tfi<br>&#125;<br><br>enter_server_address() &#123;<br>\techo<br>\techo &quot;Do you want OpenVPN clients to connect to this server using a DNS name,&quot;<br>\tprintf &quot;e.g. vpn.example.com, instead of its IP address? [y/N] &quot;<br>\tread -r response<br>\tcase $response in<br>\t\t[yY][eE][sS]|[yY])<br>\t\t\tuse_dns_name=1<br>\t\t\techo<br>\t\t\t;;<br>\t\t*)<br>\t\t\tuse_dns_name=0<br>\t\t\t;;<br>\tesac<br>\tif [ &quot;$use_dns_name&quot; = 1 ]; then<br>\t\tread -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>\t\tuntil check_dns_name &quot;$server_addr&quot;; do<br>\t\t\techo &quot;Invalid DNS name. You must enter a fully qualified domain name (FQDN).&quot;<br>\t\t\tread -rp &quot;Enter the DNS name of this VPN server: &quot; server_addr<br>\t\tdone<br>\t\tip=&quot;$server_addr&quot;<br>\t\techo<br>\t\techo &quot;Note: Make sure this DNS name resolves to the IPv4 address&quot;<br>\t\techo &quot;      of this server. If you add or update the DNS record&quot;<br>\t\techo &quot;      at a later time, reboot this server to take effect.&quot;<br>\telse<br>\t\tdetect_ip<br>\t\tcheck_nat_ip<br>\tfi<br>&#125;<br><br>find_public_ip() &#123;<br>\tip_url1=&quot;http://ipv4.icanhazip.com&quot;<br>\tip_url2=&quot;http://ip1.dynupdate.no-ip.com&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Get public IP and sanitize with grep</span><br>\tget_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url1&quot; || curl -m 10 -4Ls &quot;$ip_url1&quot;)&quot;)<br>\tif ! check_ip &quot;$get_public_ip&quot;; then<br>\t\tget_public_ip=$(grep -m 1 -oE &#x27;^[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27; &lt;&lt;&lt; &quot;$(wget -T 10 -t 1 -4qO- &quot;$ip_url2&quot; || curl -m 10 -4Ls &quot;$ip_url2&quot;)&quot;)<br>\tfi<br>&#125;<br><br>detect_ip() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">If system has a single IPv4, it is selected automatically.</span><br>\tif [[ $(ip -4 addr | grep inet | grep -vEc &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;) -eq 1 ]]; then<br>\t\tip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Use the IP address on the default route</span><br>\t\tip=$(ip -4 route get 1 | sed &#x27;s/ uid .*//&#x27; | awk &#x27;&#123;print $NF;exit&#125;&#x27; 2&gt;/dev/null)<br>\t\tif ! check_ip &quot;$ip&quot;; then<br>\t\t\tfind_public_ip<br>\t\t\tip_match=0<br>\t\t\tif [ -n &quot;$get_public_ip&quot; ]; then<br>\t\t\t\tip_list=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\t\t\t\twhile IFS= read -r line; do<br>\t\t\t\t\tif [ &quot;$line&quot; = &quot;$get_public_ip&quot; ]; then<br>\t\t\t\t\t\tip_match=1<br>\t\t\t\t\t\tip=&quot;$line&quot;<br>\t\t\t\t\tfi<br>\t\t\t\tdone &lt;&lt;&lt; &quot;$ip_list&quot;<br>\t\t\tfi<br>\t\t\tif [ &quot;$ip_match&quot; = 0 ]; then<br>\t\t\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\t\t\techo<br>\t\t\t\t\techo &quot;Which IPv4 address should be used?&quot;<br>\t\t\t\t\tnum_of_ip=$(ip -4 addr | grep inet | grep -vEc &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;)<br>\t\t\t\t\tip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | nl -s &#x27;) &#x27;<br>\t\t\t\t\tread -rp &quot;IPv4 address [1]: &quot; ip_num<br>\t\t\t\t\tuntil [[ -z &quot;$ip_num&quot; || &quot;$ip_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$ip_num&quot; -le &quot;$num_of_ip&quot; ]]; do<br>\t\t\t\t\t\techo &quot;$ip_num: invalid selection.&quot;<br>\t\t\t\t\t\tread -rp &quot;IPv4 address [1]: &quot; ip_num<br>\t\t\t\t\tdone<br>\t\t\t\t\t[[ -z &quot;$ip_num&quot; ]] &amp;&amp; ip_num=1<br>\t\t\t\telse<br>\t\t\t\t\tip_num=1<br>\t\t\t\tfi<br>\t\t\t\tip=$(ip -4 addr | grep inet | grep -vE &#x27;127(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | sed -n &quot;$ip_num&quot;p)<br>\t\t\tfi<br>\t\tfi<br>\tfi<br>\tif ! check_ip &quot;$ip&quot;; then<br>\t\techo &quot;Error: Could not detect this server&#x27;s IP address.&quot; &gt;&amp;2<br>\t\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\t\texit 1<br>\tfi<br>&#125;<br><br>check_nat_ip() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">If <span class=\"hljs-variable\">$ip</span> is a private IP address, the server must be behind NAT</span><br>\tif printf &#x27;%s&#x27; &quot;$ip&quot; | grep -qE &#x27;^(10|127|172\\.(1[6-9]|2[0-9]|3[0-1])|192\\.168|169\\.254)\\.&#x27;; then<br>\t\tfind_public_ip<br>\t\tif ! check_ip &quot;$get_public_ip&quot;; then<br>\t\t\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\t\t\techo<br>\t\t\t\techo &quot;This server is behind NAT. What is the public IPv4 address?&quot;<br>\t\t\t\tread -rp &quot;Public IPv4 address: &quot; public_ip<br>\t\t\t\tuntil check_ip &quot;$public_ip&quot;; do<br>\t\t\t\t\techo &quot;Invalid input.&quot;<br>\t\t\t\t\tread -rp &quot;Public IPv4 address: &quot; public_ip<br>\t\t\t\tdone<br>\t\t\telse<br>\t\t\t\techo &quot;Error: Could not detect this server&#x27;s public IP.&quot; &gt;&amp;2<br>\t\t\t\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\telse<br>\t\t\tpublic_ip=&quot;$get_public_ip&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>show_config() &#123;<br>\tif [ &quot;$auto&quot; != 0 ]; then<br>\t\techo<br>\t\tprintf &#x27;%s&#x27; &quot;Server IP: &quot;<br>\t\t[ -n &quot;$public_ip&quot; ] &amp;&amp; printf &#x27;%s\\n&#x27; &quot;$public_ip&quot; || printf &#x27;%s\\n&#x27; &quot;$ip&quot;<br>\t\techo &quot;Port: UDP/1194&quot;<br>\t\techo &quot;Client name: client&quot;<br>\t\techo &quot;Client DNS: Google Public DNS&quot;<br>\tfi<br>&#125;<br><br>detect_ipv6() &#123;<br>\tip6=&quot;&quot;<br>\tif [[ $(ip -6 addr | grep -c &#x27;inet6 [23]&#x27;) -ne 0 ]]; then<br>\t\tip6=$(ip -6 addr | grep &#x27;inet6 [23]&#x27; | cut -d &#x27;/&#x27; -f 1 | grep -oE &#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27; | sed -n 1p)<br>\tfi<br>&#125;<br><br>select_protocol() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Which protocol should OpenVPN use?&quot;<br>\t\techo &quot;   1) UDP (recommended)&quot;<br>\t\techo &quot;   2) TCP&quot;<br>\t\tread -rp &quot;Protocol [1]: &quot; protocol<br>\t\tuntil [[ -z &quot;$protocol&quot; || &quot;$protocol&quot; =~ ^[12]$ ]]; do<br>\t\t\techo &quot;$protocol: invalid selection.&quot;<br>\t\t\tread -rp &quot;Protocol [1]: &quot; protocol<br>\t\tdone<br>\t\tcase &quot;$protocol&quot; in<br>\t\t\t1|&quot;&quot;)<br>\t\t\tprotocol=udp<br>\t\t\t;;<br>\t\t\t2)<br>\t\t\tprotocol=tcp<br>\t\t\t;;<br>\t\tesac<br>\telse<br>\t\tprotocol=udp<br>\tfi<br>&#125;<br><br>select_port() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Which port should OpenVPN listen to?&quot;<br>\t\tread -rp &quot;Port [1194]: &quot; port<br>\t\tuntil [[ -z &quot;$port&quot; || &quot;$port&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$port&quot; -le 65535 ]]; do<br>\t\t\techo &quot;$port: invalid port.&quot;<br>\t\t\tread -rp &quot;Port [1194]: &quot; port<br>\t\tdone<br>\t\t[[ -z &quot;$port&quot; ]] &amp;&amp; port=1194<br>\telse<br>\t\tport=1194<br>\tfi<br>&#125;<br><br>enter_custom_dns() &#123;<br>\tread -rp &quot;Enter primary DNS server: &quot; dns1<br>\tuntil check_ip &quot;$dns1&quot;; do<br>\t\techo &quot;Invalid DNS server.&quot;<br>\t\tread -rp &quot;Enter primary DNS server: &quot; dns1<br>\tdone<br>\tread -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>\tuntil [ -z &quot;$dns2&quot; ] || check_ip &quot;$dns2&quot;; do<br>\t\techo &quot;Invalid DNS server.&quot;<br>\t\tread -rp &quot;Enter secondary DNS server (Enter to skip): &quot; dns2<br>\tdone<br>&#125;<br><br>select_dns() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Select a DNS server for the clients:&quot;<br>\t\techo &quot;   1) Current system resolvers&quot;<br>\t\techo &quot;   2) Google Public DNS&quot;<br>\t\techo &quot;   3) Cloudflare DNS&quot;<br>\t\techo &quot;   4) OpenDNS&quot;<br>\t\techo &quot;   5) Quad9&quot;<br>\t\techo &quot;   6) AdGuard DNS&quot;<br>\t\techo &quot;   7) Custom&quot;<br>\t\tread -rp &quot;DNS server [2]: &quot; dns<br>\t\tuntil [[ -z &quot;$dns&quot; || &quot;$dns&quot; =~ ^[1-7]$ ]]; do<br>\t\t\techo &quot;$dns: invalid selection.&quot;<br>\t\t\tread -rp &quot;DNS server [2]: &quot; dns<br>\t\tdone<br>\telse<br>\t\tdns=2<br>\tfi<br>\tif [ &quot;$dns&quot; = 7 ]; then<br>\t\tenter_custom_dns<br>\tfi<br>&#125;<br><br>enter_first_client_name() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;Enter a name for the first client:&quot;<br>\t\tread -rp &quot;Name [client]: &quot; unsanitized_client<br>\t\tset_client_name<br>\t\t[[ -z &quot;$client&quot; ]] &amp;&amp; client=client<br>\telse<br>\t\tclient=client<br>\tfi<br>&#125;<br><br>show_setup_ready() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\techo<br>\t\techo &quot;OpenVPN installation is ready to begin.&quot;<br>\tfi<br>&#125;<br><br>check_firewall() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Install a firewall <span class=\"hljs-keyword\">if</span> firewalld or iptables are not already available</span><br>\tif ! systemctl is-active --quiet firewalld.service &amp;&amp; ! hash iptables 2&gt;/dev/null; then<br>\t\tif [[ &quot;$os&quot; == &quot;centos&quot; || &quot;$os&quot; == &quot;fedora&quot; ]]; then<br>\t\t\tfirewall=&quot;firewalld&quot;<br>\t\telif [[ &quot;$os&quot; == &quot;openSUSE&quot; ]]; then<br>\t\t\tfirewall=&quot;firewalld&quot;<br>\t\telif [[ &quot;$os&quot; == &quot;debian&quot; || &quot;$os&quot; == &quot;ubuntu&quot; ]]; then<br>\t\t\tfirewall=&quot;iptables&quot;<br>\t\tfi<br>\t\tif [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\">We don<span class=\"hljs-string\">&#x27;t want to silently enable firewalld, so we give a subtle warning</span></span><br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If the user continues, firewalld will be installed and enabled during setup</span></span><br>\t\t\techo<br>\t\t\techo &quot;Note: firewalld, which is required to manage routing tables, will also be installed.&quot;<br>\t\tfi<br>\tfi<br>&#125;<br><br>abort_and_exit() &#123;<br>\techo &quot;Abort. No changes were made.&quot; &gt;&amp;2<br>\texit 1<br>&#125;<br><br>confirm_setup() &#123;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tprintf &quot;Do you want to continue? [Y/n] &quot;<br>\t\tread -r response<br>\t\tcase $response in<br>\t\t\t[yY][eE][sS]|[yY]|&#x27;&#x27;)<br>\t\t\t\t:<br>\t\t\t\t;;<br>\t\t\t*)<br>\t\t\t\tabort_and_exit<br>\t\t\t\t;;<br>\t\tesac<br>\tfi<br>&#125;<br><br>show_start_setup() &#123;<br>\techo<br>\techo &quot;Installing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_limitnproc() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If running inside a container, disable LimitNPROC to prevent conflicts</span></span><br>\tif systemd-detect-virt -cq; then<br>\t\tmkdir /etc/systemd/system/openvpn-server@server.service.d/ 2&gt;/dev/null<br>\t\techo &quot;[Service]<br>LimitNPROC=infinity&quot; &gt; /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>\tfi<br>&#125;<br><br>install_pkgs() &#123;<br>\tif [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>\t\texport DEBIAN_FRONTEND=noninteractive<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq update || apt-get -yqq update<br>\t\t\tapt-get -yqq --no-install-recommends install openvpn &gt;/dev/null<br>\t\t) || exiterr2<br>\t\t(<br>\t\t\tset -x<br>\t\t\tapt-get -yqq install openssl ca-certificates $firewall &gt;/dev/null<br>\t\t) || exiterr2<br>\telif [[ &quot;$os&quot; = &quot;centos&quot; ]]; then<br>\t\tif grep -qs &quot;Amazon Linux release 2 &quot; /etc/system-release; then<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tamazon-linux-extras install epel -y &gt;/dev/null<br>\t\t\t) || exit 1<br>\t\telse<br>\t\t\t(<br>\t\t\t\tset -x<br>\t\t\t\tyum -y -q install epel-release &gt;/dev/null<br>\t\t\t) || exiterr3<br>\t\tfi<br>\t\t(<br>\t\t\tset -x<br>\t\t\tyum -y -q install openvpn openssl ca-certificates tar $firewall &gt;/dev/null 2&gt;&amp;1<br>\t\t) || exiterr3<br>\telif [[ &quot;$os&quot; = &quot;fedora&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tdnf install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>\t\t) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Else, OS must be openSUSE</span></span><br>\t\t(<br>\t\t\tset -x<br>\t\t\tzypper install -y openvpn openssl ca-certificates tar $firewall &gt;/dev/null<br>\t\t) || exiterr4<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If firewalld was just installed, enable it</span></span><br>\tif [[ &quot;$firewall&quot; == &quot;firewalld&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now firewalld.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>remove_pkgs() &#123;<br>\tif [[ &quot;$os&quot; = &quot;debian&quot; || &quot;$os&quot; = &quot;ubuntu&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t\tapt-get remove --purge -y openvpn &gt;/dev/null<br>\t\t)<br>\telif [[ &quot;$os&quot; = &quot;openSUSE&quot; ]]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tzypper remove -y openvpn &gt;/dev/null<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t)<br>\t\trm -f /etc/openvpn/ipp.txt<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Else, OS must be CentOS or Fedora</span></span><br>\t\t(<br>\t\t\tset -x<br>\t\t\tyum -y -q remove openvpn &gt;/dev/null<br>\t\t\trm -rf /etc/openvpn/server<br>\t\t)<br>\tfi<br>&#125;<br><br>create_firewall_rules() &#123;<br>\tif systemctl is-active --quiet firewalld.service; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Using both permanent and not permanent rules to avoid a firewalld</span></span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">reload.</span></span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">We don&#x27;</span>t use --add-service=openvpn because that would only work with</span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">the default port and protocol.</span><br>\t\tfirewall-cmd -q --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --zone=trusted --add-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --permanent --add-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=10.8.0.0/24<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Set NAT <span class=\"hljs-keyword\">for</span> the VPN subnet</span><br>\t\tfirewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tfirewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tif [[ -n &quot;$ip6&quot; ]]; then<br>\t\t\tfirewall-cmd -q --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\t\tfirewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\tfi<br>\telse<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Create a service to <span class=\"hljs-built_in\">set</span> up persistent iptables rules</span><br>\t\tiptables_path=$(command -v iptables)<br>\t\tip6tables_path=$(command -v ip6tables)<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">nf_tables is not available as standard <span class=\"hljs-keyword\">in</span> OVZ kernels. So use iptables-legacy</span><br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-keyword\">if</span> we are <span class=\"hljs-keyword\">in</span> OVZ, with a nf_tables backend and iptables-legacy is available.</span><br>\t\tif [[ $(systemd-detect-virt) == &quot;openvz&quot; ]] &amp;&amp; readlink -f &quot;$(command -v iptables)&quot; | grep -q &quot;nft&quot; &amp;&amp; hash iptables-legacy 2&gt;/dev/null; then<br>\t\t\tiptables_path=$(command -v iptables-legacy)<br>\t\t\tip6tables_path=$(command -v ip6tables-legacy)<br>\t\tfi<br>\t\techo &quot;[Unit]<br>Before=network.target<br>[Service]<br>Type=oneshot<br>ExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>ExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT<br>ExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt; /etc/systemd/system/openvpn-iptables.service<br>\t\tif [[ -n &quot;$ip6&quot; ]]; then<br>\t\t\techo &quot;ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT<br>ExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>ExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT<br>ExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>\t\tfi<br>\t\techo &quot;RemainAfterExit=yes<br>[Install]<br>WantedBy=multi-user.target&quot; &gt;&gt; /etc/systemd/system/openvpn-iptables.service<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn-iptables.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>remove_firewall_rules() &#123;<br>\tport=$(grep &#x27;^port &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>\tprotocol=$(grep &#x27;^proto &#x27; &quot;$OVPN_CONF&quot; | cut -d &quot; &quot; -f 2)<br>\tif systemctl is-active --quiet firewalld.service; then<br>\t\tip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep &#x27;\\-s 10.8.0.0/24 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d 10.8.0.0/24&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Using both permanent and not permanent rules to avoid a firewalld reload.</span><br>\t\tfirewall-cmd -q --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --zone=trusted --remove-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --permanent --remove-port=&quot;$port&quot;/&quot;$protocol&quot;<br>\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=10.8.0.0/24<br>\t\tfirewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j MASQUERADE<br>\t\tif grep -qs &quot;server-ipv6&quot; &quot;$OVPN_CONF&quot;; then<br>\t\t\tip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep &#x27;\\-s fddd:1194:1194:1194::/64 &#x27;&quot;&#x27;&quot;&#x27;!&#x27;&quot;&#x27;&quot;&#x27; -d fddd:1194:1194:1194::/64&#x27; | grep -oE &#x27;[^ ]+$&#x27;)<br>\t\t\tfirewall-cmd -q --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --permanent --zone=trusted --remove-source=fddd:1194:1194:1194::/64<br>\t\t\tfirewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\t\tfirewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j MASQUERADE<br>\t\tfi<br>\telse<br>\t\tsystemctl disable --now openvpn-iptables.service<br>\t\trm -f /etc/systemd/system/openvpn-iptables.service<br>\tfi<br>\tif sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br>\t\tsemanage port -d -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>\tfi<br>&#125;<br><br>install_easyrsa() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Get easy-rsa</span><br>\teasy_rsa_url=&#x27;https://github.com/OpenVPN/easy-rsa/releases/download/v3.2.0/EasyRSA-3.2.0.tgz&#x27;<br>\tmkdir -p /etc/openvpn/server/easy-rsa/<br>\t&#123; wget -t 3 -T 30 -qO- &quot;$easy_rsa_url&quot; 2&gt;/dev/null || curl -m 30 -sL &quot;$easy_rsa_url&quot; ; &#125; | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1<br>\tif [ ! -f /etc/openvpn/server/easy-rsa/easyrsa ]; then<br>\t\texiterr &quot;Failed to download EasyRSA from $easy_rsa_url.&quot;<br>\tfi<br>\tchown -R root:root /etc/openvpn/server/easy-rsa/<br>&#125;<br><br>create_pki_and_certs() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\">Create the PKI, <span class=\"hljs-built_in\">set</span> up the CA and the server and client certificates</span><br>\t\t./easyrsa --batch init-pki &gt;/dev/null<br>\t\t./easyrsa --batch build-ca nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 build-server-full server nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>\t)<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Move the stuff we need</span><br>\tcp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">CRL is <span class=\"hljs-built_in\">read</span> with each client connection, <span class=\"hljs-keyword\">while</span> OpenVPN is dropped to nobody</span><br>\tchown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\">Without +x <span class=\"hljs-keyword\">in</span> the directory, OpenVPN can<span class=\"hljs-string\">&#x27;t run a stat() on the CRL file</span></span><br>\tchmod o+x /etc/openvpn/server/<br>\t(<br>\t\tset -x<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generate key for tls-crypt</span></span><br>\t\topenvpn --genkey --secret /etc/openvpn/server/tc.key &gt;/dev/null<br>\t)<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Create the DH parameters file using the predefined ffdhe2048 group</span></span><br>\techo &#x27;-----BEGIN DH PARAMETERS-----<br>MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz<br>+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a<br>87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7<br>YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi<br>7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD<br>ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==<br>-----END DH PARAMETERS-----&#x27; &gt; /etc/openvpn/server/dh.pem<br>&#125;<br><br>create_dns_config() &#123;<br>\tcase &quot;$dns&quot; in<br>\t\t1)<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Locate the proper resolv.conf</span></span><br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Needed for systems running systemd-resolved</span></span><br>\t\t\tif grep &#x27;^nameserver&#x27; &quot;/etc/resolv.conf&quot; | grep -qv &#x27;127.0.0.53&#x27; ; then<br>\t\t\t\tresolv_conf=&quot;/etc/resolv.conf&quot;<br>\t\t\telse<br>\t\t\t\tresolv_conf=&quot;/run/systemd/resolve/resolv.conf&quot;<br>\t\t\tfi<br><span class=\"hljs-meta prompt_\">\t\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Obtain the resolvers from resolv.conf and use them for OpenVPN</span></span><br>\t\t\tgrep -v &#x27;^#\\|^;&#x27; &quot;$resolv_conf&quot; | grep &#x27;^nameserver&#x27; | grep -v &#x27;127.0.0.53&#x27; | grep -oE &#x27;[0-9]&#123;1,3&#125;(\\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27; | while read line; do<br>\t\t\t\techo &quot;push \\&quot;dhcp-option DNS $line\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tdone<br>\t\t;;<br>\t\t2|&quot;&quot;)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 8.8.8.8&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 8.8.4.4&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t3)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 1.1.1.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 1.0.0.1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t4)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 208.67.222.222&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 208.67.220.220&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t5)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 9.9.9.9&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 149.112.112.112&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t6)<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 94.140.14.14&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\techo &#x27;push &quot;dhcp-option DNS 94.140.15.15&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t;;<br>\t\t7)<br>\t\t\techo &quot;push \\&quot;dhcp-option DNS $dns1\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tif [ -n &quot;$dns2&quot; ]; then<br>\t\t\t\techo &quot;push \\&quot;dhcp-option DNS $dns2\\&quot;&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\t\tfi<br>\t\t;;<br>\tesac<br>&#125;<br><br>create_server_config() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generate server.conf</span></span><br>\techo &quot;local $ip<br>port $port<br>proto $protocol<br>dev tun<br>ca ca.crt<br>cert server.crt<br>key server.key<br>dh dh.pem<br>auth SHA256<br>tls-crypt tc.key<br>topology subnet<br>server 10.8.0.0 255.255.255.0&quot; &gt; &quot;$OVPN_CONF&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">IPv6</span></span><br>\tif [[ -z &quot;$ip6&quot; ]]; then<br>\t\techo &#x27;push &quot;block-ipv6&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\t\techo &#x27;push &quot;ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\telse<br>\t\techo &#x27;server-ipv6 fddd:1194:1194:1194::/64&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tfi<br>\techo &#x27;push &quot;redirect-gateway def1 ipv6 bypass-dhcp&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\techo &#x27;ifconfig-pool-persist ipp.txt&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tcreate_dns_config<br>\techo &#x27;push &quot;block-outside-dns&quot;&#x27; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\techo &quot;keepalive 10 120<br>cipher AES-128-GCM<br>user nobody<br>group $group_name<br>persist-key<br>persist-tun<br>verb 3<br>crl-verify crl.pem&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tif [[ &quot;$protocol&quot; = &quot;udp&quot; ]]; then<br>\t\techo &quot;explicit-exit-notify&quot; &gt;&gt; &quot;$OVPN_CONF&quot;<br>\tfi<br>&#125;<br><br>get_export_dir() &#123;<br>\texport_to_home_dir=0<br>\texport_dir=~/<br>\tif [ -n &quot;$SUDO_USER&quot; ] &amp;&amp; getent group &quot;$SUDO_USER&quot; &gt;/dev/null 2&gt;&amp;1; then<br>\t\tuser_home_dir=$(getent passwd &quot;$SUDO_USER&quot; 2&gt;/dev/null | cut -d: -f6)<br>\t\tif [ -d &quot;$user_home_dir&quot; ] &amp;&amp; [ &quot;$user_home_dir&quot; != &quot;/&quot; ]; then<br>\t\t\texport_dir=&quot;$user_home_dir/&quot;<br>\t\t\texport_to_home_dir=1<br>\t\tfi<br>\tfi<br>&#125;<br><br>new_client() &#123;<br>\tget_export_dir<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Generates the custom client.ovpn</span></span><br>\t&#123;<br>\tcat /etc/openvpn/server/client-common.txt<br>\techo &quot;&lt;ca&gt;&quot;<br>\tcat /etc/openvpn/server/easy-rsa/pki/ca.crt<br>\techo &quot;&lt;/ca&gt;&quot;<br>\techo &quot;&lt;cert&gt;&quot;<br>\tsed -ne &#x27;/BEGIN CERTIFICATE/,$ p&#x27; /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt<br>\techo &quot;&lt;/cert&gt;&quot;<br>\techo &quot;&lt;key&gt;&quot;<br>\tcat /etc/openvpn/server/easy-rsa/pki/private/&quot;$client&quot;.key<br>\techo &quot;&lt;/key&gt;&quot;<br>\techo &quot;&lt;tls-crypt&gt;&quot;<br>\tsed -ne &#x27;/BEGIN OpenVPN Static key/,$ p&#x27; /etc/openvpn/server/tc.key<br>\techo &quot;&lt;/tls-crypt&gt;&quot;<br>\t&#125; &gt; &quot;$export_dir$client&quot;.ovpn<br>\tif [ &quot;$export_to_home_dir&quot; = 1 ]; then<br>\t\tchown &quot;$SUDO_USER:$SUDO_USER&quot; &quot;$export_dir$client&quot;.ovpn<br>\tfi<br>\tchmod 600 &quot;$export_dir$client&quot;.ovpn<br>&#125;<br><br>update_sysctl() &#123;<br>\tmkdir -p /etc/sysctl.d<br>\tconf_fwd=&quot;/etc/sysctl.d/99-openvpn-forward.conf&quot;<br>\tconf_opt=&quot;/etc/sysctl.d/99-openvpn-optimize.conf&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable net.ipv4.ip_forward for the system</span></span><br>\techo &#x27;net.ipv4.ip_forward=1&#x27; &gt; &quot;$conf_fwd&quot;<br>\tif [[ -n &quot;$ip6&quot; ]]; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable net.ipv6.conf.all.forwarding for the system</span></span><br>\t\techo &quot;net.ipv6.conf.all.forwarding=1&quot; &gt;&gt; &quot;$conf_fwd&quot;<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Optimize sysctl settings such as TCP buffer sizes</span></span><br>\tbase_url=&quot;https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0&quot;<br>\tconf_url=&quot;$base_url/sysctl-ovpn-$os&quot;<br>\t[ &quot;$auto&quot; != 0 ] &amp;&amp; conf_url=&quot;$&#123;conf_url&#125;-auto&quot;<br>\twget -t 3 -T 30 -q -O &quot;$conf_opt&quot; &quot;$conf_url&quot; 2&gt;/dev/null \\<br>\t\t|| curl -m 30 -fsL &quot;$conf_url&quot; -o &quot;$conf_opt&quot; 2&gt;/dev/null \\<br>\t\t|| &#123; /bin/rm -f &quot;$conf_opt&quot;; touch &quot;$conf_opt&quot;; &#125;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Enable TCP BBR congestion control if kernel version &gt;= 4.20</span></span><br>\tif modprobe -q tcp_bbr \\<br>\t\t&amp;&amp; printf &#x27;%s\\n%s&#x27; &quot;4.20&quot; &quot;$(uname -r)&quot; | sort -C -V \\<br>\t\t&amp;&amp; [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; then<br>cat &gt;&gt; &quot;$conf_opt&quot; &lt;&lt;&#x27;EOF&#x27;<br>net.core.default_qdisc = fq<br>net.ipv4.tcp_congestion_control = bbr<br>EOF<br>\tfi<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Apply sysctl settings</span></span><br>\tsysctl -e -q -p &quot;$conf_fwd&quot;<br>\tsysctl -e -q -p &quot;$conf_opt&quot;<br>&#125;<br><br>update_rclocal() &#123;<br>\tipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>\tif ! grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>\t\tif [ ! -f /etc/rc.local ]; then<br>\t\t\techo &#x27;#!/bin/sh&#x27; &gt; /etc/rc.local<br>\t\telse<br>\t\t\tif [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>\t\t\t\tsed --follow-symlinks -i &#x27;/^exit 0/d&#x27; /etc/rc.local<br>\t\t\tfi<br>\t\tfi<br>cat &gt;&gt; /etc/rc.local &lt;&lt;EOF<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">$</span><span class=\"language-bash\"><span class=\"hljs-string\">ipt_cmd</span></span><br>EOF<br>\t\tif [ &quot;$os&quot; = &quot;ubuntu&quot; ] || [ &quot;$os&quot; = &quot;debian&quot; ]; then<br>\t\t\techo &quot;exit 0&quot; &gt;&gt; /etc/rc.local<br>\t\tfi<br>\t\tchmod +x /etc/rc.local<br>\tfi<br>&#125;<br><br>update_selinux() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If SELinux is enabled and a custom port was selected, we need this</span></span><br>\tif sestatus 2&gt;/dev/null | grep &quot;Current mode&quot; | grep -q &quot;enforcing&quot; &amp;&amp; [[ &quot;$port&quot; != 1194 ]]; then<br><span class=\"hljs-meta prompt_\">\t\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">Install semanage if not already present</span></span><br>\t\tif ! hash semanage 2&gt;/dev/null; then<br>\t\t\tif [[ &quot;$os_version&quot; -eq 7 ]]; then<br>\t\t\t\t# Centos 7<br>\t\t\t\t(<br>\t\t\t\t\tset -x<br>\t\t\t\t\tyum -y -q install policycoreutils-python &gt;/dev/null<br>\t\t\t\t) || exiterr3<br>\t\t\telse<br>\t\t\t\t# CentOS 8/9 or Fedora<br>\t\t\t\t(<br>\t\t\t\t\tset -x<br>\t\t\t\t\tdnf install -y policycoreutils-python-utils &gt;/dev/null<br>\t\t\t\t) || exiterr &quot;&#x27;dnf install&#x27; failed.&quot;<br>\t\t\tfi<br>\t\tfi<br>\t\tsemanage port -a -t openvpn_port_t -p &quot;$protocol&quot; &quot;$port&quot;<br>\tfi<br>&#125;<br><br>create_client_common() &#123;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">If the server is behind NAT, use the correct IP address</span></span><br>\t[[ -n &quot;$public_ip&quot; ]] &amp;&amp; ip=&quot;$public_ip&quot;<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">client-common.txt is created so we have a template to add further users later</span></span><br>\techo &quot;client<br>dev tun<br>proto $protocol<br>remote $ip $port<br>resolv-retry infinite<br>nobind<br>persist-key<br>persist-tun<br>remote-cert-tls server<br>auth SHA256<br>cipher AES-128-GCM<br>ignore-unknown-option block-outside-dns block-ipv6<br>verb 3&quot; &gt; /etc/openvpn/server/client-common.txt<br>&#125;<br><br>start_openvpn_service() &#123;<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn-server@server.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\telse<br>\t\tln -s /etc/openvpn/server/* /etc/openvpn &gt;/dev/null 2&gt;&amp;1<br>\t\t(<br>\t\t\tset -x<br>\t\t\tsystemctl enable --now openvpn@server.service &gt;/dev/null 2&gt;&amp;1<br>\t\t)<br>\tfi<br>&#125;<br><br>finish_setup() &#123;<br>\techo<br>\techo &quot;Finished!&quot;<br>\techo<br>\techo &quot;The client configuration is available in: $export_dir$client.ovpn&quot;<br>\techo &quot;New clients can be added by running this script again.&quot;<br>&#125;<br><br>select_menu_option() &#123;<br>\techo<br>\techo &quot;OpenVPN is already installed.&quot;<br>\techo<br>\techo &quot;Select an option:&quot;<br>\techo &quot;   1) Add a new client&quot;<br>\techo &quot;   2) Export config for an existing client&quot;<br>\techo &quot;   3) List existing clients&quot;<br>\techo &quot;   4) Revoke an existing client&quot;<br>\techo &quot;   5) Remove OpenVPN&quot;<br>\techo &quot;   6) Exit&quot;<br>\tread -rp &quot;Option: &quot; option<br>\tuntil [[ &quot;$option&quot; =~ ^[1-6]$ ]]; do<br>\t\techo &quot;$option: invalid selection.&quot;<br>\t\tread -rp &quot;Option: &quot; option<br>\tdone<br>&#125;<br><br>show_clients() &#123;<br>\ttail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | nl -s &#x27;) &#x27;<br>&#125;<br><br>enter_client_name() &#123;<br>\techo<br>\techo &quot;Provide a name for the client:&quot;<br>\tread -rp &quot;Name: &quot; unsanitized_client<br>\t[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>\tset_client_name<br>\twhile [[ -z &quot;$client&quot; || -e /etc/openvpn/server/easy-rsa/pki/issued/&quot;$client&quot;.crt ]]; do<br>\t\tif [ -z &quot;$client&quot; ]; then<br>\t\t\techo &quot;Invalid client name. Use one word only, no special characters except &#x27;-&#x27; and &#x27;_&#x27;.&quot;<br>\t\telse<br>\t\t\techo &quot;$client: invalid name. Client already exists.&quot;<br>\t\tfi<br>\t\tread -rp &quot;Name: &quot; unsanitized_client<br>\t\t[ -z &quot;$unsanitized_client&quot; ] &amp;&amp; abort_and_exit<br>\t\tset_client_name<br>\tdone<br>&#125;<br><br>build_client_config() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br>\t\t./easyrsa --batch --days=3650 build-client-full &quot;$client&quot; nopass &gt;/dev/null 2&gt;&amp;1<br>\t)<br>&#125;<br><br>print_client_action() &#123;<br>\techo<br>\techo &quot;$client $1. Configuration available in: $export_dir$client.ovpn&quot;<br>&#125;<br><br>print_check_clients() &#123;<br>\techo<br>\techo &quot;Checking for existing client(s)...&quot;<br>&#125;<br><br>check_clients() &#123;<br>\tnum_of_clients=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep -c &quot;^V&quot;)<br>\tif [[ &quot;$num_of_clients&quot; = 0 ]]; then<br>\t\techo<br>\t\techo &quot;There are no existing clients!&quot;<br>\t\texit 1<br>\tfi<br>&#125;<br><br>print_client_total() &#123;<br>\tif [ &quot;$num_of_clients&quot; = 1 ]; then<br>\t\tprintf &#x27;\\n%s\\n&#x27; &quot;Total: 1 client&quot;<br>\telif [ -n &quot;$num_of_clients&quot; ]; then<br>\t\tprintf &#x27;\\n%s\\n&#x27; &quot;Total: $num_of_clients clients&quot;<br>\tfi<br>&#125;<br><br>select_client_to() &#123;<br>\techo<br>\techo &quot;Select the client to $1:&quot;<br>\tshow_clients<br>\tread -rp &quot;Client: &quot; client_num<br>\t[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>\tuntil [[ &quot;$client_num&quot; =~ ^[0-9]+$ &amp;&amp; &quot;$client_num&quot; -le &quot;$num_of_clients&quot; ]]; do<br>\t\techo &quot;$client_num: invalid selection.&quot;<br>\t\tread -rp &quot;Client: &quot; client_num<br>\t\t[ -z &quot;$client_num&quot; ] &amp;&amp; abort_and_exit<br>\tdone<br>\tclient=$(tail -n +2 /etc/openvpn/server/easy-rsa/pki/index.txt | grep &quot;^V&quot; | cut -d &#x27;=&#x27; -f 2 | sed -n &quot;$client_num&quot;p)<br>&#125;<br><br>confirm_revoke_client() &#123;<br>\tif [ &quot;$assume_yes&quot; != 1 ]; then<br>\t\techo<br>\t\tread -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>\t\tuntil [[ &quot;$revoke&quot; =~ ^[yYnN]*$ ]]; do<br>\t\t\techo &quot;$revoke: invalid selection.&quot;<br>\t\t\tread -rp &quot;Confirm $client revocation? [y/N]: &quot; revoke<br>\t\tdone<br>\telse<br>\t\trevoke=y<br>\tfi<br>&#125;<br><br>print_revoke_client() &#123;<br>\techo<br>\techo &quot;Revoking $client...&quot;<br>&#125;<br><br>remove_client_conf() &#123;<br>\tget_export_dir<br>\tovpn_file=&quot;$export_dir$client.ovpn&quot;<br>\tif [ -f &quot;$ovpn_file&quot; ]; then<br>\t\techo &quot;Removing $ovpn_file...&quot;<br>\t\trm -f &quot;$ovpn_file&quot;<br>\tfi<br>&#125;<br><br>revoke_client_ovpn() &#123;<br>\tcd /etc/openvpn/server/easy-rsa/ || exit 1<br>\t(<br>\t\tset -x<br>\t\t./easyrsa --batch revoke &quot;$client&quot; &gt;/dev/null 2&gt;&amp;1<br>\t\t./easyrsa --batch --days=3650 gen-crl &gt;/dev/null 2&gt;&amp;1<br>\t)<br>\trm -f /etc/openvpn/server/crl.pem<br>\tcp /etc/openvpn/server/easy-rsa/pki/crl.pem /etc/openvpn/server/crl.pem<br><span class=\"hljs-meta prompt_\">\t# </span><span class=\"language-bash\"><span class=\"hljs-string\">CRL is read with each client connection, when OpenVPN is dropped to nobody</span></span><br>\tchown nobody:&quot;$group_name&quot; /etc/openvpn/server/crl.pem<br>\tremove_client_conf<br>&#125;<br><br>print_client_revoked() &#123;<br>\techo<br>\techo &quot;$client revoked!&quot;<br>&#125;<br><br>print_client_revocation_aborted() &#123;<br>\techo<br>\techo &quot;$client revocation aborted!&quot;<br>&#125;<br><br>confirm_remove_ovpn() &#123;<br>\tif [ &quot;$assume_yes&quot; != 1 ]; then<br>\t\techo<br>\t\tread -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>\t\tuntil [[ &quot;$remove&quot; =~ ^[yYnN]*$ ]]; do<br>\t\t\techo &quot;$remove: invalid selection.&quot;<br>\t\t\tread -rp &quot;Confirm OpenVPN removal? [y/N]: &quot; remove<br>\t\tdone<br>\telse<br>\t\tremove=y<br>\tfi<br>&#125;<br><br>print_remove_ovpn() &#123;<br>\techo<br>\techo &quot;Removing OpenVPN, please wait...&quot;<br>&#125;<br><br>disable_ovpn_service() &#123;<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\tsystemctl disable --now openvpn-server@server.service<br>\telse<br>\t\tsystemctl disable --now openvpn@server.service<br>\tfi<br>\trm -f /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf<br>&#125;<br><br>remove_sysctl_rules() &#123;<br>\trm -f /etc/sysctl.d/99-openvpn-forward.conf /etc/sysctl.d/99-openvpn-optimize.conf<br>\tif [ ! -f /usr/bin/wg-quick ] &amp;&amp; [ ! -f /usr/sbin/ipsec ] \\<br>\t\t&amp;&amp; [ ! -f /usr/local/sbin/ipsec ]; then<br>\t\techo 0 &gt; /proc/sys/net/ipv4/ip_forward<br>\t\techo 0 &gt; /proc/sys/net/ipv6/conf/all/forwarding<br>\tfi<br>&#125;<br><br>remove_rclocal_rules() &#123;<br>\tipt_cmd=&quot;systemctl restart openvpn-iptables.service&quot;<br>\tif grep -qs &quot;$ipt_cmd&quot; /etc/rc.local; then<br>\t\tsed --follow-symlinks -i &quot;/^$ipt_cmd/d&quot; /etc/rc.local<br>\tfi<br>&#125;<br><br>print_ovpn_removed() &#123;<br>\techo<br>\techo &quot;OpenVPN removed!&quot;<br>&#125;<br><br>print_ovpn_removal_aborted() &#123;<br>\techo<br>\techo &quot;OpenVPN removal aborted!&quot;<br>&#125;<br><br>ovpnsetup() &#123;<br><br>export PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;<br><br>check_root<br>check_shell<br>check_kernel<br>check_os<br>check_os_ver<br>check_tun<br><br>OVPN_CONF=&quot;/etc/openvpn/server/server.conf&quot;<br><br>auto=0<br>assume_yes=0<br>add_client=0<br>export_client=0<br>list_clients=0<br>revoke_client=0<br>remove_ovpn=0<br><br>parse_args &quot;$@&quot;<br>check_args<br><br>if [ &quot;$add_client&quot; = 1 ]; then<br>\tshow_header<br>\techo<br>\tbuild_client_config<br>\tnew_client<br>\tprint_client_action added<br>\texit 0<br>fi<br><br>if [ &quot;$export_client&quot; = 1 ]; then<br>\tshow_header<br>\tnew_client<br>\tprint_client_action exported<br>\texit 0<br>fi<br><br>if [ &quot;$list_clients&quot; = 1 ]; then<br>\tshow_header<br>\tprint_check_clients<br>\tcheck_clients<br>\techo<br>\tshow_clients<br>\tprint_client_total<br>\texit 0<br>fi<br><br>if [ &quot;$revoke_client&quot; = 1 ]; then<br>\tshow_header<br>\tconfirm_revoke_client<br>\tif [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>\t\tprint_revoke_client<br>\t\trevoke_client_ovpn<br>\t\tprint_client_revoked<br>\t\texit 0<br>\telse<br>\t\tprint_client_revocation_aborted<br>\t\texit 1<br>\tfi<br>fi<br><br>if [ &quot;$remove_ovpn&quot; = 1 ]; then<br>\tshow_header<br>\tconfirm_remove_ovpn<br>\tif [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>\t\tprint_remove_ovpn<br>\t\tremove_firewall_rules<br>\t\tdisable_ovpn_service<br>\t\tremove_sysctl_rules<br>\t\tremove_rclocal_rules<br>\t\tremove_pkgs<br>\t\tprint_ovpn_removed<br>\t\texit 0<br>\telse<br>\t\tprint_ovpn_removal_aborted<br>\t\texit 1<br>\tfi<br>fi<br><br>if [[ ! -e &quot;$OVPN_CONF&quot; ]]; then<br>\tcheck_nftables<br>\tinstall_wget<br>\tinstall_iproute<br>\tshow_welcome<br>\tpublic_ip=&quot;&quot;<br>\tif [ &quot;$auto&quot; = 0 ]; then<br>\t\tenter_server_address<br>\telse<br>\t\tdetect_ip<br>\t\tcheck_nat_ip<br>\tfi<br>\tshow_config<br>\tdetect_ipv6<br>\tselect_protocol<br>\tselect_port<br>\tselect_dns<br>\tenter_first_client_name<br>\tshow_setup_ready<br>\tcheck_firewall<br>\tconfirm_setup<br>\tshow_start_setup<br>\tdisable_limitnproc<br>\tinstall_pkgs<br>\tinstall_easyrsa<br>\tcreate_pki_and_certs<br>\tcreate_server_config<br>\tupdate_sysctl<br>\tcreate_firewall_rules<br>\tif [ &quot;$os&quot; != &quot;openSUSE&quot; ]; then<br>\t\tupdate_rclocal<br>\tfi<br>\tupdate_selinux<br>\tcreate_client_common<br>\tstart_openvpn_service<br>\tnew_client<br>\tfinish_setup<br>else<br>\tshow_header<br>\tselect_menu_option<br>\tcase &quot;$option&quot; in<br>\t\t1)<br>\t\t\tenter_client_name<br>\t\t\tbuild_client_config<br>\t\t\tnew_client<br>\t\t\tprint_client_action added<br>\t\t\texit 0<br>\t\t;;<br>\t\t2)<br>\t\t\tcheck_clients<br>\t\t\tselect_client_to export<br>\t\t\tnew_client<br>\t\t\tprint_client_action exported<br>\t\t\texit 0<br>\t\t;;<br>\t\t3)<br>\t\t\tprint_check_clients<br>\t\t\tcheck_clients<br>\t\t\techo<br>\t\t\tshow_clients<br>\t\t\tprint_client_total<br>\t\t\texit 0<br>\t\t;;<br>\t\t4)<br>\t\t\tcheck_clients<br>\t\t\tselect_client_to revoke<br>\t\t\tconfirm_revoke_client<br>\t\t\tif [[ &quot;$revoke&quot; =~ ^[yY]$ ]]; then<br>\t\t\t\tprint_revoke_client<br>\t\t\t\trevoke_client_ovpn<br>\t\t\t\tprint_client_revoked<br>\t\t\t\texit 0<br>\t\t\telse<br>\t\t\t\tprint_client_revocation_aborted<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\t;;<br>\t\t5)<br>\t\t\tconfirm_remove_ovpn<br>\t\t\tif [[ &quot;$remove&quot; =~ ^[yY]$ ]]; then<br>\t\t\t\tprint_remove_ovpn<br>\t\t\t\tremove_firewall_rules<br>\t\t\t\tdisable_ovpn_service<br>\t\t\t\tremove_sysctl_rules<br>\t\t\t\tremove_rclocal_rules<br>\t\t\t\tremove_pkgs<br>\t\t\t\tprint_ovpn_removed<br>\t\t\t\texit 0<br>\t\t\telse<br>\t\t\t\tprint_ovpn_removal_aborted<br>\t\t\t\texit 1<br>\t\t\tfi<br>\t\t;;<br>\t\t6)<br>\t\t\texit 0<br>\t\t;;<br>\tesac<br>fi<br>&#125;<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-string\"># Defer setup until we have the complete script</span></span><br>ovpnsetup &quot;$@&quot;<br><br>exit 0<br><br></code></pre></td></tr></table></figure>"},{"title":"linux下通过端口找到进程","date":"2024-08-09T06:48:30.000Z","_content":"在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：\n\n### 1. 使用 `lsof` 命令\n`lsof` 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。\n\n```bash\nlsof -i :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nlsof -i :80\n```\n\n### 2. 使用 `netstat` 命令\n`netstat` 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。\n\n```bash\nnetstat -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nnetstat -tuln | grep :80\n```\n\n结合 `netstat` 和 `grep` 命令，还可以找到对应的PID：\n```bash\nnetstat -tulnp | grep :<端口号>\n```\n\n### 3. 使用 `ss` 命令\n`ss` 是 `netstat` 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。\n\n```bash\nss -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nss -tuln | grep :80\n```\n\n### 4. 使用 `fuser` 命令\n`fuser` 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。\n\n```bash\nfuser <端口号>/tcp\n```\n\n例如，查找占用80端口的进程：\n```bash\nfuser 80/tcp\n```\n\n### 5. 查看详细的进程信息\n一旦获得了PID，可以使用 `ps` 命令来查看进程的详细信息。\n\n```bash\nps -p <PID> -o pid,cmd\n```\n\n例如：\n```bash\nps -p 1234 -o pid,cmd\n```\n\n这将显示PID为1234的进程的命令行。\n\n通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。","source":"_posts/linux下通过端口找到进程.md","raw":"---\ntitle: linux下通过端口找到进程\ndate: 2024-08-09 14:48:30\ntags:\n---\n在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：\n\n### 1. 使用 `lsof` 命令\n`lsof` 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。\n\n```bash\nlsof -i :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nlsof -i :80\n```\n\n### 2. 使用 `netstat` 命令\n`netstat` 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。\n\n```bash\nnetstat -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nnetstat -tuln | grep :80\n```\n\n结合 `netstat` 和 `grep` 命令，还可以找到对应的PID：\n```bash\nnetstat -tulnp | grep :<端口号>\n```\n\n### 3. 使用 `ss` 命令\n`ss` 是 `netstat` 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。\n\n```bash\nss -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nss -tuln | grep :80\n```\n\n### 4. 使用 `fuser` 命令\n`fuser` 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。\n\n```bash\nfuser <端口号>/tcp\n```\n\n例如，查找占用80端口的进程：\n```bash\nfuser 80/tcp\n```\n\n### 5. 查看详细的进程信息\n一旦获得了PID，可以使用 `ps` 命令来查看进程的详细信息。\n\n```bash\nps -p <PID> -o pid,cmd\n```\n\n例如：\n```bash\nps -p 1234 -o pid,cmd\n```\n\n这将显示PID为1234的进程的命令行。\n\n通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。","slug":"linux下通过端口找到进程","published":1,"updated":"2024-08-09T06:48:40.735Z","comments":1,"layout":"post","photos":[],"_id":"clzmciyjz000024jd7sq2axoj","content":"<p>在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：</p>\n<h3 id=\"1-使用-lsof-命令\"><a href=\"#1-使用-lsof-命令\" class=\"headerlink\" title=\"1. 使用 lsof 命令\"></a>1. 使用 <code>lsof</code> 命令</h3><p><code>lsof</code> 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用-netstat-命令\"><a href=\"#2-使用-netstat-命令\" class=\"headerlink\" title=\"2. 使用 netstat 命令\"></a>2. 使用 <code>netstat</code> 命令</h3><p><code>netstat</code> 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<p>结合 <code>netstat</code> 和 <code>grep</code> 命令，还可以找到对应的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tulnp | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-ss-命令\"><a href=\"#3-使用-ss-命令\" class=\"headerlink\" title=\"3. 使用 ss 命令\"></a>3. 使用 <code>ss</code> 命令</h3><p><code>ss</code> 是 <code>netstat</code> 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-fuser-命令\"><a href=\"#4-使用-fuser-命令\" class=\"headerlink\" title=\"4. 使用 fuser 命令\"></a>4. 使用 <code>fuser</code> 命令</h3><p><code>fuser</code> 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser &lt;端口号&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser 80/tcp<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-查看详细的进程信息\"><a href=\"#5-查看详细的进程信息\" class=\"headerlink\" title=\"5. 查看详细的进程信息\"></a>5. 查看详细的进程信息</h3><p>一旦获得了PID，可以使用 <code>ps</code> 命令来查看进程的详细信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p &lt;PID&gt; -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p 1234 -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>这将显示PID为1234的进程的命令行。</p>\n<p>通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。</p>\n","excerpt":"","more":"<p>在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：</p>\n<h3 id=\"1-使用-lsof-命令\"><a href=\"#1-使用-lsof-命令\" class=\"headerlink\" title=\"1. 使用 lsof 命令\"></a>1. 使用 <code>lsof</code> 命令</h3><p><code>lsof</code> 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用-netstat-命令\"><a href=\"#2-使用-netstat-命令\" class=\"headerlink\" title=\"2. 使用 netstat 命令\"></a>2. 使用 <code>netstat</code> 命令</h3><p><code>netstat</code> 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<p>结合 <code>netstat</code> 和 <code>grep</code> 命令，还可以找到对应的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tulnp | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-ss-命令\"><a href=\"#3-使用-ss-命令\" class=\"headerlink\" title=\"3. 使用 ss 命令\"></a>3. 使用 <code>ss</code> 命令</h3><p><code>ss</code> 是 <code>netstat</code> 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-fuser-命令\"><a href=\"#4-使用-fuser-命令\" class=\"headerlink\" title=\"4. 使用 fuser 命令\"></a>4. 使用 <code>fuser</code> 命令</h3><p><code>fuser</code> 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser &lt;端口号&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser 80/tcp<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-查看详细的进程信息\"><a href=\"#5-查看详细的进程信息\" class=\"headerlink\" title=\"5. 查看详细的进程信息\"></a>5. 查看详细的进程信息</h3><p>一旦获得了PID，可以使用 <code>ps</code> 命令来查看进程的详细信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p &lt;PID&gt; -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p 1234 -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>这将显示PID为1234的进程的命令行。</p>\n<p>通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。</p>\n"},{"title":"github 将远程仓库更新到自己的仓库中","date":"2024-08-13T08:30:29.000Z","_content":"要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：\n\n1. **添加远程仓库**（如果还没有添加远程仓库）：\n    ```bash\n    git remote add upstream <远程仓库的URL>\n    ```\n   例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，`upstream` 就是你需要添加的远程仓库。\n\n2. **获取远程仓库的更新**：\n    ```bash\n    git fetch upstream\n    ```\n   这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。\n\n3. **将远程仓库的更新合并到你的分支**：\n    - 如果你在 `main` 分支上，并希望将 `upstream/main` 的更新合并到本地的 `main` 分支：\n        ```bash\n        git checkout main\n        git merge upstream/main\n        ```\n   这会将远程 `main` 分支的更新合并到你本地的 `main` 分支中。\n\n4. **处理可能的冲突**：\n    - 如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：\n        ```bash\n        git add <解决冲突的文件>\n        git commit -m \"Resolved merge conflicts\"\n        ```\n\n5. **将更新推送到你自己的远程仓库**（如果需要）：\n    ```bash\n    git push origin main\n    ```\n   这会将你本地 `main` 分支的更新推送到你自己的GitHub仓库中。\n\n通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。","source":"_posts/github-将远程仓库更新到自己的仓库中.md","raw":"---\ntitle: github 将远程仓库更新到自己的仓库中\ndate: 2024-08-13 16:30:29\ntags:\n---\n要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：\n\n1. **添加远程仓库**（如果还没有添加远程仓库）：\n    ```bash\n    git remote add upstream <远程仓库的URL>\n    ```\n   例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，`upstream` 就是你需要添加的远程仓库。\n\n2. **获取远程仓库的更新**：\n    ```bash\n    git fetch upstream\n    ```\n   这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。\n\n3. **将远程仓库的更新合并到你的分支**：\n    - 如果你在 `main` 分支上，并希望将 `upstream/main` 的更新合并到本地的 `main` 分支：\n        ```bash\n        git checkout main\n        git merge upstream/main\n        ```\n   这会将远程 `main` 分支的更新合并到你本地的 `main` 分支中。\n\n4. **处理可能的冲突**：\n    - 如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：\n        ```bash\n        git add <解决冲突的文件>\n        git commit -m \"Resolved merge conflicts\"\n        ```\n\n5. **将更新推送到你自己的远程仓库**（如果需要）：\n    ```bash\n    git push origin main\n    ```\n   这会将你本地 `main` 分支的更新推送到你自己的GitHub仓库中。\n\n通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。","slug":"github-将远程仓库更新到自己的仓库中","published":1,"updated":"2024-08-13T08:30:39.035Z","comments":1,"layout":"post","photos":[],"_id":"clzs5xk390000tojd0riddwkj","content":"<p>要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：</p>\n<ol>\n<li><p><strong>添加远程仓库</strong>（如果还没有添加远程仓库）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git remote add upstream &lt;远程仓库的URL&gt;<br></code></pre></td></tr></table></figure>\n<p>例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，<code>upstream</code> 就是你需要添加的远程仓库。</p>\n</li>\n<li><p><strong>获取远程仓库的更新</strong>：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git fetch upstream<br></code></pre></td></tr></table></figure>\n<p>这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。</p>\n</li>\n<li><p><strong>将远程仓库的更新合并到你的分支</strong>：</p>\n<ul>\n<li>如果你在 <code>main</code> 分支上，并希望将 <code>upstream/main</code> 的更新合并到本地的 <code>main</code> 分支：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git checkout main<br>git merge upstream/main<br></code></pre></td></tr></table></figure>\n这会将远程 <code>main</code> 分支的更新合并到你本地的 <code>main</code> 分支中。</li>\n</ul>\n</li>\n<li><p><strong>处理可能的冲突</strong>：</p>\n<ul>\n<li>如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git add &lt;解决冲突的文件&gt;<br>git commit -m <span class=\"hljs-string\">&quot;Resolved merge conflicts&quot;</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>将更新推送到你自己的远程仓库</strong>（如果需要）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git push origin main<br></code></pre></td></tr></table></figure>\n<p>这会将你本地 <code>main</code> 分支的更新推送到你自己的GitHub仓库中。</p>\n</li>\n</ol>\n<p>通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。</p>\n","excerpt":"","more":"<p>要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：</p>\n<ol>\n<li><p><strong>添加远程仓库</strong>（如果还没有添加远程仓库）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git remote add upstream &lt;远程仓库的URL&gt;<br></code></pre></td></tr></table></figure>\n<p>例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，<code>upstream</code> 就是你需要添加的远程仓库。</p>\n</li>\n<li><p><strong>获取远程仓库的更新</strong>：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git fetch upstream<br></code></pre></td></tr></table></figure>\n<p>这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。</p>\n</li>\n<li><p><strong>将远程仓库的更新合并到你的分支</strong>：</p>\n<ul>\n<li>如果你在 <code>main</code> 分支上，并希望将 <code>upstream/main</code> 的更新合并到本地的 <code>main</code> 分支：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git checkout main<br>git merge upstream/main<br></code></pre></td></tr></table></figure>\n这会将远程 <code>main</code> 分支的更新合并到你本地的 <code>main</code> 分支中。</li>\n</ul>\n</li>\n<li><p><strong>处理可能的冲突</strong>：</p>\n<ul>\n<li>如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git add &lt;解决冲突的文件&gt;<br>git commit -m <span class=\"hljs-string\">&quot;Resolved merge conflicts&quot;</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>将更新推送到你自己的远程仓库</strong>（如果需要）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git push origin main<br></code></pre></td></tr></table></figure>\n<p>这会将你本地 <code>main</code> 分支的更新推送到你自己的GitHub仓库中。</p>\n</li>\n</ol>\n<p>通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。</p>\n"},{"title":"Application-toolkit-trace-cross-thread","date":"2024-09-11T07:14:06.000Z","_content":"# Trace Cross Thread\nThese APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.\nAll following are sample codes only to demonstrate how to adopt cross thread cases easier.\n\n* Case 1.\n```java\n    @TraceCrossThread\n    public static class MyCallable<String> implements Callable<String> {\n        @Override\n        public String call() throws Exception {\n            return null;\n        }\n    }\n...\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(new MyCallable());\n```\n* Case 2.\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(CallableWrapper.of(new Callable<String>() {\n        @Override public String call() throws Exception {\n            return null;\n        }\n    }));\n```\nor\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.execute(RunnableWrapper.of(new Runnable() {\n        @Override public void run() {\n            //your code\n        }\n    }));\n```\n* Case 3.\n```java\n    @TraceCrossThread\n    public class MySupplier<String> implements Supplier<String> {\n        @Override\n        public String get() {\n            return null;\n        }\n    }\n...\n    CompletableFuture.supplyAsync(new MySupplier<String>());\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(()->{\n            return \"SupplierWrapper\";\n    })).thenAccept(System.out::println);\n```\n* Case 4.\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenAcceptAsync(ConsumerWrapper.of(c -> {\n        // your code visit(url)\n        System.out.println(\"ConsumerWrapper\");\n    }));\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenApplyAsync(FunctionWrapper.of(f -> {\n        // your code visit(url)\n        return \"FunctionWrapper\";\n    }));\n```\n\n\n\n","source":"_posts/Application-toolkit-trace-cross-thread.md","raw":"---\ntitle: Application-toolkit-trace-cross-thread\ndate: 2024-09-11 15:14:06\ntags:\n---\n# Trace Cross Thread\nThese APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.\nAll following are sample codes only to demonstrate how to adopt cross thread cases easier.\n\n* Case 1.\n```java\n    @TraceCrossThread\n    public static class MyCallable<String> implements Callable<String> {\n        @Override\n        public String call() throws Exception {\n            return null;\n        }\n    }\n...\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(new MyCallable());\n```\n* Case 2.\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(CallableWrapper.of(new Callable<String>() {\n        @Override public String call() throws Exception {\n            return null;\n        }\n    }));\n```\nor\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.execute(RunnableWrapper.of(new Runnable() {\n        @Override public void run() {\n            //your code\n        }\n    }));\n```\n* Case 3.\n```java\n    @TraceCrossThread\n    public class MySupplier<String> implements Supplier<String> {\n        @Override\n        public String get() {\n            return null;\n        }\n    }\n...\n    CompletableFuture.supplyAsync(new MySupplier<String>());\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(()->{\n            return \"SupplierWrapper\";\n    })).thenAccept(System.out::println);\n```\n* Case 4.\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenAcceptAsync(ConsumerWrapper.of(c -> {\n        // your code visit(url)\n        System.out.println(\"ConsumerWrapper\");\n    }));\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenApplyAsync(FunctionWrapper.of(f -> {\n        // your code visit(url)\n        return \"FunctionWrapper\";\n    }));\n```\n\n\n\n","slug":"Application-toolkit-trace-cross-thread","published":1,"updated":"2024-09-11T07:14:15.198Z","comments":1,"layout":"post","photos":[],"_id":"cm0xiyze600008cjd6oav71kc","content":"<h1 id=\"Trace-Cross-Thread\"><a href=\"#Trace-Cross-Thread\" class=\"headerlink\" title=\"Trace Cross Thread\"></a>Trace Cross Thread</h1><p>These APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.<br>All following are sample codes only to demonstrate how to adopt cross thread cases easier.</p>\n<ul>\n<li>Case 1.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyCallable</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    <span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>    executorService.submit(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MyCallable</span>());<br></code></pre></td></tr></table></figure></li>\n<li>Case 2.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.submit(CallableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt;() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.execute(RunnableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Runnable</span>() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">run</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">//your code</span><br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n<li>Case 3.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Supplier</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">get</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    CompletableFuture.supplyAsync(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt;());<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(()-&gt;&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAccept(System.out::println);<br></code></pre></td></tr></table></figure></li>\n<li>Case 4.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAcceptAsync(ConsumerWrapper.of(c -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    System.out.println(<span class=\"hljs-string\">&quot;ConsumerWrapper&quot;</span>);<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenApplyAsync(FunctionWrapper.of(f -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;FunctionWrapper&quot;</span>;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Trace-Cross-Thread\"><a href=\"#Trace-Cross-Thread\" class=\"headerlink\" title=\"Trace Cross Thread\"></a>Trace Cross Thread</h1><p>These APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.<br>All following are sample codes only to demonstrate how to adopt cross thread cases easier.</p>\n<ul>\n<li>Case 1.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyCallable</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    <span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>    executorService.submit(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MyCallable</span>());<br></code></pre></td></tr></table></figure></li>\n<li>Case 2.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.submit(CallableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt;() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.execute(RunnableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Runnable</span>() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">run</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">//your code</span><br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n<li>Case 3.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Supplier</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">get</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    CompletableFuture.supplyAsync(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt;());<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(()-&gt;&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAccept(System.out::println);<br></code></pre></td></tr></table></figure></li>\n<li>Case 4.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAcceptAsync(ConsumerWrapper.of(c -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    System.out.println(<span class=\"hljs-string\">&quot;ConsumerWrapper&quot;</span>);<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenApplyAsync(FunctionWrapper.of(f -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;FunctionWrapper&quot;</span>;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n</ul>\n"},{"_content":"账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","source":"_posts/更改点差需要的修改方案（ 账户 - 方法 去洗数据.md","raw":"账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","slug":"更改点差需要的修改方案（ 账户 - 方法 去洗数据","published":1,"date":"2024-08-26T09:27:37.197Z","updated":"2024-08-27T03:14:23.055Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm0xiyzea00018cjdfu1tc8d4","content":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n","excerpt":"","more":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n"},{"_content":"账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","source":"_posts/交易下单时金额变化.md","raw":"账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","slug":"交易下单时金额变化","published":1,"date":"2024-08-26T09:27:08.112Z","updated":"2024-08-26T09:27:49.985Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm0xiyzeb00028cjd87vx56tc","content":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n","excerpt":"","more":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n"}],"PostAsset":[{"_id":"source\\_posts\\学习it网站推荐\\image_-m-m1AZh7M.png","slug":"image_-m-m1AZh7M.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_bUw4GOE3i3.png","slug":"image_bUw4GOE3i3.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_PEAqPgamQe.png","slug":"image_PEAqPgamQe.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_qBL4LWSs2U.png","slug":"image_qBL4LWSs2U.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_RtiUPlWbme.png","slug":"image_RtiUPlWbme.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_SOZXE0ImbY.png","slug":"image_SOZXE0ImbY.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_tMLd_Cap6a.png","slug":"image_tMLd_Cap6a.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\学习it网站推荐\\image_zZOb0Uu1MN.png","slug":"image_zZOb0Uu1MN.png","post":"clxwwokx900017wjd3y3c9xhh","modified":0,"renderable":0},{"_id":"source\\_posts\\在linux上使用代理\\mihomo-linux-amd64-v1.18.6.deb","slug":"mihomo-linux-amd64-v1.18.6.deb","post":"clz226zqt0000mcjdddb70zak","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\img.png","slug":"img.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806195901.png","slug":"微信截图_20240806195901.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200410.png","slug":"微信截图_20240806200410.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200518.png","slug":"微信截图_20240806200518.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200751.png","slug":"微信截图_20240806200751.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200831.png","slug":"微信截图_20240806200831.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200853.png","slug":"微信截图_20240806200853.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200913.png","slug":"微信截图_20240806200913.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200924.png","slug":"微信截图_20240806200924.png","post":"clzidp6qv0000cwjddut971gs","modified":0,"renderable":0},{"_id":"source\\_posts\\openvpn-部署脚本\\openvpn.sh","slug":"openvpn.sh","post":"clzjkcjlo00005cjdg6gi1mo5","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}