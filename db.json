{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes\\fluid\\source\\css\\gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\css\\main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\img\\police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\js\\utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes\\fluid\\source\\xml\\local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source\\resource\\openvpn.sh","path":"resource/openvpn.sh","modified":0,"renderable":0},{"_id":"source\\resource\\安卓逆向｜高版本安卓（7.0+）用 Fiddler 无法抓到 HTTPS 包问题解决方案刚开始学习安卓逆向的小伙伴肯定都 - 掘金.html","path":"resource/安卓逆向｜高版本安卓（7.0+）用 Fiddler 无法抓到 HTTPS 包问题解决方案刚开始学习安卓逆向的小伙伴肯定都 - 掘金.html","modified":0,"renderable":0},{"_id":"source\\resource\\mihomo-linux-amd64-v1.18.6.deb","path":"resource/mihomo-linux-amd64-v1.18.6.deb","modified":0,"renderable":0},{"_id":"source\\resource\\logstash.conf","path":"resource/logstash.conf","modified":0,"renderable":0}],"Cache":[{"_id":"source\\about\\index.md","hash":"3577e59d048ecdfa83f9d1b09a14ea50be1d74bf","modified":1719471059998},{"_id":"source\\tags\\index.md","hash":"b3200194dcaa3b5da90c0a8bb6ae23d51baa9b9d","modified":1739859753979},{"_id":"source\\_posts\\linux\\github-将远程仓库更新到自己的仓库中.md","hash":"3766afd6630d4305a15e3aefa8f8e9109df8a58b","modified":1739860260556},{"_id":"source\\_posts\\java\\Application-toolkit-trace-cross-thread.md","hash":"2fdc545353b40c9aab63da97e53ca2e22b5f38df","modified":1739860260542},{"_id":"source\\_posts\\linux\\docker修改应用为自动启动.md","hash":"7ceb9b6af02d29dd7e8229e846ec65d22eb09f21","modified":1739860260549},{"_id":"source\\categories\\index.md","hash":"68b2a0f13693c21cebe78abcef95bd75f8bd96c8","modified":1739859597546},{"_id":"source\\_posts\\linux\\linux下实现钉钉告警.md","hash":"02a39f163bbb1ec9be76556c7f37160aa5813039","modified":1739860260569},{"_id":"source\\_posts\\linux\\linux下通过端口找到进程.md","hash":"be6e54a6ee19174844428a0c844af67b77dfd106","modified":1739860260562},{"_id":"source\\_posts\\linux\\nginx配置上传文件大小.md","hash":"1c8fb6a8d2e36d7595312505e768f8fb6fdf2f40","modified":1739860152455},{"_id":"source\\_posts\\linux\\openvpn-部署脚本.md","hash":"18d714937de1cf37d2ed55c1534bc5eef75f7887","modified":1740216991520},{"_id":"source\\_posts\\linux\\openvpn中使用client1访问xxx域名时，走client2的网络流量来访问.md","hash":"8490a9048f7220859f595218be6c6298377c83d2","modified":1739860121773},{"_id":"source\\_posts\\linux\\tcp6-如何-改成tcp4.md","hash":"186c75e01df9906083f376c59a25ddca562958ef","modified":1739860080123},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容.md","hash":"7da506ff5879263c882a4de74e177e1a942bdc88","modified":1739860007395},{"_id":"source\\_posts\\linux\\在linux上使用代理.md","hash":"4e35f5b10e669ffce850c3f579ba47d248e5e4d6","modified":1740217194462},{"_id":"source\\_posts\\linux\\对linux磁盘进行无损扩容.md","hash":"6442714735bf0d19a4bfcdffe1031bc00767db89","modified":1739859913114},{"_id":"source\\_posts\\redis\\解读redis分布式锁核心逻辑.md","hash":"b9040ed1a8fe2dca4e9e49ef235c0ba9650a32e2","modified":1739859880765},{"_id":"source\\_posts\\mysql\\select-for-update用法的好处.md","hash":"41b930e730fab5fe47160c767eb428a11a16aa22","modified":1739860110279},{"_id":"source\\_posts\\spring-boot\\spring-state-machine.md","hash":"3b570f14fe6aa4b11143e8c2202eb94f40662690","modified":1739860080116},{"_id":"source\\_posts\\交易\\交易下单时金额变化.md","hash":"a8c2f0177708c73940d89b54e265efb188c6fcde","modified":1739860053022},{"_id":"source\\_posts\\分享\\学习it网站推荐.md","hash":"e7261ce540646cc0d21028f9f37ef729676b4d2b","modified":1739859933700},{"_id":"source\\_posts\\计算机考试\\设信道带宽为16kHz-信噪比为30dB-则该信道的信道容量大约为.md","hash":"f7b08d6b83d7a59e8f2870369b55cad640c065d1","modified":1739859880777},{"_id":"source\\_posts\\黑客\\亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用.md","hash":"e27d1b450cfe0c33a51d90520b850426bdab97bc","modified":1739860028573},{"_id":"source\\_posts\\spring-boot\\使用切面或拦截器打印异常日志.md","hash":"c6553d5557c2d035a4e7af381ea373db94682a0c","modified":1739860007387},{"_id":"source\\_posts\\linux\\openvpn-部署脚本\\openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1723017349544},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200410.png","hash":"f33b4b69c8133bb6f7522812a7f594ff854c9ce3","modified":1722945851808},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806195901.png","hash":"73207df7ab09af55aee8c66a9f9a9816c5f0420e","modified":1722945546325},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200518.png","hash":"6e0ab0e5b70c7856073043ae78573bf39d993af3","modified":1722945920307},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_-m-m1AZh7M.png","hash":"06326b2f927af11f2f6b92c74a8c0a927dcd1c77","modified":1719370387878},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_RtiUPlWbme.png","hash":"0facd847ec0640c285287074d407aa7321a6841a","modified":1719370387919},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_bUw4GOE3i3.png","hash":"971882befb7ce49cdc0b9b35141c78f28f1b57a5","modified":1719370387965},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_qBL4LWSs2U.png","hash":"8cb6d4fc5c472da02a61a45a2effc3e70d890f1d","modified":1719370387981},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_tMLd_Cap6a.png","hash":"ef3b3bf0189dd4e5fc0b0e0fcdde2d5d7f38d0b3","modified":1719370387998},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200853.png","hash":"934df7f58206364d1129777a1e317f357e0b4056","modified":1722946134988},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_PEAqPgamQe.png","hash":"251aee9da55d0cf769bc29e54fbf659c06b1051c","modified":1719370387896},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_zZOb0Uu1MN.png","hash":"8872b7055947069ca0a107a046adb3e21e675d33","modified":1719370388013},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\img.png","hash":"f365826c725e6f50d07f8cb29615e8d4a259d58c","modified":1722946018310},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200831.png","hash":"c754552bfa50ed9de26bcf12bb37a75ca139626d","modified":1722946114203},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200924.png","hash":"262fe8b58283ec1070ba000ff1732e04b028a346","modified":1722946166462},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200913.png","hash":"60bceb6c601ccdd49ad3b4c679511a9b16b30aea","modified":1722946155289},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200751.png","hash":"3e549a4f07a3b94277edc03d6d04ae7ae673d6da","modified":1722946085151},{"_id":"themes\\fluid\\source\\css\\_pages\\_tag\\tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1719284523549},{"_id":"themes\\fluid\\.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1719284522472},{"_id":"themes\\fluid\\.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1719284522480},{"_id":"themes\\fluid\\.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1719284522486},{"_id":"themes\\fluid\\.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1719284522492},{"_id":"themes\\fluid\\LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1719284522497},{"_id":"themes\\fluid\\_config.yml","hash":"033bbe4a3c26784171f1072988b461bf0d8b2717","modified":1739870379412},{"_id":"themes\\fluid\\package.json","hash":"c640b57695b7b6002399711f1a7708b0f6c05b84","modified":1719284522522},{"_id":"themes\\fluid\\README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":1719368853803},{"_id":"themes\\fluid\\languages\\de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1719284522603},{"_id":"themes\\fluid\\languages\\en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1719284522611},{"_id":"themes\\fluid\\languages\\eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1719284522617},{"_id":"themes\\fluid\\languages\\es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1719284522624},{"_id":"themes\\fluid\\languages\\ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1719284522630},{"_id":"themes\\fluid\\languages\\ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1719284522637},{"_id":"themes\\fluid\\languages\\zh-CN.yml","hash":"2253e1bc61694b3bdc5e434ea2660d13d941b50e","modified":1719284522644},{"_id":"themes\\fluid\\languages\\zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1719284522651},{"_id":"themes\\fluid\\languages\\zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1719284522656},{"_id":"themes\\fluid\\layout\\404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1719284522668},{"_id":"themes\\fluid\\layout\\about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1719284522675},{"_id":"themes\\fluid\\layout\\archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1719284522681},{"_id":"themes\\fluid\\layout\\categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1719284522688},{"_id":"themes\\fluid\\layout\\category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1719284522695},{"_id":"themes\\fluid\\layout\\index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1719284522700},{"_id":"themes\\fluid\\layout\\layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1719284522706},{"_id":"themes\\fluid\\layout\\links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1719284522712},{"_id":"themes\\fluid\\layout\\page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1719284522718},{"_id":"themes\\fluid\\layout\\post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":1719284522724},{"_id":"themes\\fluid\\layout\\tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1719284522728},{"_id":"themes\\fluid\\layout\\tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1719284522734},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1719284522536},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1719284522556},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1719284522550},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1719284522562},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1719284522544},{"_id":"themes\\fluid\\.github\\ISSUE_TEMPLATE\\question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1719284522569},{"_id":"themes\\fluid\\.github\\workflows\\cr.yaml","hash":"19a8a00f5ba9607d82265572fe1202b64a8b0822","modified":1719284522577},{"_id":"themes\\fluid\\.github\\workflows\\limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1719284522586},{"_id":"themes\\fluid\\.github\\workflows\\publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1719284522594},{"_id":"themes\\fluid\\layout\\_partials\\archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1719284522742},{"_id":"themes\\fluid\\layout\\_partials\\category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1719284522748},{"_id":"themes\\fluid\\layout\\_partials\\category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1719284522754},{"_id":"themes\\fluid\\layout\\_partials\\comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1719284522761},{"_id":"themes\\fluid\\layout\\_partials\\css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1719284522768},{"_id":"themes\\fluid\\layout\\_partials\\footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1719284522775},{"_id":"themes\\fluid\\layout\\_partials\\head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1719284522782},{"_id":"themes\\fluid\\layout\\_partials\\header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1719284522787},{"_id":"themes\\fluid\\layout\\_partials\\markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1719284522793},{"_id":"themes\\fluid\\layout\\_partials\\paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1719284522799},{"_id":"themes\\fluid\\layout\\_partials\\scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1719284522804},{"_id":"themes\\fluid\\layout\\_partials\\search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1719284522810},{"_id":"themes\\fluid\\scripts\\events\\index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1719284523000},{"_id":"themes\\fluid\\scripts\\filters\\default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1719284523050},{"_id":"themes\\fluid\\scripts\\filters\\locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1719284523055},{"_id":"themes\\fluid\\scripts\\filters\\post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":1719284523061},{"_id":"themes\\fluid\\scripts\\generators\\index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1719284523068},{"_id":"themes\\fluid\\scripts\\generators\\local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1719284523075},{"_id":"themes\\fluid\\scripts\\generators\\pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1719284523079},{"_id":"themes\\fluid\\scripts\\helpers\\date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1719284523087},{"_id":"themes\\fluid\\scripts\\helpers\\engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1719284523093},{"_id":"themes\\fluid\\scripts\\helpers\\export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1719284523099},{"_id":"themes\\fluid\\scripts\\helpers\\import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1719284523105},{"_id":"themes\\fluid\\scripts\\helpers\\injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1719284523111},{"_id":"themes\\fluid\\scripts\\helpers\\page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1719284523116},{"_id":"themes\\fluid\\scripts\\helpers\\scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1719284523123},{"_id":"themes\\fluid\\scripts\\helpers\\url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1719284523128},{"_id":"themes\\fluid\\scripts\\helpers\\utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1719284523134},{"_id":"themes\\fluid\\scripts\\helpers\\wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":1719284523141},{"_id":"themes\\fluid\\scripts\\tags\\button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1719284523149},{"_id":"themes\\fluid\\scripts\\tags\\checkbox.js","hash":"0857aa86db2a711ae5c77218a9e3fa686d0e87b1","modified":1719284523156},{"_id":"themes\\fluid\\scripts\\tags\\fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":1719284523162},{"_id":"themes\\fluid\\scripts\\tags\\group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1719284523168},{"_id":"themes\\fluid\\scripts\\tags\\label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1719284523174},{"_id":"themes\\fluid\\scripts\\tags\\mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1719284523180},{"_id":"themes\\fluid\\scripts\\tags\\note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1719284523188},{"_id":"themes\\fluid\\scripts\\utils\\compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1719284523197},{"_id":"themes\\fluid\\scripts\\utils\\crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1719284523203},{"_id":"themes\\fluid\\scripts\\utils\\object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1719284523210},{"_id":"themes\\fluid\\scripts\\utils\\url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1719284523222},{"_id":"themes\\fluid\\scripts\\utils\\resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1719284523215},{"_id":"themes\\fluid\\source\\css\\gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1719284523237},{"_id":"themes\\fluid\\source\\css\\highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1719284523242},{"_id":"themes\\fluid\\source\\css\\highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1719284523247},{"_id":"themes\\fluid\\source\\css\\main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1719284523252},{"_id":"themes\\fluid\\source\\img\\fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1719284523612},{"_id":"themes\\fluid\\source\\img\\loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1719284523621},{"_id":"themes\\fluid\\source\\js\\boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1719284523646},{"_id":"themes\\fluid\\source\\js\\color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1719284523654},{"_id":"themes\\fluid\\source\\js\\events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1719284523663},{"_id":"themes\\fluid\\source\\js\\img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1719284523671},{"_id":"themes\\fluid\\source\\js\\leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1719284523678},{"_id":"themes\\fluid\\source\\js\\local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1719284523685},{"_id":"themes\\fluid\\source\\js\\plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1719284523693},{"_id":"themes\\fluid\\source\\js\\utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1719284523701},{"_id":"themes\\fluid\\source\\xml\\local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1719284523730},{"_id":"themes\\fluid\\layout\\_partials\\comments\\changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1719284522818},{"_id":"themes\\fluid\\layout\\_partials\\comments\\cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1719284522824},{"_id":"themes\\fluid\\layout\\_partials\\comments\\discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1719284522830},{"_id":"themes\\fluid\\layout\\_partials\\comments\\disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1719284522835},{"_id":"themes\\fluid\\layout\\_partials\\comments\\giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1719284522842},{"_id":"themes\\fluid\\layout\\_partials\\comments\\gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1719284522847},{"_id":"themes\\fluid\\layout\\_partials\\comments\\livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1719284522852},{"_id":"themes\\fluid\\layout\\_partials\\comments\\remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1719284522858},{"_id":"themes\\fluid\\layout\\_partials\\comments\\twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1719284522863},{"_id":"themes\\fluid\\layout\\_partials\\comments\\utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1719284522868},{"_id":"themes\\fluid\\layout\\_partials\\comments\\valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1719284522875},{"_id":"themes\\fluid\\layout\\_partials\\comments\\waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1719284522880},{"_id":"themes\\fluid\\layout\\_partials\\footer\\beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1719284522889},{"_id":"themes\\fluid\\layout\\_partials\\footer\\statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1719284522893},{"_id":"themes\\fluid\\layout\\_partials\\header\\banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1719284522900},{"_id":"themes\\fluid\\layout\\_partials\\header\\navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1719284522905},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1719284522912},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1719284522916},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1719284522929},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1719284522934},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1719284522939},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1719284522925},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1719284522921},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1719284522952},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":1719284522947},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1719284522943},{"_id":"themes\\fluid\\layout\\_partials\\plugins\\typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1719284522956},{"_id":"themes\\fluid\\layout\\_partials\\post\\category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1719284522962},{"_id":"themes\\fluid\\layout\\_partials\\post\\copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1719284522967},{"_id":"themes\\fluid\\layout\\_partials\\post\\meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1719284522975},{"_id":"themes\\fluid\\layout\\_partials\\post\\sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1719284522980},{"_id":"themes\\fluid\\layout\\_partials\\post\\sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1719284522984},{"_id":"themes\\fluid\\layout\\_partials\\post\\toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1719284522989},{"_id":"themes\\fluid\\layout\\_partials\\post\\meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1719284522971},{"_id":"themes\\fluid\\scripts\\events\\lib\\compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1719284523009},{"_id":"themes\\fluid\\scripts\\events\\lib\\footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1719284523015},{"_id":"themes\\fluid\\scripts\\events\\lib\\hello.js","hash":"0874d09075432900d711d146e245a500a578498a","modified":1719372022330},{"_id":"themes\\fluid\\scripts\\events\\lib\\injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1719284523031},{"_id":"themes\\fluid\\scripts\\events\\lib\\lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1719284523036},{"_id":"themes\\fluid\\scripts\\events\\lib\\highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1719284523025},{"_id":"themes\\fluid\\scripts\\events\\lib\\merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1719284523040},{"_id":"themes\\fluid\\source\\css\\_functions\\base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1719284523260},{"_id":"themes\\fluid\\source\\css\\_mixins\\base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1719284523270},{"_id":"themes\\fluid\\source\\css\\_pages\\pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1719284523278},{"_id":"themes\\fluid\\source\\css\\_variables\\base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1719284523567},{"_id":"themes\\fluid\\source\\css\\_pages\\_about\\about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1719284523286},{"_id":"themes\\fluid\\source\\css\\_pages\\_archive\\archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1719284523295},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":1719284523310},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1719284523323},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1719284523304},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1719284523316},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1719284523328},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1719284523471},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1719284523479},{"_id":"themes\\fluid\\source\\css\\_pages\\_index\\index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1719284523496},{"_id":"themes\\fluid\\source\\css\\_pages\\_links\\links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1719284523509},{"_id":"themes\\fluid\\source\\css\\_pages\\_category\\category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1719284523484},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1719284523519},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1719284523524},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1719284523530},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":1719284523540},{"_id":"themes\\fluid\\source\\css\\_pages\\_post\\post-page.styl","hash":"cd432a6411ccac7df47e6a300fb1a872cfc763e7","modified":1719284523535},{"_id":"themes\\fluid\\source\\css\\_pages\\_tag\\tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1719284523554},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1719284523339},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1719284523352},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1719284523345},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1719284523359},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1719284523365},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1719284523371},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1719284523384},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1719284523376},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1719284523390},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1719284523405},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1719284523413},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1719284523397},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1719284523430},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1719284523421},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1719284523453},{"_id":"themes\\fluid\\source\\css\\_pages\\_base\\_widget\\search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1719284523441},{"_id":"themes\\fluid\\source\\img\\avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1719284523588},{"_id":"themes\\fluid\\source\\img\\police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1719284523635},{"_id":"themes\\fluid\\source\\img\\default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1719284523602},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_SOZXE0ImbY.png","hash":"e72edf2eb3099761c51818c99464bbf5d2812395","modified":1719370387945},{"_id":"source\\resource\\安卓逆向｜高版本安卓（7.0+）用 Fiddler 无法抓到 HTTPS 包问题解决方案刚开始学习安卓逆向的小伙伴肯定都 - 掘金.html","hash":"e4702391c782a82dfabaccac4b932539327a5735","modified":1727170637506},{"_id":"source\\_posts\\linux\\在linux上使用代理\\mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1721912142425},{"_id":"public/local-search.xml","hash":"e87cbdc92fc51dc66dd9f8b6c79837fba1c510a7","modified":1740643334739},{"_id":"public/about/index.html","hash":"c04b18d71803d7e9bce5bf85a72773d0ffa6d890","modified":1739861933464},{"_id":"public/tags/index.html","hash":"352496ac5d4c1804bd3f6bdbc59a5ead69f1c481","modified":1740643334739},{"_id":"public/categories/linux/index.html","hash":"b3590203a644aadda3ca5f00d7c37c45e21b5ba5","modified":1740573341021},{"_id":"public/categories/Java/index.html","hash":"ecbd36d6eab9ce093fbcf0d6f845d37b91c09151","modified":1740573341021},{"_id":"public/categories/clash/index.html","hash":"27b58f3cbeb8594e8a380ae281017bd0842de383","modified":1740573341021},{"_id":"public/categories/redis/index.html","hash":"6c4093810d9d116e781667301af812ff4085d858","modified":1740573341021},{"_id":"public/categories/spring-boot/index.html","hash":"d8a14d5afd71e9762607ae2b7dda3c958285b334","modified":1740573341021},{"_id":"public/categories/mysql/index.html","hash":"4c5df7f6c64e9922592cba29e5d411b2173ee7e0","modified":1740573341021},{"_id":"public/categories/交易/index.html","hash":"787f47459f47d46794ddc2d5138458dbd1c00775","modified":1740573341021},{"_id":"public/categories/分享/index.html","hash":"c6d2359dcf8ba59e841768567cffc37a245e6e08","modified":1740573341021},{"_id":"public/categories/index.html","hash":"3094e635027f88bd3cfc066d031ec517c636967f","modified":1740643334739},{"_id":"public/2024/10/22/计算机考试/设信道带宽为16kHz-信噪比为30dB-则该信道的信道容量大约为/index.html","hash":"3dd1185f3131e8cbf6ee3d0160d935aaa515ef5e","modified":1740104588468},{"_id":"public/2024/10/10/linux/openvpn中使用client1访问xxx域名时，走client2的网络流量来访问/index.html","hash":"478c75f30e9635339bab34913c39fa188795eb5f","modified":1740104588468},{"_id":"public/2024/09/29/黑客/亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用/index.html","hash":"2d83f5dfa3f0e57cc957b28a52219cb1c2790336","modified":1740104588468},{"_id":"public/2024/09/19/spring-boot/spring-state-machine/index.html","hash":"c564db77bfba006009812065d3b2295c0bc1d7e9","modified":1740104588468},{"_id":"public/2024/09/11/java/Application-toolkit-trace-cross-thread/index.html","hash":"5504910c0517ad19970913427d9ef7f6697f98d6","modified":1740104588468},{"_id":"public/2024/09/11/交易/交易下单时金额变化/index.html","hash":"3adc42e1032b53c00eb1270989456e111043ac5e","modified":1740104588468},{"_id":"public/2024/08/13/linux/github-将远程仓库更新到自己的仓库中/index.html","hash":"65d26e8fb227ad897f0d4ccb460054e436fe58f7","modified":1740104588468},{"_id":"public/2024/08/09/linux/linux下通过端口找到进程/index.html","hash":"848c13233396a037683f360bfd0d4fe2deb4b50d","modified":1740104588468},{"_id":"public/2024/08/07/linux/openvpn-部署脚本/index.html","hash":"dddecb2a2cbad983a2ca05f97771f0cad235f959","modified":1740104588468},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/index.html","hash":"213858e41247228e94b423cab7a425535edf05fa","modified":1740104588468},{"_id":"public/2024/08/05/linux/对linux磁盘进行无损扩容/index.html","hash":"3fe92befbc4145fb768960fa10859a3efdbd3c01","modified":1740104588468},{"_id":"public/2024/07/30/redis/解读redis分布式锁核心逻辑/index.html","hash":"8f6d31d68ea3bfbec592e246183a32d4bcc55319","modified":1740104588468},{"_id":"public/2024/07/26/spring-boot/使用切面或拦截器打印异常日志/index.html","hash":"89990d839504927895b12b9968840884f8f934c7","modified":1740104588468},{"_id":"public/2024/07/26/linux/在linux上使用代理/index.html","hash":"fa77c4c4c8a0d0dc784e190985e1a8d63f8abc8d","modified":1740104588468},{"_id":"public/2024/07/25/mysql/select-for-update用法的好处/index.html","hash":"eb111ffb53e32f78d53505d4a7a1a33924a604a0","modified":1740104588468},{"_id":"public/2024/07/25/linux/tcp6-如何-改成tcp4/index.html","hash":"e61e52e784d460cd7a27bcfdc7ff15be2a5eb757","modified":1740104588468},{"_id":"public/2024/07/24/linux/nginx配置上传文件大小/index.html","hash":"6a04133e557fe4e482492d35fc878dd47fe7f5a4","modified":1740104588468},{"_id":"public/2024/07/23/linux/docker修改应用为自动启动/index.html","hash":"48191115518cf6581eae6e918703d4eaac8042db","modified":1740104588468},{"_id":"public/2024/07/23/linux/linux下实现钉钉告警/index.html","hash":"6a7e8cb49520eff61dbaf49c725a5284dfd5af5d","modified":1740104588468},{"_id":"public/2024/06/26/分享/学习it网站推荐/index.html","hash":"4f564b5fc1d217f18cd6c4997ccd1ba8bd8bb373","modified":1740104588468},{"_id":"public/categories/计算机考试/index.html","hash":"b4baad7cfb398e3d888056a1f5824958f0ad282f","modified":1740573341021},{"_id":"public/categories/黑客/index.html","hash":"46fa71fc1c34f2818895f3d9f58111c0b694f9fd","modified":1740573341021},{"_id":"public/archives/index.html","hash":"1ce9bc9ccd22c41012f880c972b1c0be347be270","modified":1740643334739},{"_id":"public/archives/page/2/index.html","hash":"e917fd772337c381a0e63268699a3c1c96195312","modified":1740643334739},{"_id":"public/archives/2024/index.html","hash":"3e8a776fdaeec7910f0b5f5c41a6bf709926c95a","modified":1740643334739},{"_id":"public/archives/2024/page/2/index.html","hash":"6143a8ebf63f63f739922757f1f848867fa4f247","modified":1740643334739},{"_id":"public/archives/2024/06/index.html","hash":"8d862ee2dc14fd9b8c9a9e9adba94b38303cb24b","modified":1740643334739},{"_id":"public/archives/2024/07/index.html","hash":"35c94633a85ac7e9a6e1a060597264425ebd2646","modified":1740643334739},{"_id":"public/archives/2024/08/index.html","hash":"ef77a9c8957395b13eb1bb0d67e9bced9e1c41fd","modified":1740643334739},{"_id":"public/archives/2024/09/index.html","hash":"640ed45a0be10fa40c61bc1c6c9cbbc18976cfe2","modified":1740643334739},{"_id":"public/archives/2024/10/index.html","hash":"61eb25426a3698eaca3c2abc4e6a357e24c0e37f","modified":1740643334739},{"_id":"public/tags/docker/index.html","hash":"394793b74b1a6249c4451ba472ea44d9ec29a01d","modified":1740573341021},{"_id":"public/tags/并发/index.html","hash":"72f9357b0acde9ceeaa728e39f67a563225a3d41","modified":1740573341021},{"_id":"public/tags/git/index.html","hash":"a45b6c3b9e93b5a1fb16591b19cbeb6918e877a5","modified":1740573341021},{"_id":"public/tags/报警/index.html","hash":"1349c91c3c4388b5e31bd24167040a168c127bf2","modified":1740573341021},{"_id":"public/tags/查找进程/index.html","hash":"5d6ddeaecbdbee224c3c118e2ebdfb65855853d0","modified":1740573341021},{"_id":"public/tags/openvpn/index.html","hash":"d54b3c55eb95b76f7de7f2d4cdeb79c18895ae9f","modified":1740573341021},{"_id":"public/tags/网络/index.html","hash":"80cde975daf173ff48529fb1671bdd1bb68985e9","modified":1740573341021},{"_id":"public/tags/nginx/index.html","hash":"7f0337751334798bedc7af4d83cf85a636efb1f2","modified":1740573341021},{"_id":"public/tags/扩容磁盘/index.html","hash":"4ebe99ec4b09135391a4a769b438ad1c425a5964","modified":1740573341021},{"_id":"public/tags/翻墙/index.html","hash":"d9db39fe0d3a33c7653261f8fecf05112f4ce074","modified":1740573341021},{"_id":"public/tags/lua表达式/index.html","hash":"c2c5d5682763a43387b00e92fdedd59e9d407cf7","modified":1740573341021},{"_id":"public/tags/状态机/index.html","hash":"4ebf55b177bb07836399b1bbcddacf3add595948","modified":1740573341021},{"_id":"public/tags/打印异常日志/index.html","hash":"9c7d92a587ed52861243046fecb57c475bcdcb1e","modified":1740573341021},{"_id":"public/tags/事务/index.html","hash":"cbabd38ade4c9f4f7e3b6e124bf68e8dc614dad8","modified":1740573341021},{"_id":"public/tags/账户资金/index.html","hash":"53bcc9e8756f360021bafe64a6a29c72c4cd330b","modified":1740573341021},{"_id":"public/tags/网站资源/index.html","hash":"e1b89912cd895e125ceb7e75311e55ac9a1a7f41","modified":1740573341021},{"_id":"public/tags/自学公式/index.html","hash":"373cd40c0515e4792b15cef18a36205c09ae4466","modified":1740573341021},{"_id":"public/tags/漏洞/index.html","hash":"3351ff427c7a22bb89de16344fd9423d54a8e627","modified":1740573341021},{"_id":"public/404.html","hash":"1fb6f2c76bae1a0c94d7f939f7d0f6c5b2968712","modified":1739861933464},{"_id":"public/links/index.html","hash":"a5483b8dffa6cc442d156c9ec31150fbf4abd3a3","modified":1739861933464},{"_id":"public/index.html","hash":"8aa5e80294fed6b40fb15fce5c2a4659c13341eb","modified":1740643334739},{"_id":"public/page/2/index.html","hash":"4f25f1373442a336b696fa0fc32b96f33d82fc77","modified":1740643334739},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1739861933464},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1739861933464},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1739861933464},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1739861933464},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png","hash":"f33b4b69c8133bb6f7522812a7f594ff854c9ce3","modified":1739861933464},{"_id":"public/2024/08/07/linux/openvpn-部署脚本/openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png","hash":"73207df7ab09af55aee8c66a9f9a9816c5f0420e","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png","hash":"6e0ab0e5b70c7856073043ae78573bf39d993af3","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_-m-m1AZh7M.png","hash":"06326b2f927af11f2f6b92c74a8c0a927dcd1c77","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_bUw4GOE3i3.png","hash":"971882befb7ce49cdc0b9b35141c78f28f1b57a5","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_RtiUPlWbme.png","hash":"0facd847ec0640c285287074d407aa7321a6841a","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_qBL4LWSs2U.png","hash":"8cb6d4fc5c472da02a61a45a2effc3e70d890f1d","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_tMLd_Cap6a.png","hash":"ef3b3bf0189dd4e5fc0b0e0fcdde2d5d7f38d0b3","modified":1739861933464},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1739861933464},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1739861933464},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1739861933464},{"_id":"public/js/events.js","hash":"5891534506b959a2f559f29e122baa3eb9159d93","modified":1739861933464},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1739861933464},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1739861933464},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1739861933464},{"_id":"public/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1739861933464},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1739861933464},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1739861933464},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1739861933464},{"_id":"public/css/main.css","hash":"7d7590cfe0261084ad357d5f51cb14d13db826d8","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png","hash":"934df7f58206364d1129777a1e317f357e0b4056","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_PEAqPgamQe.png","hash":"251aee9da55d0cf769bc29e54fbf659c06b1051c","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_zZOb0Uu1MN.png","hash":"8872b7055947069ca0a107a046adb3e21e675d33","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/img.png","hash":"f365826c725e6f50d07f8cb29615e8d4a259d58c","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png","hash":"c754552bfa50ed9de26bcf12bb37a75ca139626d","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png","hash":"262fe8b58283ec1070ba000ff1732e04b028a346","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png","hash":"60bceb6c601ccdd49ad3b4c679511a9b16b30aea","modified":1739861933464},{"_id":"public/2024/08/06/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png","hash":"3e549a4f07a3b94277edc03d6d04ae7ae673d6da","modified":1739861933464},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1739861933464},{"_id":"public/2024/06/26/分享/学习it网站推荐/image_SOZXE0ImbY.png","hash":"e72edf2eb3099761c51818c99464bbf5d2812395","modified":1739861933464},{"_id":"public/resource/安卓逆向｜高版本安卓（7.0+）用 Fiddler 无法抓到 HTTPS 包问题解决方案刚开始学习安卓逆向的小伙伴肯定都 - 掘金.html","hash":"e4702391c782a82dfabaccac4b932539327a5735","modified":1739861933464},{"_id":"public/2024/07/26/linux/在linux上使用代理/mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1739861933464},{"_id":"source\\_posts\\docker\\docker常用命令.md","hash":"264d1ff13084b51f5c92441d072b11ea276132ef","modified":1740036442473},{"_id":"source\\_posts\\mysql\\mysql-数据备份脚本.md","hash":"0c8cce143bb9684f7d34b83596edb6038db8920c","modified":1740036442479},{"_id":"source\\_posts\\linux\\linux-常用命令.md","hash":"a4b794066f6d86ec5e917ebf1cd8c17ba55b9c27","modified":1740638561626},{"_id":"public/archives/page/3/index.html","hash":"27c315aaff75f4de7f629ac7d8b8f41faa9c37f4","modified":1740643334739},{"_id":"public/archives/2025/index.html","hash":"833f0ed8d8154986701e36f70be4c0f117fa8247","modified":1740643334739},{"_id":"public/archives/2025/02/index.html","hash":"77a5a44c31b9501f84e9e1823132012f9e799dd5","modified":1740643334739},{"_id":"public/page/3/index.html","hash":"17aa433061056866ecf5321c0234624354bdbba6","modified":1740643334739},{"_id":"public/tags/命令/index.html","hash":"4e9c29528ef17a90910b14a92cfc51165ea1931f","modified":1740573341021},{"_id":"public/tags/备份/index.html","hash":"cb5215f23ef411abb1367fd58ad67655d0a0aaff","modified":1740573341021},{"_id":"public/tags/常用命令/index.html","hash":"5e491734ecc48e365070b3a8e798dfb07649b870","modified":1740573341021},{"_id":"public/categories/linux/page/2/index.html","hash":"afbcccb00e52ab44ec92277df57f1f5e7849ff36","modified":1740573341021},{"_id":"public/2025/02/20/linux/linux-常用命令/index.html","hash":"3d3c6741f70c46153638c77c829aeb673e66bde6","modified":1740104588468},{"_id":"public/2025/02/20/docker/docker常用命令/index.html","hash":"19548ddcccfbb7c9410e5d24e0c6e7112d2e445e","modified":1740104588468},{"_id":"public/2025/02/19/mysql/mysql-数据备份脚本/index.html","hash":"60bbb2b884b66e3e6adf6feba644e2f2d402f112","modified":1740104588468},{"_id":"public/categories/docker/index.html","hash":"0fc174e90597749c0066e7f834c1f81cb794ad4a","modified":1740573341021},{"_id":"source\\resource\\openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1723017349544},{"_id":"source\\_posts\\resource\\openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1723017349544},{"_id":"source\\_posts\\resource\\安卓逆向｜高版本安卓（7.0+）用 Fiddler 无法抓到 HTTPS 包问题解决方案刚开始学习安卓逆向的小伙伴肯定都 - 掘金.html","hash":"e4702391c782a82dfabaccac4b932539327a5735","modified":1727170637506},{"_id":"source\\resource\\mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1721912142425},{"_id":"source\\_posts\\linux\\linux-配置开机自启.md","hash":"d598345e638a6a47a81acc5cd812d78c42e8e8f8","modified":1740573317628},{"_id":"source\\_posts\\linux\\nginx配置https.md","hash":"7525b81a42ca1601025a2b6f71c17e6b041489c8","modified":1740570791577},{"_id":"public/tags/开机自启/index.html","hash":"a933c4c45b0b01d7861ebaff03c4e75fe94b59a1","modified":1740573341021},{"_id":"public/linux/linux-配置开机自启/index.html","hash":"63d57bde80b5f459a7fab819e868c2a17490ca5b","modified":1740643334739},{"_id":"public/linux/nginx配置https/index.html","hash":"213a9ec2dd0f91365ff7217cc4cbb8830c930110","modified":1740573341021},{"_id":"public/linux/linux-常用命令/index.html","hash":"6d8e60c65a1e1597787d6e78e681b0723d0a1c1c","modified":1740643334739},{"_id":"public/docker/docker常用命令/index.html","hash":"1747546037dcbc07b57b17ce19282c03d8abb7df","modified":1740573341021},{"_id":"public/计算机考试/设信道带宽为16kHz-信噪比为30dB-则该信道的信道容量大约为/index.html","hash":"ae3aeadff8442a31ba054063902e8139d8a3c9ff","modified":1740573341021},{"_id":"public/linux/openvpn中使用client1访问xxx域名时，走client2的网络流量来访问/index.html","hash":"65580a52119750c2fdc791a1053c90d0a480409a","modified":1740573341021},{"_id":"public/黑客/亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用/index.html","hash":"ee62c0f0ad4cf6efa53959db986975118427b165","modified":1740573341021},{"_id":"public/spring-boot/spring-state-machine/index.html","hash":"9f317bf0ea8eb020198439d1674cc3629ee84a03","modified":1740573341021},{"_id":"public/mysql/mysql-数据备份脚本/index.html","hash":"fdd87bf8ef49c1ee3f1e7a3fa0a4f586112ea709","modified":1740573341021},{"_id":"public/java/Application-toolkit-trace-cross-thread/index.html","hash":"1cb278b564f78c0416311fd820edb78dfbd4638d","modified":1740573341021},{"_id":"public/交易/交易下单时金额变化/index.html","hash":"815dd006d0ec06ec1894e37c2080a27dcbf783b7","modified":1740573341021},{"_id":"public/linux/github-将远程仓库更新到自己的仓库中/index.html","hash":"a754a49a0f163a16fe31194480664507aeddfe37","modified":1740573341021},{"_id":"public/linux/linux下通过端口找到进程/index.html","hash":"84b54a123b455667082354d34d205ce15de73de7","modified":1740573341021},{"_id":"public/linux/openvpn-部署脚本/index.html","hash":"03ee82dd17be83877b9805e66752462321538ca7","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/index.html","hash":"418ac6b63c34574432ae20529f564e6f0edbaa48","modified":1740573341021},{"_id":"public/linux/对linux磁盘进行无损扩容/index.html","hash":"37c3ba969da99a98d66bf9a16689e83610d20cc5","modified":1740573341021},{"_id":"public/redis/解读redis分布式锁核心逻辑/index.html","hash":"9b3e53ebd5efe4f3c26babfe9728d41f6172d8a7","modified":1740573341021},{"_id":"public/linux/在linux上使用代理/index.html","hash":"3e486e050ba7209f96f9822d3fd3449b8082faee","modified":1740573341021},{"_id":"public/linux/tcp6-如何-改成tcp4/index.html","hash":"b881e740c4579627b08067c47e38a4ba1b1792af","modified":1740573341021},{"_id":"public/spring-boot/使用切面或拦截器打印异常日志/index.html","hash":"41537ffe534d5646bf4c4b951702a765016b7465","modified":1740573341021},{"_id":"public/linux/nginx配置上传文件大小/index.html","hash":"ac230be40172ad4fe36dd7b45ff10b74a25b6a97","modified":1740573341021},{"_id":"public/mysql/select-for-update用法的好处/index.html","hash":"f0d336d76c172b2605061ce569710c73b16b5934","modified":1740573341021},{"_id":"public/linux/docker修改应用为自动启动/index.html","hash":"b6c837d8a2980d48f77eae64c1b3462996208ced","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/index.html","hash":"ce5ed034752c7687b5cff19d526cd43131fbec49","modified":1740573341021},{"_id":"public/linux/linux下实现钉钉告警/index.html","hash":"ef1e88a5dab91f914cd9920da56d3409cad4963b","modified":1740573341021},{"_id":"public/resource/openvpn.sh","hash":"87de7e0b919a17c8192e6f57c2ce55f23f216714","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png","hash":"f33b4b69c8133bb6f7522812a7f594ff854c9ce3","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png","hash":"73207df7ab09af55aee8c66a9f9a9816c5f0420e","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png","hash":"6e0ab0e5b70c7856073043ae78573bf39d993af3","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_-m-m1AZh7M.png","hash":"06326b2f927af11f2f6b92c74a8c0a927dcd1c77","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_qBL4LWSs2U.png","hash":"8cb6d4fc5c472da02a61a45a2effc3e70d890f1d","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_bUw4GOE3i3.png","hash":"971882befb7ce49cdc0b9b35141c78f28f1b57a5","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_RtiUPlWbme.png","hash":"0facd847ec0640c285287074d407aa7321a6841a","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_tMLd_Cap6a.png","hash":"ef3b3bf0189dd4e5fc0b0e0fcdde2d5d7f38d0b3","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png","hash":"934df7f58206364d1129777a1e317f357e0b4056","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_PEAqPgamQe.png","hash":"251aee9da55d0cf769bc29e54fbf659c06b1051c","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_zZOb0Uu1MN.png","hash":"8872b7055947069ca0a107a046adb3e21e675d33","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/img.png","hash":"f365826c725e6f50d07f8cb29615e8d4a259d58c","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png","hash":"c754552bfa50ed9de26bcf12bb37a75ca139626d","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png","hash":"262fe8b58283ec1070ba000ff1732e04b028a346","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png","hash":"60bceb6c601ccdd49ad3b4c679511a9b16b30aea","modified":1740573341021},{"_id":"public/linux/使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png","hash":"3e549a4f07a3b94277edc03d6d04ae7ae673d6da","modified":1740573341021},{"_id":"public/分享/学习it网站推荐/image_SOZXE0ImbY.png","hash":"e72edf2eb3099761c51818c99464bbf5d2812395","modified":1740573341021},{"_id":"public/resource/mihomo-linux-amd64-v1.18.6.deb","hash":"bc855430f0b8f7b2637a13f6e8d5e75f39070ab1","modified":1740573341021},{"_id":"source\\_posts\\es常用命令.md","hash":"afe11204fda9528f569d1ad107a811d1a2a9c308","modified":1740641953589},{"_id":"source\\_posts\\logstach运行时提示jvm版本不兼容.md","hash":"e8780f83c696d260462dcdef307e46bb1cfdbced","modified":1740637751057},{"_id":"source\\resource\\logstash.conf","hash":"fe299068c6a2c1dacddec164ea613f9ffe70dac9","modified":1730267970300},{"_id":"source\\_posts\\elasticsearch\\logstach安装和导入数据.md","hash":"64e5e8b5a9c60129767556906bb00d493446a240","modified":1740637518049},{"_id":"source\\_posts\\elasticsearch\\在Docker容器中运行Elasticsearch-Kibana和Cerebro.md","hash":"cbf04cc0234b0e62fccbfd38bb9eb1a2851b1923","modified":1740635901489},{"_id":"source\\_posts\\elasticsearch\\es中基础搜索-查询优化-分布式架构-聚合分析-数据建模和最佳实践.md","hash":"a6a5dd596e336481df53256bba9a47072f7101f7","modified":1740643405515},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.1-基于词项和基于全文的搜索\\README.md","hash":"385165991c294d5f760c236c630638e9881df3a0","modified":1730266493635},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.10-综合排序：Function Score Query 优化算分\\README.md","hash":"e513cc8e75ee69372eb678f2309a24dbee3c6c73","modified":1730266493635},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.13-跨集群搜索\\README.md","hash":"02b3610230d6d4d6d760b1c35692580232744b00","modified":1730266493637},{"_id":"source\\_posts\\elasticsearch\\es常用命令.md","hash":"afe11204fda9528f569d1ad107a811d1a2a9c308","modified":1740641953589},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.11-Term&PhraseSuggester\\README.md","hash":"8297c9976e6c9acff1e4d963f0c1391bb99469ce","modified":1730266493636},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.2-结构化搜索\\README.md","hash":"44580e00fe2b64bad25acbe30550ef024bef6831","modified":1730266493637},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.3-搜索的相关性算分\\README.md","hash":"354bf158d3119dd4bdf076ca32d5d36d5acbe974","modified":1730266493638},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.12-自动补全与基于上下文的提示\\README.md","hash":"57b8af7619c4ff2ed61520a3f57fa688bd80c177","modified":1730266493636},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.6-单字符串多字段查询-Multi-Match\\README.md","hash":"3a9cc1ef82e1733cef23ab54ce6f2b0025c9a068","modified":1730266493639},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.5-单字符串多字段查询-DisMaxQuery\\README.md","hash":"0b5ba83fb40a7b2a5e61ae3c714227d466030f76","modified":1730266493638},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.4-Query&Filtering实现多字符串多字段查询\\README.md","hash":"5ab796c6b11c1e23e5954c9dbf28cb69bbf9355a","modified":1730266493638},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.7-多语言及中文分词与检索\\README.md","hash":"8ac87541a965fcd7aa258d8788dee1f86da3b2ab","modified":1730266493639},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.8-SpaceJam一个全文搜索的实例\\README.md","hash":"8d1d47d37da157cde854bb3868a90841e40a83b1","modified":1730266493640},{"_id":"source\\_posts\\elasticsearch\\part-2\\4.9-使用SearchTemplate和IndexAlias进行查询\\README.md","hash":"d8fd74090a103f9401263052fd1ec46771afa780","modified":1730266493640},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.3-文档分布式存储\\README.md","hash":"ad8c2397954b582c8ba7fa4354c91cbcbdaa2fea","modified":1730266493641},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.4-分片及其生命周期\\README.md","hash":"81757cb5015156f8cee21652a0051c32afc60b1b","modified":1730266493643},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.2-分片与集群的故障转移\\README.md","hash":"1eb063d1bd64e242048dfb22f2d503ea4d61452a","modified":1730266493641},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.5-剖析分布式查询及相关性评分\\README.md","hash":"a844d19bfbb70a951f2fb6020be006e247e065b3","modified":1730266493643},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI\\README.md","hash":"bcf972ec6c1417552e2fed305ff83f4a5d9c159c","modified":1730266493643},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.1-集群分布式模型及选主与脑裂问题\\README.md","hash":"0fb282183b150ad1c26804e4b65cb5425b7fc4ae","modified":1730266493640},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.6-排序及DocValues&Fielddata\\README.md","hash":"952fa5ceb77640057d57ad5934c5a1d0b1f2bdc6","modified":1730266493643},{"_id":"source\\_posts\\elasticsearch\\part-2\\5.8-处理并发读写\\README.md","hash":"842e95ff2c5bd6e4f8541fbb3ed8c00382296310","modified":1730266493643},{"_id":"source\\_posts\\elasticsearch\\part-2\\6.2-Pipeline聚合分析\\README.md","hash":"82530cb3a20c19760cfca8de8074903cc7b1e1b7","modified":1730266493645},{"_id":"source\\_posts\\elasticsearch\\part-2\\6.1-Bucket&Metric聚合分析及嵌套聚合\\README.md","hash":"ce583259190a2ccb9376d5f2f6d1ede178ba3455","modified":1730266493644},{"_id":"source\\_posts\\elasticsearch\\part-2\\6.3-作用范围与排序\\README.md","hash":"e8863042cbc187f5411357fbe34dc52b7cf203bc","modified":1730266493645},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.3-UpdateByQuery&Reindex API\\README.md","hash":"badcbca33598b7a4378fdfb74c62271240892588","modified":1730266493647},{"_id":"source\\_posts\\elasticsearch\\part-2\\6.4-聚合分析的原理及精准度问题\\README.md","hash":"c4910f1de7989b7333d63b875234dfac3d1ed7ef","modified":1730266493646},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.2-文档的父子关系\\README.md","hash":"aa89600177f1542e31ad676afbb2aed10ee47888","modified":1730266493646},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.1-对象及 Nested 对象\\README.md","hash":"deeea76a7dde42e92530490f8c7c5ff911627758","modified":1730266493646},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.4-IngestPipeline&PainlessScript\\README.md","hash":"84e9677d3184b8f344986969b621c15e2a0756f6","modified":1730266493647},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.7-第二部分总结与测验\\README.md","hash":"8954bebbca963acda2bab27e7e86d1b6e726c114","modified":1730266493649},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.6-Elasticsearch 数据建模最佳实践\\README.md","hash":"ec2238db7b6f90d852d514df5c8c4155ac7f6fca","modified":1730266493648},{"_id":"source\\_posts\\elasticsearch\\part-2\\7.5-Elasticsearch数据建模实例\\README.md","hash":"c4123422e55a3d3b9629920814a3b40482075933","modified":1730266493648},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.1-生产环境常用配置与上线清单\\README.md","hash":"5a0152037a03a9150319fc16ed94f880005f26a4","modified":1730266493734},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.10-一些运维相关的建议\\README.md","hash":"bde66fcbc5e974f6a23c725efa25fa9dae420f43","modified":1730266493735},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.2-监控Elasticsearch集群\\README.md","hash":"b2c05e4875dc92419ba96580be1a53bec283b597","modified":1730266493735},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.3-诊断集群的潜在问题\\README.md","hash":"95ea18219c5807a07b96747474c660f084c7dc49","modified":1730266493736},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.4-解决集群Yellow与Red的问题\\README.md","hash":"e6ee4909d7c3b5a4f33339adf11469b593dea28b","modified":1730266493736},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.7-集群压力测试\\README.md","hash":"25250bb3b43880fd7a1bfc9dd29bdb54010a750e","modified":1730266493737},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.6-提升集群读性能\\README.md","hash":"d62e7f7996cb8bec9a3496ced80ff2d3d2b556d8","modified":1730266493737},{"_id":"source\\_posts\\elasticsearch\\part-3\\11.1-使用Shrink与RolloverAPI有效管理时间序列索引\\README.md","hash":"204d0d530c5c37d6bf7d1d9be3cb989355403a57","modified":1730266493738},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.9-缓存及使用Breaker限制内存使用\\README.md","hash":"e8baa9e8cece06191fa87cc4daa395f7424e89d4","modified":1730266493737},{"_id":"source\\_posts\\elasticsearch\\part-3\\11.2-索引全生命周期管理及工具介绍\\README.md","hash":"0b56289ecccbfbb42e6e90b58022248a3256aec7","modified":1730266493738},{"_id":"source\\_posts\\elasticsearch\\part-3\\8.2-集群内部安全通信\\README.md","hash":"953b5b3d04c2da22e171b026ebbbf65fc4b1f617","modified":1730266493739},{"_id":"source\\_posts\\elasticsearch\\part-3\\8.1-集群身份认证与用户鉴权\\README.md","hash":"d3834862e61d02c9d0f946032a174a93e90871b7","modified":1730266493738},{"_id":"source\\_posts\\elasticsearch\\part-3\\8.3-集群与外部间的安全通信\\README.md","hash":"8bbc32befb9e78d36cace0402f247229ee50c501","modified":1730266493739},{"_id":"source\\_posts\\elasticsearch\\part-3\\10.5-提升集群写性能\\README.md","hash":"d4a04b167e8cdcce5efc1dda8bc65bbb1c13d08a","modified":1730266493736},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.2-Hot&Warm架构与ShardFiltering\\README.md","hash":"82e98593904cd3a57d13587e341453d28d57ed88","modified":1730266493740},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.1-常见的集群部署方式\\README.md","hash":"b248cfd11b18544ccbb132fd12fd03edad973ef3","modified":1730266493739},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.3-如何对集群进行容量规划\\README.md","hash":"8745d3a0b834c5d89e515d30501cf016102a6f2c","modified":1730266493740},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.5-在私有云上管理与部署Elasticsearch集群\\README.md","hash":"8eea1cd309f3e97eab736186f12a030cc27a1bfd","modified":1730266493742},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.6-在公有云上管理与部署Elasticsearch集群\\README.md","hash":"c0595697fced31e531a16ee5c157ac111cb48eb4","modified":1730266493742},{"_id":"source\\_posts\\elasticsearch\\part-3\\集群写性能优化\\README.md","hash":"c968f2e624c3924dd316fef287f5e866b533742c","modified":1730266493777},{"_id":"source\\_posts\\elasticsearch\\part-5\\backup_restore\\README.md","hash":"594284eb8db29b58a1a09061043481a9477be69f","modified":1730266494125},{"_id":"source\\_posts\\elasticsearch\\part-3\\9.4-分片设计及管理\\README.md","hash":"6e4eecb53258ab1bf1b2c05944eb9fd854bee372","modified":1730266493740},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\README.md","hash":"92070a3a6c877b74a561f8fa6cc9d3a025255a63","modified":1730266494127},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\README.md","hash":"2908edbe9828eb56be420e1765310e8b2a715d13","modified":1730266494145},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\README.md","hash":"6c41c79e09642a905f20a3949b07d6d8fbe10614","modified":1730266494213},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\logstash-stackoverflow-survey.conf","hash":"d2eeb52c504f7bfdddc27fd7b5bfbb30da6e4161","modified":1730266494214},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\mapping.json","hash":"47daf4553a3b1bd6b9aef90d779adc4e6d218dfc","modified":1730266494214},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\pipeline.json","hash":"a5837af833d7429ec696e5ce8c16f1c30cb1d0c5","modified":1730266494215},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\reindex.json","hash":"78fb2f9885bceb7d1c1ec3007327636ff069c01e","modified":1730266494215},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-2-stackoverflow用户调查问卷分析\\survey-mapping.json","hash":"23a847e2e4cfb94bf6a3796d125807037a348481","modified":1730266494215},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.1-Logstash入门及架构介绍\\README.md","hash":"a518c067805a4baa34594f48e666a266ba1262b2","modified":1730266493777},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.1-Logstash入门及架构介绍\\logstash-filter.conf","hash":"0f4cf95acc3a02ea4040e31f9d8416fc1583c8a4","modified":1730266493777},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.1-Logstash入门及架构介绍\\multiline-exception.conf","hash":"4641316a86a38c88632cc4be61210f7d0df27460","modified":1730266493778},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.2-利用JDBC插件导入数据到Elasticsearch\\mysql-demo.yaml","hash":"244f5c3f38dfa9c9df4ac385a39b982f4dced5cd","modified":1730266493794},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.3-Beats介绍\\README.md","hash":"f0ae048c32b9ff8a6b518494dc513a93e3fdf2e7","modified":1730266493795},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.2-利用JDBC插件导入数据到Elasticsearch\\README.md","hash":"d98fbdc761cb2cf6062f6a83045beca6f3486600","modified":1730266493778},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.1-使用IndexPattern配置数据\\README.md","hash":"fad1c808b1cf086fe07cfdb0ff12abdd2ee1b616","modified":1730266493795},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.3-基本可视化组件介绍\\README.md","hash":"473f530f291be0425bde1a0df71efb46b8e462b6","modified":1730266493972},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.4-构建Dashboard\\README.md","hash":"ed7023689d8383105f8713bde7eca050109a1762","modified":1730266494040},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.2-使用KibanaDiscover探索数据\\README.md","hash":"a4ae70ead31eed5b7af89b383bb7bdcd4351d158","modified":1730266493972},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.3用机器学习实现时序数据的异常检测-上\\readme.md","hash":"d7498c146e3ac7d9ef7645604aa10edefeb59797","modified":1730266494042},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.5-用ELK进行日志管理\\README.md","hash":"037597bcf4b0437d14ba093764ef8e6de60ff004","modified":1730266494045},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.6-用Canvas做数据演示\\README.md","hash":"66ac4b608aba3f2585136ba39bf28f00b3fd1dca","modified":1730266494046},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.factorypath","hash":"7626c3b35524a90eeb59e5c7d19d944df8d543c4","modified":1730266494137},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.classpath","hash":"5da08716833222bf1e2070b041b094c43766d4b4","modified":1730266494136},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\mvnw","hash":"22a4ee248edfdf793ea25ed383edb7bf02a80af3","modified":1730266494139},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\Dockerfile","hash":"05528f73c75fab5691135ae072c10d45f17f26f1","modified":1730266494139},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.gitignore","hash":"a79e348efefb4a2c0cb8d15a80ada8280eb12984","modified":1730266494137},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.project","hash":"57ef809a5742f5073149ee37f0a47f7a3a0a4bdd","modified":1730266494137},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\pom.xml","hash":"80a06399880d482163716a3c9a67c5a8457d13b8","modified":1730266494140},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\mvnw.cmd","hash":"a6b68b32c43e96ec1904cd9e8abdff89564bb4ab","modified":1730266494139},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\readme.md","hash":"b05015903053b33566ab45f784dbcf40cdc53a0c","modified":1730266494132},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\movie-search\\.python-version","hash":"b7e2bce288ee6e2b77e0feefe9651a5d94123b4b","modified":1730266494146},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\pom.xml","hash":"b446f2aec1c7f1e64bf5161a37594f0a61320a9e","modified":1730266494131},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\movie-search\\README.md","hash":"5ced6b93a511b315a7d6a43e61ffbc69be5d330d","modified":1730266494146},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\movie-search\\ingest_tmdb_to_appserarch.py","hash":"d56bd03a36e07745be223d7e168823d28bb44c7f","modified":1730266494146},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\movie-search\\requirements.txt","hash":"9e1e3af6aa338a4eb25ced45e27907b3e56d16d2","modified":1730266494146},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.settings\\org.eclipse.core.resources.prefs","hash":"4ae2ca0746375fa0578c2ff7f9f3eb930416c72f","modified":1730266494138},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.settings\\org.eclipse.jdt.apt.core.prefs","hash":"5778f33f3698ae5d878706ae1f7c1acbf04cd3ec","modified":1730266494138},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.settings\\org.eclipse.jdt.core.prefs","hash":"6bbecc5becf96487337232f5a869bb9426824479","modified":1730266494138},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\.settings\\org.eclipse.m2e.core.prefs","hash":"a112be21c325d37ebc17baafd40c0386b5d09df1","modified":1730266494138},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\.gitignore","hash":"2e9c8da7fccd83537deaa67897e7ce3ced99851f","modified":1730266494128},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\compiler.xml","hash":"9a418a492cf50711c4ee076e049bab2b6edef060","modified":1730266494128},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\encodings.xml","hash":"4a56db8dc2a50f3af94d9026eb97b6afbc771085","modified":1730266494128},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\google-java-format.xml","hash":"854de0d8b2497725fcdd716454ae972ace806d0a","modified":1730266494128},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\misc.xml","hash":"2d76a791c6628cf8551e67974facba6a8f1e2b89","modified":1730266494129},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\vcs.xml","hash":"d222c1e95ba289f2814d142867f8b3c8b656bcc6","modified":1730266494129},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\workspace.xml","hash":"7829a1da6f075752dda8baec0110404baa8e1d61","modified":1730266494129},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\.idea\\codeStyles\\codeStyleConfig.xml","hash":"83c70f41b5ec60791a20dbad2775d386cd24cb53","modified":1730266494128},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\docker-compose\\6.2.2\\docker-compose.yaml","hash":"85be696b47f429d0e206e4df5318754b8fdaa858","modified":1730266494130},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\resources\\application.properties","hash":"43ce55f0830927c1c04f66c8661ab529011b57b8","modified":1730266494144},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\docker-compose\\7.1.0\\docker-compose.yaml","hash":"67813c616ac50cc5c90a872d3c4157742b09c739","modified":1730266494131},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\resources\\application.yml","hash":"f3a2278022fb32b2c8be9cd8810593b122a7efbf","modified":1730266494135},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\test\\resources\\application.yml","hash":"d0a6bb0eeef9a49a89ac456a1083d7be0f7712ce","modified":1730266494136},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\test\\java\\com\\geektime\\elasticsearch\\demo\\ApplicationTests.java","hash":"f890736dfa1b318592cddfa48c9f0a900244fa79","modified":1730266494145},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\Application.java","hash":"1eece30510a869073585332526a61bacf4803220","modified":1730266494141},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\SampleDataSet.java","hash":"33e46ca00f2c68cbaa7eaa04f7472df1985b0e2b","modified":1730266494133},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\Constants.java","hash":"9a75ca4158bf2821a36e13290faad7c3cf9bcf53","modified":1730266494132},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\SampleApplication.java","hash":"63866819076cb32f54b04621058990598e10cf7e","modified":1730266494132},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\test\\java\\geektime\\demo\\services\\elasticsearch\\EmployeeRepositoryTest.java","hash":"5c92c6e2932efab114cf26b7ac088cac836bf82d","modified":1730266494136},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\config\\ElasticsearchConfig.java","hash":"5a65ad868dfd49d8af073076ba609309191e0fa8","modified":1730266494141},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\document\\ProfileDocument.java","hash":"307bdb2ae1c8bf669ea42d1e5a62a9cfcca0e990","modified":1730266494142},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\controller\\EmployeeController.java","hash":"f513274a2611ac85054a75aadd87a9a504eca1aa","modified":1730266494133},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\model\\Technologies.java","hash":"6fc1a559c71725c49bd4d5b8b0c35f30227aa761","modified":1730266494142},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\service\\ProfileService.java","hash":"ae3341b5b4691832b2510359df9867d5da4e869b","modified":1730266494143},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\model\\Department.java","hash":"657cc89c648d0e405318634f743796f911a40187","modified":1730266494133},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\controller\\ProfileController.java","hash":"d58289496d810beab0daba8fec81a9e9cf25a698","modified":1730266494141},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\model\\Employee.java","hash":"32d08a6573102df061e36a9ea00e2deb4b2df009","modified":1730266494134},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\repository\\EmployeeRepository.java","hash":"f1391513cb7af33de6a138c58ed9b4e86dd8bf70","modified":1730266494134},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\sample-springboot-elasticsearch\\src\\main\\java\\geektime\\demo\\services\\elasticsearch\\model\\Organization.java","hash":"1d2938edfcc2ae5d45ccd3bfaec3a41448b7e3a1","modified":1730266494134},{"_id":"source\\_posts\\elasticsearch\\part-5\\java-es\\spring-boot-java-highlevel-rest-client-elasticsearch\\src\\main\\java\\com\\geektime\\elasticsearch\\demo\\util\\Constant.java","hash":"ea840cc7f002fedcb3ab97ecc26b7de42be78009","modified":1730266494144},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.1-使用IndexPattern配置数据\\accounts.json","hash":"b19d154c8273f14a41ca3b6065bfae91160f5a0d","modified":1730266493796},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.3-基本可视化组件介绍\\accounts.json","hash":"b19d154c8273f14a41ca3b6065bfae91160f5a0d","modified":1730266493974},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.6-用Canvas做数据演示\\elasticcoffee-data.bulk","hash":"8cd59d220a9db19f481be5949601ac125a0f0ebd","modified":1730266494099},{"_id":"source\\_posts\\elasticsearch\\part-5\\elastic认证\\index.html","hash":"721428d27b6d4903930285aad2e149607a5523bb","modified":1730266494127},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.3用机器学习实现时序数据的异常检测-上\\user-activity\\user-activity.json","hash":"35b923a850cef3af343b6e9075ed4cd8c598dbc0","modified":1730266494043},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.4-用机器学习实现时序数据的异常检测-下\\user-activity\\user-activity.json","hash":"35b923a850cef3af343b6e9075ed4cd8c598dbc0","modified":1730266494045},{"_id":"source\\_posts\\elasticsearch\\part-4\\12.2-利用JDBC插件导入数据到Elasticsearch\\mysql-connector-java-8.0.17.jar","hash":"53da6afdc5f7b45caaa5bc3627028b2041a36cee","modified":1730266493794},{"_id":"source\\_posts\\elasticsearch\\part-5\\应用实战工作坊.pdf","hash":"5d3ea4798e8e49363a1bb3e76e66aaeed146a6bb","modified":1730266494255},{"_id":"source\\_posts\\elasticsearch\\part-4\\14.6-用Canvas做数据演示\\canvas-workpad-CafeCanvas.json","hash":"7299b5522d66d81be1543316835bfdc4298c632c","modified":1730266494097},{"_id":"source\\_posts\\elasticsearch\\part-5\\part-1-电影搜索服务\\movie-search\\tmdb.json","hash":"a353c80671495cb9b22829be7909bc7c44b19ca2","modified":1730266494213},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.3-基本可视化组件介绍\\shakespeare.json","hash":"5aec504fd26e50b93e46035609a91a4aac7d439c","modified":1730266494039},{"_id":"source\\_posts\\elasticsearch\\part-4\\13.1-使用IndexPattern配置数据\\logs.jsonl","hash":"77e928afb0d465208b2305c2df2342d22ea19046","modified":1730266493967},{"_id":"source\\_posts\\elasticsearch\\10.1-生产环境常用配置与上线清单.md","hash":"98dfc5f7bbffe61ce141ab37ba3f2fce732c20bf","modified":1740643547998},{"_id":"source\\_posts\\elasticsearch\\10.10-一些运维相关的建议.md","hash":"545bed6015712fc3b74ebb91befb1fa942390da6","modified":1740643547999},{"_id":"source\\_posts\\elasticsearch\\10.5-提升集群写性能.md","hash":"094dcaac6411ec71e784ab4e62a9e58a77f91d7d","modified":1740643548003},{"_id":"source\\_posts\\elasticsearch\\10.4-解决集群Yellow与Red的问题.md","hash":"306b24c7d35cc87399db0dae3a9750e5c52934ed","modified":1740643548002},{"_id":"source\\_posts\\elasticsearch\\10.3-诊断集群的潜在问题.md","hash":"9dd1c681996d6678e418e62e6ec08aa96e362705","modified":1740643548001},{"_id":"source\\_posts\\elasticsearch\\10.2-监控Elasticsearch集群.md","hash":"0fe354130e734575d1f527e9b1b8163723a177f4","modified":1740643548000},{"_id":"source\\_posts\\elasticsearch\\10.6-提升集群读性能.md","hash":"02a077fa244b5b0000222049e27327acfd478275","modified":1740643548003},{"_id":"source\\_posts\\elasticsearch\\10.7-集群压力测试.md","hash":"0d6ab7f003d2336fde3c690e953a865ada4f64ef","modified":1740643548005},{"_id":"source\\_posts\\elasticsearch\\10.9-缓存及使用Breaker限制内存使用.md","hash":"8a25e560ce3b05f0b00b93282f506a5600b510fa","modified":1740643548005},{"_id":"source\\_posts\\elasticsearch\\11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md","hash":"b8fda83953755b3e302ae49d68bd582dba857b2c","modified":1740643548007},{"_id":"source\\_posts\\elasticsearch\\11.2-索引全生命周期管理及工具介绍.md","hash":"de3ac2dee830e984bddb730e1950515107d40414","modified":1740643548008},{"_id":"source\\_posts\\elasticsearch\\12.1-Logstash入门及架构介绍.md","hash":"b50be1b979f78b2935f7ade6a34877e157033d42","modified":1740643548008},{"_id":"source\\_posts\\elasticsearch\\12.2-利用JDBC插件导入数据到Elasticsearch.md","hash":"fa1084cd6cf68257ff488459ded25ef7297c013d","modified":1740643548010},{"_id":"source\\_posts\\elasticsearch\\13.1-使用IndexPattern配置数据.md","hash":"b7a01571a00dc54a59610709c1022f4ee466ad12","modified":1740643548012},{"_id":"source\\_posts\\elasticsearch\\12.3-Beats介绍.md","hash":"7eaf123c008935accc7682890b7a608f551ff2f6","modified":1740643548011},{"_id":"source\\_posts\\elasticsearch\\13.2-使用KibanaDiscover探索数据.md","hash":"51e13799d0373b2cf7b40486d92e5879aef4cfac","modified":1740643548013},{"_id":"source\\_posts\\elasticsearch\\13.3-基本可视化组件介绍.md","hash":"9dffa9a0d68830692eab15dbbedd060f4e64a713","modified":1740643548014},{"_id":"source\\_posts\\elasticsearch\\14.5-用ELK进行日志管理.md","hash":"4b0aa9c01a64512826dcbe9733ff24375122f2fd","modified":1740643548015},{"_id":"source\\_posts\\elasticsearch\\14.3用机器学习实现时序数据的异常检测-上.md","hash":"6e9474f822ef9b223467d358d2e0447aa871b23b","modified":1740643548015},{"_id":"source\\_posts\\elasticsearch\\13.4-构建Dashboard.md","hash":"ef52ef7d3386c29990735f4eadfff114ab3a3fda","modified":1740643548014},{"_id":"source\\_posts\\elasticsearch\\14.6-用Canvas做数据演示.md","hash":"d4d574df90f609a268d1b6c4a477e5aa6d6db3bd","modified":1740643548016},{"_id":"source\\_posts\\elasticsearch\\4.1-基于词项和基于全文的搜索.md","hash":"93817b31dc276f535c98701998c31bef88c66962","modified":1740643548017},{"_id":"source\\_posts\\elasticsearch\\4.12-自动补全与基于上下文的提示.md","hash":"2bc49646e44c0d81e9e8353d22b9a413e0525127","modified":1740643548020},{"_id":"source\\_posts\\elasticsearch\\4.10-综合排序：Function Score Query 优化算分.md","hash":"5a26897e641cba8a19e3b6142f15c30b642923a4","modified":1740643548018},{"_id":"source\\_posts\\elasticsearch\\4.13-跨集群搜索.md","hash":"e330c9c0facae91a028304359e98d471de52068f","modified":1740643548021},{"_id":"source\\_posts\\elasticsearch\\4.3-搜索的相关性算分.md","hash":"41a173146f6cd59599e5a744bde348cb11571d0e","modified":1740643548023},{"_id":"source\\_posts\\elasticsearch\\4.2-结构化搜索.md","hash":"95c4cbe933418f8274ab4231bcb498dfb46c8d22","modified":1740643548022},{"_id":"source\\_posts\\elasticsearch\\4.4-Query&Filtering实现多字符串多字段查询.md","hash":"45b2c7c059288cb9c7fa612e0ad47cdde4fb7603","modified":1740643548023},{"_id":"source\\_posts\\elasticsearch\\4.5-单字符串多字段查询-DisMaxQuery.md","hash":"911a2da4bf4bdd759f1cc4c6af991126097c892b","modified":1740643548024},{"_id":"source\\_posts\\elasticsearch\\4.7-多语言及中文分词与检索.md","hash":"eae471ae55b574c3179145db5adc7b3eea91eba4","modified":1740643548027},{"_id":"source\\_posts\\elasticsearch\\4.8-SpaceJam一个全文搜索的实例.md","hash":"3bd166f83eb51422d50fe92dadae5d23e6b0571c","modified":1740643548028},{"_id":"source\\_posts\\elasticsearch\\5.1-集群分布式模型及选主与脑裂问题.md","hash":"2d8b05097e2a1d1dbcda501b3898964d2c0c8157","modified":1740643548029},{"_id":"source\\_posts\\elasticsearch\\5.2-分片与集群的故障转移.md","hash":"d7b98c95b3c9a8a2a9a41d7658c29c5e66b11e64","modified":1740643548031},{"_id":"source\\_posts\\elasticsearch\\5.3-文档分布式存储.md","hash":"60badb6f854cbad17122a8819df258613a58e95b","modified":1740643548032},{"_id":"source\\_posts\\elasticsearch\\4.9-使用SearchTemplate和IndexAlias进行查询.md","hash":"0fbc41842b349a3dd11767f1500b1aa672a1fd49","modified":1740643548028},{"_id":"source\\_posts\\elasticsearch\\4.6-单字符串多字段查询-Multi-Match.md","hash":"8f92dcc2f56a19f37c150ab7121509639db79165","modified":1740643548026},{"_id":"source\\_posts\\elasticsearch\\5.4-分片及其生命周期.md","hash":"82573dfaf0a9d4674b9a94beecb909603ef11671","modified":1740643548033},{"_id":"source\\_posts\\elasticsearch\\5.5-剖析分布式查询及相关性评分.md","hash":"d664a327ddb004c7308c673048dbb1edb3f8f614","modified":1740643548034},{"_id":"source\\_posts\\elasticsearch\\5.6-排序及DocValues&Fielddata.md","hash":"6affc626397e3cf4ee875927fc577ba9c5646f9a","modified":1740643548035},{"_id":"source\\_posts\\elasticsearch\\5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI.md","hash":"7e41e2653415cd95727aea05f8359c10454efee9","modified":1740643548035},{"_id":"source\\_posts\\elasticsearch\\5.8-处理并发读写.md","hash":"7109bf539fd923dc130dc8c07d4286c896eed22f","modified":1740643548037},{"_id":"source\\_posts\\elasticsearch\\6.2-Pipeline聚合分析.md","hash":"7c8746f47bc1e4f0cc93541f58bc19f693335155","modified":1740643548038},{"_id":"source\\_posts\\elasticsearch\\6.3-作用范围与排序.md","hash":"738b654f7ba2f7b437a65a9f79123af84cc676fc","modified":1740643548039},{"_id":"source\\_posts\\elasticsearch\\6.1-Bucket&Metric聚合分析及嵌套聚合.md","hash":"ca0589460d699c8149cac8638e30f308c8f2f5da","modified":1740643548037},{"_id":"source\\_posts\\elasticsearch\\7.1-对象及 Nested 对象.md","hash":"d419aa9b251971ef128f2a9b4fdda35e977c8a8d","modified":1740643548041},{"_id":"source\\_posts\\elasticsearch\\7.2-文档的父子关系.md","hash":"3824143caad07f3f2435ff1d05b71379b1f9c3ea","modified":1740643548043},{"_id":"source\\_posts\\elasticsearch\\6.4-聚合分析的原理及精准度问题.md","hash":"41517dfb036df4545b4b193b41272ae410477161","modified":1740643548039},{"_id":"source\\_posts\\elasticsearch\\7.5-Elasticsearch数据建模实例.md","hash":"662b078bc6a4e296142313e2bfd07febba096afe","modified":1740643548044},{"_id":"source\\_posts\\elasticsearch\\7.7-第二部分总结与测验.md","hash":"60631ffe0dc993dfec16dd5db9cf0269e1f6bbb4","modified":1740643548046},{"_id":"source\\_posts\\elasticsearch\\8.2-集群内部安全通信.md","hash":"696a5d1fae148b0e8eb92de865228a85c9be8260","modified":1740643548048},{"_id":"source\\_posts\\elasticsearch\\7.6-Elasticsearch 数据建模最佳实践.md","hash":"4892ccf39debc124be04eefcb3be9a2774f47f1d","modified":1740643548045},{"_id":"source\\_posts\\elasticsearch\\8.1-集群身份认证与用户鉴权.md","hash":"536b49d69076359840f898c36b5505eabe00e9b0","modified":1740643548047},{"_id":"source\\_posts\\elasticsearch\\8.3-集群与外部间的安全通信.md","hash":"869cc42c601a113ef6872dbc4f794f9d1e2cc9f1","modified":1740643548048},{"_id":"source\\_posts\\elasticsearch\\9.3-如何对集群进行容量规划.md","hash":"5818960ee9bd4837500cb3210c5028f65e8eaae5","modified":1740643548051},{"_id":"source\\_posts\\elasticsearch\\9.1-常见的集群部署方式.md","hash":"307a7cd848b72f716ebf75df79f9e9042648a38b","modified":1740643548050},{"_id":"source\\_posts\\elasticsearch\\9.2-Hot&Warm架构与ShardFiltering.md","hash":"09f3578c588f01ede7f43a3332c6ed1ad093706a","modified":1740643548050},{"_id":"source\\_posts\\elasticsearch\\9.6-在公有云上管理与部署Elasticsearch集群.md","hash":"f97923e3bff3a19d14cacf0eff0fe87c28559684","modified":1740643548054},{"_id":"source\\_posts\\elasticsearch\\集群写性能优化.md","hash":"c968f2e624c3924dd316fef287f5e866b533742c","modified":1730266493777},{"_id":"source\\_posts\\elasticsearch\\9.4-分片设计及管理.md","hash":"5eec627988f3cd35e4f6a663a739a0181c65cde3","modified":1740643548052},{"_id":"source\\_posts\\elasticsearch\\9.5-在私有云上管理与部署Elasticsearch集群.md","hash":"94c4b2d817c4e75d859b845411a409d39e41d766","modified":1740643548052},{"_id":"public/elasticsearch/集群写性能优化/index.html","hash":"2c7f32b31c79cdf61156287702ff2be2f3da5cb6","modified":1740643334739},{"_id":"public/elasticsearch/9.6-在公有云上管理与部署Elasticsearch集群/index.html","hash":"4a538404d5054d43861258c66b4d2c86397d365e","modified":1740643334739},{"_id":"public/elasticsearch/9.5-在私有云上管理与部署Elasticsearch集群/index.html","hash":"a67c93280fe25b72b6e01b75518765ba8e615074","modified":1740643334739},{"_id":"public/elasticsearch/9.4-分片设计及管理/index.html","hash":"5ac27cfa028830bae33b41b52c67f8013ff42497","modified":1740643334739},{"_id":"public/elasticsearch/9.3-如何对集群进行容量规划/index.html","hash":"54602f3142398633e6f596959105af8f35c174e2","modified":1740643334739},{"_id":"public/elasticsearch/9.2-Hot&Warm架构与ShardFiltering/index.html","hash":"a797411134cc68f365e78c829f7c996194c710cd","modified":1740643334739},{"_id":"public/elasticsearch/9.1-常见的集群部署方式/index.html","hash":"761327c85aed230ca0b64413c4e01bb1f5b39069","modified":1740643334739},{"_id":"public/elasticsearch/8.3-集群与外部间的安全通信/index.html","hash":"7338c5a34fcc2de7810b505b3239039a7b6708bc","modified":1740643334739},{"_id":"public/elasticsearch/8.2-集群内部安全通信/index.html","hash":"ae70a58035565e2e3fee73d69d09d780e0aacb1d","modified":1740643334739},{"_id":"public/elasticsearch/8.1-集群身份认证与用户鉴权/index.html","hash":"ca2600ab989e0a844d313e7fd89377f8dadb767a","modified":1740643334739},{"_id":"public/elasticsearch/7.7-第二部分总结与测验/index.html","hash":"1dd8bc0b59018cfd6f336ffddceb7a4c8b8b5c46","modified":1740643334739},{"_id":"public/elasticsearch/7.5-Elasticsearch数据建模实例/index.html","hash":"04dcd590d0c3ee5551fd3fd9540263623cfd5aa8","modified":1740643334739},{"_id":"public/elasticsearch/7.6-Elasticsearch 数据建模最佳实践/index.html","hash":"834b2e77dad93020e7e34ef261d83f9b286c561b","modified":1740643334739},{"_id":"public/elasticsearch/7.2-文档的父子关系/index.html","hash":"8796fdb67083cc586d6c443fdf24e5723942556c","modified":1740643334739},{"_id":"public/elasticsearch/6.4-聚合分析的原理及精准度问题/index.html","hash":"217a9335adf67970b9bc110a9a4ac73a80e31fba","modified":1740643334739},{"_id":"public/elasticsearch/7.1-对象及 Nested 对象/index.html","hash":"a8d87daf7632644c7959d1d4970c9f71b81e85c0","modified":1740643334739},{"_id":"public/elasticsearch/6.3-作用范围与排序/index.html","hash":"310f324c8b1ee43fb41c77559cc5c360562cc6ab","modified":1740643334739},{"_id":"public/elasticsearch/6.2-Pipeline聚合分析/index.html","hash":"28c89573654a501ea8f2be14b49bd5d08f3f0434","modified":1740643334739},{"_id":"public/elasticsearch/6.1-Bucket&Metric聚合分析及嵌套聚合/index.html","hash":"cc9d7dc13388076d02a30e8f55f4f95b7c68afbc","modified":1740643334739},{"_id":"public/categories/elasticsearch/index.html","hash":"c9c10ee8c2c2de082e1fa1ce61936c8fe30c197e","modified":1740643334739},{"_id":"public/archives/page/4/index.html","hash":"1b63d660b2e2bb1e5031596cb00c3001d748346a","modified":1740643334739},{"_id":"public/archives/page/6/index.html","hash":"99ca07dab6d866d0fd6a05335b34879904773428","modified":1740643334739},{"_id":"public/archives/page/5/index.html","hash":"60420dff606146a18071f5be9bfa45e55814b895","modified":1740643334739},{"_id":"public/archives/page/9/index.html","hash":"912c7a69bb3a3cc41dcae3f37aa429a0cca9f75b","modified":1740643334739},{"_id":"public/archives/page/7/index.html","hash":"e10aad5dd1b44d3f5506800b4c7b0244f4466536","modified":1740643334739},{"_id":"public/archives/page/8/index.html","hash":"eb708da2cacb864f0b27b24dbf44e15e215e25ae","modified":1740643334739},{"_id":"public/archives/2025/page/2/index.html","hash":"eac1000e1cce5cacb0a3f57f1f3b2fb5b69e24b9","modified":1740643334739},{"_id":"public/archives/2025/page/3/index.html","hash":"8e34fb9ea8c2b660adae2058085cfba01d7c4fd7","modified":1740643334739},{"_id":"public/archives/2025/page/4/index.html","hash":"fb7bf65fa0dc113aa29b9a2c68a2082b22dc0957","modified":1740643334739},{"_id":"public/archives/2025/page/5/index.html","hash":"f5b7688ab1515e348efefefade6f4132e5ab6ec7","modified":1740643334739},{"_id":"public/archives/2025/page/7/index.html","hash":"f97cf1aebca17cf63ac1cd16e3d752588f12352a","modified":1740643334739},{"_id":"public/archives/2025/02/page/2/index.html","hash":"0ffcb19247ea28d5f50fc761e6e08742f22b5c2d","modified":1740643334739},{"_id":"public/archives/2025/02/page/5/index.html","hash":"8e72b1ba0b0dd707d421fd058d85e4b1a1add611","modified":1740643334739},{"_id":"public/archives/2025/page/6/index.html","hash":"44cf06562e7ae727a2316b3373251dd56236b601","modified":1740643334739},{"_id":"public/archives/2025/02/page/4/index.html","hash":"a655f1489be14495190bec152b48a23299c144cc","modified":1740643334739},{"_id":"public/archives/2025/02/page/7/index.html","hash":"07866305d81039926e7a3a0e86ad558d31f65530","modified":1740643334739},{"_id":"public/archives/2025/02/page/3/index.html","hash":"04e9a270e64d5f40a5bf02cfad0685d6f89179cb","modified":1740643334739},{"_id":"public/archives/2025/02/page/6/index.html","hash":"74664b208f4a2f14d980f9396d7072c6d9c73cb8","modified":1740643334739},{"_id":"public/tags/docker部署/index.html","hash":"ac2ce70bf5c85a3c55e8dae05d9a3cdc1a6b4dd0","modified":1740643334739},{"_id":"public/elasticsearch/5.6-排序及DocValues&Fielddata/index.html","hash":"ddcbac680e0430dd4235b1757b445b55abee3614","modified":1740643334739},{"_id":"public/elasticsearch/5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI/index.html","hash":"0d05705d39edaac9677a41f8082b3f77feb50e22","modified":1740643334739},{"_id":"public/elasticsearch/5.8-处理并发读写/index.html","hash":"23bb015d166a3992557ebabe3ad146f753b7a265","modified":1740643334739},{"_id":"public/elasticsearch/5.5-剖析分布式查询及相关性评分/index.html","hash":"6591d20737eeb73739ea8d539f9e42951be69092","modified":1740643334739},{"_id":"public/elasticsearch/5.4-分片及其生命周期/index.html","hash":"cff787dc88b4f265f7d4f7c1d1aac899196fda75","modified":1740643334739},{"_id":"public/elasticsearch/5.3-文档分布式存储/index.html","hash":"b5349b89877f1c27c9fe2c0964b8ae6c34b1776c","modified":1740643334739},{"_id":"public/elasticsearch/4.9-使用SearchTemplate和IndexAlias进行查询/index.html","hash":"54752d9eafc89b5c83588881c86819153633ddf4","modified":1740643334739},{"_id":"public/elasticsearch/5.1-集群分布式模型及选主与脑裂问题/index.html","hash":"27c1f1aed28b203992fb08df45882a8fb20fb483","modified":1740643334739},{"_id":"public/elasticsearch/5.2-分片与集群的故障转移/index.html","hash":"420fb4da4f144a138a4e316937076289541f75ec","modified":1740643334739},{"_id":"public/elasticsearch/4.8-SpaceJam一个全文搜索的实例/index.html","hash":"da4a9728ef7a386c525e8d97d814ce7ef590df7f","modified":1740643334739},{"_id":"public/elasticsearch/4.7-多语言及中文分词与检索/index.html","hash":"07090cfed01c96cd7ba645c5f80fff3533d5314a","modified":1740643334739},{"_id":"public/elasticsearch/4.6-单字符串多字段查询-Multi-Match/index.html","hash":"4766913d42417bc2d545cd3f69fe07fba5b19cf6","modified":1740643334739},{"_id":"public/elasticsearch/4.3-搜索的相关性算分/index.html","hash":"fbc242cb5a50859b014858b6d2d71764474737d8","modified":1740643334739},{"_id":"public/elasticsearch/4.4-Query&Filtering实现多字符串多字段查询/index.html","hash":"c0f6b487c61761cfbcfed87ea98fca0d35eac7da","modified":1740643334739},{"_id":"public/elasticsearch/4.5-单字符串多字段查询-DisMaxQuery/index.html","hash":"4f7596a361cb1cdef12f6585886db70d65c433bf","modified":1740643334739},{"_id":"public/elasticsearch/4.2-结构化搜索/index.html","hash":"e7d6ba50bbafc9aa36dbb6f11bf3b9a731c4dc2f","modified":1740643334739},{"_id":"public/elasticsearch/4.13-跨集群搜索/index.html","hash":"0d611a8ff626727b7d87fac75f82adf8ccf02af3","modified":1740643334739},{"_id":"public/elasticsearch/4.12-自动补全与基于上下文的提示/index.html","hash":"fe936bde2730fef3ed6cce829aee9181651e82e3","modified":1740643334739},{"_id":"public/elasticsearch/14.6-用Canvas做数据演示/index.html","hash":"7b58abdb20a65edb5eb6cb82b7ff6175611ec282","modified":1740643334739},{"_id":"public/elasticsearch/4.1-基于词项和基于全文的搜索/index.html","hash":"bd4081211602b491f62ef7a6aaaeb2107385dfda","modified":1740643334739},{"_id":"public/elasticsearch/4.10-综合排序：Function Score Query 优化算分/index.html","hash":"48e1ffafd5a3161e7069f258c2527460f2931755","modified":1740643334739},{"_id":"public/elasticsearch/14.5-用ELK进行日志管理/index.html","hash":"c16080d8e1d14127ca943d81fe690bcbbd24d054","modified":1740643334739},{"_id":"public/elasticsearch/14.3用机器学习实现时序数据的异常检测-上/index.html","hash":"e50127d143a8592a2742048d4813b8fd6a6e1da5","modified":1740643334739},{"_id":"public/elasticsearch/13.4-构建Dashboard/index.html","hash":"340e0d9dc2aab42eabbc0be215b5ec88488f08ef","modified":1740643334739},{"_id":"public/elasticsearch/13.3-基本可视化组件介绍/index.html","hash":"5fdb38593ccdaab17958f5fd64b692b4711338bd","modified":1740643334739},{"_id":"public/elasticsearch/13.2-使用KibanaDiscover探索数据/index.html","hash":"eeaeaf50a59c75957468b78d1cd9e79fa0a900b4","modified":1740643334739},{"_id":"public/elasticsearch/13.1-使用IndexPattern配置数据/index.html","hash":"8a1767396c762878ab948865dfd4945a2c63b5a0","modified":1740643334739},{"_id":"public/elasticsearch/12.3-Beats介绍/index.html","hash":"37e6a9d71a417e0a867a4f8e28016f9a76819bd6","modified":1740643334739},{"_id":"public/elasticsearch/11.2-索引全生命周期管理及工具介绍/index.html","hash":"f4240dc49c70feca4c32e0fd729686104a8b3bc6","modified":1740643334739},{"_id":"public/elasticsearch/12.2-利用JDBC插件导入数据到Elasticsearch/index.html","hash":"a8bb81914009a0b328bb3039f766a7a95408583b","modified":1740643334739},{"_id":"public/elasticsearch/12.1-Logstash入门及架构介绍/index.html","hash":"5c6874503a7e37c95e3c546cb133fab4b99b567d","modified":1740643334739},{"_id":"public/elasticsearch/11.1-使用Shrink与RolloverAPI有效管理时间序列索引/index.html","hash":"8e339fbeac3cd871a64a60d2a6cb550c6a81d365","modified":1740643334739},{"_id":"public/elasticsearch/10.9-缓存及使用Breaker限制内存使用/index.html","hash":"45e794fdb6c8745ee23a1888d273b13e8569661a","modified":1740643334739},{"_id":"public/elasticsearch/10.7-集群压力测试/index.html","hash":"867c17ce7e834e1c309c0b545d4fe6ab4aea0f19","modified":1740643334739},{"_id":"public/elasticsearch/10.6-提升集群读性能/index.html","hash":"f70fd4945e8dc1f703386ad02e616ea97e6ade6d","modified":1740643334739},{"_id":"public/elasticsearch/10.5-提升集群写性能/index.html","hash":"1e4a6fb11506c9f58253e3f02080be1640eba9e8","modified":1740643334739},{"_id":"public/elasticsearch/10.4-解决集群Yellow与Red的问题/index.html","hash":"783bca31bd1e655aaff8e189815da2a050e85683","modified":1740643334739},{"_id":"public/elasticsearch/10.3-诊断集群的潜在问题/index.html","hash":"58303eb3d49a45bc3a346e71f6b40e8e7a6a8114","modified":1740643334739},{"_id":"public/elasticsearch/10.2-监控Elasticsearch集群/index.html","hash":"5a28f3770d99c5c6946526c5f1cb36ed3dd3a66b","modified":1740643334739},{"_id":"public/elasticsearch/10.10-一些运维相关的建议/index.html","hash":"833b42079477bb790e0ee6c6ce719ae473ea2798","modified":1740643334739},{"_id":"public/elasticsearch/10.1-生产环境常用配置与上线清单/index.html","hash":"1e5d12d7b498226eddcc9d484380189590b22db2","modified":1740643334739},{"_id":"public/elasticsearch/es中基础搜索-查询优化-分布式架构-聚合分析-数据建模和最佳实践/index.html","hash":"8770e9919f5a1cae0e26f60afd6cc35fabacb69d","modified":1740643334739},{"_id":"public/elasticsearch/es常用命令/index.html","hash":"c0dba44f260c004c970f7db69f5702a490812e29","modified":1740643334739},{"_id":"public/elasticsearch/logstach安装和导入数据/index.html","hash":"802a8ec90193ec643481b82e58d910825c6ba190","modified":1740643334739},{"_id":"public/elasticsearch/在Docker容器中运行Elasticsearch-Kibana和Cerebro/index.html","hash":"8f66b3c714dd922b2ef856159d9033f35da0d66d","modified":1740643334739},{"_id":"public/page/4/index.html","hash":"dcfa492516a035dd6a71da49a8a65e80dafe9f3b","modified":1740643334739},{"_id":"public/page/5/index.html","hash":"0763f21bb1972f46e6af777819ee37d3602bc572","modified":1740643334739},{"_id":"public/page/6/index.html","hash":"a730ed81a176cb640d9d254d306266d45c50c232","modified":1740643334739},{"_id":"public/page/7/index.html","hash":"4e0adcb34eda000c74e2979535a0dd1a60a3c596","modified":1740643334739},{"_id":"public/page/8/index.html","hash":"4bef4a5322f736ee14ce02127b75725c4c0443ea","modified":1740643334739},{"_id":"public/page/9/index.html","hash":"c780f18401ac0701fbd91852a57e4c9d01cc4c27","modified":1740643334739},{"_id":"public/resource/logstash.conf","hash":"fe299068c6a2c1dacddec164ea613f9ffe70dac9","modified":1740643334739},{"_id":"source\\_posts\\elasticsearch\\es高级命令.md","hash":"c638551ae792519efbb61ced518bb61b058cf643","modified":1740645657367}],"Category":[{"name":"linux","_id":"cm7a4vg3e00048gjd06hy2h43"},{"name":"Java","_id":"cm7a4vg3h000a8gjd3voefj9i"},{"name":"clash","_id":"cm7a4vg3m000x8gjd72fv3rf5"},{"name":"redis","_id":"cm7a4vg3o00158gjd63c26pva"},{"name":"spring-boot","_id":"cm7a4vg3p001c8gjd06e2bmte"},{"name":"mysql","_id":"cm7a4vg3q001j8gjdhjcm7m4z"},{"name":"交易","_id":"cm7a4vg3u00258gjd73fqfv6b"},{"name":"分享","_id":"cm7a4vg3v00298gjd4qfxd6s7"},{"name":"计算机考试","_id":"cm7a4vg3v002d8gjd0nuw8psq"},{"name":"黑客","_id":"cm7a4vg3w002h8gjda7ds706c"},{"name":"docker","_id":"cm7e5cdy600011gjdb312c8y3"},{"name":"elasticsearch","_id":"cm7n1afai0004pojdcisq26g5"}],"Data":[],"Page":[{"title":"about","date":"2020-02-23T11:20:33.000Z","layout":"about","_content":"\n一刹牵着你 一瞬飞万里\n一秒心动过 一世不忘记\n\n一息间妳的吻幻化我的发肤\n一息间妳的爱让我找到转机\n\n成就这一躺生命旅程不舍不弃\n成就这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 跨越生死\n\n飞过千万里 天已经渐晚\n衰退的视觉 倒退的时间\n\n看不到 靠感觉亦会捉紧你手\n想不起你的脸 但我心跟着走\n\n延续这一躺生命旅程不舍不弃\n延续这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 让我守着妳\n\n忘掉这一切生命色相都认得妳\n能用心于记忆内搜索 感受妳\n明白我跟妳生命线已相连不死\n能在远方再生没了期又再一～起\n\n今世 因为妳来","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\n---\n\n一刹牵着你 一瞬飞万里\n一秒心动过 一世不忘记\n\n一息间妳的吻幻化我的发肤\n一息间妳的爱让我找到转机\n\n成就这一躺生命旅程不舍不弃\n成就这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 跨越生死\n\n飞过千万里 天已经渐晚\n衰退的视觉 倒退的时间\n\n看不到 靠感觉亦会捉紧你手\n想不起你的脸 但我心跟着走\n\n延续这一躺生命旅程不舍不弃\n延续这一个心愿准我跟着妳\n然后找一个境地跟妳相伴一起\n无惧这一切崩坏黑暗 让我守着妳\n\n忘掉这一切生命色相都认得妳\n能用心于记忆内搜索 感受妳\n明白我跟妳生命线已相连不死\n能在远方再生没了期又再一～起\n\n今世 因为妳来","updated":"2024-06-27T06:50:59.998Z","path":"about/index.html","comments":1,"_id":"cm7a4vg3a00008gjd6uk9hx2w","content":"<p>一刹牵着你 一瞬飞万里<br>一秒心动过 一世不忘记</p>\n<p>一息间妳的吻幻化我的发肤<br>一息间妳的爱让我找到转机</p>\n<p>成就这一躺生命旅程不舍不弃<br>成就这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 跨越生死</p>\n<p>飞过千万里 天已经渐晚<br>衰退的视觉 倒退的时间</p>\n<p>看不到 靠感觉亦会捉紧你手<br>想不起你的脸 但我心跟着走</p>\n<p>延续这一躺生命旅程不舍不弃<br>延续这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 让我守着妳</p>\n<p>忘掉这一切生命色相都认得妳<br>能用心于记忆内搜索 感受妳<br>明白我跟妳生命线已相连不死<br>能在远方再生没了期又再一～起</p>\n<p>今世 因为妳来</p>\n","excerpt":"","more":"<p>一刹牵着你 一瞬飞万里<br>一秒心动过 一世不忘记</p>\n<p>一息间妳的吻幻化我的发肤<br>一息间妳的爱让我找到转机</p>\n<p>成就这一躺生命旅程不舍不弃<br>成就这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 跨越生死</p>\n<p>飞过千万里 天已经渐晚<br>衰退的视觉 倒退的时间</p>\n<p>看不到 靠感觉亦会捉紧你手<br>想不起你的脸 但我心跟着走</p>\n<p>延续这一躺生命旅程不舍不弃<br>延续这一个心愿准我跟着妳<br>然后找一个境地跟妳相伴一起<br>无惧这一切崩坏黑暗 让我守着妳</p>\n<p>忘掉这一切生命色相都认得妳<br>能用心于记忆内搜索 感受妳<br>明白我跟妳生命线已相连不死<br>能在远方再生没了期又再一～起</p>\n<p>今世 因为妳来</p>\n"},{"title":"分类","date":"2025-02-18T06:19:20.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2025-02-18 14:19:20\ntype: categories\n---\n","updated":"2025-02-18T06:19:57.546Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm7a4vg3d00028gjda5xw5zmp","content":"","excerpt":"","more":""},{"title":"标签","date":"2025-02-18T06:21:40.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2025-02-18 14:21:40\ntype: tags\n---\n","updated":"2025-02-18T06:22:33.979Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm7a4vg3f00068gjdbn9yhtfa","content":"","excerpt":"","more":""}],"Post":[{"title":"docker修改应用为自动启动","date":"2024-07-23T06:39:38.000Z","_content":"是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 `docker update` 命令配置容器的重启策略。\n\n以下是如何使用 `docker update` 命令来配置现有的容器在系统启动时自动启动：\n\n```bash\ndocker update --restart unless-stopped <container_name_or_id>\n```\n\n例如，如果你的容器名为 `mysql-container`，你可以这样配置：\n\n```bash\ndocker update --restart unless-stopped mysql-container\n```\n\n这样配置后，当系统重启时，Docker 会根据 `unless-stopped` 策略自动重启该容器。以下是一些常用的重启策略：\n\n- `no`: 容器不会自动重启（默认值）。\n- `on-failure`: 仅当容器退出状态非零时才重启。\n- `always`: 无论退出状态如何，总是重启容器。\n- `unless-stopped`: 容器除非被手动停止，否则总是重启。\n\n### 示例\n\n以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：\n\n1. 启动一个 MySQL 容器：\n\n    ```bash\n    docker run -d \\\n        --name mysql-container \\\n        -e MYSQL_ROOT_PASSWORD=my-secret-pw \\\n        -v /my/own/datadir:/var/lib/mysql \\\n        mysql:latest\n    ```\n\n2. 配置容器的重启策略：\n\n    ```bash\n    docker update --restart unless-stopped mysql-container\n    ```\n\n### 检查容器重启策略\n\n你可以使用以下命令来检查容器的重启策略：\n\n```bash\ndocker inspect -f '{{ .HostConfig.RestartPolicy.Name }}' mysql-container\n```\n\n这将输出容器的当前重启策略。\n\n### 使用 Docker Compose\n\n如果你使用 Docker Compose，可以在 `docker-compose.yml` 文件中配置重启策略：\n\n```yaml\nversion: '3.8'\n\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql-container\n    environment:\n      MYSQL_ROOT_PASSWORD: my-secret-pw\n    volumes:\n      - /my/own/datadir:/var/lib/mysql\n    restart: unless-stopped\n```\n\n然后，使用以下命令启动容器：\n\n```bash\ndocker-compose up -d\n```\n\n### 总结\n\n通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 `docker run`、`docker update` 还是 `docker-compose`。","source":"_posts/linux/docker修改应用为自动启动.md","raw":"---\ntitle: docker修改应用为自动启动\ndate: 2024-07-23 14:39:38\ncategories: linux\ntag: docker\n---\n是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 `docker update` 命令配置容器的重启策略。\n\n以下是如何使用 `docker update` 命令来配置现有的容器在系统启动时自动启动：\n\n```bash\ndocker update --restart unless-stopped <container_name_or_id>\n```\n\n例如，如果你的容器名为 `mysql-container`，你可以这样配置：\n\n```bash\ndocker update --restart unless-stopped mysql-container\n```\n\n这样配置后，当系统重启时，Docker 会根据 `unless-stopped` 策略自动重启该容器。以下是一些常用的重启策略：\n\n- `no`: 容器不会自动重启（默认值）。\n- `on-failure`: 仅当容器退出状态非零时才重启。\n- `always`: 无论退出状态如何，总是重启容器。\n- `unless-stopped`: 容器除非被手动停止，否则总是重启。\n\n### 示例\n\n以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：\n\n1. 启动一个 MySQL 容器：\n\n    ```bash\n    docker run -d \\\n        --name mysql-container \\\n        -e MYSQL_ROOT_PASSWORD=my-secret-pw \\\n        -v /my/own/datadir:/var/lib/mysql \\\n        mysql:latest\n    ```\n\n2. 配置容器的重启策略：\n\n    ```bash\n    docker update --restart unless-stopped mysql-container\n    ```\n\n### 检查容器重启策略\n\n你可以使用以下命令来检查容器的重启策略：\n\n```bash\ndocker inspect -f '{{ .HostConfig.RestartPolicy.Name }}' mysql-container\n```\n\n这将输出容器的当前重启策略。\n\n### 使用 Docker Compose\n\n如果你使用 Docker Compose，可以在 `docker-compose.yml` 文件中配置重启策略：\n\n```yaml\nversion: '3.8'\n\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql-container\n    environment:\n      MYSQL_ROOT_PASSWORD: my-secret-pw\n    volumes:\n      - /my/own/datadir:/var/lib/mysql\n    restart: unless-stopped\n```\n\n然后，使用以下命令启动容器：\n\n```bash\ndocker-compose up -d\n```\n\n### 总结\n\n通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 `docker run`、`docker update` 还是 `docker-compose`。","slug":"linux/docker修改应用为自动启动","published":1,"updated":"2025-02-18T06:31:00.549Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3b00018gjda45v8l4v","content":"<p>是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 <code>docker update</code> 命令配置容器的重启策略。</p>\n<p>以下是如何使用 <code>docker update</code> 命令来配置现有的容器在系统启动时自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped &lt;container_name_or_id&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，如果你的容器名为 <code>mysql-container</code>，你可以这样配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这样配置后，当系统重启时，Docker 会根据 <code>unless-stopped</code> 策略自动重启该容器。以下是一些常用的重启策略：</p>\n<ul>\n<li><code>no</code>: 容器不会自动重启（默认值）。</li>\n<li><code>on-failure</code>: 仅当容器退出状态非零时才重启。</li>\n<li><code>always</code>: 无论退出状态如何，总是重启容器。</li>\n<li><code>unless-stopped</code>: 容器除非被手动停止，否则总是重启。</li>\n</ul>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：</p>\n<ol>\n<li><p>启动一个 MySQL 容器：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>    --name mysql-container \\<br>    -e MYSQL_ROOT_PASSWORD=my-secret-pw \\<br>    -v /my/own/datadir:/var/lib/mysql \\<br>    mysql:latest<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>配置容器的重启策略：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"检查容器重启策略\"><a href=\"#检查容器重启策略\" class=\"headerlink\" title=\"检查容器重启策略\"></a>检查容器重启策略</h3><p>你可以使用以下命令来检查容器的重启策略：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect -f <span class=\"hljs-string\">&#x27;&#123;&#123; .HostConfig.RestartPolicy.Name &#125;&#125;&#x27;</span> mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这将输出容器的当前重启策略。</p>\n<h3 id=\"使用-Docker-Compose\"><a href=\"#使用-Docker-Compose\" class=\"headerlink\" title=\"使用 Docker Compose\"></a>使用 Docker Compose</h3><p>如果你使用 Docker Compose，可以在 <code>docker-compose.yml</code> 文件中配置重启策略：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-container</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">my-secret-pw</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/my/own/datadir:/var/lib/mysql</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br></code></pre></td></tr></table></figure>\n\n<p>然后，使用以下命令启动容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 <code>docker run</code>、<code>docker update</code> 还是 <code>docker-compose</code>。</p>\n","excerpt":"","more":"<p>是的，Docker 提供了一种简单的方法来配置容器在系统启动时自动启动，这就是使用 <code>docker update</code> 命令配置容器的重启策略。</p>\n<p>以下是如何使用 <code>docker update</code> 命令来配置现有的容器在系统启动时自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped &lt;container_name_or_id&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，如果你的容器名为 <code>mysql-container</code>，你可以这样配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这样配置后，当系统重启时，Docker 会根据 <code>unless-stopped</code> 策略自动重启该容器。以下是一些常用的重启策略：</p>\n<ul>\n<li><code>no</code>: 容器不会自动重启（默认值）。</li>\n<li><code>on-failure</code>: 仅当容器退出状态非零时才重启。</li>\n<li><code>always</code>: 无论退出状态如何，总是重启容器。</li>\n<li><code>unless-stopped</code>: 容器除非被手动停止，否则总是重启。</li>\n</ul>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>以下是一个完整的示例，展示如何启动一个新的 MySQL 容器并配置其在系统重启时自动启动：</p>\n<ol>\n<li><p>启动一个 MySQL 容器：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>    --name mysql-container \\<br>    -e MYSQL_ROOT_PASSWORD=my-secret-pw \\<br>    -v /my/own/datadir:/var/lib/mysql \\<br>    mysql:latest<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>配置容器的重启策略：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart unless-stopped mysql-container<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"检查容器重启策略\"><a href=\"#检查容器重启策略\" class=\"headerlink\" title=\"检查容器重启策略\"></a>检查容器重启策略</h3><p>你可以使用以下命令来检查容器的重启策略：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect -f <span class=\"hljs-string\">&#x27;&#123;&#123; .HostConfig.RestartPolicy.Name &#125;&#125;&#x27;</span> mysql-container<br></code></pre></td></tr></table></figure>\n\n<p>这将输出容器的当前重启策略。</p>\n<h3 id=\"使用-Docker-Compose\"><a href=\"#使用-Docker-Compose\" class=\"headerlink\" title=\"使用 Docker Compose\"></a>使用 Docker Compose</h3><p>如果你使用 Docker Compose，可以在 <code>docker-compose.yml</code> 文件中配置重启策略：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.8&#x27;</span><br><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:latest</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-container</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">my-secret-pw</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/my/own/datadir:/var/lib/mysql</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span><br></code></pre></td></tr></table></figure>\n\n<p>然后，使用以下命令启动容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过上述方法，你可以轻松地配置 Docker 容器在系统重启时自动启动，无论是通过 <code>docker run</code>、<code>docker update</code> 还是 <code>docker-compose</code>。</p>\n"},{"title":"Application-toolkit-trace-cross-thread","date":"2024-09-11T07:14:06.000Z","_content":"# Trace Cross Thread\nThese APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.\nAll following are sample codes only to demonstrate how to adopt cross thread cases easier.\n\n* Case 1.\n```java\n    @TraceCrossThread\n    public static class MyCallable<String> implements Callable<String> {\n        @Override\n        public String call() throws Exception {\n            return null;\n        }\n    }\n...\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(new MyCallable());\n```\n* Case 2.\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(CallableWrapper.of(new Callable<String>() {\n        @Override public String call() throws Exception {\n            return null;\n        }\n    }));\n```\nor\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.execute(RunnableWrapper.of(new Runnable() {\n        @Override public void run() {\n            //your code\n        }\n    }));\n```\n* Case 3.\n```java\n    @TraceCrossThread\n    public class MySupplier<String> implements Supplier<String> {\n        @Override\n        public String get() {\n            return null;\n        }\n    }\n...\n    CompletableFuture.supplyAsync(new MySupplier<String>());\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(()->{\n            return \"SupplierWrapper\";\n    })).thenAccept(System.out::println);\n```\n* Case 4.\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenAcceptAsync(ConsumerWrapper.of(c -> {\n        // your code visit(url)\n        System.out.println(\"ConsumerWrapper\");\n    }));\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenApplyAsync(FunctionWrapper.of(f -> {\n        // your code visit(url)\n        return \"FunctionWrapper\";\n    }));\n```\n\n\n\n","source":"_posts/java/Application-toolkit-trace-cross-thread.md","raw":"---\ntitle: Application-toolkit-trace-cross-thread\ndate: 2024-09-11 15:14:06\ncategories: Java\ntag: 并发\n---\n# Trace Cross Thread\nThese APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.\nAll following are sample codes only to demonstrate how to adopt cross thread cases easier.\n\n* Case 1.\n```java\n    @TraceCrossThread\n    public static class MyCallable<String> implements Callable<String> {\n        @Override\n        public String call() throws Exception {\n            return null;\n        }\n    }\n...\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(new MyCallable());\n```\n* Case 2.\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.submit(CallableWrapper.of(new Callable<String>() {\n        @Override public String call() throws Exception {\n            return null;\n        }\n    }));\n```\nor\n```java\n    ExecutorService executorService = Executors.newFixedThreadPool(1);\n    executorService.execute(RunnableWrapper.of(new Runnable() {\n        @Override public void run() {\n            //your code\n        }\n    }));\n```\n* Case 3.\n```java\n    @TraceCrossThread\n    public class MySupplier<String> implements Supplier<String> {\n        @Override\n        public String get() {\n            return null;\n        }\n    }\n...\n    CompletableFuture.supplyAsync(new MySupplier<String>());\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(()->{\n            return \"SupplierWrapper\";\n    })).thenAccept(System.out::println);\n```\n* Case 4.\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenAcceptAsync(ConsumerWrapper.of(c -> {\n        // your code visit(url)\n        System.out.println(\"ConsumerWrapper\");\n    }));\n```\nor\n```java\n    CompletableFuture.supplyAsync(SupplierWrapper.of(() -> {\n        return \"SupplierWrapper\";\n    })).thenApplyAsync(FunctionWrapper.of(f -> {\n        // your code visit(url)\n        return \"FunctionWrapper\";\n    }));\n```\n\n\n\n","slug":"java/Application-toolkit-trace-cross-thread","published":1,"updated":"2025-02-18T06:31:00.542Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3d00038gjddnru1t6w","content":"<h1 id=\"Trace-Cross-Thread\"><a href=\"#Trace-Cross-Thread\" class=\"headerlink\" title=\"Trace Cross Thread\"></a>Trace Cross Thread</h1><p>These APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.<br>All following are sample codes only to demonstrate how to adopt cross thread cases easier.</p>\n<ul>\n<li>Case 1.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyCallable</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    <span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>    executorService.submit(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MyCallable</span>());<br></code></pre></td></tr></table></figure></li>\n<li>Case 2.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.submit(CallableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt;() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.execute(RunnableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Runnable</span>() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">run</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">//your code</span><br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n<li>Case 3.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Supplier</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">get</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    CompletableFuture.supplyAsync(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt;());<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(()-&gt;&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAccept(System.out::println);<br></code></pre></td></tr></table></figure></li>\n<li>Case 4.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAcceptAsync(ConsumerWrapper.of(c -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    System.out.println(<span class=\"hljs-string\">&quot;ConsumerWrapper&quot;</span>);<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenApplyAsync(FunctionWrapper.of(f -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;FunctionWrapper&quot;</span>;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Trace-Cross-Thread\"><a href=\"#Trace-Cross-Thread\" class=\"headerlink\" title=\"Trace Cross Thread\"></a>Trace Cross Thread</h1><p>These APIs provide ways to continuous tracing in the cross thread scenario with minimal code changes.<br>All following are sample codes only to demonstrate how to adopt cross thread cases easier.</p>\n<ul>\n<li>Case 1.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyCallable</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    <span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>    executorService.submit(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MyCallable</span>());<br></code></pre></td></tr></table></figure></li>\n<li>Case 2.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.submit(CallableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Callable</span>&lt;String&gt;() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">call</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">ExecutorService</span> <span class=\"hljs-variable\">executorService</span> <span class=\"hljs-operator\">=</span> Executors.newFixedThreadPool(<span class=\"hljs-number\">1</span>);<br>executorService.execute(RunnableWrapper.of(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Runnable</span>() &#123;<br>    <span class=\"hljs-meta\">@Override</span> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">run</span><span class=\"hljs-params\">()</span> &#123;<br>        <span class=\"hljs-comment\">//your code</span><br>    &#125;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n<li>Case 3.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">    <span class=\"hljs-meta\">@TraceCrossThread</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt; <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Supplier</span>&lt;String&gt; &#123;<br>        <span class=\"hljs-meta\">@Override</span><br>        <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">get</span><span class=\"hljs-params\">()</span> &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>...<br>    CompletableFuture.supplyAsync(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MySupplier</span>&lt;String&gt;());<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(()-&gt;&#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAccept(System.out::println);<br></code></pre></td></tr></table></figure></li>\n<li>Case 4.<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenAcceptAsync(ConsumerWrapper.of(c -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    System.out.println(<span class=\"hljs-string\">&quot;ConsumerWrapper&quot;</span>);<br>&#125;));<br></code></pre></td></tr></table></figure>\nor<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">CompletableFuture.supplyAsync(SupplierWrapper.of(() -&gt; &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;SupplierWrapper&quot;</span>;<br>&#125;)).thenApplyAsync(FunctionWrapper.of(f -&gt; &#123;<br>    <span class=\"hljs-comment\">// your code visit(url)</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;FunctionWrapper&quot;</span>;<br>&#125;));<br></code></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"github 将远程仓库更新到自己的仓库中","date":"2024-08-13T08:30:29.000Z","_content":"要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：\n\n1. **添加远程仓库**（如果还没有添加远程仓库）：\n    ```bash\n    git remote add upstream <远程仓库的URL>\n    ```\n   例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，`upstream` 就是你需要添加的远程仓库。\n\n2. **获取远程仓库的更新**：\n    ```bash\n    git fetch upstream\n    ```\n   这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。\n\n3. **将远程仓库的更新合并到你的分支**：\n    - 如果你在 `main` 分支上，并希望将 `upstream/main` 的更新合并到本地的 `main` 分支：\n        ```bash\n        git checkout main\n        git merge upstream/main\n        ```\n   这会将远程 `main` 分支的更新合并到你本地的 `main` 分支中。\n\n4. **处理可能的冲突**：\n    - 如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：\n        ```bash\n        git add <解决冲突的文件>\n        git commit -m \"Resolved merge conflicts\"\n        ```\n\n5. **将更新推送到你自己的远程仓库**（如果需要）：\n    ```bash\n    git push origin main\n    ```\n   这会将你本地 `main` 分支的更新推送到你自己的GitHub仓库中。\n\n通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。","source":"_posts/linux/github-将远程仓库更新到自己的仓库中.md","raw":"---\ntitle: github 将远程仓库更新到自己的仓库中\ndate: 2024-08-13 16:30:29\ncategories: linux\ntag: git\n---\n要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：\n\n1. **添加远程仓库**（如果还没有添加远程仓库）：\n    ```bash\n    git remote add upstream <远程仓库的URL>\n    ```\n   例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，`upstream` 就是你需要添加的远程仓库。\n\n2. **获取远程仓库的更新**：\n    ```bash\n    git fetch upstream\n    ```\n   这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。\n\n3. **将远程仓库的更新合并到你的分支**：\n    - 如果你在 `main` 分支上，并希望将 `upstream/main` 的更新合并到本地的 `main` 分支：\n        ```bash\n        git checkout main\n        git merge upstream/main\n        ```\n   这会将远程 `main` 分支的更新合并到你本地的 `main` 分支中。\n\n4. **处理可能的冲突**：\n    - 如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：\n        ```bash\n        git add <解决冲突的文件>\n        git commit -m \"Resolved merge conflicts\"\n        ```\n\n5. **将更新推送到你自己的远程仓库**（如果需要）：\n    ```bash\n    git push origin main\n    ```\n   这会将你本地 `main` 分支的更新推送到你自己的GitHub仓库中。\n\n通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。","slug":"linux/github-将远程仓库更新到自己的仓库中","published":1,"updated":"2025-02-18T06:31:00.556Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3g00078gjd1f662wrg","content":"<p>要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：</p>\n<ol>\n<li><p><strong>添加远程仓库</strong>（如果还没有添加远程仓库）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git remote add upstream &lt;远程仓库的URL&gt;<br></code></pre></td></tr></table></figure>\n<p>例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，<code>upstream</code> 就是你需要添加的远程仓库。</p>\n</li>\n<li><p><strong>获取远程仓库的更新</strong>：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git fetch upstream<br></code></pre></td></tr></table></figure>\n<p>这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。</p>\n</li>\n<li><p><strong>将远程仓库的更新合并到你的分支</strong>：</p>\n<ul>\n<li>如果你在 <code>main</code> 分支上，并希望将 <code>upstream/main</code> 的更新合并到本地的 <code>main</code> 分支：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git checkout main<br>git merge upstream/main<br></code></pre></td></tr></table></figure>\n这会将远程 <code>main</code> 分支的更新合并到你本地的 <code>main</code> 分支中。</li>\n</ul>\n</li>\n<li><p><strong>处理可能的冲突</strong>：</p>\n<ul>\n<li>如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git add &lt;解决冲突的文件&gt;<br>git commit -m <span class=\"hljs-string\">&quot;Resolved merge conflicts&quot;</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>将更新推送到你自己的远程仓库</strong>（如果需要）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git push origin main<br></code></pre></td></tr></table></figure>\n<p>这会将你本地 <code>main</code> 分支的更新推送到你自己的GitHub仓库中。</p>\n</li>\n</ol>\n<p>通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。</p>\n","excerpt":"","more":"<p>要将远程仓库的更新同步到你本地的Git仓库中，可以按照以下步骤进行：</p>\n<ol>\n<li><p><strong>添加远程仓库</strong>（如果还没有添加远程仓库）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git remote add upstream &lt;远程仓库的URL&gt;<br></code></pre></td></tr></table></figure>\n<p>例如，如果你想将GitHub上原始项目的更新同步到你自己的分支，<code>upstream</code> 就是你需要添加的远程仓库。</p>\n</li>\n<li><p><strong>获取远程仓库的更新</strong>：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git fetch upstream<br></code></pre></td></tr></table></figure>\n<p>这将从远程仓库获取所有更新内容，但不会自动合并到你的分支中。</p>\n</li>\n<li><p><strong>将远程仓库的更新合并到你的分支</strong>：</p>\n<ul>\n<li>如果你在 <code>main</code> 分支上，并希望将 <code>upstream/main</code> 的更新合并到本地的 <code>main</code> 分支：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git checkout main<br>git merge upstream/main<br></code></pre></td></tr></table></figure>\n这会将远程 <code>main</code> 分支的更新合并到你本地的 <code>main</code> 分支中。</li>\n</ul>\n</li>\n<li><p><strong>处理可能的冲突</strong>：</p>\n<ul>\n<li>如果在合并时发生冲突，Git 会提示你手动解决冲突。你需要编辑冲突的文件，解决冲突后，运行以下命令：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git add &lt;解决冲突的文件&gt;<br>git commit -m <span class=\"hljs-string\">&quot;Resolved merge conflicts&quot;</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>将更新推送到你自己的远程仓库</strong>（如果需要）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git push origin main<br></code></pre></td></tr></table></figure>\n<p>这会将你本地 <code>main</code> 分支的更新推送到你自己的GitHub仓库中。</p>\n</li>\n</ol>\n<p>通过这些步骤，你就可以将远程仓库的更新同步到你的本地仓库，并且可以根据需要将这些更新推送到你自己的远程仓库中。</p>\n"},{"title":"linux下实现钉钉告警","date":"2024-07-23T03:45:38.000Z","_content":"\n在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。\n需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。\n\n以下是实现此功能的步骤：\n\n1. **创建钉钉机器人并获取Webhook URL：**\n    - 登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。\n    \n2. **编写Shell脚本：**\n    - 编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。\n    \n3. **配置定时任务（cron）：**\n    - 将脚本配置为定时任务，定期检查系统资源的使用情况。\n\n### 1. 创建钉钉机器人并获取Webhook URL\n\n在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。\n- 例如：https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\n\n### 2. 编写Shell脚本\n\n下面是一个示例Shell脚本`monitor.sh`：\n\n```sh\n#!/bin/bash\n\n# 获取cpu使用率\nfunction get_cpu_usage(){\n    echo $(top -bn1 | grep \"Cpu(s)\" | awk '{print 100 - $8}' | awk '{printf \"%.2f\", $1}')\n}\n\n# 获取磁盘使用率\ndata_name=\"/\" \ndiskUsage=$(df -h | grep -w $data_name | awk '{print $5}' | sed 's/%//')\n\n# 获取内存情况\nmem_total=$(free -m | awk 'NR==2 {print $2}')\nmem_used=$(free -m | awk 'NR==2 {print $3}')\n\n# 统计内存使用率\nmem_used_percent=$(echo \"scale=2; ($mem_used / $mem_total) * 100\" | bc)\n\n# 获取报警时间\nnow_time=$(date '+%F %T')\n\nuser=\"18857415467\"\n\n# 主机信息\nDate_time=$(date \"+%Y-%m-%d--%H:%M:%S\")\nIP_addr=$(hostname -I | awk '{print $1}')\n\n# webhook url\nDingding_Url=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\"\n\nfunction SendDownMessageToDingding(){\n    # 发送钉钉消息\n    curl -s \"${Dingding_Url}\" -H 'Content-Type: application/json' -d \"\n    {\n     'msgtype': 'text',\n     'text': {'content': '资源耗尽警告！\\n巡查时间：${Date_time}\\nIP地址：${IP_addr}\\n资源状况如下:\\n【CPU使用率：${cpuUsage}%】\\n【磁盘使用率：${diskUsage}%】\\n【内存使用率：${mem_used_percent}%】'},\n     'at': {'atMobiles': ['${user}'], 'isAtAll': true}\n      }\"\n}\n\nfunction check(){\n    cpuUsage=$(get_cpu_usage)\n    if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n        echo \"检测到CPU使用率高于90%，开始1分钟监控...\"\n        high_cpu_duration=0\n        for ((i=0; i<60; i++)); do\n            sleep 1\n            cpuUsage=$(get_cpu_usage)\n            if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n                ((high_cpu_duration++))\n            else\n                high_cpu_duration=0\n            fi\n\n            if (( high_cpu_duration >= 60 )); then\n                echo \"CPU使用率持续高于90%超过1分钟，发送警报...\"\n                SendDownMessageToDingding\n                break\n            fi\n        done\n    fi\n\n    if (( $(echo \"$diskUsage > 80\" | bc -l) )) || (( $(echo \"$mem_used_percent > 80\" | bc -l) )); then\n        SendDownMessageToDingding\n    fi\n}\n\ncheck\n\n```\n\n将`073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5`替换为你从钉钉获取的Webhook URL的token。\n\n### 3. 配置定时任务（cron）\n\n通过cron定期运行这个脚本。首先，编辑cron配置：\n\n```sh\ncrontab -e\n```\n\n然后添加以下内容以每分钟运行一次脚本：\n\n```sh\n* * * * * /path/to/monitor.sh\n```\n\n确保脚本`monitor.sh`有执行权限：\n\n```sh\nchmod +x /path/to/monitor.sh\n```\n\n### 总结\n\n上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。","source":"_posts/linux/linux下实现钉钉告警.md","raw":"---\ntitle: linux下实现钉钉告警\ndate: 2024-07-23 11:45:38\ncategories: linux\ntag: 报警\n---\n\n在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。\n需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。\n\n以下是实现此功能的步骤：\n\n1. **创建钉钉机器人并获取Webhook URL：**\n    - 登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。\n    \n2. **编写Shell脚本：**\n    - 编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。\n    \n3. **配置定时任务（cron）：**\n    - 将脚本配置为定时任务，定期检查系统资源的使用情况。\n\n### 1. 创建钉钉机器人并获取Webhook URL\n\n在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。\n- 例如：https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\n\n### 2. 编写Shell脚本\n\n下面是一个示例Shell脚本`monitor.sh`：\n\n```sh\n#!/bin/bash\n\n# 获取cpu使用率\nfunction get_cpu_usage(){\n    echo $(top -bn1 | grep \"Cpu(s)\" | awk '{print 100 - $8}' | awk '{printf \"%.2f\", $1}')\n}\n\n# 获取磁盘使用率\ndata_name=\"/\" \ndiskUsage=$(df -h | grep -w $data_name | awk '{print $5}' | sed 's/%//')\n\n# 获取内存情况\nmem_total=$(free -m | awk 'NR==2 {print $2}')\nmem_used=$(free -m | awk 'NR==2 {print $3}')\n\n# 统计内存使用率\nmem_used_percent=$(echo \"scale=2; ($mem_used / $mem_total) * 100\" | bc)\n\n# 获取报警时间\nnow_time=$(date '+%F %T')\n\nuser=\"18857415467\"\n\n# 主机信息\nDate_time=$(date \"+%Y-%m-%d--%H:%M:%S\")\nIP_addr=$(hostname -I | awk '{print $1}')\n\n# webhook url\nDingding_Url=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\"\n\nfunction SendDownMessageToDingding(){\n    # 发送钉钉消息\n    curl -s \"${Dingding_Url}\" -H 'Content-Type: application/json' -d \"\n    {\n     'msgtype': 'text',\n     'text': {'content': '资源耗尽警告！\\n巡查时间：${Date_time}\\nIP地址：${IP_addr}\\n资源状况如下:\\n【CPU使用率：${cpuUsage}%】\\n【磁盘使用率：${diskUsage}%】\\n【内存使用率：${mem_used_percent}%】'},\n     'at': {'atMobiles': ['${user}'], 'isAtAll': true}\n      }\"\n}\n\nfunction check(){\n    cpuUsage=$(get_cpu_usage)\n    if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n        echo \"检测到CPU使用率高于90%，开始1分钟监控...\"\n        high_cpu_duration=0\n        for ((i=0; i<60; i++)); do\n            sleep 1\n            cpuUsage=$(get_cpu_usage)\n            if (( $(echo \"$cpuUsage > 90\" | bc -l) )); then\n                ((high_cpu_duration++))\n            else\n                high_cpu_duration=0\n            fi\n\n            if (( high_cpu_duration >= 60 )); then\n                echo \"CPU使用率持续高于90%超过1分钟，发送警报...\"\n                SendDownMessageToDingding\n                break\n            fi\n        done\n    fi\n\n    if (( $(echo \"$diskUsage > 80\" | bc -l) )) || (( $(echo \"$mem_used_percent > 80\" | bc -l) )); then\n        SendDownMessageToDingding\n    fi\n}\n\ncheck\n\n```\n\n将`073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5`替换为你从钉钉获取的Webhook URL的token。\n\n### 3. 配置定时任务（cron）\n\n通过cron定期运行这个脚本。首先，编辑cron配置：\n\n```sh\ncrontab -e\n```\n\n然后添加以下内容以每分钟运行一次脚本：\n\n```sh\n* * * * * /path/to/monitor.sh\n```\n\n确保脚本`monitor.sh`有执行权限：\n\n```sh\nchmod +x /path/to/monitor.sh\n```\n\n### 总结\n\n上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。","slug":"linux/linux下实现钉钉告警","published":1,"updated":"2025-02-18T06:31:00.569Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3g00088gjd2gtf1mly","content":"<p>在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。<br>需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。</p>\n<p>以下是实现此功能的步骤：</p>\n<ol>\n<li><p><strong>创建钉钉机器人并获取Webhook URL：</strong></p>\n<ul>\n<li>登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。</li>\n</ul>\n</li>\n<li><p><strong>编写Shell脚本：</strong></p>\n<ul>\n<li>编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。</li>\n</ul>\n</li>\n<li><p><strong>配置定时任务（cron）：</strong></p>\n<ul>\n<li>将脚本配置为定时任务，定期检查系统资源的使用情况。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-创建钉钉机器人并获取Webhook-URL\"><a href=\"#1-创建钉钉机器人并获取Webhook-URL\" class=\"headerlink\" title=\"1. 创建钉钉机器人并获取Webhook URL\"></a>1. 创建钉钉机器人并获取Webhook URL</h3><p>在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。</p>\n<ul>\n<li>例如：<a href=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\">https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</a></li>\n</ul>\n<h3 id=\"2-编写Shell脚本\"><a href=\"#2-编写Shell脚本\" class=\"headerlink\" title=\"2. 编写Shell脚本\"></a>2. 编写Shell脚本</h3><p>下面是一个示例Shell脚本<code>monitor.sh</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 获取cpu使用率</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">get_cpu_usage</span></span>()&#123;<br>    <span class=\"hljs-built_in\">echo</span> $(top -bn1 | grep <span class=\"hljs-string\">&quot;Cpu(s)&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print 100 - $8&#125;&#x27;</span> | awk <span class=\"hljs-string\">&#x27;&#123;printf &quot;%.2f&quot;, $1&#125;&#x27;</span>)<br>&#125;<br><br><span class=\"hljs-comment\"># 获取磁盘使用率</span><br>data_name=<span class=\"hljs-string\">&quot;/&quot;</span> <br>diskUsage=$(<span class=\"hljs-built_in\">df</span> -h | grep -w <span class=\"hljs-variable\">$data_name</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $5&#125;&#x27;</span> | sed <span class=\"hljs-string\">&#x27;s/%//&#x27;</span>)<br><br><span class=\"hljs-comment\"># 获取内存情况</span><br>mem_total=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $2&#125;&#x27;</span>)<br>mem_used=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $3&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># 统计内存使用率</span><br>mem_used_percent=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;scale=2; (<span class=\"hljs-variable\">$mem_used</span> / <span class=\"hljs-variable\">$mem_total</span>) * 100&quot;</span> | bc)<br><br><span class=\"hljs-comment\"># 获取报警时间</span><br>now_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&#x27;+%F %T&#x27;</span>)<br><br>user=<span class=\"hljs-string\">&quot;18857415467&quot;</span><br><br><span class=\"hljs-comment\"># 主机信息</span><br>Date_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&quot;+%Y-%m-%d--%H:%M:%S&quot;</span>)<br>IP_addr=$(hostname -I | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># webhook url</span><br>Dingding_Url=<span class=\"hljs-string\">&quot;https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5&quot;</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">SendDownMessageToDingding</span></span>()&#123;<br>    <span class=\"hljs-comment\"># 发送钉钉消息</span><br>    curl -s <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;Dingding_Url&#125;</span>&quot;</span> -H <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> -d <span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">    &#123;</span><br><span class=\"hljs-string\">     &#x27;msgtype&#x27;: &#x27;text&#x27;,</span><br><span class=\"hljs-string\">     &#x27;text&#x27;: &#123;&#x27;content&#x27;: &#x27;资源耗尽警告！\\n巡查时间：<span class=\"hljs-variable\">$&#123;Date_time&#125;</span>\\nIP地址：<span class=\"hljs-variable\">$&#123;IP_addr&#125;</span>\\n资源状况如下:\\n【CPU使用率：<span class=\"hljs-variable\">$&#123;cpuUsage&#125;</span>%】\\n【磁盘使用率：<span class=\"hljs-variable\">$&#123;diskUsage&#125;</span>%】\\n【内存使用率：<span class=\"hljs-variable\">$&#123;mem_used_percent&#125;</span>%】&#x27;&#125;,</span><br><span class=\"hljs-string\">     &#x27;at&#x27;: &#123;&#x27;atMobiles&#x27;: [&#x27;<span class=\"hljs-variable\">$&#123;user&#125;</span>&#x27;], &#x27;isAtAll&#x27;: true&#125;</span><br><span class=\"hljs-string\">      &#125;&quot;</span><br>&#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">check</span></span>()&#123;<br>    cpuUsage=$(get_cpu_usage)<br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;检测到CPU使用率高于90%，开始1分钟监控...&quot;</span><br>        high_cpu_duration=0<br>        <span class=\"hljs-keyword\">for</span> ((i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">60</span>; i++)); <span class=\"hljs-keyword\">do</span><br>            <span class=\"hljs-built_in\">sleep</span> 1<br>            cpuUsage=$(get_cpu_usage)<br>            <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>                ((high_cpu_duration++))<br>            <span class=\"hljs-keyword\">else</span><br>                high_cpu_duration=0<br>            <span class=\"hljs-keyword\">fi</span><br><br>            <span class=\"hljs-keyword\">if</span> (( high_cpu_duration &gt;= <span class=\"hljs-number\">60</span> )); <span class=\"hljs-keyword\">then</span><br>                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;CPU使用率持续高于90%超过1分钟，发送警报...&quot;</span><br>                SendDownMessageToDingding<br>                <span class=\"hljs-built_in\">break</span><br>            <span class=\"hljs-keyword\">fi</span><br>        <span class=\"hljs-keyword\">done</span><br>    <span class=\"hljs-keyword\">fi</span><br><br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$diskUsage</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )) || (( $(echo &quot;<span class=\"hljs-variable\">$mem_used_percent</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        SendDownMessageToDingding<br>    <span class=\"hljs-keyword\">fi</span><br>&#125;<br><br>check<br><br></code></pre></td></tr></table></figure>\n\n<p>将<code>073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</code>替换为你从钉钉获取的Webhook URL的token。</p>\n<h3 id=\"3-配置定时任务（cron）\"><a href=\"#3-配置定时任务（cron）\" class=\"headerlink\" title=\"3. 配置定时任务（cron）\"></a>3. 配置定时任务（cron）</h3><p>通过cron定期运行这个脚本。首先，编辑cron配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">crontab -e<br></code></pre></td></tr></table></figure>\n\n<p>然后添加以下内容以每分钟运行一次脚本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">* * * * * /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<p>确保脚本<code>monitor.sh</code>有执行权限：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> +x /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。</p>\n","excerpt":"","more":"<p>在Linux系统中，可以使用Shell脚本和定时任务（cron）来监控CPU、内存和硬盘使用情况，当超过指定阈值时发送告警。为了发送钉钉告警，需要用到钉钉的自定义机器人接口。<br>需要注意的是，本教程的机器是12核心。因此需要得到12核心的最高cpu使用率后取最大值。</p>\n<p>以下是实现此功能的步骤：</p>\n<ol>\n<li><p><strong>创建钉钉机器人并获取Webhook URL：</strong></p>\n<ul>\n<li>登录钉钉，创建自定义机器人并获取Webhook URL，用于发送告警信息。</li>\n</ul>\n</li>\n<li><p><strong>编写Shell脚本：</strong></p>\n<ul>\n<li>编写一个Shell脚本来检查系统资源的使用情况，并在超过阈值时发送钉钉告警。</li>\n</ul>\n</li>\n<li><p><strong>配置定时任务（cron）：</strong></p>\n<ul>\n<li>将脚本配置为定时任务，定期检查系统资源的使用情况。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-创建钉钉机器人并获取Webhook-URL\"><a href=\"#1-创建钉钉机器人并获取Webhook-URL\" class=\"headerlink\" title=\"1. 创建钉钉机器人并获取Webhook URL\"></a>1. 创建钉钉机器人并获取Webhook URL</h3><p>在钉钉中创建自定义机器人，记录下Webhook URL，这将在脚本中用于发送告警。</p>\n<ul>\n<li>例如：<a href=\"https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5\">https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</a></li>\n</ul>\n<h3 id=\"2-编写Shell脚本\"><a href=\"#2-编写Shell脚本\" class=\"headerlink\" title=\"2. 编写Shell脚本\"></a>2. 编写Shell脚本</h3><p>下面是一个示例Shell脚本<code>monitor.sh</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 获取cpu使用率</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">get_cpu_usage</span></span>()&#123;<br>    <span class=\"hljs-built_in\">echo</span> $(top -bn1 | grep <span class=\"hljs-string\">&quot;Cpu(s)&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print 100 - $8&#125;&#x27;</span> | awk <span class=\"hljs-string\">&#x27;&#123;printf &quot;%.2f&quot;, $1&#125;&#x27;</span>)<br>&#125;<br><br><span class=\"hljs-comment\"># 获取磁盘使用率</span><br>data_name=<span class=\"hljs-string\">&quot;/&quot;</span> <br>diskUsage=$(<span class=\"hljs-built_in\">df</span> -h | grep -w <span class=\"hljs-variable\">$data_name</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $5&#125;&#x27;</span> | sed <span class=\"hljs-string\">&#x27;s/%//&#x27;</span>)<br><br><span class=\"hljs-comment\"># 获取内存情况</span><br>mem_total=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $2&#125;&#x27;</span>)<br>mem_used=$(free -m | awk <span class=\"hljs-string\">&#x27;NR==2 &#123;print $3&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># 统计内存使用率</span><br>mem_used_percent=$(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;scale=2; (<span class=\"hljs-variable\">$mem_used</span> / <span class=\"hljs-variable\">$mem_total</span>) * 100&quot;</span> | bc)<br><br><span class=\"hljs-comment\"># 获取报警时间</span><br>now_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&#x27;+%F %T&#x27;</span>)<br><br>user=<span class=\"hljs-string\">&quot;18857415467&quot;</span><br><br><span class=\"hljs-comment\"># 主机信息</span><br>Date_time=$(<span class=\"hljs-built_in\">date</span> <span class=\"hljs-string\">&quot;+%Y-%m-%d--%H:%M:%S&quot;</span>)<br>IP_addr=$(hostname -I | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class=\"hljs-comment\"># webhook url</span><br>Dingding_Url=<span class=\"hljs-string\">&quot;https://oapi.dingtalk.com/robot/send?access_token=073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5&quot;</span><br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">SendDownMessageToDingding</span></span>()&#123;<br>    <span class=\"hljs-comment\"># 发送钉钉消息</span><br>    curl -s <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;Dingding_Url&#125;</span>&quot;</span> -H <span class=\"hljs-string\">&#x27;Content-Type: application/json&#x27;</span> -d <span class=\"hljs-string\">&quot;</span><br><span class=\"hljs-string\">    &#123;</span><br><span class=\"hljs-string\">     &#x27;msgtype&#x27;: &#x27;text&#x27;,</span><br><span class=\"hljs-string\">     &#x27;text&#x27;: &#123;&#x27;content&#x27;: &#x27;资源耗尽警告！\\n巡查时间：<span class=\"hljs-variable\">$&#123;Date_time&#125;</span>\\nIP地址：<span class=\"hljs-variable\">$&#123;IP_addr&#125;</span>\\n资源状况如下:\\n【CPU使用率：<span class=\"hljs-variable\">$&#123;cpuUsage&#125;</span>%】\\n【磁盘使用率：<span class=\"hljs-variable\">$&#123;diskUsage&#125;</span>%】\\n【内存使用率：<span class=\"hljs-variable\">$&#123;mem_used_percent&#125;</span>%】&#x27;&#125;,</span><br><span class=\"hljs-string\">     &#x27;at&#x27;: &#123;&#x27;atMobiles&#x27;: [&#x27;<span class=\"hljs-variable\">$&#123;user&#125;</span>&#x27;], &#x27;isAtAll&#x27;: true&#125;</span><br><span class=\"hljs-string\">      &#125;&quot;</span><br>&#125;<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-function\"><span class=\"hljs-title\">check</span></span>()&#123;<br>    cpuUsage=$(get_cpu_usage)<br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;检测到CPU使用率高于90%，开始1分钟监控...&quot;</span><br>        high_cpu_duration=0<br>        <span class=\"hljs-keyword\">for</span> ((i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">60</span>; i++)); <span class=\"hljs-keyword\">do</span><br>            <span class=\"hljs-built_in\">sleep</span> 1<br>            cpuUsage=$(get_cpu_usage)<br>            <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$cpuUsage</span> &gt; <span class=\"hljs-number\">90</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>                ((high_cpu_duration++))<br>            <span class=\"hljs-keyword\">else</span><br>                high_cpu_duration=0<br>            <span class=\"hljs-keyword\">fi</span><br><br>            <span class=\"hljs-keyword\">if</span> (( high_cpu_duration &gt;= <span class=\"hljs-number\">60</span> )); <span class=\"hljs-keyword\">then</span><br>                <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;CPU使用率持续高于90%超过1分钟，发送警报...&quot;</span><br>                SendDownMessageToDingding<br>                <span class=\"hljs-built_in\">break</span><br>            <span class=\"hljs-keyword\">fi</span><br>        <span class=\"hljs-keyword\">done</span><br>    <span class=\"hljs-keyword\">fi</span><br><br>    <span class=\"hljs-keyword\">if</span> (( $(echo &quot;<span class=\"hljs-variable\">$diskUsage</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )) || (( $(echo &quot;<span class=\"hljs-variable\">$mem_used_percent</span> &gt; <span class=\"hljs-number\">80</span>&quot; | bc -l) )); <span class=\"hljs-keyword\">then</span><br>        SendDownMessageToDingding<br>    <span class=\"hljs-keyword\">fi</span><br>&#125;<br><br>check<br><br></code></pre></td></tr></table></figure>\n\n<p>将<code>073d84ae5a2f83494c9271e0e1683603130b19e77620a836e3682a62ffd1a8f5</code>替换为你从钉钉获取的Webhook URL的token。</p>\n<h3 id=\"3-配置定时任务（cron）\"><a href=\"#3-配置定时任务（cron）\" class=\"headerlink\" title=\"3. 配置定时任务（cron）\"></a>3. 配置定时任务（cron）</h3><p>通过cron定期运行这个脚本。首先，编辑cron配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">crontab -e<br></code></pre></td></tr></table></figure>\n\n<p>然后添加以下内容以每分钟运行一次脚本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">* * * * * /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<p>确保脚本<code>monitor.sh</code>有执行权限：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> +x /path/to/monitor.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>上述脚本和cron配置将监控CPU、内存和硬盘使用情况，并在超过设定的阈值时通过钉钉发送告警消息。你可以根据实际需求调整脚本的执行频率和告警阈值。</p>\n"},{"title":"linux下通过端口找到进程","date":"2024-08-09T06:48:30.000Z","_content":"在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：\n\n### 1. 使用 `lsof` 命令\n`lsof` 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。\n\n```bash\nlsof -i :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nlsof -i :80\n```\n\n### 2. 使用 `netstat` 命令\n`netstat` 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。\n\n```bash\nnetstat -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nnetstat -tuln | grep :80\n```\n\n结合 `netstat` 和 `grep` 命令，还可以找到对应的PID：\n```bash\nnetstat -tulnp | grep :<端口号>\n```\n\n### 3. 使用 `ss` 命令\n`ss` 是 `netstat` 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。\n\n```bash\nss -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nss -tuln | grep :80\n```\n\n### 4. 使用 `fuser` 命令\n`fuser` 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。\n\n```bash\nfuser <端口号>/tcp\n```\n\n例如，查找占用80端口的进程：\n```bash\nfuser 80/tcp\n```\n\n### 5. 查看详细的进程信息\n一旦获得了PID，可以使用 `ps` 命令来查看进程的详细信息。\n\n```bash\nps -p <PID> -o pid,cmd\n```\n\n例如：\n```bash\nps -p 1234 -o pid,cmd\n```\n\n这将显示PID为1234的进程的命令行。\n\n通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。","source":"_posts/linux/linux下通过端口找到进程.md","raw":"---\ntitle: linux下通过端口找到进程\ndate: 2024-08-09 14:48:30\ncategories: linux\ntag: 查找进程\n---\n在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：\n\n### 1. 使用 `lsof` 命令\n`lsof` 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。\n\n```bash\nlsof -i :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nlsof -i :80\n```\n\n### 2. 使用 `netstat` 命令\n`netstat` 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。\n\n```bash\nnetstat -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nnetstat -tuln | grep :80\n```\n\n结合 `netstat` 和 `grep` 命令，还可以找到对应的PID：\n```bash\nnetstat -tulnp | grep :<端口号>\n```\n\n### 3. 使用 `ss` 命令\n`ss` 是 `netstat` 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。\n\n```bash\nss -tuln | grep :<端口号>\n```\n\n例如，查找占用80端口的进程：\n```bash\nss -tuln | grep :80\n```\n\n### 4. 使用 `fuser` 命令\n`fuser` 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。\n\n```bash\nfuser <端口号>/tcp\n```\n\n例如，查找占用80端口的进程：\n```bash\nfuser 80/tcp\n```\n\n### 5. 查看详细的进程信息\n一旦获得了PID，可以使用 `ps` 命令来查看进程的详细信息。\n\n```bash\nps -p <PID> -o pid,cmd\n```\n\n例如：\n```bash\nps -p 1234 -o pid,cmd\n```\n\n这将显示PID为1234的进程的命令行。\n\n通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。","slug":"linux/linux下通过端口找到进程","published":1,"updated":"2025-02-18T06:31:00.562Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3h00098gjd9bayeq03","content":"<p>在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：</p>\n<h3 id=\"1-使用-lsof-命令\"><a href=\"#1-使用-lsof-命令\" class=\"headerlink\" title=\"1. 使用 lsof 命令\"></a>1. 使用 <code>lsof</code> 命令</h3><p><code>lsof</code> 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用-netstat-命令\"><a href=\"#2-使用-netstat-命令\" class=\"headerlink\" title=\"2. 使用 netstat 命令\"></a>2. 使用 <code>netstat</code> 命令</h3><p><code>netstat</code> 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<p>结合 <code>netstat</code> 和 <code>grep</code> 命令，还可以找到对应的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tulnp | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-ss-命令\"><a href=\"#3-使用-ss-命令\" class=\"headerlink\" title=\"3. 使用 ss 命令\"></a>3. 使用 <code>ss</code> 命令</h3><p><code>ss</code> 是 <code>netstat</code> 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-fuser-命令\"><a href=\"#4-使用-fuser-命令\" class=\"headerlink\" title=\"4. 使用 fuser 命令\"></a>4. 使用 <code>fuser</code> 命令</h3><p><code>fuser</code> 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser &lt;端口号&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser 80/tcp<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-查看详细的进程信息\"><a href=\"#5-查看详细的进程信息\" class=\"headerlink\" title=\"5. 查看详细的进程信息\"></a>5. 查看详细的进程信息</h3><p>一旦获得了PID，可以使用 <code>ps</code> 命令来查看进程的详细信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p &lt;PID&gt; -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p 1234 -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>这将显示PID为1234的进程的命令行。</p>\n<p>通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。</p>\n","excerpt":"","more":"<p>在Linux系统中，可以使用以下几种方法通过端口号查找占用该端口的进程：</p>\n<h3 id=\"1-使用-lsof-命令\"><a href=\"#1-使用-lsof-命令\" class=\"headerlink\" title=\"1. 使用 lsof 命令\"></a>1. 使用 <code>lsof</code> 命令</h3><p><code>lsof</code> 是一个用于列出打开的文件的命令，它也可以用于查找正在使用某个端口的进程。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsof -i :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用-netstat-命令\"><a href=\"#2-使用-netstat-命令\" class=\"headerlink\" title=\"2. 使用 netstat 命令\"></a>2. 使用 <code>netstat</code> 命令</h3><p><code>netstat</code> 是一个网络状态监控工具，可以显示与网络相关的内容，包括哪些进程在监听哪些端口。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<p>结合 <code>netstat</code> 和 <code>grep</code> 命令，还可以找到对应的PID：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -tulnp | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用-ss-命令\"><a href=\"#3-使用-ss-命令\" class=\"headerlink\" title=\"3. 使用 ss 命令\"></a>3. 使用 <code>ss</code> 命令</h3><p><code>ss</code> 是 <code>netstat</code> 的替代品，用于显示socket统计信息，可以更快速地显示网络连接。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :&lt;端口号&gt;<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ss -tuln | grep :80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-fuser-命令\"><a href=\"#4-使用-fuser-命令\" class=\"headerlink\" title=\"4. 使用 fuser 命令\"></a>4. 使用 <code>fuser</code> 命令</h3><p><code>fuser</code> 是一个显示哪个进程使用哪些文件或socket的命令。可以直接显示占用指定端口的进程PID。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser &lt;端口号&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>例如，查找占用80端口的进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">fuser 80/tcp<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-查看详细的进程信息\"><a href=\"#5-查看详细的进程信息\" class=\"headerlink\" title=\"5. 查看详细的进程信息\"></a>5. 查看详细的进程信息</h3><p>一旦获得了PID，可以使用 <code>ps</code> 命令来查看进程的详细信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p &lt;PID&gt; -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -p 1234 -o pid,cmd<br></code></pre></td></tr></table></figure>\n\n<p>这将显示PID为1234的进程的命令行。</p>\n<p>通过这些方法，您可以很容易地查找到占用特定端口的进程并获取相应的PID和其他信息。</p>\n"},{"title":"openvpn中使用client1访问xxx域名时，走client2的网络流量来访问","date":"2024-10-10T03:40:10.000Z","_content":"要让一个 OpenVPN 客户端（client1）通过另一个客户端（client2）的网络流量访问特定域名（如 xxx 域名），你可以采取以下步骤：\n\n1. **在 client2 上设置路由**：\n   确保 client2 的 OpenVPN 配置中允许其他客户端通过它进行路由。你需要在 server.conf 中添加以下行：\n\n   ```plaintext\n   client-to-client\n   ```\n\n   这将允许客户端之间的直接通信。\n\n2. **在 client1 上设置路由**：\n   在 client1 的 OpenVPN 配置文件中，你需要添加一条静态路由，让它的流量通过 client2。你可以通过以下方式实现：\n\n    - 在 client1 的配置文件中添加如下内容（假设 client2 的 IP 是 10.8.0.2）：\n\n      ```plaintext\n      route xxx 255.255.255.255 net_gateway\n      ```\n\n    - 如果 client2 的 IP 不是 10.8.0.2，请用实际的 IP 替换。\n\n3. **使用 iptables 或其他工具进行流量转发**：\n   在 client2 上，你可能需要设置 iptables 规则，以便将来自 client1 的流量转发到外部网络。以下是一个简单的规则示例：\n\n   ```bash\n   iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE\n   ```\n\n   确保 `10.8.0.0/24` 替换为你的 VPN 子网。\n\n4. **修改 DNS 解析**：\n   你可能需要在 client1 上修改 DNS 设置，确保它可以正确解析 xxx 域名。你可以在 OpenVPN 配置中添加以下行：\n\n   ```plaintext\n   dhcp-option DNS 8.8.8.8\n   ```\n\n   替换成你想使用的 DNS 服务器。\n\n5. **测试连接**：\n   重启 OpenVPN 客户端，并测试 client1 是否能够通过 client2 的网络访问 xxx 域名。\n\n确保在进行这些更改时备份你的配置文件，以防需要恢复。如果遇到任何问题，可以查看 OpenVPN 的日志以获取更多信息。","source":"_posts/linux/openvpn中使用client1访问xxx域名时，走client2的网络流量来访问.md","raw":"---\ntitle: openvpn中使用client1访问xxx域名时，走client2的网络流量来访问\ndate: 2024-10-10 11:40:10\ncategories: linux\ntag: openvpn\n---\n要让一个 OpenVPN 客户端（client1）通过另一个客户端（client2）的网络流量访问特定域名（如 xxx 域名），你可以采取以下步骤：\n\n1. **在 client2 上设置路由**：\n   确保 client2 的 OpenVPN 配置中允许其他客户端通过它进行路由。你需要在 server.conf 中添加以下行：\n\n   ```plaintext\n   client-to-client\n   ```\n\n   这将允许客户端之间的直接通信。\n\n2. **在 client1 上设置路由**：\n   在 client1 的 OpenVPN 配置文件中，你需要添加一条静态路由，让它的流量通过 client2。你可以通过以下方式实现：\n\n    - 在 client1 的配置文件中添加如下内容（假设 client2 的 IP 是 10.8.0.2）：\n\n      ```plaintext\n      route xxx 255.255.255.255 net_gateway\n      ```\n\n    - 如果 client2 的 IP 不是 10.8.0.2，请用实际的 IP 替换。\n\n3. **使用 iptables 或其他工具进行流量转发**：\n   在 client2 上，你可能需要设置 iptables 规则，以便将来自 client1 的流量转发到外部网络。以下是一个简单的规则示例：\n\n   ```bash\n   iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE\n   ```\n\n   确保 `10.8.0.0/24` 替换为你的 VPN 子网。\n\n4. **修改 DNS 解析**：\n   你可能需要在 client1 上修改 DNS 设置，确保它可以正确解析 xxx 域名。你可以在 OpenVPN 配置中添加以下行：\n\n   ```plaintext\n   dhcp-option DNS 8.8.8.8\n   ```\n\n   替换成你想使用的 DNS 服务器。\n\n5. **测试连接**：\n   重启 OpenVPN 客户端，并测试 client1 是否能够通过 client2 的网络访问 xxx 域名。\n\n确保在进行这些更改时备份你的配置文件，以防需要恢复。如果遇到任何问题，可以查看 OpenVPN 的日志以获取更多信息。","slug":"linux/openvpn中使用client1访问xxx域名时，走client2的网络流量来访问","published":1,"updated":"2025-02-18T06:28:41.773Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3h000d8gjdcj5neqao","content":"<p>要让一个 OpenVPN 客户端（client1）通过另一个客户端（client2）的网络流量访问特定域名（如 xxx 域名），你可以采取以下步骤：</p>\n<ol>\n<li><p><strong>在 client2 上设置路由</strong>：<br>确保 client2 的 OpenVPN 配置中允许其他客户端通过它进行路由。你需要在 server.conf 中添加以下行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">client-to-client<br></code></pre></td></tr></table></figure>\n\n<p>这将允许客户端之间的直接通信。</p>\n</li>\n<li><p><strong>在 client1 上设置路由</strong>：<br>在 client1 的 OpenVPN 配置文件中，你需要添加一条静态路由，让它的流量通过 client2。你可以通过以下方式实现：</p>\n<ul>\n<li><p>在 client1 的配置文件中添加如下内容（假设 client2 的 IP 是 10.8.0.2）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">route xxx 255.255.255.255 net_gateway<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>如果 client2 的 IP 不是 10.8.0.2，请用实际的 IP 替换。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>使用 iptables 或其他工具进行流量转发</strong>：<br>在 client2 上，你可能需要设置 iptables 规则，以便将来自 client1 的流量转发到外部网络。以下是一个简单的规则示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE<br></code></pre></td></tr></table></figure>\n\n<p>确保 <code>10.8.0.0/24</code> 替换为你的 VPN 子网。</p>\n</li>\n<li><p><strong>修改 DNS 解析</strong>：<br>你可能需要在 client1 上修改 DNS 设置，确保它可以正确解析 xxx 域名。你可以在 OpenVPN 配置中添加以下行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">dhcp-option DNS 8.8.8.8<br></code></pre></td></tr></table></figure>\n\n<p>替换成你想使用的 DNS 服务器。</p>\n</li>\n<li><p><strong>测试连接</strong>：<br>重启 OpenVPN 客户端，并测试 client1 是否能够通过 client2 的网络访问 xxx 域名。</p>\n</li>\n</ol>\n<p>确保在进行这些更改时备份你的配置文件，以防需要恢复。如果遇到任何问题，可以查看 OpenVPN 的日志以获取更多信息。</p>\n","excerpt":"","more":"<p>要让一个 OpenVPN 客户端（client1）通过另一个客户端（client2）的网络流量访问特定域名（如 xxx 域名），你可以采取以下步骤：</p>\n<ol>\n<li><p><strong>在 client2 上设置路由</strong>：<br>确保 client2 的 OpenVPN 配置中允许其他客户端通过它进行路由。你需要在 server.conf 中添加以下行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">client-to-client<br></code></pre></td></tr></table></figure>\n\n<p>这将允许客户端之间的直接通信。</p>\n</li>\n<li><p><strong>在 client1 上设置路由</strong>：<br>在 client1 的 OpenVPN 配置文件中，你需要添加一条静态路由，让它的流量通过 client2。你可以通过以下方式实现：</p>\n<ul>\n<li><p>在 client1 的配置文件中添加如下内容（假设 client2 的 IP 是 10.8.0.2）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">route xxx 255.255.255.255 net_gateway<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>如果 client2 的 IP 不是 10.8.0.2，请用实际的 IP 替换。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>使用 iptables 或其他工具进行流量转发</strong>：<br>在 client2 上，你可能需要设置 iptables 规则，以便将来自 client1 的流量转发到外部网络。以下是一个简单的规则示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE<br></code></pre></td></tr></table></figure>\n\n<p>确保 <code>10.8.0.0/24</code> 替换为你的 VPN 子网。</p>\n</li>\n<li><p><strong>修改 DNS 解析</strong>：<br>你可能需要在 client1 上修改 DNS 设置，确保它可以正确解析 xxx 域名。你可以在 OpenVPN 配置中添加以下行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">dhcp-option DNS 8.8.8.8<br></code></pre></td></tr></table></figure>\n\n<p>替换成你想使用的 DNS 服务器。</p>\n</li>\n<li><p><strong>测试连接</strong>：<br>重启 OpenVPN 客户端，并测试 client1 是否能够通过 client2 的网络访问 xxx 域名。</p>\n</li>\n</ol>\n<p>确保在进行这些更改时备份你的配置文件，以防需要恢复。如果遇到任何问题，可以查看 OpenVPN 的日志以获取更多信息。</p>\n"},{"title":"tcp6 如何 改成tcp4","date":"2024-07-25T09:36:35.000Z","_content":"要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：\n\n### 1. 修改系统配置\n如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。\n\n#### Linux\n编辑 `/etc/gai.conf` 文件，取消 `precedence ::ffff:0:0/96  100` 的注释。这会让系统优先使用 IPv4。\n\n```bash\nsudo nano /etc/gai.conf\n```\n\n取消下面这行的注释：\n```bash\nprecedence ::ffff:0:0/96  100\n```\n\n#### Windows\n可以通过命令行禁用IPv6：\n```bash\nnetsh interface ipv6 set prefixpolicy ::ffff:0:0/96  40 1\n```\n\n### 2. 配置网络服务\n对于具体的网络服务，你可以在配置文件中指定使用 IPv4。\n\n#### Nginx\n在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：\n\n```nginx\nserver {\n    listen 80;\n    listen [::]:80 ipv6only=off;\n    ...\n}\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```nginx\nserver {\n    listen 80;\n    ...\n}\n```\n\n#### Apache\n在 Apache 的配置文件中，你可以指定监听的 IP 地址：\n\n```apache\nListen 80\nListen [::]:80\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```apache\nListen 80\n```\n\n### 3. 修改应用程序配置\n对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。\n\n#### Python\n在 Python 应用中，你可以通过 `socket` 模块指定仅使用 IPv4：\n\n```python\nimport socket\n\n# 创建一个IPv4的TCP socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('0.0.0.0', 8080))\nsock.listen(5)\n```\n\n#### Java\n在 Java 应用中，你可以设置 `java.net.preferIPv4Stack` 系统属性：\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n        // 其他代码\n    }\n}\n```\n\n### 总结\n具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。","source":"_posts/linux/tcp6-如何-改成tcp4.md","raw":"---\ntitle: tcp6 如何 改成tcp4\ndate: 2024-07-25 17:36:35\ncategories: linux\ntag: 网络\n---\n要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：\n\n### 1. 修改系统配置\n如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。\n\n#### Linux\n编辑 `/etc/gai.conf` 文件，取消 `precedence ::ffff:0:0/96  100` 的注释。这会让系统优先使用 IPv4。\n\n```bash\nsudo nano /etc/gai.conf\n```\n\n取消下面这行的注释：\n```bash\nprecedence ::ffff:0:0/96  100\n```\n\n#### Windows\n可以通过命令行禁用IPv6：\n```bash\nnetsh interface ipv6 set prefixpolicy ::ffff:0:0/96  40 1\n```\n\n### 2. 配置网络服务\n对于具体的网络服务，你可以在配置文件中指定使用 IPv4。\n\n#### Nginx\n在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：\n\n```nginx\nserver {\n    listen 80;\n    listen [::]:80 ipv6only=off;\n    ...\n}\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```nginx\nserver {\n    listen 80;\n    ...\n}\n```\n\n#### Apache\n在 Apache 的配置文件中，你可以指定监听的 IP 地址：\n\n```apache\nListen 80\nListen [::]:80\n```\n\n将上面的配置改为仅监听 IPv4 地址：\n```apache\nListen 80\n```\n\n### 3. 修改应用程序配置\n对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。\n\n#### Python\n在 Python 应用中，你可以通过 `socket` 模块指定仅使用 IPv4：\n\n```python\nimport socket\n\n# 创建一个IPv4的TCP socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('0.0.0.0', 8080))\nsock.listen(5)\n```\n\n#### Java\n在 Java 应用中，你可以设置 `java.net.preferIPv4Stack` 系统属性：\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n        // 其他代码\n    }\n}\n```\n\n### 总结\n具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。","slug":"linux/tcp6-如何-改成tcp4","published":1,"updated":"2025-02-18T06:28:00.123Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3i000e8gjd70apegn2","content":"<p>要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：</p>\n<h3 id=\"1-修改系统配置\"><a href=\"#1-修改系统配置\" class=\"headerlink\" title=\"1. 修改系统配置\"></a>1. 修改系统配置</h3><p>如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>编辑 <code>/etc/gai.conf</code> 文件，取消 <code>precedence ::ffff:0:0/96  100</code> 的注释。这会让系统优先使用 IPv4。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo nano /etc/gai.conf<br></code></pre></td></tr></table></figure>\n\n<p>取消下面这行的注释：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">precedence ::ffff:0:0/96  100<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><p>可以通过命令行禁用IPv6：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netsh interface ipv6 <span class=\"hljs-built_in\">set</span> prefixpolicy ::ffff:0:0/96  40 1<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置网络服务\"><a href=\"#2-配置网络服务\" class=\"headerlink\" title=\"2. 配置网络服务\"></a>2. 配置网络服务</h3><p>对于具体的网络服务，你可以在配置文件中指定使用 IPv4。</p>\n<h4 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h4><p>在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">listen</span> [::]:<span class=\"hljs-number\">80</span> ipv6only=<span class=\"hljs-literal\">off</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h4><p>在 Apache 的配置文件中，你可以指定监听的 IP 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br><span class=\"hljs-attribute\">Listen</span><span class=\"hljs-meta\"> [::]:80</span><br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改应用程序配置\"><a href=\"#3-修改应用程序配置\" class=\"headerlink\" title=\"3. 修改应用程序配置\"></a>3. 修改应用程序配置</h3><p>对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。</p>\n<h4 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h4><p>在 Python 应用中，你可以通过 <code>socket</code> 模块指定仅使用 IPv4：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> socket<br><br><span class=\"hljs-comment\"># 创建一个IPv4的TCP socket</span><br>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>sock.bind((<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-number\">8080</span>))<br>sock.listen(<span class=\"hljs-number\">5</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p>在 Java 应用中，你可以设置 <code>java.net.preferIPv4Stack</code> 系统属性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.setProperty(<span class=\"hljs-string\">&quot;java.net.preferIPv4Stack&quot;</span>, <span class=\"hljs-string\">&quot;true&quot;</span>);<br>        <span class=\"hljs-comment\">// 其他代码</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。</p>\n","excerpt":"","more":"<p>要将 TCP6（IPv6）转换为 TCP4（IPv4），具体步骤取决于你想要转换的上下文。例如，你可能想要在服务器配置、网络服务配置或者应用程序中进行这种转换。以下是几种常见的方法：</p>\n<h3 id=\"1-修改系统配置\"><a href=\"#1-修改系统配置\" class=\"headerlink\" title=\"1. 修改系统配置\"></a>1. 修改系统配置</h3><p>如果你的系统默认使用 IPv6，你可以通过修改系统配置来优先使用 IPv4。</p>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><p>编辑 <code>/etc/gai.conf</code> 文件，取消 <code>precedence ::ffff:0:0/96  100</code> 的注释。这会让系统优先使用 IPv4。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo nano /etc/gai.conf<br></code></pre></td></tr></table></figure>\n\n<p>取消下面这行的注释：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">precedence ::ffff:0:0/96  100<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><p>可以通过命令行禁用IPv6：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netsh interface ipv6 <span class=\"hljs-built_in\">set</span> prefixpolicy ::ffff:0:0/96  40 1<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置网络服务\"><a href=\"#2-配置网络服务\" class=\"headerlink\" title=\"2. 配置网络服务\"></a>2. 配置网络服务</h3><p>对于具体的网络服务，你可以在配置文件中指定使用 IPv4。</p>\n<h4 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h4><p>在 Nginx 配置文件中，你可以指定服务器监听的 IP 地址为 IPv4 地址。例如：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">listen</span> [::]:<span class=\"hljs-number\">80</span> ipv6only=<span class=\"hljs-literal\">off</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Apache\"><a href=\"#Apache\" class=\"headerlink\" title=\"Apache\"></a>Apache</h4><p>在 Apache 的配置文件中，你可以指定监听的 IP 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br><span class=\"hljs-attribute\">Listen</span><span class=\"hljs-meta\"> [::]:80</span><br></code></pre></td></tr></table></figure>\n\n<p>将上面的配置改为仅监听 IPv4 地址：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">Listen</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-修改应用程序配置\"><a href=\"#3-修改应用程序配置\" class=\"headerlink\" title=\"3. 修改应用程序配置\"></a>3. 修改应用程序配置</h3><p>对于某些应用程序，你可能需要修改代码或配置文件以确保它们仅使用 IPv4。</p>\n<h4 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h4><p>在 Python 应用中，你可以通过 <code>socket</code> 模块指定仅使用 IPv4：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> socket<br><br><span class=\"hljs-comment\"># 创建一个IPv4的TCP socket</span><br>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>sock.bind((<span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-number\">8080</span>))<br>sock.listen(<span class=\"hljs-number\">5</span>)<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h4><p>在 Java 应用中，你可以设置 <code>java.net.preferIPv4Stack</code> 系统属性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Main</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.setProperty(<span class=\"hljs-string\">&quot;java.net.preferIPv4Stack&quot;</span>, <span class=\"hljs-string\">&quot;true&quot;</span>);<br>        <span class=\"hljs-comment\">// 其他代码</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>具体的方法取决于你的具体需求和环境。在一般情况下，配置文件和系统设置通常可以解决大多数问题。如果你有更具体的应用或环境，请提供更多详细信息，我可以提供更具体的指导。</p>\n"},{"title":"nginx配置上传文件大小","date":"2024-07-24T08:34:06.000Z","_content":"要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：\n\n1. **配置Nginx处理上传文件的大小限制：**\n\n   打开您的Nginx配置文件（通常位于 `/etc/nginx/nginx.conf` 或 `/etc/nginx/conf.d/default.conf`）并找到 `http` 块或 `server` 块。\n\n   ```nginx\n   http {\n       # 其他配置...\n       \n       # 设置客户端上传文件的最大限制（单位：字节）\n       client_max_body_size 50M;\n\n       server {\n           listen 80;\n           server_name example.com;\n\n           # 其他配置...\n\n           location /upload {\n               # 将文件上传到指定的目录\n               root /var/www/uploads;\n\n               # 其他配置...\n           }\n       }\n   }\n   ```\n\n   在这个示例中，`client_max_body_size` 被设置为 `50M`，这意味着客户端可以上传最大为50MB的文件。\n\n2. **配置上传文件的保存路径：**\n\n   您可以在 `location` 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 `/var/www/uploads` 目录。\n\n3. **重启Nginx以使配置生效：**\n\n   修改完配置文件后，需要重启Nginx服务以使配置生效。\n\n   ```sh\n   sudo systemctl restart nginx\n   ```\n\n4. **处理上传的文件：**\n\n   需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。\n\n   这是一个使用PHP处理文件上传的简单示例：\n\n   ```php\n   <?php\n   if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['file'])) {\n       $uploadDir = '/var/www/uploads/';\n       $uploadFile = $uploadDir . basename($_FILES['file']['name']);\n\n       if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n           echo \"文件上传成功。\";\n       } else {\n           echo \"文件上传失败。\";\n       }\n   }\n   ?>\n   ```\n\n   然后在Nginx的配置文件中，您可以配置一个 `location` 块来处理文件上传请求：\n\n   ```nginx\n   location /upload {\n       root /var/www/uploads;\n\n       # 代理到后端PHP脚本\n       fastcgi_pass 127.0.0.1:9000;\n       include fastcgi_params;\n       fastcgi_param SCRIPT_FILENAME /var/www/html/upload.php;\n   }\n   ```\n","source":"_posts/linux/nginx配置上传文件大小.md","raw":"---\ntitle: nginx配置上传文件大小\ndate: 2024-07-24 16:34:06\ncategories: linux\ntag: nginx\n---\n要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：\n\n1. **配置Nginx处理上传文件的大小限制：**\n\n   打开您的Nginx配置文件（通常位于 `/etc/nginx/nginx.conf` 或 `/etc/nginx/conf.d/default.conf`）并找到 `http` 块或 `server` 块。\n\n   ```nginx\n   http {\n       # 其他配置...\n       \n       # 设置客户端上传文件的最大限制（单位：字节）\n       client_max_body_size 50M;\n\n       server {\n           listen 80;\n           server_name example.com;\n\n           # 其他配置...\n\n           location /upload {\n               # 将文件上传到指定的目录\n               root /var/www/uploads;\n\n               # 其他配置...\n           }\n       }\n   }\n   ```\n\n   在这个示例中，`client_max_body_size` 被设置为 `50M`，这意味着客户端可以上传最大为50MB的文件。\n\n2. **配置上传文件的保存路径：**\n\n   您可以在 `location` 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 `/var/www/uploads` 目录。\n\n3. **重启Nginx以使配置生效：**\n\n   修改完配置文件后，需要重启Nginx服务以使配置生效。\n\n   ```sh\n   sudo systemctl restart nginx\n   ```\n\n4. **处理上传的文件：**\n\n   需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。\n\n   这是一个使用PHP处理文件上传的简单示例：\n\n   ```php\n   <?php\n   if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['file'])) {\n       $uploadDir = '/var/www/uploads/';\n       $uploadFile = $uploadDir . basename($_FILES['file']['name']);\n\n       if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadFile)) {\n           echo \"文件上传成功。\";\n       } else {\n           echo \"文件上传失败。\";\n       }\n   }\n   ?>\n   ```\n\n   然后在Nginx的配置文件中，您可以配置一个 `location` 块来处理文件上传请求：\n\n   ```nginx\n   location /upload {\n       root /var/www/uploads;\n\n       # 代理到后端PHP脚本\n       fastcgi_pass 127.0.0.1:9000;\n       include fastcgi_params;\n       fastcgi_param SCRIPT_FILENAME /var/www/html/upload.php;\n   }\n   ```\n","slug":"linux/nginx配置上传文件大小","published":1,"updated":"2025-02-18T06:29:12.455Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3j000i8gjdgn1ka85m","content":"<p>要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：</p>\n<ol>\n<li><p><strong>配置Nginx处理上传文件的大小限制：</strong></p>\n<p>打开您的Nginx配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code>）并找到 <code>http</code> 块或 <code>server</code> 块。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">http</span> &#123;<br>    <span class=\"hljs-comment\"># 其他配置...</span><br>    <br>    <span class=\"hljs-comment\"># 设置客户端上传文件的最大限制（单位：字节）</span><br>    <span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">50M</span>;<br><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>        <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>        <span class=\"hljs-comment\"># 其他配置...</span><br><br>        <span class=\"hljs-section\">location</span> /upload &#123;<br>            <span class=\"hljs-comment\"># 将文件上传到指定的目录</span><br>            <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>            <span class=\"hljs-comment\"># 其他配置...</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，<code>client_max_body_size</code> 被设置为 <code>50M</code>，这意味着客户端可以上传最大为50MB的文件。</p>\n</li>\n<li><p><strong>配置上传文件的保存路径：</strong></p>\n<p>您可以在 <code>location</code> 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 <code>/var/www/uploads</code> 目录。</p>\n</li>\n<li><p><strong>重启Nginx以使配置生效：</strong></p>\n<p>修改完配置文件后，需要重启Nginx服务以使配置生效。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl restart nginx<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>处理上传的文件：</strong></p>\n<p>需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。</p>\n<p>这是一个使用PHP处理文件上传的简单示例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REQUEST_METHOD&#x27;</span>] == <span class=\"hljs-string\">&#x27;POST&#x27;</span> &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$uploadDir</span> = <span class=\"hljs-string\">&#x27;/var/www/uploads/&#x27;</span>;<br>    <span class=\"hljs-variable\">$uploadFile</span> = <span class=\"hljs-variable\">$uploadDir</span> . <span class=\"hljs-title function_ invoke__\">basename</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;name&#x27;</span>]);<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">move_uploaded_file</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;tmp_name&#x27;</span>], <span class=\"hljs-variable\">$uploadFile</span>)) &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传成功。&quot;</span>;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传失败。&quot;</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>然后在Nginx的配置文件中，您可以配置一个 <code>location</code> 块来处理文件上传请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">location</span> /upload &#123;<br>    <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>    <span class=\"hljs-comment\"># 代理到后端PHP脚本</span><br>    <span class=\"hljs-attribute\">fastcgi_pass</span> <span class=\"hljs-number\">127.0.0.1:9000</span>;<br>    <span class=\"hljs-attribute\">include</span> fastcgi_params;<br>    <span class=\"hljs-attribute\">fastcgi_param</span> SCRIPT_FILENAME /var/www/html/upload.php;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"","more":"<p>要在Nginx中配置上传文件，您需要对Nginx的配置文件进行一些修改。以下是一个示例配置，说明如何配置Nginx以支持文件上传：</p>\n<ol>\n<li><p><strong>配置Nginx处理上传文件的大小限制：</strong></p>\n<p>打开您的Nginx配置文件（通常位于 <code>/etc/nginx/nginx.conf</code> 或 <code>/etc/nginx/conf.d/default.conf</code>）并找到 <code>http</code> 块或 <code>server</code> 块。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">http</span> &#123;<br>    <span class=\"hljs-comment\"># 其他配置...</span><br>    <br>    <span class=\"hljs-comment\"># 设置客户端上传文件的最大限制（单位：字节）</span><br>    <span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">50M</span>;<br><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>        <span class=\"hljs-attribute\">server_name</span> example.com;<br><br>        <span class=\"hljs-comment\"># 其他配置...</span><br><br>        <span class=\"hljs-section\">location</span> /upload &#123;<br>            <span class=\"hljs-comment\"># 将文件上传到指定的目录</span><br>            <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>            <span class=\"hljs-comment\"># 其他配置...</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，<code>client_max_body_size</code> 被设置为 <code>50M</code>，这意味着客户端可以上传最大为50MB的文件。</p>\n</li>\n<li><p><strong>配置上传文件的保存路径：</strong></p>\n<p>您可以在 <code>location</code> 块中指定文件上传的路径。例如，上面的示例中，上传的文件将被保存到 <code>/var/www/uploads</code> 目录。</p>\n</li>\n<li><p><strong>重启Nginx以使配置生效：</strong></p>\n<p>修改完配置文件后，需要重启Nginx服务以使配置生效。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl restart nginx<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>处理上传的文件：</strong></p>\n<p>需要注意的是，Nginx本身不会处理上传的文件，您需要在后端应用中处理这些文件。例如，您可以使用PHP、Python、Node.js等语言在后端处理文件上传。</p>\n<p>这是一个使用PHP处理文件上传的简单示例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$_SERVER</span>[<span class=\"hljs-string\">&#x27;REQUEST_METHOD&#x27;</span>] == <span class=\"hljs-string\">&#x27;POST&#x27;</span> &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>])) &#123;<br>    <span class=\"hljs-variable\">$uploadDir</span> = <span class=\"hljs-string\">&#x27;/var/www/uploads/&#x27;</span>;<br>    <span class=\"hljs-variable\">$uploadFile</span> = <span class=\"hljs-variable\">$uploadDir</span> . <span class=\"hljs-title function_ invoke__\">basename</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;name&#x27;</span>]);<br><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">move_uploaded_file</span>(<span class=\"hljs-variable\">$_FILES</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>][<span class=\"hljs-string\">&#x27;tmp_name&#x27;</span>], <span class=\"hljs-variable\">$uploadFile</span>)) &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传成功。&quot;</span>;<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;文件上传失败。&quot;</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>然后在Nginx的配置文件中，您可以配置一个 <code>location</code> 块来处理文件上传请求：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">location</span> /upload &#123;<br>    <span class=\"hljs-attribute\">root</span> /var/www/uploads;<br><br>    <span class=\"hljs-comment\"># 代理到后端PHP脚本</span><br>    <span class=\"hljs-attribute\">fastcgi_pass</span> <span class=\"hljs-number\">127.0.0.1:9000</span>;<br>    <span class=\"hljs-attribute\">include</span> fastcgi_params;<br>    <span class=\"hljs-attribute\">fastcgi_param</span> SCRIPT_FILENAME /var/www/html/upload.php;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"使用图形化对linux磁盘进行扩容","date":"2024-08-06T11:55:45.000Z","_content":"![微信截图_20240806195901.png](使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png)\n磁盘空间不足的提示。\n我就在终端输入df -h查看了一下磁盘的使用情况。\n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1        48G   46G   47M  100% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\ntmpfs           2.7G   52K  2.7G    1% /run/user/0\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\n\n\n发现/dev/sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。\n网上各种找方法….\n网上一堆复制粘贴的坑逼教程可把我给坑惨了。\n最后找到了两篇文章综合起来才成功。\n写出来的目的仅仅为了方便记忆，那么就来说说吧。\n第一步:\n使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。\n![微信截图_20240806200518.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png)\n第二步:\n下载Gparted镜像文件。\nhttps://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\n\n然后在虚拟机的设置–CD/DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：\n![微信截图_20240806200410.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png)\n\n第三步:\n启动BIOS方法:\n用记事本打开ubantu.vmx文件，在第一行添加这段代码\nbios.forceSetupOnce = “TRUE”\n\n![img.png](使用图形化对linux磁盘进行扩容/img.png)\n\n保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。\n\n\n\n进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。\n\n开机后即可进入这个界面。\n![微信截图_20240806200751.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png)\n\n![微信截图_20240806200831.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png)\n输入26选择简体中文，敲回车\n![微信截图_20240806200853.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png)\n输入0，敲回车\n![微信截图_20240806200913.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png)\n进入Gparted的界面会自动弹出Gparted的分区界面。\n![微信截图_20240806200924.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png)\n依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，\n将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。 \n再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出 \n然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功\n\n└─# df -h     \n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1       144G   34G  104G   25% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\ntmpfs           2.7G   56K  2.7G    1% /run/user/0\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782/merged","source":"_posts/linux/使用图形化对linux磁盘进行扩容.md","raw":"---\ntitle: 使用图形化对linux磁盘进行扩容\ndate: 2024-08-06 19:55:45\ncategories: linux\ntag: 扩容磁盘\n---\n![微信截图_20240806195901.png](使用图形化对linux磁盘进行扩容/微信截图_20240806195901.png)\n磁盘空间不足的提示。\n我就在终端输入df -h查看了一下磁盘的使用情况。\n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1        48G   46G   47M  100% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\ntmpfs           2.7G   52K  2.7G    1% /run/user/0\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay          48G   46G   47M  100% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\n\n\n发现/dev/sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。\n网上各种找方法….\n网上一堆复制粘贴的坑逼教程可把我给坑惨了。\n最后找到了两篇文章综合起来才成功。\n写出来的目的仅仅为了方便记忆，那么就来说说吧。\n第一步:\n使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。\n![微信截图_20240806200518.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200518.png)\n第二步:\n下载Gparted镜像文件。\nhttps://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\n\n然后在虚拟机的设置–CD/DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：\n![微信截图_20240806200410.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200410.png)\n\n第三步:\n启动BIOS方法:\n用记事本打开ubantu.vmx文件，在第一行添加这段代码\nbios.forceSetupOnce = “TRUE”\n\n![img.png](使用图形化对linux磁盘进行扩容/img.png)\n\n保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。\n\n\n\n进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。\n\n开机后即可进入这个界面。\n![微信截图_20240806200751.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200751.png)\n\n![微信截图_20240806200831.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200831.png)\n输入26选择简体中文，敲回车\n![微信截图_20240806200853.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200853.png)\n输入0，敲回车\n![微信截图_20240806200913.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200913.png)\n进入Gparted的界面会自动弹出Gparted的分区界面。\n![微信截图_20240806200924.png](使用图形化对linux磁盘进行扩容/微信截图_20240806200924.png)\n依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，\n将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。 \n再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出 \n然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功\n\n└─# df -h     \n文件系统        容量  已用  可用 已用% 挂载点\nudev             14G     0   14G    0% /dev\ntmpfs           2.7G  1.8M  2.7G    1% /run\n/dev/sda1       144G   34G  104G   25% /\ntmpfs            14G     0   14G    0% /dev/shm\ntmpfs           5.0M     0  5.0M    0% /run/lock\ntmpfs           2.7G   60K  2.7G    1% /run/user/130\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd/merged\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6/merged\ntmpfs           2.7G   56K  2.7G    1% /run/user/0\noverlay         144G   34G  104G   25% /var/lib/docker/overlay2/930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782/merged","slug":"linux/使用图形化对linux磁盘进行扩容","published":1,"updated":"2025-02-18T06:26:47.395Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3k000l8gjdhmb47yos","content":"<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806195901.png\" class alt=\"微信截图_20240806195901.png\">\n<p>磁盘空间不足的提示。<br>我就在终端输入df -h查看了一下磁盘的使用情况。<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1        48G   46G   47M  100% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>tmpfs           2.7G   52K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged</p>\n<p>发现&#x2F;dev&#x2F;sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。<br>网上各种找方法….<br>网上一堆复制粘贴的坑逼教程可把我给坑惨了。<br>最后找到了两篇文章综合起来才成功。<br>写出来的目的仅仅为了方便记忆，那么就来说说吧。<br>第一步:<br>使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200518.png\" class alt=\"微信截图_20240806200518.png\">\n<p>第二步:<br>下载Gparted镜像文件。<br><a href=\"https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\">https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1</a></p>\n<p>然后在虚拟机的设置–CD&#x2F;DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200410.png\" class alt=\"微信截图_20240806200410.png\">\n\n<p>第三步:<br>启动BIOS方法:<br>用记事本打开ubantu.vmx文件，在第一行添加这段代码<br>bios.forceSetupOnce &#x3D; “TRUE”</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/img.png\" class alt=\"img.png\">\n\n<p>保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。</p>\n<p>进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。</p>\n<p>开机后即可进入这个界面。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200751.png\" class alt=\"微信截图_20240806200751.png\">\n\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200831.png\" class alt=\"微信截图_20240806200831.png\">\n<p>输入26选择简体中文，敲回车</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200853.png\" class alt=\"微信截图_20240806200853.png\">\n<p>输入0，敲回车</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200913.png\" class alt=\"微信截图_20240806200913.png\">\n<p>进入Gparted的界面会自动弹出Gparted的分区界面。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200924.png\" class alt=\"微信截图_20240806200924.png\">\n<p>依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，<br>将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。<br>再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出<br>然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功</p>\n<p>└─# df -h<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1       144G   34G  104G   25% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged<br>tmpfs           2.7G   56K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782&#x2F;merged</p>\n","excerpt":"","more":"<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806195901.png\" class alt=\"微信截图_20240806195901.png\">\n<p>磁盘空间不足的提示。<br>我就在终端输入df -h查看了一下磁盘的使用情况。<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1        48G   46G   47M  100% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>tmpfs           2.7G   52K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay          48G   46G   47M  100% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged</p>\n<p>发现&#x2F;dev&#x2F;sda1这个文件系统的使用率打到了90%以上，我就想着给他扩一下容。<br>网上各种找方法….<br>网上一堆复制粘贴的坑逼教程可把我给坑惨了。<br>最后找到了两篇文章综合起来才成功。<br>写出来的目的仅仅为了方便记忆，那么就来说说吧。<br>第一步:<br>使用VMware图像界面工具，对磁盘进行扩容。这一步要先将你的ubantu关机后才可以进行。（必须删除所有快照）点击拓展后就可以指定磁盘大小了。值得注意的是，这里指定的磁盘大小并不是立马分出你给定的磁盘大小。而是给了一个容量上限，你用多少就消耗本机多少空间。所以指定大一点也没关系。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200518.png\" class alt=\"微信截图_20240806200518.png\">\n<p>第二步:<br>下载Gparted镜像文件。<br><a href=\"https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1\">https://jaist.dl.sourceforge.net/project/gparted/gparted-live-testing/1.6.0-3/gparted-live-1.6.0-3-amd64.iso?viasf=1</a></p>\n<p>然后在虚拟机的设置–CD&#x2F;DVD(SATA)里， 在”启动时连接”前打钩 并选择 上面下载好的 Gparted 镜像， 如下图：</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200410.png\" class alt=\"微信截图_20240806200410.png\">\n\n<p>第三步:<br>启动BIOS方法:<br>用记事本打开ubantu.vmx文件，在第一行添加这段代码<br>bios.forceSetupOnce &#x3D; “TRUE”</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/img.png\" class alt=\"img.png\">\n\n<p>保存再打开就可以进入BIOS，这个设置时一次性的，在你开机后这段代码会自动消失，所以设置完之后就不用管了。</p>\n<p>进入BIOS后用←→键选择进入BOOT，然后用↑↓选择到CD-ROM drive，再按” + “号把它一到第一位。然后按F10保存退出。</p>\n<p>开机后即可进入这个界面。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200751.png\" class alt=\"微信截图_20240806200751.png\">\n\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200831.png\" class alt=\"微信截图_20240806200831.png\">\n<p>输入26选择简体中文，敲回车</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200853.png\" class alt=\"微信截图_20240806200853.png\">\n<p>输入0，敲回车</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200913.png\" class alt=\"微信截图_20240806200913.png\">\n<p>进入Gparted的界面会自动弹出Gparted的分区界面。</p>\n<img src=\"/2024/08/06/linux/%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%AF%B9linux%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%AE%B9/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240806200924.png\" class alt=\"微信截图_20240806200924.png\">\n<p>依次删除 linux-swap项， extended项， 最后只剩下sda1和未分配， 然后右键”sda1”项进行调整大小，<br>将磁盘容量调整到合适的大小最好是1024的整数倍，并预留空间(2-4G)作为交换区，交换区的大小为你系统内存的大小。<br>再右键”未分配”进行扩展分区出extended分区，然后新建逻辑分区linux-swap，操作完成后点击APPLY提交。然后退出<br>然后正常启动你的ubantu，再次输入命令df -h查看扩容是否成功</p>\n<p>└─# df -h<br>文件系统        容量  已用  可用 已用% 挂载点<br>udev             14G     0   14G    0% &#x2F;dev<br>tmpfs           2.7G  1.8M  2.7G    1% &#x2F;run<br>&#x2F;dev&#x2F;sda1       144G   34G  104G   25% &#x2F;<br>tmpfs            14G     0   14G    0% &#x2F;dev&#x2F;shm<br>tmpfs           5.0M     0  5.0M    0% &#x2F;run&#x2F;lock<br>tmpfs           2.7G   60K  2.7G    1% &#x2F;run&#x2F;user&#x2F;130<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;71c3fc9620d502f60d702b4a0227cb0ccfe86a05f75c0627a261ac1357a28867&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;684b310e0e5d6cd40b0003fea2920d176d49aacacba87d1364dc0f0aa26d429d&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;40d9810bdeacf6f8af191b96880582457507055ac701cddc05c90bd41a4cc8cd&#x2F;merged<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;3491e006468ecf31bc09cfe8d4ecef08bb37d93d2678f919e0e57f02b76c7cc6&#x2F;merged<br>tmpfs           2.7G   56K  2.7G    1% &#x2F;run&#x2F;user&#x2F;0<br>overlay         144G   34G  104G   25% &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;930ee5b9896adee4a28eec7579f04eda6b9fb74888d7c2fb13d4834d6164d782&#x2F;merged</p>\n"},{"title":"openvpn-部署脚本","date":"2024-08-07T08:02:35.000Z","_content":"1.执行安装脚本：\n[openvpn.sh](../../resource/openvpn.sh)\n\n2.将覆盖的dns等配置注释掉\n``` server\nlocal 192.168.2.124\nport 5001\nproto udp\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\nauth SHA256\ntls-crypt tc.key\ntopology subnet\nserver 10.8.0.0 255.255.255.0\n#push \"block-ipv6\"\n#push \"ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1\"\n#push \"redirect-gateway def1 ipv6 bypass-dhcp\"\nifconfig-pool-persist ipp.txt\n#push \"dhcp-option DNS 100.125.1.250\"\n#push \"block-outside-dns\"\nkeepalive 10 120\ncipher AES-128-GCM\nuser nobody\ngroup nogroup\npersist-key\n```","source":"_posts/linux/openvpn-部署脚本.md","raw":"---\ntitle: openvpn-部署脚本\ndate: 2024-08-07 16:02:35\ncategories: linux\ntag: openvpn\n---\n1.执行安装脚本：\n[openvpn.sh](../../resource/openvpn.sh)\n\n2.将覆盖的dns等配置注释掉\n``` server\nlocal 192.168.2.124\nport 5001\nproto udp\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\nauth SHA256\ntls-crypt tc.key\ntopology subnet\nserver 10.8.0.0 255.255.255.0\n#push \"block-ipv6\"\n#push \"ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1\"\n#push \"redirect-gateway def1 ipv6 bypass-dhcp\"\nifconfig-pool-persist ipp.txt\n#push \"dhcp-option DNS 100.125.1.250\"\n#push \"block-outside-dns\"\nkeepalive 10 120\ncipher AES-128-GCM\nuser nobody\ngroup nogroup\npersist-key\n```","slug":"linux/openvpn-部署脚本","published":1,"updated":"2025-02-22T09:36:31.520Z","_id":"cm7a4vg3l000o8gjd6zpp3uay","comments":1,"layout":"post","photos":[],"content":"<p>1.执行安装脚本：<br><a href=\"../../resource/openvpn.sh\">openvpn.sh</a></p>\n<p>2.将覆盖的dns等配置注释掉</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs server\">local 192.168.2.124<br>port 5001<br>proto udp<br>dev tun<br>ca ca.crt<br>cert server.crt<br>key server.key<br>dh dh.pem<br>auth SHA256<br>tls-crypt tc.key<br>topology subnet<br>server 10.8.0.0 255.255.255.0<br>#push &quot;block-ipv6&quot;<br>#push &quot;ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1&quot;<br>#push &quot;redirect-gateway def1 ipv6 bypass-dhcp&quot;<br>ifconfig-pool-persist ipp.txt<br>#push &quot;dhcp-option DNS 100.125.1.250&quot;<br>#push &quot;block-outside-dns&quot;<br>keepalive 10 120<br>cipher AES-128-GCM<br>user nobody<br>group nogroup<br>persist-key<br></code></pre></td></tr></table></figure>","excerpt":"","more":"<p>1.执行安装脚本：<br><a href=\"../../resource/openvpn.sh\">openvpn.sh</a></p>\n<p>2.将覆盖的dns等配置注释掉</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs server\">local 192.168.2.124<br>port 5001<br>proto udp<br>dev tun<br>ca ca.crt<br>cert server.crt<br>key server.key<br>dh dh.pem<br>auth SHA256<br>tls-crypt tc.key<br>topology subnet<br>server 10.8.0.0 255.255.255.0<br>#push &quot;block-ipv6&quot;<br>#push &quot;ifconfig-ipv6 fddd:1194:1194:1194::2/64 fddd:1194:1194:1194::1&quot;<br>#push &quot;redirect-gateway def1 ipv6 bypass-dhcp&quot;<br>ifconfig-pool-persist ipp.txt<br>#push &quot;dhcp-option DNS 100.125.1.250&quot;<br>#push &quot;block-outside-dns&quot;<br>keepalive 10 120<br>cipher AES-128-GCM<br>user nobody<br>group nogroup<br>persist-key<br></code></pre></td></tr></table></figure>"},{"title":"在linux上使用代理","date":"2024-07-26T01:56:32.000Z","_content":"要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：\n\n### 1. 安装 Clash Verge\n\n首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。\n\n#### 下载 Clash\n\n[mihomo-linux-amd64-v1.18.6.deb](../../resource/mihomo-linux-amd64-v1.18.6.deb)\n```bash\ndpkg -i mihomo-linux-amd64-v1.18.6.deb     \nchmod 777 mihomo-linux-amd64-v1.18.6.deb \nsudo mv mihomo-linux-amd64-v1.18.6 clash\n```\n\n### 2. 配置 Clash\n在使用 Clash Verge 之前，需要先配置 Clash 的 `config.yaml` 文件。\n\n```bash\n拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml\nwget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml\n```\n### 3. 启动 Clash\n在命令行中启动 Clash：\n```bash\nnohup ./clash &\n```\nClash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 `http://localhost:7899` 或者其他配置文件中指定的端口。\n\n\n\n1. **创建代理配置文件**：在Kali系统的Docker配置目录下创建一个名为`/etc/systemd/system/docker.service.d/http-proxy.conf`的文件。如果该目录不存在，请先创建它。\n\n```sh\nsudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n```\n\n2. **配置代理**：在`http-proxy.conf`文件中添加以下内容，将`http://127.0.0.1:7899`替换为你的代理服务器地址和端口。\n\n```ini\n[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n```\n\n3. **重新加载守护进程并重启Docker服务**：\n\n```sh\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n4. **验证代理配置**：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：\n\n```sh\ndocker info\n```\n\n在输出信息中找到`HTTP Proxy`和`HTTPS Proxy`条目，检查它们是否显示了你配置的代理服务器地址。\n\n如果你需要为Docker客户端配置代理（如`docker build`命令），可以在你的shell配置文件（如`~/.bashrc`或`~/.zshrc`）中添加以下行：\n\n```sh\nexport HTTP_PROXY=\"http://your-proxy.example.com:8080\"\nexport HTTPS_PROXY=\"http://your-proxy.example.com:8080\"\nexport NO_PROXY=\"localhost,127.0.0.1\"\n```\n\n保存文件并加载新的配置：\n\n```sh\nsource ~/.bashrc  # 或者 source ~/.zshrc\n```\n\n这样，Docker客户端在运行时也会通过代理服务器进行连接。","source":"_posts/linux/在linux上使用代理.md","raw":"---\ntitle: 在linux上使用代理\ndate: 2024-07-26 09:56:32\ncategories: clash\ntag: 翻墙\n---\n要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：\n\n### 1. 安装 Clash Verge\n\n首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。\n\n#### 下载 Clash\n\n[mihomo-linux-amd64-v1.18.6.deb](../../resource/mihomo-linux-amd64-v1.18.6.deb)\n```bash\ndpkg -i mihomo-linux-amd64-v1.18.6.deb     \nchmod 777 mihomo-linux-amd64-v1.18.6.deb \nsudo mv mihomo-linux-amd64-v1.18.6 clash\n```\n\n### 2. 配置 Clash\n在使用 Clash Verge 之前，需要先配置 Clash 的 `config.yaml` 文件。\n\n```bash\n拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml\nwget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml\n```\n### 3. 启动 Clash\n在命令行中启动 Clash：\n```bash\nnohup ./clash &\n```\nClash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 `http://localhost:7899` 或者其他配置文件中指定的端口。\n\n\n\n1. **创建代理配置文件**：在Kali系统的Docker配置目录下创建一个名为`/etc/systemd/system/docker.service.d/http-proxy.conf`的文件。如果该目录不存在，请先创建它。\n\n```sh\nsudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n```\n\n2. **配置代理**：在`http-proxy.conf`文件中添加以下内容，将`http://127.0.0.1:7899`替换为你的代理服务器地址和端口。\n\n```ini\n[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7899\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n```\n\n3. **重新加载守护进程并重启Docker服务**：\n\n```sh\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n4. **验证代理配置**：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：\n\n```sh\ndocker info\n```\n\n在输出信息中找到`HTTP Proxy`和`HTTPS Proxy`条目，检查它们是否显示了你配置的代理服务器地址。\n\n如果你需要为Docker客户端配置代理（如`docker build`命令），可以在你的shell配置文件（如`~/.bashrc`或`~/.zshrc`）中添加以下行：\n\n```sh\nexport HTTP_PROXY=\"http://your-proxy.example.com:8080\"\nexport HTTPS_PROXY=\"http://your-proxy.example.com:8080\"\nexport NO_PROXY=\"localhost,127.0.0.1\"\n```\n\n保存文件并加载新的配置：\n\n```sh\nsource ~/.bashrc  # 或者 source ~/.zshrc\n```\n\n这样，Docker客户端在运行时也会通过代理服务器进行连接。","slug":"linux/在linux上使用代理","published":1,"updated":"2025-02-22T09:39:54.462Z","_id":"cm7a4vg3l000r8gjdd7n25r41","comments":1,"layout":"post","photos":[],"content":"<p>要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：</p>\n<h3 id=\"1-安装-Clash-Verge\"><a href=\"#1-安装-Clash-Verge\" class=\"headerlink\" title=\"1. 安装 Clash Verge\"></a>1. 安装 Clash Verge</h3><p>首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。</p>\n<h4 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h4><p><a href=\"../../resource/mihomo-linux-amd64-v1.18.6.deb\">mihomo-linux-amd64-v1.18.6.deb</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -i mihomo-linux-amd64-v1.18.6.deb     <br><span class=\"hljs-built_in\">chmod</span> 777 mihomo-linux-amd64-v1.18.6.deb <br>sudo <span class=\"hljs-built_in\">mv</span> mihomo-linux-amd64-v1.18.6 clash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置-Clash\"><a href=\"#2-配置-Clash\" class=\"headerlink\" title=\"2. 配置 Clash\"></a>2. 配置 Clash</h3><p>在使用 Clash Verge 之前，需要先配置 Clash 的 <code>config.yaml</code> 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<br>wget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-启动-Clash\"><a href=\"#3-启动-Clash\" class=\"headerlink\" title=\"3. 启动 Clash\"></a>3. 启动 Clash</h3><p>在命令行中启动 Clash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> ./clash &amp;<br></code></pre></td></tr></table></figure>\n<p>Clash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 <code>http://localhost:7899</code> 或者其他配置文件中指定的端口。</p>\n<ol>\n<li><strong>创建代理配置文件</strong>：在Kali系统的Docker配置目录下创建一个名为<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>的文件。如果该目录不存在，请先创建它。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>配置代理</strong>：在<code>http-proxy.conf</code>文件中添加以下内容，将<code>http://127.0.0.1:7899</code>替换为你的代理服务器地址和端口。</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><strong>重新加载守护进程并重启Docker服务</strong>：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>验证代理配置</strong>：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker info<br></code></pre></td></tr></table></figure>\n\n<p>在输出信息中找到<code>HTTP Proxy</code>和<code>HTTPS Proxy</code>条目，检查它们是否显示了你配置的代理服务器地址。</p>\n<p>如果你需要为Docker客户端配置代理（如<code>docker build</code>命令），可以在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> HTTPS_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> NO_PROXY=<span class=\"hljs-string\">&quot;localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存文件并加载新的配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">source</span> ~/.bashrc  <span class=\"hljs-comment\"># 或者 source ~/.zshrc</span><br></code></pre></td></tr></table></figure>\n\n<p>这样，Docker客户端在运行时也会通过代理服务器进行连接。</p>\n","excerpt":"","more":"<p>要在 Linux 命令行下使用 Clash Verge，需要按照以下步骤进行：</p>\n<h3 id=\"1-安装-Clash-Verge\"><a href=\"#1-安装-Clash-Verge\" class=\"headerlink\" title=\"1. 安装 Clash Verge\"></a>1. 安装 Clash Verge</h3><p>首先，确保你的系统已经安装了 Clash Core。Clash Verge 是一个图形界面管理工具，而 Clash 本身是需要运行在后台的代理工具。</p>\n<h4 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h4><p><a href=\"../../resource/mihomo-linux-amd64-v1.18.6.deb\">mihomo-linux-amd64-v1.18.6.deb</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">dpkg -i mihomo-linux-amd64-v1.18.6.deb     <br><span class=\"hljs-built_in\">chmod</span> 777 mihomo-linux-amd64-v1.18.6.deb <br>sudo <span class=\"hljs-built_in\">mv</span> mihomo-linux-amd64-v1.18.6 clash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-配置-Clash\"><a href=\"#2-配置-Clash\" class=\"headerlink\" title=\"2. 配置 Clash\"></a>2. 配置 Clash</h3><p>在使用 Clash Verge 之前，需要先配置 Clash 的 <code>config.yaml</code> 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">拷贝windows上的配置：D:\\soft\\clash-verge-1.6.2\\.config\\io.github.clash-verge-rev.clash-verge-rev/clash-verge.yaml<br>wget -O /root/.config/mihomo/config.yaml 你配置好的clash-verge.yaml<br></code></pre></td></tr></table></figure>\n<h3 id=\"3-启动-Clash\"><a href=\"#3-启动-Clash\" class=\"headerlink\" title=\"3. 启动 Clash\"></a>3. 启动 Clash</h3><p>在命令行中启动 Clash：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> ./clash &amp;<br></code></pre></td></tr></table></figure>\n<p>Clash Verge 启动后，将打开一个本地的图形界面，你可以通过浏览器访问该界面，通常是 <code>http://localhost:7899</code> 或者其他配置文件中指定的端口。</p>\n<ol>\n<li><strong>创建代理配置文件</strong>：在Kali系统的Docker配置目录下创建一个名为<code>/etc/systemd/system/docker.service.d/http-proxy.conf</code>的文件。如果该目录不存在，请先创建它。</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>配置代理</strong>：在<code>http-proxy.conf</code>文件中添加以下内容，将<code>http://127.0.0.1:7899</code>替换为你的代理服务器地址和端口。</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://127.0.0.1:7899&quot;</span><br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><strong>重新加载守护进程并重启Docker服务</strong>：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>验证代理配置</strong>：你可以通过以下命令来验证Docker是否通过代理服务器进行连接：</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker info<br></code></pre></td></tr></table></figure>\n\n<p>在输出信息中找到<code>HTTP Proxy</code>和<code>HTTPS Proxy</code>条目，检查它们是否显示了你配置的代理服务器地址。</p>\n<p>如果你需要为Docker客户端配置代理（如<code>docker build</code>命令），可以在你的shell配置文件（如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> HTTPS_PROXY=<span class=\"hljs-string\">&quot;http://your-proxy.example.com:8080&quot;</span><br><span class=\"hljs-built_in\">export</span> NO_PROXY=<span class=\"hljs-string\">&quot;localhost,127.0.0.1&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>保存文件并加载新的配置：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">source</span> ~/.bashrc  <span class=\"hljs-comment\"># 或者 source ~/.zshrc</span><br></code></pre></td></tr></table></figure>\n\n<p>这样，Docker客户端在运行时也会通过代理服务器进行连接。</p>\n"},{"title":"对linux磁盘进行无损扩容","date":"2024-08-05T12:37:35.000Z","_content":"\n执行 lsblk 命令得到的数据如下\n   ```bash\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS\nsda      8:0    0  150G  0 disk \n├─sda1   8:1    0   49G  0 part /\n├─sda2   8:2    0    1K  0 part \n└─sda5   8:5    0  975M  0 part [SWAP]\nsr0     11:0    1  4.6G  0 rom  \n   ```\n此时，想将sda1从49G扩容到150G。进行无损扩展 `/dev/sda1` 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 `fdisk` 或 `parted` 工具来调整分区大小，然后扩展文件系统。\n\n### 无损扩展分区的步骤\n\n#### 1. **备份数据**\n\n在进行任何磁盘操作之前，务必备份重要数据以防万一。\n\n#### 2. **使用 `parted` 调整分区大小**\n\n假设现有的 `/dev/sda1` 是 `ext4` 文件系统。\n\n1. **查看当前磁盘布局**\n\n   ```bash\n   lsblk\n   sudo fdisk -l /dev/sda\n   ```\n\n2. **调整分区大小**\n\n   使用 `parted` 调整分区大小。\n\n   ```bash\n   sudo parted /dev/sda\n   ```\n\n   在 `parted` 交互界面中执行以下步骤：\n\n   ```bash\n   (parted) print\n   ```\n\n   确认分区表，并记下 `/dev/sda1` 的起始位置（例如 `2048s`）。\n\n   ```bash\n   (parted) resizepart 1 150GB\n   ```\n\n   这会扩展分区1到150GB。\n\n   ```bash\n   (parted) quit\n   ```\n\n#### 3. **更新分区表**\n\n有时，系统需要重新加载分区表。\n\n```bash\nsudo partprobe /dev/sda\n```\n\n#### 4. **扩展文件系统**\n\n根据你的文件系统类型，执行以下步骤来扩展文件系统。\n\n##### 对于 `ext4` 文件系统：\n\n```bash\nsudo resize2fs /dev/sda1\n```\n\n##### 对于 `xfs` 文件系统：\n\n```bash\nsudo xfs_growfs /dev/sda1\n```\n\n#### 5. **验证扩展是否成功**\n\n```bash\ndf -h\n```\n\n### 示例步骤\n\n完整的命令和步骤如下：\n\n```bash\n# 查看当前磁盘布局\nlsblk\nsudo fdisk -l /dev/sda\n\n# 调整分区大小\nsudo parted /dev/sda\n\n# 在 parted 交互界面中\n(parted) print\n(parted) resizepart 1 150GB\n(parted) quit\n\n# 更新分区表\nsudo partprobe /dev/sda\n\n# 扩展文件系统（假设是 ext4 文件系统）\nsudo resize2fs /dev/sda1\n\n# 验证扩展是否成功\ndf -h\n```\n\n### 注意事项\n\n- 确保你的 `/dev/sda1` 分区后面有足够的未分配空间来扩展到 150GB。\n- 在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。\n- 如果你无法进入系统，可以通过 live CD/USB 启动系统并执行这些操作。\n\n这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。","source":"_posts/linux/对linux磁盘进行无损扩容.md","raw":"---\ntitle: 对linux磁盘进行无损扩容\ndate: 2024-08-05 20:37:35\ncategories: linux\ntag: 扩容磁盘\n---\n\n执行 lsblk 命令得到的数据如下\n   ```bash\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS\nsda      8:0    0  150G  0 disk \n├─sda1   8:1    0   49G  0 part /\n├─sda2   8:2    0    1K  0 part \n└─sda5   8:5    0  975M  0 part [SWAP]\nsr0     11:0    1  4.6G  0 rom  \n   ```\n此时，想将sda1从49G扩容到150G。进行无损扩展 `/dev/sda1` 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 `fdisk` 或 `parted` 工具来调整分区大小，然后扩展文件系统。\n\n### 无损扩展分区的步骤\n\n#### 1. **备份数据**\n\n在进行任何磁盘操作之前，务必备份重要数据以防万一。\n\n#### 2. **使用 `parted` 调整分区大小**\n\n假设现有的 `/dev/sda1` 是 `ext4` 文件系统。\n\n1. **查看当前磁盘布局**\n\n   ```bash\n   lsblk\n   sudo fdisk -l /dev/sda\n   ```\n\n2. **调整分区大小**\n\n   使用 `parted` 调整分区大小。\n\n   ```bash\n   sudo parted /dev/sda\n   ```\n\n   在 `parted` 交互界面中执行以下步骤：\n\n   ```bash\n   (parted) print\n   ```\n\n   确认分区表，并记下 `/dev/sda1` 的起始位置（例如 `2048s`）。\n\n   ```bash\n   (parted) resizepart 1 150GB\n   ```\n\n   这会扩展分区1到150GB。\n\n   ```bash\n   (parted) quit\n   ```\n\n#### 3. **更新分区表**\n\n有时，系统需要重新加载分区表。\n\n```bash\nsudo partprobe /dev/sda\n```\n\n#### 4. **扩展文件系统**\n\n根据你的文件系统类型，执行以下步骤来扩展文件系统。\n\n##### 对于 `ext4` 文件系统：\n\n```bash\nsudo resize2fs /dev/sda1\n```\n\n##### 对于 `xfs` 文件系统：\n\n```bash\nsudo xfs_growfs /dev/sda1\n```\n\n#### 5. **验证扩展是否成功**\n\n```bash\ndf -h\n```\n\n### 示例步骤\n\n完整的命令和步骤如下：\n\n```bash\n# 查看当前磁盘布局\nlsblk\nsudo fdisk -l /dev/sda\n\n# 调整分区大小\nsudo parted /dev/sda\n\n# 在 parted 交互界面中\n(parted) print\n(parted) resizepart 1 150GB\n(parted) quit\n\n# 更新分区表\nsudo partprobe /dev/sda\n\n# 扩展文件系统（假设是 ext4 文件系统）\nsudo resize2fs /dev/sda1\n\n# 验证扩展是否成功\ndf -h\n```\n\n### 注意事项\n\n- 确保你的 `/dev/sda1` 分区后面有足够的未分配空间来扩展到 150GB。\n- 在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。\n- 如果你无法进入系统，可以通过 live CD/USB 启动系统并执行这些操作。\n\n这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。","slug":"linux/对linux磁盘进行无损扩容","published":1,"updated":"2025-02-18T06:25:13.114Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3m000u8gjdd1n224xz","content":"<p>执行 lsblk 命令得到的数据如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0  150G  0 disk <br>├─sda1   8:1    0   49G  0 part /<br>├─sda2   8:2    0    1K  0 part <br>└─sda5   8:5    0  975M  0 part [SWAP]<br>sr0     11:0    1  4.6G  0 rom  <br></code></pre></td></tr></table></figure><br>此时，想将sda1从49G扩容到150G。进行无损扩展 <code>/dev/sda1</code> 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 <code>fdisk</code> 或 <code>parted</code> 工具来调整分区大小，然后扩展文件系统。</p>\n<h3 id=\"无损扩展分区的步骤\"><a href=\"#无损扩展分区的步骤\" class=\"headerlink\" title=\"无损扩展分区的步骤\"></a>无损扩展分区的步骤</h3><h4 id=\"1-备份数据\"><a href=\"#1-备份数据\" class=\"headerlink\" title=\"1. 备份数据\"></a>1. <strong>备份数据</strong></h4><p>在进行任何磁盘操作之前，务必备份重要数据以防万一。</p>\n<h4 id=\"2-使用-parted-调整分区大小\"><a href=\"#2-使用-parted-调整分区大小\" class=\"headerlink\" title=\"2. 使用 parted 调整分区大小\"></a>2. <strong>使用 <code>parted</code> 调整分区大小</strong></h4><p>假设现有的 <code>/dev/sda1</code> 是 <code>ext4</code> 文件系统。</p>\n<ol>\n<li><p><strong>查看当前磁盘布局</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk<br>sudo fdisk -l /dev/sda<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>调整分区大小</strong></p>\n<p>使用 <code>parted</code> 调整分区大小。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo parted /dev/sda<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>parted</code> 交互界面中执行以下步骤：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) <span class=\"hljs-built_in\">print</span><br></code></pre></td></tr></table></figure>\n\n<p>确认分区表，并记下 <code>/dev/sda1</code> 的起始位置（例如 <code>2048s</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) resizepart 1 150GB<br></code></pre></td></tr></table></figure>\n\n<p>这会扩展分区1到150GB。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) quit<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"3-更新分区表\"><a href=\"#3-更新分区表\" class=\"headerlink\" title=\"3. 更新分区表\"></a>3. <strong>更新分区表</strong></h4><p>有时，系统需要重新加载分区表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo partprobe /dev/sda<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-扩展文件系统\"><a href=\"#4-扩展文件系统\" class=\"headerlink\" title=\"4. 扩展文件系统\"></a>4. <strong>扩展文件系统</strong></h4><p>根据你的文件系统类型，执行以下步骤来扩展文件系统。</p>\n<h5 id=\"对于-ext4-文件系统：\"><a href=\"#对于-ext4-文件系统：\" class=\"headerlink\" title=\"对于 ext4 文件系统：\"></a>对于 <code>ext4</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"对于-xfs-文件系统：\"><a href=\"#对于-xfs-文件系统：\" class=\"headerlink\" title=\"对于 xfs 文件系统：\"></a>对于 <code>xfs</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo xfs_growfs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-验证扩展是否成功\"><a href=\"#5-验证扩展是否成功\" class=\"headerlink\" title=\"5. 验证扩展是否成功\"></a>5. <strong>验证扩展是否成功</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"示例步骤\"><a href=\"#示例步骤\" class=\"headerlink\" title=\"示例步骤\"></a>示例步骤</h3><p>完整的命令和步骤如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前磁盘布局</span><br>lsblk<br>sudo fdisk -l /dev/sda<br><br><span class=\"hljs-comment\"># 调整分区大小</span><br>sudo parted /dev/sda<br><br><span class=\"hljs-comment\"># 在 parted 交互界面中</span><br>(parted) <span class=\"hljs-built_in\">print</span><br>(parted) resizepart 1 150GB<br>(parted) quit<br><br><span class=\"hljs-comment\"># 更新分区表</span><br>sudo partprobe /dev/sda<br><br><span class=\"hljs-comment\"># 扩展文件系统（假设是 ext4 文件系统）</span><br>sudo resize2fs /dev/sda1<br><br><span class=\"hljs-comment\"># 验证扩展是否成功</span><br><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>确保你的 <code>/dev/sda1</code> 分区后面有足够的未分配空间来扩展到 150GB。</li>\n<li>在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。</li>\n<li>如果你无法进入系统，可以通过 live CD&#x2F;USB 启动系统并执行这些操作。</li>\n</ul>\n<p>这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。</p>\n","excerpt":"","more":"<p>执行 lsblk 命令得到的数据如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS<br>sda      8:0    0  150G  0 disk <br>├─sda1   8:1    0   49G  0 part /<br>├─sda2   8:2    0    1K  0 part <br>└─sda5   8:5    0  975M  0 part [SWAP]<br>sr0     11:0    1  4.6G  0 rom  <br></code></pre></td></tr></table></figure><br>此时，想将sda1从49G扩容到150G。进行无损扩展 <code>/dev/sda1</code> 的步骤较为复杂，但可以通过以下步骤来安全地扩展分区而不丢失数据。这包括使用 <code>fdisk</code> 或 <code>parted</code> 工具来调整分区大小，然后扩展文件系统。</p>\n<h3 id=\"无损扩展分区的步骤\"><a href=\"#无损扩展分区的步骤\" class=\"headerlink\" title=\"无损扩展分区的步骤\"></a>无损扩展分区的步骤</h3><h4 id=\"1-备份数据\"><a href=\"#1-备份数据\" class=\"headerlink\" title=\"1. 备份数据\"></a>1. <strong>备份数据</strong></h4><p>在进行任何磁盘操作之前，务必备份重要数据以防万一。</p>\n<h4 id=\"2-使用-parted-调整分区大小\"><a href=\"#2-使用-parted-调整分区大小\" class=\"headerlink\" title=\"2. 使用 parted 调整分区大小\"></a>2. <strong>使用 <code>parted</code> 调整分区大小</strong></h4><p>假设现有的 <code>/dev/sda1</code> 是 <code>ext4</code> 文件系统。</p>\n<ol>\n<li><p><strong>查看当前磁盘布局</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lsblk<br>sudo fdisk -l /dev/sda<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>调整分区大小</strong></p>\n<p>使用 <code>parted</code> 调整分区大小。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo parted /dev/sda<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>parted</code> 交互界面中执行以下步骤：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) <span class=\"hljs-built_in\">print</span><br></code></pre></td></tr></table></figure>\n\n<p>确认分区表，并记下 <code>/dev/sda1</code> 的起始位置（例如 <code>2048s</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) resizepart 1 150GB<br></code></pre></td></tr></table></figure>\n\n<p>这会扩展分区1到150GB。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">(parted) quit<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"3-更新分区表\"><a href=\"#3-更新分区表\" class=\"headerlink\" title=\"3. 更新分区表\"></a>3. <strong>更新分区表</strong></h4><p>有时，系统需要重新加载分区表。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo partprobe /dev/sda<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-扩展文件系统\"><a href=\"#4-扩展文件系统\" class=\"headerlink\" title=\"4. 扩展文件系统\"></a>4. <strong>扩展文件系统</strong></h4><p>根据你的文件系统类型，执行以下步骤来扩展文件系统。</p>\n<h5 id=\"对于-ext4-文件系统：\"><a href=\"#对于-ext4-文件系统：\" class=\"headerlink\" title=\"对于 ext4 文件系统：\"></a>对于 <code>ext4</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"对于-xfs-文件系统：\"><a href=\"#对于-xfs-文件系统：\" class=\"headerlink\" title=\"对于 xfs 文件系统：\"></a>对于 <code>xfs</code> 文件系统：</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo xfs_growfs /dev/sda1<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"5-验证扩展是否成功\"><a href=\"#5-验证扩展是否成功\" class=\"headerlink\" title=\"5. 验证扩展是否成功\"></a>5. <strong>验证扩展是否成功</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"示例步骤\"><a href=\"#示例步骤\" class=\"headerlink\" title=\"示例步骤\"></a>示例步骤</h3><p>完整的命令和步骤如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前磁盘布局</span><br>lsblk<br>sudo fdisk -l /dev/sda<br><br><span class=\"hljs-comment\"># 调整分区大小</span><br>sudo parted /dev/sda<br><br><span class=\"hljs-comment\"># 在 parted 交互界面中</span><br>(parted) <span class=\"hljs-built_in\">print</span><br>(parted) resizepart 1 150GB<br>(parted) quit<br><br><span class=\"hljs-comment\"># 更新分区表</span><br>sudo partprobe /dev/sda<br><br><span class=\"hljs-comment\"># 扩展文件系统（假设是 ext4 文件系统）</span><br>sudo resize2fs /dev/sda1<br><br><span class=\"hljs-comment\"># 验证扩展是否成功</span><br><span class=\"hljs-built_in\">df</span> -h<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>确保你的 <code>/dev/sda1</code> 分区后面有足够的未分配空间来扩展到 150GB。</li>\n<li>在操作之前，确保系统分区未被使用或者在单用户模式下进行操作，以防止数据损坏。</li>\n<li>如果你无法进入系统，可以通过 live CD&#x2F;USB 启动系统并执行这些操作。</li>\n</ul>\n<p>这些步骤旨在提供一种相对安全的方法来无损扩展分区。如果对操作不熟悉，建议请教专业人士或使用专业的分区管理软件进行操作。</p>\n"},{"title":"解读redis分布式锁核心逻辑","date":"2024-07-30T02:07:27.000Z","_content":"   ```lua\n  local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); if value == false then insertable = true; else local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[5]); if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then insertable = true; end; end; if insertable == true then if tonumber(ARGV[2]) > 0 then redis.call('zadd', KEYS[2], ARGV[2], ARGV[5]); else redis.call('zrem', KEYS[2], ARGV[5]); end; if tonumber(ARGV[3]) > 0 then redis.call('zadd', KEYS[3], ARGV[3], ARGV[5]); else redis.call('zrem', KEYS[3], ARGV[5]); end; local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size')); if maxSize ~= nil and maxSize ~= 0 then     local currentTime = tonumber(ARGV[1]);     local lastAccessTimeSetName = KEYS[5]; local mode = redis.call('hget', KEYS[7], 'mode'); if mode == false or mode == 'LRU' then redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5]); end;     local cacheSize = tonumber(redis.call('hlen', KEYS[1]));     if cacheSize >= maxSize then         local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize);         for index, lruItem in ipairs(lruItems) do             if lruItem and lruItem ~= ARGV[5] then                 local lruItemValue = redis.call('hget', KEYS[1], lruItem);                 redis.call('hdel', KEYS[1], lruItem);                 redis.call('zrem', KEYS[2], lruItem);                 redis.call('zrem', KEYS[3], lruItem);                 redis.call('zrem', lastAccessTimeSetName, lruItem);                 if lruItemValue ~= false then                 local removedChannelName = KEYS[6]; local ttl, obj = struct.unpack('dLc0', lruItemValue);                    local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj);                redis.call('publish', removedChannelName, msg); end;             end;         end;     end; if mode == 'LFU' then redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]); end; end; local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6]); redis.call('hset', KEYS[1], ARGV[5], val); local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6]); redis.call('publish', KEYS[4], msg); return nil; else local t, val = struct.unpack('dLc0', value); redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5]); return val; end; \n   ```\n\n这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：\n- 判断是否需要插入或更新缓存。\n- 处理缓存的过期逻辑。\n- 实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。\n- 在缓存项插入或更新时发布相关消息。\n\n具体的解读如下：\n\n1. **初始化和获取当前值**：\n   ```lua\n   local insertable = false\n   local value = redis.call('hget', KEYS[1], ARGV[5])\n   ```\n\n2. **判断当前缓存项是否存在**：\n    - 如果不存在，则设置`insertable`为`true`，表示可以插入新的缓存项。\n    - 如果存在，继续判断其过期时间。\n   ```lua\n   if value == false then \n       insertable = true \n   else\n       local t, val = struct.unpack('dLc0', value)\n       local expireDate = 92233720368547758\n       local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5])\n       if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end\n       if t ~= 0 then\n           local expireIdle = redis.call('zscore', KEYS[3], ARGV[5])\n           if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end\n       end\n       if expireDate <= tonumber(ARGV[1]) then insertable = true end\n   end\n   ```\n\n3. **处理可插入的情况**：\n    - 更新或删除过期时间。\n    - 检查缓存大小，并根据LRU或LFU策略进行淘汰。\n   ```lua\n   if insertable == true then \n       if tonumber(ARGV[2]) > 0 then \n           redis.call('zadd', KEYS[2], ARGV[2], ARGV[5])\n       else \n           redis.call('zrem', KEYS[2], ARGV[5]) \n       end\n       if tonumber(ARGV[3]) > 0 then \n           redis.call('zadd', KEYS[3], ARGV[3], ARGV[5])\n       else \n           redis.call('zrem', KEYS[3], ARGV[5]) \n       end\n       local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size'))\n       if maxSize ~= nil and maxSize ~= 0 then\n           local currentTime = tonumber(ARGV[1])\n           local lastAccessTimeSetName = KEYS[5]\n           local mode = redis.call('hget', KEYS[7], 'mode')\n           if mode == false or mode == 'LRU' then \n               redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5])\n           end\n           local cacheSize = tonumber(redis.call('hlen', KEYS[1]))\n           if cacheSize >= maxSize then\n               local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize)\n               for index, lruItem in ipairs(lruItems) do\n                   if lruItem and lruItem ~= ARGV[5] then\n                       local lruItemValue = redis.call('hget', KEYS[1], lruItem)\n                       redis.call('hdel', KEYS[1], lruItem)\n                       redis.call('zrem', KEYS[2], lruItem)\n                       redis.call('zrem', KEYS[3], lruItem)\n                       redis.call('zrem', lastAccessTimeSetName, lruItem)\n                       if lruItemValue ~= false then\n                           local removedChannelName = KEYS[6]\n                           local ttl, obj = struct.unpack('dLc0', lruItemValue)\n                           local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj)\n                           redis.call('publish', removedChannelName, msg)\n                       end\n                   end\n               end\n           end\n           if mode == 'LFU' then \n               redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]) \n           end\n       end\n       local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6])\n       redis.call('hset', KEYS[1], ARGV[5], val)\n       local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6])\n       redis.call('publish', KEYS[4], msg)\n       return nil\n   ```\n\n4. **处理不可插入的情况**：\n    - 更新过期时间，并返回现有值。\n   ```lua\n   else \n       local t, val = struct.unpack('dLc0', value)\n       redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5])\n       return val\n   end\n   ```\n\n### 参数和键值解释\n\n- `KEYS[1]`: 哈希表存储缓存项。\n- `KEYS[2]`: 有序集合存储过期时间。\n- `KEYS[3]`: 有序集合存储空闲时间。\n- `KEYS[4]`: 频道名称，用于发布缓存项变更消息。\n- `KEYS[5]`: 有序集合存储最近访问时间（LRU模式）。\n- `KEYS[6]`: 频道名称，用于发布被淘汰的缓存项。\n- `KEYS[7]`: 存储缓存配置（如最大尺寸、模式等）。\n\n- `ARGV[1]`: 当前时间戳。\n- `ARGV[2]`: 新的过期时间。\n- `ARGV[3]`: 新的空闲时间。\n- `ARGV[4]`: 新缓存项的TTL。\n- `ARGV[5]`: 缓存项的键名。\n- `ARGV[6]`: 缓存项的值。","source":"_posts/redis/解读redis分布式锁核心逻辑.md","raw":"---\ntitle: 解读redis分布式锁核心逻辑\ndate: 2024-07-30 10:07:27\ncategories: redis\ntag: lua表达式\n---\n   ```lua\n  local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); if value == false then insertable = true; else local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[5]); if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then insertable = true; end; end; if insertable == true then if tonumber(ARGV[2]) > 0 then redis.call('zadd', KEYS[2], ARGV[2], ARGV[5]); else redis.call('zrem', KEYS[2], ARGV[5]); end; if tonumber(ARGV[3]) > 0 then redis.call('zadd', KEYS[3], ARGV[3], ARGV[5]); else redis.call('zrem', KEYS[3], ARGV[5]); end; local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size')); if maxSize ~= nil and maxSize ~= 0 then     local currentTime = tonumber(ARGV[1]);     local lastAccessTimeSetName = KEYS[5]; local mode = redis.call('hget', KEYS[7], 'mode'); if mode == false or mode == 'LRU' then redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5]); end;     local cacheSize = tonumber(redis.call('hlen', KEYS[1]));     if cacheSize >= maxSize then         local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize);         for index, lruItem in ipairs(lruItems) do             if lruItem and lruItem ~= ARGV[5] then                 local lruItemValue = redis.call('hget', KEYS[1], lruItem);                 redis.call('hdel', KEYS[1], lruItem);                 redis.call('zrem', KEYS[2], lruItem);                 redis.call('zrem', KEYS[3], lruItem);                 redis.call('zrem', lastAccessTimeSetName, lruItem);                 if lruItemValue ~= false then                 local removedChannelName = KEYS[6]; local ttl, obj = struct.unpack('dLc0', lruItemValue);                    local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj);                redis.call('publish', removedChannelName, msg); end;             end;         end;     end; if mode == 'LFU' then redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]); end; end; local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6]); redis.call('hset', KEYS[1], ARGV[5], val); local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6]); redis.call('publish', KEYS[4], msg); return nil; else local t, val = struct.unpack('dLc0', value); redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5]); return val; end; \n   ```\n\n这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：\n- 判断是否需要插入或更新缓存。\n- 处理缓存的过期逻辑。\n- 实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。\n- 在缓存项插入或更新时发布相关消息。\n\n具体的解读如下：\n\n1. **初始化和获取当前值**：\n   ```lua\n   local insertable = false\n   local value = redis.call('hget', KEYS[1], ARGV[5])\n   ```\n\n2. **判断当前缓存项是否存在**：\n    - 如果不存在，则设置`insertable`为`true`，表示可以插入新的缓存项。\n    - 如果存在，继续判断其过期时间。\n   ```lua\n   if value == false then \n       insertable = true \n   else\n       local t, val = struct.unpack('dLc0', value)\n       local expireDate = 92233720368547758\n       local expireDateScore = redis.call('zscore', KEYS[2], ARGV[5])\n       if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end\n       if t ~= 0 then\n           local expireIdle = redis.call('zscore', KEYS[3], ARGV[5])\n           if expireIdle ~= false then expireDate = math.min(expireDate, tonumber(expireIdle)) end\n       end\n       if expireDate <= tonumber(ARGV[1]) then insertable = true end\n   end\n   ```\n\n3. **处理可插入的情况**：\n    - 更新或删除过期时间。\n    - 检查缓存大小，并根据LRU或LFU策略进行淘汰。\n   ```lua\n   if insertable == true then \n       if tonumber(ARGV[2]) > 0 then \n           redis.call('zadd', KEYS[2], ARGV[2], ARGV[5])\n       else \n           redis.call('zrem', KEYS[2], ARGV[5]) \n       end\n       if tonumber(ARGV[3]) > 0 then \n           redis.call('zadd', KEYS[3], ARGV[3], ARGV[5])\n       else \n           redis.call('zrem', KEYS[3], ARGV[5]) \n       end\n       local maxSize = tonumber(redis.call('hget', KEYS[7], 'max-size'))\n       if maxSize ~= nil and maxSize ~= 0 then\n           local currentTime = tonumber(ARGV[1])\n           local lastAccessTimeSetName = KEYS[5]\n           local mode = redis.call('hget', KEYS[7], 'mode')\n           if mode == false or mode == 'LRU' then \n               redis.call('zadd', lastAccessTimeSetName, currentTime, ARGV[5])\n           end\n           local cacheSize = tonumber(redis.call('hlen', KEYS[1]))\n           if cacheSize >= maxSize then\n               local lruItems = redis.call('zrange', lastAccessTimeSetName, 0, cacheSize - maxSize)\n               for index, lruItem in ipairs(lruItems) do\n                   if lruItem and lruItem ~= ARGV[5] then\n                       local lruItemValue = redis.call('hget', KEYS[1], lruItem)\n                       redis.call('hdel', KEYS[1], lruItem)\n                       redis.call('zrem', KEYS[2], lruItem)\n                       redis.call('zrem', KEYS[3], lruItem)\n                       redis.call('zrem', lastAccessTimeSetName, lruItem)\n                       if lruItemValue ~= false then\n                           local removedChannelName = KEYS[6]\n                           local ttl, obj = struct.unpack('dLc0', lruItemValue)\n                           local msg = struct.pack('Lc0Lc0', string.len(lruItem), lruItem, string.len(obj), obj)\n                           redis.call('publish', removedChannelName, msg)\n                       end\n                   end\n               end\n           end\n           if mode == 'LFU' then \n               redis.call('zincrby', lastAccessTimeSetName, 1, ARGV[5]) \n           end\n       end\n       local val = struct.pack('dLc0', tonumber(ARGV[4]), string.len(ARGV[6]), ARGV[6])\n       redis.call('hset', KEYS[1], ARGV[5], val)\n       local msg = struct.pack('Lc0Lc0', string.len(ARGV[5]), ARGV[5], string.len(ARGV[6]), ARGV[6])\n       redis.call('publish', KEYS[4], msg)\n       return nil\n   ```\n\n4. **处理不可插入的情况**：\n    - 更新过期时间，并返回现有值。\n   ```lua\n   else \n       local t, val = struct.unpack('dLc0', value)\n       redis.call('zadd', KEYS[3], t + ARGV[1], ARGV[5])\n       return val\n   end\n   ```\n\n### 参数和键值解释\n\n- `KEYS[1]`: 哈希表存储缓存项。\n- `KEYS[2]`: 有序集合存储过期时间。\n- `KEYS[3]`: 有序集合存储空闲时间。\n- `KEYS[4]`: 频道名称，用于发布缓存项变更消息。\n- `KEYS[5]`: 有序集合存储最近访问时间（LRU模式）。\n- `KEYS[6]`: 频道名称，用于发布被淘汰的缓存项。\n- `KEYS[7]`: 存储缓存配置（如最大尺寸、模式等）。\n\n- `ARGV[1]`: 当前时间戳。\n- `ARGV[2]`: 新的过期时间。\n- `ARGV[3]`: 新的空闲时间。\n- `ARGV[4]`: 新缓存项的TTL。\n- `ARGV[5]`: 缓存项的键名。\n- `ARGV[6]`: 缓存项的值。","slug":"redis/解读redis分布式锁核心逻辑","published":1,"updated":"2025-02-18T06:24:40.765Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3n000y8gjd8inehu90","content":"   <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span>; <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>)); <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span>     <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]);     <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]; <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>); <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]));     <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span>         <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize);         <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span>             <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem);                 <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]; <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue);                    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj);                redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg); <span class=\"hljs-keyword\">end</span>;             <span class=\"hljs-keyword\">end</span>;         <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val); <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">return</span> val; <span class=\"hljs-keyword\">end</span>; <br></code></pre></td></tr></table></figure>\n\n<p>这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：</p>\n<ul>\n<li>判断是否需要插入或更新缓存。</li>\n<li>处理缓存的过期逻辑。</li>\n<li>实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。</li>\n<li>在缓存项插入或更新时发布相关消息。</li>\n</ul>\n<p>具体的解读如下：</p>\n<ol>\n<li><p><strong>初始化和获取当前值</strong>：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span><br><span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>判断当前缓存项是否存在</strong>：</p>\n<ul>\n<li>如果不存在，则设置<code>insertable</code>为<code>true</code>，表示可以插入新的缓存项。</li>\n<li>如果存在，继续判断其过期时间。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> <br>    insertable = <span class=\"hljs-literal\">true</span> <br><span class=\"hljs-keyword\">else</span><br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span><br>    <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">end</span><br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理可插入的情况</strong>：</p>\n<ul>\n<li>更新或删除过期时间。</li>\n<li>检查缓存大小，并根据LRU或LFU策略进行淘汰。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>))<br>    <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>])<br>        <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]<br>        <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>)<br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]))<br>        <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span><br>            <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize)<br>            <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span><br>                <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span><br>                    <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem)<br>                    <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span><br>                        <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]<br>                        <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue)<br>                        <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj)<br>                        redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg)<br>                    <span class=\"hljs-keyword\">end</span><br>                <span class=\"hljs-keyword\">end</span><br>            <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]) <br>        <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val)<br>    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理不可插入的情况</strong>：</p>\n<ul>\n<li>更新过期时间，并返回现有值。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">else</span> <br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">return</span> val<br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参数和键值解释\"><a href=\"#参数和键值解释\" class=\"headerlink\" title=\"参数和键值解释\"></a>参数和键值解释</h3><ul>\n<li><p><code>KEYS[1]</code>: 哈希表存储缓存项。</p>\n</li>\n<li><p><code>KEYS[2]</code>: 有序集合存储过期时间。</p>\n</li>\n<li><p><code>KEYS[3]</code>: 有序集合存储空闲时间。</p>\n</li>\n<li><p><code>KEYS[4]</code>: 频道名称，用于发布缓存项变更消息。</p>\n</li>\n<li><p><code>KEYS[5]</code>: 有序集合存储最近访问时间（LRU模式）。</p>\n</li>\n<li><p><code>KEYS[6]</code>: 频道名称，用于发布被淘汰的缓存项。</p>\n</li>\n<li><p><code>KEYS[7]</code>: 存储缓存配置（如最大尺寸、模式等）。</p>\n</li>\n<li><p><code>ARGV[1]</code>: 当前时间戳。</p>\n</li>\n<li><p><code>ARGV[2]</code>: 新的过期时间。</p>\n</li>\n<li><p><code>ARGV[3]</code>: 新的空闲时间。</p>\n</li>\n<li><p><code>ARGV[4]</code>: 新缓存项的TTL。</p>\n</li>\n<li><p><code>ARGV[5]</code>: 缓存项的键名。</p>\n</li>\n<li><p><code>ARGV[6]</code>: 缓存项的值。</p>\n</li>\n</ul>\n","excerpt":"","more":"   <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span>; <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">else</span> redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>)); <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span>     <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]);     <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]; <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>); <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]));     <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span>         <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize);         <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span>             <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem);                 redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem);                 <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span>                 <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]; <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue);                    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj);                redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg); <span class=\"hljs-keyword\">end</span>;             <span class=\"hljs-keyword\">end</span>;         <span class=\"hljs-keyword\">end</span>;     <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">end</span>; <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val); <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>]); redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value); redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>]); <span class=\"hljs-keyword\">return</span> val; <span class=\"hljs-keyword\">end</span>; <br></code></pre></td></tr></table></figure>\n\n<p>这段Lua脚本用于Redis缓存的管理和插入操作，主要功能包括：</p>\n<ul>\n<li>判断是否需要插入或更新缓存。</li>\n<li>处理缓存的过期逻辑。</li>\n<li>实现基于LRU（最近最少使用）或LFU（最少使用频率）策略的缓存淘汰。</li>\n<li>在缓存项插入或更新时发布相关消息。</li>\n</ul>\n<p>具体的解读如下：</p>\n<ol>\n<li><p><strong>初始化和获取当前值</strong>：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">local</span> insertable = <span class=\"hljs-literal\">false</span><br><span class=\"hljs-keyword\">local</span> value = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>判断当前缓存项是否存在</strong>：</p>\n<ul>\n<li>如果不存在，则设置<code>insertable</code>为<code>true</code>，表示可以插入新的缓存项。</li>\n<li>如果存在，继续判断其过期时间。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> value == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> <br>    insertable = <span class=\"hljs-literal\">true</span> <br><span class=\"hljs-keyword\">else</span><br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    <span class=\"hljs-keyword\">local</span> expireDate = <span class=\"hljs-number\">92233720368547758</span><br>    <span class=\"hljs-keyword\">local</span> expireDateScore = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">if</span> expireDateScore ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">tonumber</span>(expireDateScore) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> t ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> expireIdle = redis.call(<span class=\"hljs-string\">&#x27;zscore&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">if</span> expireIdle ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span> expireDate = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">min</span>(expireDate, <span class=\"hljs-built_in\">tonumber</span>(expireIdle)) <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> expireDate &lt;= <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-keyword\">then</span> insertable = <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">end</span><br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理可插入的情况</strong>：</p>\n<ul>\n<li>更新或删除过期时间。</li>\n<li>检查缓存大小，并根据LRU或LFU策略进行淘汰。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">if</span> insertable == <span class=\"hljs-literal\">true</span> <span class=\"hljs-keyword\">then</span> <br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">2</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">3</span>]) &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">else</span> <br>        redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], ARGV[<span class=\"hljs-number\">5</span>]) <br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> maxSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;max-size&#x27;</span>))<br>    <span class=\"hljs-keyword\">if</span> maxSize ~= <span class=\"hljs-literal\">nil</span> <span class=\"hljs-keyword\">and</span> maxSize ~= <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">then</span><br>        <span class=\"hljs-keyword\">local</span> currentTime = <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">1</span>])<br>        <span class=\"hljs-keyword\">local</span> lastAccessTimeSetName = KEYS[<span class=\"hljs-number\">5</span>]<br>        <span class=\"hljs-keyword\">local</span> mode = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">7</span>], <span class=\"hljs-string\">&#x27;mode&#x27;</span>)<br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">or</span> mode == <span class=\"hljs-string\">&#x27;LRU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, lastAccessTimeSetName, currentTime, ARGV[<span class=\"hljs-number\">5</span>])<br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">local</span> cacheSize = <span class=\"hljs-built_in\">tonumber</span>(redis.call(<span class=\"hljs-string\">&#x27;hlen&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>]))<br>        <span class=\"hljs-keyword\">if</span> cacheSize &gt;= maxSize <span class=\"hljs-keyword\">then</span><br>            <span class=\"hljs-keyword\">local</span> lruItems = redis.call(<span class=\"hljs-string\">&#x27;zrange&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">0</span>, cacheSize - maxSize)<br>            <span class=\"hljs-keyword\">for</span> index, lruItem <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">ipairs</span>(lruItems) <span class=\"hljs-keyword\">do</span><br>                <span class=\"hljs-keyword\">if</span> lruItem <span class=\"hljs-keyword\">and</span> lruItem ~= ARGV[<span class=\"hljs-number\">5</span>] <span class=\"hljs-keyword\">then</span><br>                    <span class=\"hljs-keyword\">local</span> lruItemValue = redis.call(<span class=\"hljs-string\">&#x27;hget&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;hdel&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">2</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], lruItem)<br>                    redis.call(<span class=\"hljs-string\">&#x27;zrem&#x27;</span>, lastAccessTimeSetName, lruItem)<br>                    <span class=\"hljs-keyword\">if</span> lruItemValue ~= <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">then</span><br>                        <span class=\"hljs-keyword\">local</span> removedChannelName = KEYS[<span class=\"hljs-number\">6</span>]<br>                        <span class=\"hljs-keyword\">local</span> ttl, obj = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, lruItemValue)<br>                        <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(lruItem), lruItem, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(obj), obj)<br>                        redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, removedChannelName, msg)<br>                    <span class=\"hljs-keyword\">end</span><br>                <span class=\"hljs-keyword\">end</span><br>            <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">end</span><br>        <span class=\"hljs-keyword\">if</span> mode == <span class=\"hljs-string\">&#x27;LFU&#x27;</span> <span class=\"hljs-keyword\">then</span> <br>            redis.call(<span class=\"hljs-string\">&#x27;zincrby&#x27;</span>, lastAccessTimeSetName, <span class=\"hljs-number\">1</span>, ARGV[<span class=\"hljs-number\">5</span>]) <br>        <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">end</span><br>    <span class=\"hljs-keyword\">local</span> val = struct.pack(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, <span class=\"hljs-built_in\">tonumber</span>(ARGV[<span class=\"hljs-number\">4</span>]), <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;hset&#x27;</span>, KEYS[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>], val)<br>    <span class=\"hljs-keyword\">local</span> msg = struct.pack(<span class=\"hljs-string\">&#x27;Lc0Lc0&#x27;</span>, <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">5</span>]), ARGV[<span class=\"hljs-number\">5</span>], <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">len</span>(ARGV[<span class=\"hljs-number\">6</span>]), ARGV[<span class=\"hljs-number\">6</span>])<br>    redis.call(<span class=\"hljs-string\">&#x27;publish&#x27;</span>, KEYS[<span class=\"hljs-number\">4</span>], msg)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>处理不可插入的情况</strong>：</p>\n<ul>\n<li>更新过期时间，并返回现有值。<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\"><span class=\"hljs-keyword\">else</span> <br>    <span class=\"hljs-keyword\">local</span> t, val = struct.<span class=\"hljs-built_in\">unpack</span>(<span class=\"hljs-string\">&#x27;dLc0&#x27;</span>, value)<br>    redis.call(<span class=\"hljs-string\">&#x27;zadd&#x27;</span>, KEYS[<span class=\"hljs-number\">3</span>], t + ARGV[<span class=\"hljs-number\">1</span>], ARGV[<span class=\"hljs-number\">5</span>])<br>    <span class=\"hljs-keyword\">return</span> val<br><span class=\"hljs-keyword\">end</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参数和键值解释\"><a href=\"#参数和键值解释\" class=\"headerlink\" title=\"参数和键值解释\"></a>参数和键值解释</h3><ul>\n<li><p><code>KEYS[1]</code>: 哈希表存储缓存项。</p>\n</li>\n<li><p><code>KEYS[2]</code>: 有序集合存储过期时间。</p>\n</li>\n<li><p><code>KEYS[3]</code>: 有序集合存储空闲时间。</p>\n</li>\n<li><p><code>KEYS[4]</code>: 频道名称，用于发布缓存项变更消息。</p>\n</li>\n<li><p><code>KEYS[5]</code>: 有序集合存储最近访问时间（LRU模式）。</p>\n</li>\n<li><p><code>KEYS[6]</code>: 频道名称，用于发布被淘汰的缓存项。</p>\n</li>\n<li><p><code>KEYS[7]</code>: 存储缓存配置（如最大尺寸、模式等）。</p>\n</li>\n<li><p><code>ARGV[1]</code>: 当前时间戳。</p>\n</li>\n<li><p><code>ARGV[2]</code>: 新的过期时间。</p>\n</li>\n<li><p><code>ARGV[3]</code>: 新的空闲时间。</p>\n</li>\n<li><p><code>ARGV[4]</code>: 新缓存项的TTL。</p>\n</li>\n<li><p><code>ARGV[5]</code>: 缓存项的键名。</p>\n</li>\n<li><p><code>ARGV[6]</code>: 缓存项的值。</p>\n</li>\n</ul>\n"},{"title":"spring_state_machine","date":"2024-09-19T08:35:59.000Z","_content":"Spring Statemachine 是一个用于处理复杂状态机的框架，能够帮助你管理和控制状态转换。以下是如何在 Spring Boot 项目中使用 Spring Statemachine 的基本步骤：\n\n### 1. **添加依赖**\n\n首先，在你的 `pom.xml` 文件中添加 Spring Statemachine 依赖：\n\n```xml\n<dependency>\n    <groupId>org.springframework.statemachine</groupId>\n    <artifactId>spring-statemachine-core</artifactId>\n    <version>3.0.0</version> <!-- 或者使用最新版本 -->\n</dependency>\n```\n\n### 2. **定义状态和事件**\n\n在 Spring Statemachine 中，你需要定义状态和事件。这些通常是枚举类型。\n\n```java\npublic enum States {\n    START,\n    PROCESSING,\n    FINISHED,\n    ERROR\n}\n\npublic enum Events {\n    BEGIN,\n    COMPLETE,\n    FAIL\n}\n```\n\n### 3. **配置状态机**\n\n接下来，你需要配置状态机的状态和事件。你可以创建一个配置类来完成这一工作。\n\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.statemachine.config.EnableStateMachine;\nimport org.springframework.statemachine.config.builders.StateMachineBuilder;\nimport org.springframework.statemachine.config.builders.StateMachineConfigurerAdapter;\nimport org.springframework.statemachine.config.builders.StateMachineStateConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineStateConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;\n\n@Configuration\n@EnableStateMachine\npublic class StateMachineConfig extends StateMachineConfigurerAdapter<States, Events> {\n\n    @Override\n    public void configure(StateMachineStateConfigurer<States, Events> states) throws Exception {\n        states\n            .withStates()\n                .initial(States.START)\n                .state(States.PROCESSING)\n                .state(States.FINISHED)\n                .state(States.ERROR);\n    }\n\n    @Override\n    public void configure(StateMachineTransitionConfigurer<States, Events> transitions) throws Exception {\n        transitions\n            .withExternal()\n                .source(States.START).target(States.PROCESSING).event(Events.BEGIN)\n            .and()\n            .withExternal()\n                .source(States.PROCESSING).target(States.FINISHED).event(Events.COMPLETE)\n            .and()\n            .withExternal()\n                .source(States.PROCESSING).target(States.ERROR).event(Events.FAIL);\n    }\n}\n```\n\n### 4. **使用状态机**\n\n你可以在 Spring 组件中注入状态机并使用它来处理状态转换。\n\n```java\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.statemachine.StateMachine;\nimport org.springframework.statemachine.config.StateMachineFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class StateMachineService {\n\n    @Autowired\n    private StateMachine<States, Events> stateMachine;\n\n    public void startProcess() {\n        stateMachine.sendEvent(Events.BEGIN);\n    }\n\n    public void completeProcess() {\n        stateMachine.sendEvent(Events.COMPLETE);\n    }\n\n    public void failProcess() {\n        stateMachine.sendEvent(Events.FAIL);\n    }\n}\n```\n\n### 5. **运行和测试**\n\n确保你已经启动了 Spring Boot 应用程序，并且在你的服务中调用状态机的方法来触发事件和状态转换。\n\n### 6. **进一步定制**\n\nSpring Statemachine 提供了很多高级功能，比如状态持久化、事件监听器、状态机持久化等。如果你有更多复杂的需求，可以参考 [Spring Statemachine 官方文档](https://docs.spring.io/spring-statemachine/docs/current/reference/html/) 以获取详细的配置信息和示例。\n\n这些是基本的使用步骤，你可以根据实际需要进行更复杂的配置和定制。","source":"_posts/spring-boot/spring-state-machine.md","raw":"---\ntitle: spring_state_machine\ndate: 2024-09-19 16:35:59\ncategories: spring-boot\ntag: 状态机\n---\nSpring Statemachine 是一个用于处理复杂状态机的框架，能够帮助你管理和控制状态转换。以下是如何在 Spring Boot 项目中使用 Spring Statemachine 的基本步骤：\n\n### 1. **添加依赖**\n\n首先，在你的 `pom.xml` 文件中添加 Spring Statemachine 依赖：\n\n```xml\n<dependency>\n    <groupId>org.springframework.statemachine</groupId>\n    <artifactId>spring-statemachine-core</artifactId>\n    <version>3.0.0</version> <!-- 或者使用最新版本 -->\n</dependency>\n```\n\n### 2. **定义状态和事件**\n\n在 Spring Statemachine 中，你需要定义状态和事件。这些通常是枚举类型。\n\n```java\npublic enum States {\n    START,\n    PROCESSING,\n    FINISHED,\n    ERROR\n}\n\npublic enum Events {\n    BEGIN,\n    COMPLETE,\n    FAIL\n}\n```\n\n### 3. **配置状态机**\n\n接下来，你需要配置状态机的状态和事件。你可以创建一个配置类来完成这一工作。\n\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.statemachine.config.EnableStateMachine;\nimport org.springframework.statemachine.config.builders.StateMachineBuilder;\nimport org.springframework.statemachine.config.builders.StateMachineConfigurerAdapter;\nimport org.springframework.statemachine.config.builders.StateMachineStateConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineStateConfigurer;\nimport org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;\n\n@Configuration\n@EnableStateMachine\npublic class StateMachineConfig extends StateMachineConfigurerAdapter<States, Events> {\n\n    @Override\n    public void configure(StateMachineStateConfigurer<States, Events> states) throws Exception {\n        states\n            .withStates()\n                .initial(States.START)\n                .state(States.PROCESSING)\n                .state(States.FINISHED)\n                .state(States.ERROR);\n    }\n\n    @Override\n    public void configure(StateMachineTransitionConfigurer<States, Events> transitions) throws Exception {\n        transitions\n            .withExternal()\n                .source(States.START).target(States.PROCESSING).event(Events.BEGIN)\n            .and()\n            .withExternal()\n                .source(States.PROCESSING).target(States.FINISHED).event(Events.COMPLETE)\n            .and()\n            .withExternal()\n                .source(States.PROCESSING).target(States.ERROR).event(Events.FAIL);\n    }\n}\n```\n\n### 4. **使用状态机**\n\n你可以在 Spring 组件中注入状态机并使用它来处理状态转换。\n\n```java\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.statemachine.StateMachine;\nimport org.springframework.statemachine.config.StateMachineFactory;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class StateMachineService {\n\n    @Autowired\n    private StateMachine<States, Events> stateMachine;\n\n    public void startProcess() {\n        stateMachine.sendEvent(Events.BEGIN);\n    }\n\n    public void completeProcess() {\n        stateMachine.sendEvent(Events.COMPLETE);\n    }\n\n    public void failProcess() {\n        stateMachine.sendEvent(Events.FAIL);\n    }\n}\n```\n\n### 5. **运行和测试**\n\n确保你已经启动了 Spring Boot 应用程序，并且在你的服务中调用状态机的方法来触发事件和状态转换。\n\n### 6. **进一步定制**\n\nSpring Statemachine 提供了很多高级功能，比如状态持久化、事件监听器、状态机持久化等。如果你有更多复杂的需求，可以参考 [Spring Statemachine 官方文档](https://docs.spring.io/spring-statemachine/docs/current/reference/html/) 以获取详细的配置信息和示例。\n\n这些是基本的使用步骤，你可以根据实际需要进行更复杂的配置和定制。","slug":"spring-boot/spring-state-machine","published":1,"updated":"2025-02-18T06:28:00.116Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3n00108gjd2qeggfk5","content":"<p>Spring Statemachine 是一个用于处理复杂状态机的框架，能够帮助你管理和控制状态转换。以下是如何在 Spring Boot 项目中使用 Spring Statemachine 的基本步骤：</p>\n<h3 id=\"1-添加依赖\"><a href=\"#1-添加依赖\" class=\"headerlink\" title=\"1. 添加依赖\"></a>1. <strong>添加依赖</strong></h3><p>首先，在你的 <code>pom.xml</code> 文件中添加 Spring Statemachine 依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.statemachine<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-statemachine-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- 或者使用最新版本 --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-定义状态和事件\"><a href=\"#2-定义状态和事件\" class=\"headerlink\" title=\"2. 定义状态和事件\"></a>2. <strong>定义状态和事件</strong></h3><p>在 Spring Statemachine 中，你需要定义状态和事件。这些通常是枚举类型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">States</span> &#123;<br>    START,<br>    PROCESSING,<br>    FINISHED,<br>    ERROR<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">Events</span> &#123;<br>    BEGIN,<br>    COMPLETE,<br>    FAIL<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-配置状态机\"><a href=\"#3-配置状态机\" class=\"headerlink\" title=\"3. 配置状态机\"></a>3. <strong>配置状态机</strong></h3><p>接下来，你需要配置状态机的状态和事件。你可以创建一个配置类来完成这一工作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Bean;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.EnableStateMachine;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineBuilder;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineConfigurerAdapter;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-meta\">@EnableStateMachine</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StateMachineConfig</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">StateMachineConfigurerAdapter</span>&lt;States, Events&gt; &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">configure</span><span class=\"hljs-params\">(StateMachineStateConfigurer&lt;States, Events&gt; states)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        states<br>            .withStates()<br>                .initial(States.START)<br>                .state(States.PROCESSING)<br>                .state(States.FINISHED)<br>                .state(States.ERROR);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">configure</span><span class=\"hljs-params\">(StateMachineTransitionConfigurer&lt;States, Events&gt; transitions)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        transitions<br>            .withExternal()<br>                .source(States.START).target(States.PROCESSING).event(Events.BEGIN)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.FINISHED).event(Events.COMPLETE)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.ERROR).event(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用状态机\"><a href=\"#4-使用状态机\" class=\"headerlink\" title=\"4. 使用状态机\"></a>4. <strong>使用状态机</strong></h3><p>你可以在 Spring 组件中注入状态机并使用它来处理状态转换。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.StateMachine;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.StateMachineFactory;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Service;<br><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StateMachineService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> StateMachine&lt;States, Events&gt; stateMachine;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">startProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.BEGIN);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">completeProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.COMPLETE);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">failProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-运行和测试\"><a href=\"#5-运行和测试\" class=\"headerlink\" title=\"5. 运行和测试\"></a>5. <strong>运行和测试</strong></h3><p>确保你已经启动了 Spring Boot 应用程序，并且在你的服务中调用状态机的方法来触发事件和状态转换。</p>\n<h3 id=\"6-进一步定制\"><a href=\"#6-进一步定制\" class=\"headerlink\" title=\"6. 进一步定制\"></a>6. <strong>进一步定制</strong></h3><p>Spring Statemachine 提供了很多高级功能，比如状态持久化、事件监听器、状态机持久化等。如果你有更多复杂的需求，可以参考 <a href=\"https://docs.spring.io/spring-statemachine/docs/current/reference/html/\">Spring Statemachine 官方文档</a> 以获取详细的配置信息和示例。</p>\n<p>这些是基本的使用步骤，你可以根据实际需要进行更复杂的配置和定制。</p>\n","excerpt":"","more":"<p>Spring Statemachine 是一个用于处理复杂状态机的框架，能够帮助你管理和控制状态转换。以下是如何在 Spring Boot 项目中使用 Spring Statemachine 的基本步骤：</p>\n<h3 id=\"1-添加依赖\"><a href=\"#1-添加依赖\" class=\"headerlink\" title=\"1. 添加依赖\"></a>1. <strong>添加依赖</strong></h3><p>首先，在你的 <code>pom.xml</code> 文件中添加 Spring Statemachine 依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.statemachine<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-statemachine-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- 或者使用最新版本 --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-定义状态和事件\"><a href=\"#2-定义状态和事件\" class=\"headerlink\" title=\"2. 定义状态和事件\"></a>2. <strong>定义状态和事件</strong></h3><p>在 Spring Statemachine 中，你需要定义状态和事件。这些通常是枚举类型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">States</span> &#123;<br>    START,<br>    PROCESSING,<br>    FINISHED,<br>    ERROR<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">Events</span> &#123;<br>    BEGIN,<br>    COMPLETE,<br>    FAIL<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-配置状态机\"><a href=\"#3-配置状态机\" class=\"headerlink\" title=\"3. 配置状态机\"></a>3. <strong>配置状态机</strong></h3><p>接下来，你需要配置状态机的状态和事件。你可以创建一个配置类来完成这一工作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Bean;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.EnableStateMachine;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineBuilder;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineConfigurerAdapter;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineStateConfigurer;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-meta\">@EnableStateMachine</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StateMachineConfig</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">StateMachineConfigurerAdapter</span>&lt;States, Events&gt; &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">configure</span><span class=\"hljs-params\">(StateMachineStateConfigurer&lt;States, Events&gt; states)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        states<br>            .withStates()<br>                .initial(States.START)<br>                .state(States.PROCESSING)<br>                .state(States.FINISHED)<br>                .state(States.ERROR);<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">configure</span><span class=\"hljs-params\">(StateMachineTransitionConfigurer&lt;States, Events&gt; transitions)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        transitions<br>            .withExternal()<br>                .source(States.START).target(States.PROCESSING).event(Events.BEGIN)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.FINISHED).event(Events.COMPLETE)<br>            .and()<br>            .withExternal()<br>                .source(States.PROCESSING).target(States.ERROR).event(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用状态机\"><a href=\"#4-使用状态机\" class=\"headerlink\" title=\"4. 使用状态机\"></a>4. <strong>使用状态机</strong></h3><p>你可以在 Spring 组件中注入状态机并使用它来处理状态转换。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.StateMachine;<br><span class=\"hljs-keyword\">import</span> org.springframework.statemachine.config.StateMachineFactory;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Service;<br><br><span class=\"hljs-meta\">@Service</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">StateMachineService</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> StateMachine&lt;States, Events&gt; stateMachine;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">startProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.BEGIN);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">completeProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.COMPLETE);<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">failProcess</span><span class=\"hljs-params\">()</span> &#123;<br>        stateMachine.sendEvent(Events.FAIL);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-运行和测试\"><a href=\"#5-运行和测试\" class=\"headerlink\" title=\"5. 运行和测试\"></a>5. <strong>运行和测试</strong></h3><p>确保你已经启动了 Spring Boot 应用程序，并且在你的服务中调用状态机的方法来触发事件和状态转换。</p>\n<h3 id=\"6-进一步定制\"><a href=\"#6-进一步定制\" class=\"headerlink\" title=\"6. 进一步定制\"></a>6. <strong>进一步定制</strong></h3><p>Spring Statemachine 提供了很多高级功能，比如状态持久化、事件监听器、状态机持久化等。如果你有更多复杂的需求，可以参考 <a href=\"https://docs.spring.io/spring-statemachine/docs/current/reference/html/\">Spring Statemachine 官方文档</a> 以获取详细的配置信息和示例。</p>\n<p>这些是基本的使用步骤，你可以根据实际需要进行更复杂的配置和定制。</p>\n"},{"title":"使用切面或拦截器打印异常日志","date":"2024-07-26T09:01:47.000Z","_content":"在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。\n\n### 1. 使用切面（Aspect）记录异常日志\n\nSpring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。\n\n#### 步骤：\n\n1. **添加依赖**：\n   确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保`spring-boot-starter-aop`已经在你的`pom.xml`中。\n\n    ```xml\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-aop</artifactId>\n    </dependency>\n    ```\n\n2. **创建切面类**：\n\n    ```java\n    import org.aspectj.lang.annotation.AfterThrowing;\n    import org.aspectj.lang.annotation.Aspect;\n    import org.springframework.stereotype.Component;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    @Aspect\n    @Component\n    public class ExceptionLoggingAspect {\n\n        private static final Logger logger = LoggerFactory.getLogger(ExceptionLoggingAspect.class);\n\n        // 定义一个切入点，拦截所有方法\n        @AfterThrowing(pointcut = \"execution(* com.yourpackage..*(..))\", throwing = \"exception\")\n        public void logException(Exception exception) {\n            logger.error(\"Exception caught: \", exception);\n        }\n    }\n    ```\n\n   在上述代码中，`@AfterThrowing`注解用于定义在方法抛出异常后执行的通知。`execution(* com.yourpackage..*(..))`表示拦截`com.yourpackage`包及其子包中所有类的所有方法。\n\n### 2. 使用拦截器（Interceptor）记录异常日志\n\nSpring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。\n\n#### 步骤：\n\n1. **创建拦截器类**：\n\n    ```java\n    import org.springframework.stereotype.Component;\n    import org.springframework.web.servlet.HandlerInterceptor;\n    import org.springframework.web.servlet.ModelAndView;\n\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n\n    @Component\n    public class ExceptionLoggingInterceptor implements HandlerInterceptor {\n\n        @Override\n        public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n            return true;\n        }\n\n        @Override\n        public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        }\n\n        @Override\n        public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n            if (ex != null) {\n                // 记录异常日志\n                Logger logger = LoggerFactory.getLogger(handler.getClass());\n                logger.error(\"Exception caught during request processing: \", ex);\n            }\n        }\n    }\n    ```\n\n2. **注册拦截器**：\n\n   在Spring Boot应用中，通过配置类注册拦截器。\n\n    ```java\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.web.servlet.config.annotation.InterceptorRegistry;\n    import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n    @Configuration\n    public class WebConfig implements WebMvcConfigurer {\n\n        @Autowired\n        private ExceptionLoggingInterceptor exceptionLoggingInterceptor;\n\n        @Override\n        public void addInterceptors(InterceptorRegistry registry) {\n            registry.addInterceptor(exceptionLoggingInterceptor);\n        }\n    }\n    ```\n\n### 总结\n\n这两种方式各有优劣：\n\n- **切面（Aspect）**适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。\n- **拦截器（Interceptor）**适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。\n\n选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。","source":"_posts/spring-boot/使用切面或拦截器打印异常日志.md","raw":"---\ntitle: 使用切面或拦截器打印异常日志\ndate: 2024-07-26 17:01:47\ncategories: spring-boot\ntag: 打印异常日志\n---\n在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。\n\n### 1. 使用切面（Aspect）记录异常日志\n\nSpring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。\n\n#### 步骤：\n\n1. **添加依赖**：\n   确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保`spring-boot-starter-aop`已经在你的`pom.xml`中。\n\n    ```xml\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-aop</artifactId>\n    </dependency>\n    ```\n\n2. **创建切面类**：\n\n    ```java\n    import org.aspectj.lang.annotation.AfterThrowing;\n    import org.aspectj.lang.annotation.Aspect;\n    import org.springframework.stereotype.Component;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    @Aspect\n    @Component\n    public class ExceptionLoggingAspect {\n\n        private static final Logger logger = LoggerFactory.getLogger(ExceptionLoggingAspect.class);\n\n        // 定义一个切入点，拦截所有方法\n        @AfterThrowing(pointcut = \"execution(* com.yourpackage..*(..))\", throwing = \"exception\")\n        public void logException(Exception exception) {\n            logger.error(\"Exception caught: \", exception);\n        }\n    }\n    ```\n\n   在上述代码中，`@AfterThrowing`注解用于定义在方法抛出异常后执行的通知。`execution(* com.yourpackage..*(..))`表示拦截`com.yourpackage`包及其子包中所有类的所有方法。\n\n### 2. 使用拦截器（Interceptor）记录异常日志\n\nSpring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。\n\n#### 步骤：\n\n1. **创建拦截器类**：\n\n    ```java\n    import org.springframework.stereotype.Component;\n    import org.springframework.web.servlet.HandlerInterceptor;\n    import org.springframework.web.servlet.ModelAndView;\n\n    import javax.servlet.http.HttpServletRequest;\n    import javax.servlet.http.HttpServletResponse;\n\n    @Component\n    public class ExceptionLoggingInterceptor implements HandlerInterceptor {\n\n        @Override\n        public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n            return true;\n        }\n\n        @Override\n        public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        }\n\n        @Override\n        public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n            if (ex != null) {\n                // 记录异常日志\n                Logger logger = LoggerFactory.getLogger(handler.getClass());\n                logger.error(\"Exception caught during request processing: \", ex);\n            }\n        }\n    }\n    ```\n\n2. **注册拦截器**：\n\n   在Spring Boot应用中，通过配置类注册拦截器。\n\n    ```java\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.web.servlet.config.annotation.InterceptorRegistry;\n    import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n    @Configuration\n    public class WebConfig implements WebMvcConfigurer {\n\n        @Autowired\n        private ExceptionLoggingInterceptor exceptionLoggingInterceptor;\n\n        @Override\n        public void addInterceptors(InterceptorRegistry registry) {\n            registry.addInterceptor(exceptionLoggingInterceptor);\n        }\n    }\n    ```\n\n### 总结\n\n这两种方式各有优劣：\n\n- **切面（Aspect）**适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。\n- **拦截器（Interceptor）**适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。\n\n选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。","slug":"spring-boot/使用切面或拦截器打印异常日志","published":1,"updated":"2025-02-18T06:26:47.387Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3o00148gjd872m7uzz","content":"<p>在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。</p>\n<h3 id=\"1-使用切面（Aspect）记录异常日志\"><a href=\"#1-使用切面（Aspect）记录异常日志\" class=\"headerlink\" title=\"1. 使用切面（Aspect）记录异常日志\"></a>1. 使用切面（Aspect）记录异常日志</h3><p>Spring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>添加依赖</strong>：<br>确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保<code>spring-boot-starter-aop</code>已经在你的<code>pom.xml</code>中。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>创建切面类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.AfterThrowing;<br><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.Aspect;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.slf4j.Logger;<br><span class=\"hljs-keyword\">import</span> org.slf4j.LoggerFactory;<br><br><span class=\"hljs-meta\">@Aspect</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingAspect</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(ExceptionLoggingAspect.class);<br><br>    <span class=\"hljs-comment\">// 定义一个切入点，拦截所有方法</span><br>    <span class=\"hljs-meta\">@AfterThrowing(pointcut = &quot;execution(* com.yourpackage..*(..))&quot;, throwing = &quot;exception&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">logException</span><span class=\"hljs-params\">(Exception exception)</span> &#123;<br>        logger.error(<span class=\"hljs-string\">&quot;Exception caught: &quot;</span>, exception);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上述代码中，<code>@AfterThrowing</code>注解用于定义在方法抛出异常后执行的通知。<code>execution(* com.yourpackage..*(..))</code>表示拦截<code>com.yourpackage</code>包及其子包中所有类的所有方法。</p>\n</li>\n</ol>\n<h3 id=\"2-使用拦截器（Interceptor）记录异常日志\"><a href=\"#2-使用拦截器（Interceptor）记录异常日志\" class=\"headerlink\" title=\"2. 使用拦截器（Interceptor）记录异常日志\"></a>2. 使用拦截器（Interceptor）记录异常日志</h3><p>Spring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。</p>\n<h4 id=\"步骤：-1\"><a href=\"#步骤：-1\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>创建拦截器类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletRequest;<br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingInterceptor</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">HandlerInterceptor</span> &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">preHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">postHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">afterCompletion</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">if</span> (ex != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-comment\">// 记录异常日志</span><br>            <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(handler.getClass());<br>            logger.error(<span class=\"hljs-string\">&quot;Exception caught during request processing: &quot;</span>, ex);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>注册拦截器</strong>：</p>\n<p>在Spring Boot应用中，通过配置类注册拦截器。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WebConfig</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">WebMvcConfigurer</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ExceptionLoggingInterceptor exceptionLoggingInterceptor;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInterceptors</span><span class=\"hljs-params\">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(exceptionLoggingInterceptor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这两种方式各有优劣：</p>\n<ul>\n<li><strong>切面（Aspect）</strong>适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。</li>\n<li><strong>拦截器（Interceptor）</strong>适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。</li>\n</ul>\n<p>选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。</p>\n","excerpt":"","more":"<p>在Spring Boot中，使用切面（Aspect）或拦截器（Interceptor）来捕获异常并记录日志是一种常见的做法。下面介绍如何使用这两种方式来实现。</p>\n<h3 id=\"1-使用切面（Aspect）记录异常日志\"><a href=\"#1-使用切面（Aspect）记录异常日志\" class=\"headerlink\" title=\"1. 使用切面（Aspect）记录异常日志\"></a>1. 使用切面（Aspect）记录异常日志</h3><p>Spring AOP（Aspect-Oriented Programming）允许你定义横切关注点，比如日志记录、事务管理等。可以通过编写一个切面来捕获所有方法中的异常并记录日志。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>添加依赖</strong>：<br>确保你的项目中包含Spring AOP相关依赖。如果你使用的是Maven，确保<code>spring-boot-starter-aop</code>已经在你的<code>pom.xml</code>中。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>创建切面类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.AfterThrowing;<br><span class=\"hljs-keyword\">import</span> org.aspectj.lang.annotation.Aspect;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.slf4j.Logger;<br><span class=\"hljs-keyword\">import</span> org.slf4j.LoggerFactory;<br><br><span class=\"hljs-meta\">@Aspect</span><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingAspect</span> &#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(ExceptionLoggingAspect.class);<br><br>    <span class=\"hljs-comment\">// 定义一个切入点，拦截所有方法</span><br>    <span class=\"hljs-meta\">@AfterThrowing(pointcut = &quot;execution(* com.yourpackage..*(..))&quot;, throwing = &quot;exception&quot;)</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">logException</span><span class=\"hljs-params\">(Exception exception)</span> &#123;<br>        logger.error(<span class=\"hljs-string\">&quot;Exception caught: &quot;</span>, exception);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在上述代码中，<code>@AfterThrowing</code>注解用于定义在方法抛出异常后执行的通知。<code>execution(* com.yourpackage..*(..))</code>表示拦截<code>com.yourpackage</code>包及其子包中所有类的所有方法。</p>\n</li>\n</ol>\n<h3 id=\"2-使用拦截器（Interceptor）记录异常日志\"><a href=\"#2-使用拦截器（Interceptor）记录异常日志\" class=\"headerlink\" title=\"2. 使用拦截器（Interceptor）记录异常日志\"></a>2. 使用拦截器（Interceptor）记录异常日志</h3><p>Spring中的拦截器允许你在HTTP请求处理的各个阶段执行一些操作，可以用来记录异常日志。</p>\n<h4 id=\"步骤：-1\"><a href=\"#步骤：-1\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><p><strong>创建拦截器类</strong>：</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Component;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletRequest;<br><span class=\"hljs-keyword\">import</span> javax.servlet.http.HttpServletResponse;<br><br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExceptionLoggingInterceptor</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">HandlerInterceptor</span> &#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">preHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">postHandle</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">afterCompletion</span><span class=\"hljs-params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"hljs-keyword\">throws</span> Exception &#123;<br>        <span class=\"hljs-keyword\">if</span> (ex != <span class=\"hljs-literal\">null</span>) &#123;<br>            <span class=\"hljs-comment\">// 记录异常日志</span><br>            <span class=\"hljs-type\">Logger</span> <span class=\"hljs-variable\">logger</span> <span class=\"hljs-operator\">=</span> LoggerFactory.getLogger(handler.getClass());<br>            logger.error(<span class=\"hljs-string\">&quot;Exception caught during request processing: &quot;</span>, ex);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>注册拦截器</strong>：</p>\n<p>在Spring Boot应用中，通过配置类注册拦截器。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WebConfig</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">WebMvcConfigurer</span> &#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">private</span> ExceptionLoggingInterceptor exceptionLoggingInterceptor;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInterceptors</span><span class=\"hljs-params\">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(exceptionLoggingInterceptor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这两种方式各有优劣：</p>\n<ul>\n<li><strong>切面（Aspect）</strong>适用于需要在方法级别捕获异常的情况，可以轻松应用于所有方法。</li>\n<li><strong>拦截器（Interceptor）</strong>适用于需要在请求级别捕获异常的情况，更适合Web应用程序中的HTTP请求处理。</li>\n</ul>\n<p>选择哪种方式取决于你的具体需求。如果你希望对所有方法的异常进行统一处理，切面可能更合适；如果你需要对HTTP请求处理的异常进行统一处理，拦截器则更为合适。</p>\n"},{"title":"select for update用法的好处","date":"2024-07-25T11:10:03.000Z","_content":"`SELECT FOR UPDATE` 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：\n\n### 1. **避免脏读、不可重复读和幻读**\n通过使用 `SELECT FOR UPDATE`，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：\n- **脏读**：一个事务可以读取到另一个未提交事务的修改。\n- **不可重复读**：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。\n- **幻读**：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。\n\n### 2. **确保一致性和完整性**\n在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 `SELECT FOR UPDATE` 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。\n\n### 3. **防止丢失更新**\n当多个事务试图同时更新同一行时，`SELECT FOR UPDATE` 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。\n\n### 4. **优化并发控制**\n使用 `SELECT FOR UPDATE` 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。\n\n### 5. **简化编程模型**\n`SELECT FOR UPDATE` 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。\n\n### 使用示例\n```sql\nBEGIN;\nSELECT * FROM accounts WHERE account_id = 1 FOR UPDATE;\n-- 执行一些需要锁定这行的操作，例如更新账户余额\nUPDATE accounts SET balance = balance - 100 WHERE account_id = 1;\nCOMMIT;\n```\n\n在这个示例中，通过 `SELECT FOR UPDATE` 锁定 `account_id = 1` 的行，确保在事务提交之前，没有其他事务可以修改该行。\n\n总的来说，`SELECT FOR UPDATE` 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。","source":"_posts/mysql/select-for-update用法的好处.md","raw":"---\ntitle: select for update用法的好处\ndate: 2024-07-25 19:10:03\ncategories: mysql\ntag: 事务\n---\n`SELECT FOR UPDATE` 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：\n\n### 1. **避免脏读、不可重复读和幻读**\n通过使用 `SELECT FOR UPDATE`，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：\n- **脏读**：一个事务可以读取到另一个未提交事务的修改。\n- **不可重复读**：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。\n- **幻读**：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。\n\n### 2. **确保一致性和完整性**\n在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 `SELECT FOR UPDATE` 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。\n\n### 3. **防止丢失更新**\n当多个事务试图同时更新同一行时，`SELECT FOR UPDATE` 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。\n\n### 4. **优化并发控制**\n使用 `SELECT FOR UPDATE` 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。\n\n### 5. **简化编程模型**\n`SELECT FOR UPDATE` 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。\n\n### 使用示例\n```sql\nBEGIN;\nSELECT * FROM accounts WHERE account_id = 1 FOR UPDATE;\n-- 执行一些需要锁定这行的操作，例如更新账户余额\nUPDATE accounts SET balance = balance - 100 WHERE account_id = 1;\nCOMMIT;\n```\n\n在这个示例中，通过 `SELECT FOR UPDATE` 锁定 `account_id = 1` 的行，确保在事务提交之前，没有其他事务可以修改该行。\n\n总的来说，`SELECT FOR UPDATE` 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。","slug":"mysql/select-for-update用法的好处","published":1,"updated":"2025-02-18T06:28:30.279Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3o00178gjd1p7p6ny6","content":"<p><code>SELECT FOR UPDATE</code> 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：</p>\n<h3 id=\"1-避免脏读、不可重复读和幻读\"><a href=\"#1-避免脏读、不可重复读和幻读\" class=\"headerlink\" title=\"1. 避免脏读、不可重复读和幻读\"></a>1. <strong>避免脏读、不可重复读和幻读</strong></h3><p>通过使用 <code>SELECT FOR UPDATE</code>，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：</p>\n<ul>\n<li><strong>脏读</strong>：一个事务可以读取到另一个未提交事务的修改。</li>\n<li><strong>不可重复读</strong>：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。</li>\n<li><strong>幻读</strong>：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。</li>\n</ul>\n<h3 id=\"2-确保一致性和完整性\"><a href=\"#2-确保一致性和完整性\" class=\"headerlink\" title=\"2. 确保一致性和完整性\"></a>2. <strong>确保一致性和完整性</strong></h3><p>在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 <code>SELECT FOR UPDATE</code> 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。</p>\n<h3 id=\"3-防止丢失更新\"><a href=\"#3-防止丢失更新\" class=\"headerlink\" title=\"3. 防止丢失更新\"></a>3. <strong>防止丢失更新</strong></h3><p>当多个事务试图同时更新同一行时，<code>SELECT FOR UPDATE</code> 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。</p>\n<h3 id=\"4-优化并发控制\"><a href=\"#4-优化并发控制\" class=\"headerlink\" title=\"4. 优化并发控制\"></a>4. <strong>优化并发控制</strong></h3><p>使用 <code>SELECT FOR UPDATE</code> 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。</p>\n<h3 id=\"5-简化编程模型\"><a href=\"#5-简化编程模型\" class=\"headerlink\" title=\"5. 简化编程模型\"></a>5. <strong>简化编程模型</strong></h3><p><code>SELECT FOR UPDATE</code> 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。</p>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">BEGIN</span>;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> accounts <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">UPDATE</span>;<br><span class=\"hljs-comment\">-- 执行一些需要锁定这行的操作，例如更新账户余额</span><br><span class=\"hljs-keyword\">UPDATE</span> accounts <span class=\"hljs-keyword\">SET</span> balance <span class=\"hljs-operator\">=</span> balance <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">100</span> <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">COMMIT</span>;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，通过 <code>SELECT FOR UPDATE</code> 锁定 <code>account_id = 1</code> 的行，确保在事务提交之前，没有其他事务可以修改该行。</p>\n<p>总的来说，<code>SELECT FOR UPDATE</code> 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。</p>\n","excerpt":"","more":"<p><code>SELECT FOR UPDATE</code> 是一种用于数据库管理系统（DBMS）的 SQL 语句，主要用于在事务处理过程中锁定选定的行，防止其他事务修改这些行，直到当前事务完成。这种机制在处理并发访问时尤其有用，以下是其具体好处：</p>\n<h3 id=\"1-避免脏读、不可重复读和幻读\"><a href=\"#1-避免脏读、不可重复读和幻读\" class=\"headerlink\" title=\"1. 避免脏读、不可重复读和幻读\"></a>1. <strong>避免脏读、不可重复读和幻读</strong></h3><p>通过使用 <code>SELECT FOR UPDATE</code>，可以锁定选定的行，确保其他事务无法对这些行进行修改，从而防止以下类型的并发问题：</p>\n<ul>\n<li><strong>脏读</strong>：一个事务可以读取到另一个未提交事务的修改。</li>\n<li><strong>不可重复读</strong>：一个事务在两次读取之间，另一个事务修改了数据，导致两次读取结果不同。</li>\n<li><strong>幻读</strong>：一个事务在两次读取之间，另一个事务插入了新行，导致第二次读取返回更多行。</li>\n</ul>\n<h3 id=\"2-确保一致性和完整性\"><a href=\"#2-确保一致性和完整性\" class=\"headerlink\" title=\"2. 确保一致性和完整性\"></a>2. <strong>确保一致性和完整性</strong></h3><p>在执行复杂的业务逻辑时，例如账户转账、库存更新等，使用 <code>SELECT FOR UPDATE</code> 可以确保在整个事务过程中数据的一致性和完整性。这样可以避免在事务中间其他事务对数据的修改，导致数据不一致。</p>\n<h3 id=\"3-防止丢失更新\"><a href=\"#3-防止丢失更新\" class=\"headerlink\" title=\"3. 防止丢失更新\"></a>3. <strong>防止丢失更新</strong></h3><p>当多个事务试图同时更新同一行时，<code>SELECT FOR UPDATE</code> 可以防止丢失更新问题。它确保一个事务完成后，其他事务才能继续执行更新操作，避免了两个事务的更新互相覆盖。</p>\n<h3 id=\"4-优化并发控制\"><a href=\"#4-优化并发控制\" class=\"headerlink\" title=\"4. 优化并发控制\"></a>4. <strong>优化并发控制</strong></h3><p>使用 <code>SELECT FOR UPDATE</code> 可以提供细粒度的并发控制，通过只锁定必要的行，而不是整个表，从而提高系统的并发性能和资源利用率。</p>\n<h3 id=\"5-简化编程模型\"><a href=\"#5-简化编程模型\" class=\"headerlink\" title=\"5. 简化编程模型\"></a>5. <strong>简化编程模型</strong></h3><p><code>SELECT FOR UPDATE</code> 可以简化开发人员的编程模型，不需要手动处理复杂的锁机制，数据库会自动处理行锁定和释放，从而减少编程错误的机会。</p>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">BEGIN</span>;<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> accounts <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-keyword\">UPDATE</span>;<br><span class=\"hljs-comment\">-- 执行一些需要锁定这行的操作，例如更新账户余额</span><br><span class=\"hljs-keyword\">UPDATE</span> accounts <span class=\"hljs-keyword\">SET</span> balance <span class=\"hljs-operator\">=</span> balance <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">100</span> <span class=\"hljs-keyword\">WHERE</span> account_id <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">COMMIT</span>;<br></code></pre></td></tr></table></figure>\n\n<p>在这个示例中，通过 <code>SELECT FOR UPDATE</code> 锁定 <code>account_id = 1</code> 的行，确保在事务提交之前，没有其他事务可以修改该行。</p>\n<p>总的来说，<code>SELECT FOR UPDATE</code> 提供了一种强大的并发控制机制，帮助确保数据的完整性、一致性，并防止并发修改导致的问题。</p>\n"},{"title":"交易下单时金额变化","date":"2024-09-11T07:14:06.000Z","_content":"\n账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","source":"_posts/交易/交易下单时金额变化.md","raw":"---\ntitle: 交易下单时金额变化\ndate: 2024-09-11 15:14:06\ncategories: 交易\ntag: 账户资金\n---\n\n账户信息:\n\n​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t净值 = 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）\n\n​\t净值 = 可用保证金+已用保证金\n\n​\t浮动盈亏=订单盈亏+手续费+隔夜仓息\n\n\n\n下单时：\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0\n\n​\t\n\n占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50\n\n​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1\n\n\n\n发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40\n\n​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1\n\n\n\n\n\n\n\n","slug":"交易/交易下单时金额变化","published":1,"updated":"2025-02-18T06:27:33.022Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3t00238gjd2p3x1h26","content":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n","excerpt":"","more":"<p>账户信息:</p>\n<p>​\t余额 : 100000 信用 : 0 净值 : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t净值 &#x3D; 余额+信用+浮动盈亏（平仓后，浮动盈亏转为余额）</p>\n<p>​\t净值 &#x3D; 可用保证金+已用保证金</p>\n<p>​\t浮动盈亏&#x3D;订单盈亏+手续费+隔夜仓息</p>\n<p>下单时：</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000 可用保证金 : 100000 已用保证金 : 0 预付款比例 : 0 仓息 : 手续费 : 盈亏 : 0</p>\n<p>​\t</p>\n<p>占用10元的保证金：   浮动盈亏：+1  ，开仓手续费：-50</p>\n<p>​\t余额 : 100000 信用 : 0 净值（通过公式计算） : 100000+1 -50 可用保证金 : 100000 +1 -50  -10  已用保证金 : 10 预付款比例 : 0 仓息 : 手续费 :50  ， 浮动盈亏 : -50 +1  ，订单盈亏：1</p>\n<p>发生平仓：释放占用的10元的保证金：   浮动盈亏：+1，开仓手续费：-50 ， 关仓手续费：-40</p>\n<p>​\t余额 : 100000 -50-40 +1 信用 : 0  净值（通过公式计算） : 100000+1 -50-40  可用保证金 : 100000 +1 -50 -40  -10+10  已用保证金 : 0  预付款比例 : 0 仓息 : 手续费 :  50+40， 浮动盈亏 :0  ，订单盈亏：1</p>\n"},{"title":"学习it网站推荐","date":"2024-06-26T03:06:14.000Z","_content":"\n分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.\n\n## 网站资源\n\n### 技术学习网站\n- 盗版书网站：https://zh.singlelogin.re/\n- 架构师学习 [https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览](https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览 \"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\")\n  ![](学习it网站推荐/image_PEAqPgamQe.png)\n- 源码学习：[https://doocs.github.io/source-code-hunter/#/](https://doocs.github.io/source-code-hunter/#/ \"https://doocs.github.io/source-code-hunter/#/\")\n  ![](学习it网站推荐/image_qBL4LWSs2U.png)\n- 互联网 Java 工程师进阶知识完全扫盲:  [https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲](https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲 \"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\")\n  ![](学习it网站推荐/image_RtiUPlWbme.png)\n- 叶良辰の学习笔记 [https://yangzhiwen911.github.io/zh/guide/](https://yangzhiwen911.github.io/zh/guide/ \"https://yangzhiwen911.github.io/zh/guide/\")\n  ![](学习it网站推荐/image_tMLd_Cap6a.png)\n- 图灵Java架构师学习路线(点击链接看新版本) [https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map](https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map \"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\")\n  ![](学习it网站推荐/image_-m-m1AZh7M.png)\n- [深入架构原理与实践](https://www.thebyte.com.cn/ \"深入架构原理与实践\") [https://www.thebyte.com.cn/](https://www.thebyte.com.cn/ \"https://www.thebyte.com.cn/\");\n  ![](学习it网站推荐/image_zZOb0Uu1MN.png)\n- Kubernetes 实践指南 [https://imroc.cc/kubernetes/](https://imroc.cc/kubernetes/ \"https://imroc.cc/kubernetes/\");\n  vip破解视频  [https://share.xiaole88.com/其他东西/老齐的IT加油站](https://share.xiaole88.com/其他东西/老齐的IT加油站 \"https://share.xiaole88.com/其他东西/老齐的IT加油站\")\n  [https://share.xiaole88.com/K8渗透工具箱](https://share.xiaole88.com/K8渗透工具箱 \"https://share.xiaole88.com/K8渗透工具箱\")\n\n### 工具网站：\n\n- [https://www.flickr.com/](https://www.flickr.com/ \"https://www.flickr.com/\")   好的照片不能我一个人分享\n\n- [https://markmap.js.org/repl](https://markmap.js.org/repl \"https://markmap.js.org/repl\")  将markmap 生成图例\n  ![](学习it网站推荐/image_bUw4GOE3i3.png)\n\n- 苹果id相关：\n  \n  [https://appleid.stryun.top/](https://appleid.stryun.top/ \"https://appleid.stryun.top/\")\n  \n  [https://apple.hutaosubconverter.com/hutao](https://apple.hutaosubconverter.com/hutao \"https://apple.hutaosubconverter.com/hutao\")\n\n### 营销方向学习：\n\n- 宣传图生成 [https://design.palxp.cn/home?tempid=1188](https://design.palxp.cn/home?tempid=1188 \"https://design.palxp.cn/home?tempid=1188\")\n  \n  ![](学习it网站推荐/image_SOZXE0ImbY.png)\n","source":"_posts/分享/学习it网站推荐.md","raw":"---\n\ntitle: 学习it网站推荐\ndate: 2024-06-26 11:06:14\ncategories: 分享\ntag: 网站资源\n\n---\n\n分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.\n\n## 网站资源\n\n### 技术学习网站\n- 盗版书网站：https://zh.singlelogin.re/\n- 架构师学习 [https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览](https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览 \"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\")\n  ![](学习it网站推荐/image_PEAqPgamQe.png)\n- 源码学习：[https://doocs.github.io/source-code-hunter/#/](https://doocs.github.io/source-code-hunter/#/ \"https://doocs.github.io/source-code-hunter/#/\")\n  ![](学习it网站推荐/image_qBL4LWSs2U.png)\n- 互联网 Java 工程师进阶知识完全扫盲:  [https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲](https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲 \"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\")\n  ![](学习it网站推荐/image_RtiUPlWbme.png)\n- 叶良辰の学习笔记 [https://yangzhiwen911.github.io/zh/guide/](https://yangzhiwen911.github.io/zh/guide/ \"https://yangzhiwen911.github.io/zh/guide/\")\n  ![](学习it网站推荐/image_tMLd_Cap6a.png)\n- 图灵Java架构师学习路线(点击链接看新版本) [https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map](https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map \"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\")\n  ![](学习it网站推荐/image_-m-m1AZh7M.png)\n- [深入架构原理与实践](https://www.thebyte.com.cn/ \"深入架构原理与实践\") [https://www.thebyte.com.cn/](https://www.thebyte.com.cn/ \"https://www.thebyte.com.cn/\");\n  ![](学习it网站推荐/image_zZOb0Uu1MN.png)\n- Kubernetes 实践指南 [https://imroc.cc/kubernetes/](https://imroc.cc/kubernetes/ \"https://imroc.cc/kubernetes/\");\n  vip破解视频  [https://share.xiaole88.com/其他东西/老齐的IT加油站](https://share.xiaole88.com/其他东西/老齐的IT加油站 \"https://share.xiaole88.com/其他东西/老齐的IT加油站\")\n  [https://share.xiaole88.com/K8渗透工具箱](https://share.xiaole88.com/K8渗透工具箱 \"https://share.xiaole88.com/K8渗透工具箱\")\n\n### 工具网站：\n\n- [https://www.flickr.com/](https://www.flickr.com/ \"https://www.flickr.com/\")   好的照片不能我一个人分享\n\n- [https://markmap.js.org/repl](https://markmap.js.org/repl \"https://markmap.js.org/repl\")  将markmap 生成图例\n  ![](学习it网站推荐/image_bUw4GOE3i3.png)\n\n- 苹果id相关：\n  \n  [https://appleid.stryun.top/](https://appleid.stryun.top/ \"https://appleid.stryun.top/\")\n  \n  [https://apple.hutaosubconverter.com/hutao](https://apple.hutaosubconverter.com/hutao \"https://apple.hutaosubconverter.com/hutao\")\n\n### 营销方向学习：\n\n- 宣传图生成 [https://design.palxp.cn/home?tempid=1188](https://design.palxp.cn/home?tempid=1188 \"https://design.palxp.cn/home?tempid=1188\")\n  \n  ![](学习it网站推荐/image_SOZXE0ImbY.png)\n","slug":"分享/学习it网站推荐","published":1,"updated":"2025-02-18T06:25:33.700Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3t00248gjd9tum3v6h","content":"<p>分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.</p>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><h3 id=\"技术学习网站\"><a href=\"#技术学习网站\" class=\"headerlink\" title=\"技术学习网站\"></a>技术学习网站</h3><ul>\n<li>盗版书网站：<a href=\"https://zh.singlelogin.re/\">https://zh.singlelogin.re/</a></li>\n<li>架构师学习 <a href=\"https://bugstack.cn/md/other/guide-to-reading.html#%E4%B8%80%E3%80%81%E6%9C%AC%E7%AB%99%E7%9F%A5%E8%AF%86%E9%98%85%E8%A7%88\" title=\"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\">https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_PEAqPgamQe.png\" class></li>\n<li>源码学习：<a href=\"https://doocs.github.io/source-code-hunter/#/\" title=\"https://doocs.github.io/source-code-hunter/#/\">https://doocs.github.io/source-code-hunter/#/</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_qBL4LWSs2U.png\" class></li>\n<li>互联网 Java 工程师进阶知识完全扫盲:  <a href=\"https://doocs.github.io/advanced-java/#/?id=%E4%BA%92%E8%81%94%E7%BD%91-java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AE%8C%E5%85%A8%E6%89%AB%E7%9B%B2\" title=\"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\">https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_RtiUPlWbme.png\" class></li>\n<li>叶良辰の学习笔记 <a href=\"https://yangzhiwen911.github.io/zh/guide/\" title=\"https://yangzhiwen911.github.io/zh/guide/\">https://yangzhiwen911.github.io/zh/guide/</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_tMLd_Cap6a.png\" class></li>\n<li>图灵Java架构师学习路线(点击链接看新版本) <a href=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\" title=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\">https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_-m-m1AZh7M.png\" class></li>\n<li><a href=\"https://www.thebyte.com.cn/\" title=\"深入架构原理与实践\">深入架构原理与实践</a> <a href=\"https://www.thebyte.com.cn/\" title=\"https://www.thebyte.com.cn/\">https://www.thebyte.com.cn/</a>;<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_zZOb0Uu1MN.png\" class></li>\n<li>Kubernetes 实践指南 <a href=\"https://imroc.cc/kubernetes/\" title=\"https://imroc.cc/kubernetes/\">https://imroc.cc/kubernetes/</a>;<br>vip破解视频  <a href=\"https://share.xiaole88.com/%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF/%E8%80%81%E9%BD%90%E7%9A%84IT%E5%8A%A0%E6%B2%B9%E7%AB%99\" title=\"https://share.xiaole88.com/其他东西/老齐的IT加油站\">https://share.xiaole88.com/其他东西/老齐的IT加油站</a><br><a href=\"https://share.xiaole88.com/K8%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%AE%B1\" title=\"https://share.xiaole88.com/K8渗透工具箱\">https://share.xiaole88.com/K8渗透工具箱</a></li>\n</ul>\n<h3 id=\"工具网站：\"><a href=\"#工具网站：\" class=\"headerlink\" title=\"工具网站：\"></a>工具网站：</h3><ul>\n<li><p><a href=\"https://www.flickr.com/\" title=\"https://www.flickr.com/\">https://www.flickr.com/</a>   好的照片不能我一个人分享</p>\n</li>\n<li><p><a href=\"https://markmap.js.org/repl\" title=\"https://markmap.js.org/repl\">https://markmap.js.org/repl</a>  将markmap 生成图例</p>\n<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_bUw4GOE3i3.png\" class>\n</li>\n<li><p>苹果id相关：</p>\n<p><a href=\"https://appleid.stryun.top/\" title=\"https://appleid.stryun.top/\">https://appleid.stryun.top/</a></p>\n<p><a href=\"https://apple.hutaosubconverter.com/hutao\" title=\"https://apple.hutaosubconverter.com/hutao\">https://apple.hutaosubconverter.com/hutao</a></p>\n</li>\n</ul>\n<h3 id=\"营销方向学习：\"><a href=\"#营销方向学习：\" class=\"headerlink\" title=\"营销方向学习：\"></a>营销方向学习：</h3><ul>\n<li><p>宣传图生成 <a href=\"https://design.palxp.cn/home?tempid=1188\" title=\"https://design.palxp.cn/home?tempid=1188\">https://design.palxp.cn/home?tempid=1188</a></p>\n<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_SOZXE0ImbY.png\" class></li>\n</ul>\n","excerpt":"","more":"<p>分享一些好的网站，个人学习常用的网站，作为分享后续持续更新.</p>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><h3 id=\"技术学习网站\"><a href=\"#技术学习网站\" class=\"headerlink\" title=\"技术学习网站\"></a>技术学习网站</h3><ul>\n<li>盗版书网站：<a href=\"https://zh.singlelogin.re/\">https://zh.singlelogin.re/</a></li>\n<li>架构师学习 <a href=\"https://bugstack.cn/md/other/guide-to-reading.html#%E4%B8%80%E3%80%81%E6%9C%AC%E7%AB%99%E7%9F%A5%E8%AF%86%E9%98%85%E8%A7%88\" title=\"https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览\">https://bugstack.cn/md/other/guide-to-reading.html#一、本站知识阅览</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_PEAqPgamQe.png\" class></li>\n<li>源码学习：<a href=\"https://doocs.github.io/source-code-hunter/#/\" title=\"https://doocs.github.io/source-code-hunter/#/\">https://doocs.github.io/source-code-hunter/#/</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_qBL4LWSs2U.png\" class></li>\n<li>互联网 Java 工程师进阶知识完全扫盲:  <a href=\"https://doocs.github.io/advanced-java/#/?id=%E4%BA%92%E8%81%94%E7%BD%91-java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AE%8C%E5%85%A8%E6%89%AB%E7%9B%B2\" title=\"https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲\">https://doocs.github.io/advanced-java/#/?id=互联网-java-工程师进阶知识完全扫盲</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_RtiUPlWbme.png\" class></li>\n<li>叶良辰の学习笔记 <a href=\"https://yangzhiwen911.github.io/zh/guide/\" title=\"https://yangzhiwen911.github.io/zh/guide/\">https://yangzhiwen911.github.io/zh/guide/</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_tMLd_Cap6a.png\" class></li>\n<li>图灵Java架构师学习路线(点击链接看新版本) <a href=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\" title=\"https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map\">https://www.processon.com/view/link/5eccea8fe0b34d5f263038f0#map</a><img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_-m-m1AZh7M.png\" class></li>\n<li><a href=\"https://www.thebyte.com.cn/\" title=\"深入架构原理与实践\">深入架构原理与实践</a> <a href=\"https://www.thebyte.com.cn/\" title=\"https://www.thebyte.com.cn/\">https://www.thebyte.com.cn/</a>;<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_zZOb0Uu1MN.png\" class></li>\n<li>Kubernetes 实践指南 <a href=\"https://imroc.cc/kubernetes/\" title=\"https://imroc.cc/kubernetes/\">https://imroc.cc/kubernetes/</a>;<br>vip破解视频  <a href=\"https://share.xiaole88.com/%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF/%E8%80%81%E9%BD%90%E7%9A%84IT%E5%8A%A0%E6%B2%B9%E7%AB%99\" title=\"https://share.xiaole88.com/其他东西/老齐的IT加油站\">https://share.xiaole88.com/其他东西/老齐的IT加油站</a><br><a href=\"https://share.xiaole88.com/K8%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E7%AE%B1\" title=\"https://share.xiaole88.com/K8渗透工具箱\">https://share.xiaole88.com/K8渗透工具箱</a></li>\n</ul>\n<h3 id=\"工具网站：\"><a href=\"#工具网站：\" class=\"headerlink\" title=\"工具网站：\"></a>工具网站：</h3><ul>\n<li><p><a href=\"https://www.flickr.com/\" title=\"https://www.flickr.com/\">https://www.flickr.com/</a>   好的照片不能我一个人分享</p>\n</li>\n<li><p><a href=\"https://markmap.js.org/repl\" title=\"https://markmap.js.org/repl\">https://markmap.js.org/repl</a>  将markmap 生成图例</p>\n<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_bUw4GOE3i3.png\" class>\n</li>\n<li><p>苹果id相关：</p>\n<p><a href=\"https://appleid.stryun.top/\" title=\"https://appleid.stryun.top/\">https://appleid.stryun.top/</a></p>\n<p><a href=\"https://apple.hutaosubconverter.com/hutao\" title=\"https://apple.hutaosubconverter.com/hutao\">https://apple.hutaosubconverter.com/hutao</a></p>\n</li>\n</ul>\n<h3 id=\"营销方向学习：\"><a href=\"#营销方向学习：\" class=\"headerlink\" title=\"营销方向学习：\"></a>营销方向学习：</h3><ul>\n<li><p>宣传图生成 <a href=\"https://design.palxp.cn/home?tempid=1188\" title=\"https://design.palxp.cn/home?tempid=1188\">https://design.palxp.cn/home?tempid=1188</a></p>\n<img src=\"/2024/06/26/%E5%88%86%E4%BA%AB/%E5%AD%A6%E4%B9%A0it%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/image_SOZXE0ImbY.png\" class></li>\n</ul>\n"},{"title":"设信道带宽为16kHz,信噪比为30dB,则该信道的信道容量大约为","date":"2024-10-22T09:19:02.000Z","_content":"根据香农信道容量公式：\n\n\\[\nC = B \\log_2(1 + S/N)\n\\]\n\n其中：\n- \\( C \\) 是信道容量（单位：比特每秒，bps），\n- \\( B \\) 是信道带宽（单位：赫兹，Hz），\n- \\( S/N \\) 是信噪比，通常以线性值表示。\n\n### 已知条件：\n- 信道带宽 \\( B = 16 \\, \\text{kHz} = 16,000 \\, \\text{Hz} \\),\n- 信噪比 \\( \\text{S/N} = 30 \\, \\text{dB} \\).\n\n首先，将信噪比从 dB 转换为线性值：\n\\[\nS/N = 10^{30/10} = 10^3 = 1000\n\\]\n\n将这些值代入香农公式：\n\\[\nC = 16000 \\log_2(1 + 1000)\n\\]\n\n计算出 \\( \\log_2(1001) \\)，然后再乘以带宽 \\( B \\)。\n\n我们来计算这个值。\n\n根据计算结果，信道容量大约为 **159,476 bps**（比特每秒）。","source":"_posts/计算机考试/设信道带宽为16kHz-信噪比为30dB-则该信道的信道容量大约为.md","raw":"---\ntitle: 设信道带宽为16kHz,信噪比为30dB,则该信道的信道容量大约为\ndate: 2024-10-22 17:19:02\ncategories: 计算机考试\ntag: 自学公式\n---\n根据香农信道容量公式：\n\n\\[\nC = B \\log_2(1 + S/N)\n\\]\n\n其中：\n- \\( C \\) 是信道容量（单位：比特每秒，bps），\n- \\( B \\) 是信道带宽（单位：赫兹，Hz），\n- \\( S/N \\) 是信噪比，通常以线性值表示。\n\n### 已知条件：\n- 信道带宽 \\( B = 16 \\, \\text{kHz} = 16,000 \\, \\text{Hz} \\),\n- 信噪比 \\( \\text{S/N} = 30 \\, \\text{dB} \\).\n\n首先，将信噪比从 dB 转换为线性值：\n\\[\nS/N = 10^{30/10} = 10^3 = 1000\n\\]\n\n将这些值代入香农公式：\n\\[\nC = 16000 \\log_2(1 + 1000)\n\\]\n\n计算出 \\( \\log_2(1001) \\)，然后再乘以带宽 \\( B \\)。\n\n我们来计算这个值。\n\n根据计算结果，信道容量大约为 **159,476 bps**（比特每秒）。","slug":"计算机考试/设信道带宽为16kHz-信噪比为30dB-则该信道的信道容量大约为","published":1,"updated":"2025-02-18T06:24:40.777Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3u00278gjdg1mwg5i3","content":"<p>根据香农信道容量公式：</p>\n<p>[<br>C &#x3D; B \\log_2(1 + S&#x2F;N)<br>]</p>\n<p>其中：</p>\n<ul>\n<li>( C ) 是信道容量（单位：比特每秒，bps），</li>\n<li>( B ) 是信道带宽（单位：赫兹，Hz），</li>\n<li>( S&#x2F;N ) 是信噪比，通常以线性值表示。</li>\n</ul>\n<h3 id=\"已知条件：\"><a href=\"#已知条件：\" class=\"headerlink\" title=\"已知条件：\"></a>已知条件：</h3><ul>\n<li>信道带宽 ( B &#x3D; 16 , \\text{kHz} &#x3D; 16,000 , \\text{Hz} ),</li>\n<li>信噪比 ( \\text{S&#x2F;N} &#x3D; 30 , \\text{dB} ).</li>\n</ul>\n<p>首先，将信噪比从 dB 转换为线性值：<br>[<br>S&#x2F;N &#x3D; 10^{30&#x2F;10} &#x3D; 10^3 &#x3D; 1000<br>]</p>\n<p>将这些值代入香农公式：<br>[<br>C &#x3D; 16000 \\log_2(1 + 1000)<br>]</p>\n<p>计算出 ( \\log_2(1001) )，然后再乘以带宽 ( B )。</p>\n<p>我们来计算这个值。</p>\n<p>根据计算结果，信道容量大约为 <strong>159,476 bps</strong>（比特每秒）。</p>\n","excerpt":"","more":"<p>根据香农信道容量公式：</p>\n<p>[<br>C &#x3D; B \\log_2(1 + S&#x2F;N)<br>]</p>\n<p>其中：</p>\n<ul>\n<li>( C ) 是信道容量（单位：比特每秒，bps），</li>\n<li>( B ) 是信道带宽（单位：赫兹，Hz），</li>\n<li>( S&#x2F;N ) 是信噪比，通常以线性值表示。</li>\n</ul>\n<h3 id=\"已知条件：\"><a href=\"#已知条件：\" class=\"headerlink\" title=\"已知条件：\"></a>已知条件：</h3><ul>\n<li>信道带宽 ( B &#x3D; 16 , \\text{kHz} &#x3D; 16,000 , \\text{Hz} ),</li>\n<li>信噪比 ( \\text{S&#x2F;N} &#x3D; 30 , \\text{dB} ).</li>\n</ul>\n<p>首先，将信噪比从 dB 转换为线性值：<br>[<br>S&#x2F;N &#x3D; 10^{30&#x2F;10} &#x3D; 10^3 &#x3D; 1000<br>]</p>\n<p>将这些值代入香农公式：<br>[<br>C &#x3D; 16000 \\log_2(1 + 1000)<br>]</p>\n<p>计算出 ( \\log_2(1001) )，然后再乘以带宽 ( B )。</p>\n<p>我们来计算这个值。</p>\n<p>根据计算结果，信道容量大约为 <strong>159,476 bps</strong>（比特每秒）。</p>\n"},{"title":"亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用","date":"2024-09-29T09:50:52.000Z","_content":"一、产品简介\n亿赛通电子文档安全管理系统（简称：CDG）是一款电子文档安全加密软件，该系统利用驱动层透明加密技术，通过对电子文档的加密保护，防止内部员工泄密和外部人员非法窃取企业核心重要数据资产，对电子文档进行全生命周期防护，系统具有透明加密、主动加密、智能加密等多种加密方式，用户可根据部门涉密程度的不同（如核心部门和普通部门），部署力度轻重不一的梯度式文档加密防护，实现技术、管理、审计进行有机的结合，在内部构建起立体化的整体信息防泄露体系，使得成本、效率和安全三者达到平衡，实现电子文档的数据安全。\n二、漏洞描述\n亿赛通电子文档安全管理系统UploadFileFromClientServiceForClient接口处存在任意文件上传漏洞，未经授权的攻击者可通过此漏洞上传恶意后门文件，从而获取服务器权限。\n三、影响范围\n未知\n四、复现环境\nFOFA：app=“亿赛通-电子文档安全管理系统”\n五、漏洞复现\n1.访问存在漏洞网站，抓包\n2.POC\n```angular2html\nPOST /CDGServer3/UploadFileFromClientServiceForClient?AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP/1.1\nHost: IP：port\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: none\nSec-Fetch-User: ?1\nUpgrade-Insecure-Requests: 1\n\n\n上传的文件内容\n```\n3.测试，上传成功\n4.访问ip:port/tttT.jsp\n\n\n利用源码：https://github.com/candyadmin/CDGXStreamDeserRCE\n教程：\nhttps://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra\nhttps://blog.csdn.net/uuzeray/article/details/136690493\n","source":"_posts/黑客/亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用.md","raw":"---\ntitle: 亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用\ndate: 2024-09-29 17:50:52\ncategories: 黑客\ntag: 漏洞\n---\n一、产品简介\n亿赛通电子文档安全管理系统（简称：CDG）是一款电子文档安全加密软件，该系统利用驱动层透明加密技术，通过对电子文档的加密保护，防止内部员工泄密和外部人员非法窃取企业核心重要数据资产，对电子文档进行全生命周期防护，系统具有透明加密、主动加密、智能加密等多种加密方式，用户可根据部门涉密程度的不同（如核心部门和普通部门），部署力度轻重不一的梯度式文档加密防护，实现技术、管理、审计进行有机的结合，在内部构建起立体化的整体信息防泄露体系，使得成本、效率和安全三者达到平衡，实现电子文档的数据安全。\n二、漏洞描述\n亿赛通电子文档安全管理系统UploadFileFromClientServiceForClient接口处存在任意文件上传漏洞，未经授权的攻击者可通过此漏洞上传恶意后门文件，从而获取服务器权限。\n三、影响范围\n未知\n四、复现环境\nFOFA：app=“亿赛通-电子文档安全管理系统”\n五、漏洞复现\n1.访问存在漏洞网站，抓包\n2.POC\n```angular2html\nPOST /CDGServer3/UploadFileFromClientServiceForClient?AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP/1.1\nHost: IP：port\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: none\nSec-Fetch-User: ?1\nUpgrade-Insecure-Requests: 1\n\n\n上传的文件内容\n```\n3.测试，上传成功\n4.访问ip:port/tttT.jsp\n\n\n利用源码：https://github.com/candyadmin/CDGXStreamDeserRCE\n教程：\nhttps://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra\nhttps://blog.csdn.net/uuzeray/article/details/136690493\n","slug":"黑客/亿赛通电子文档安全管理系统XStream反序列化漏洞任意文件上传利用","published":1,"updated":"2025-02-18T06:27:08.573Z","comments":1,"layout":"post","photos":[],"_id":"cm7a4vg3v00288gjdgmjcd68z","content":"<p>一、产品简介<br>亿赛通电子文档安全管理系统（简称：CDG）是一款电子文档安全加密软件，该系统利用驱动层透明加密技术，通过对电子文档的加密保护，防止内部员工泄密和外部人员非法窃取企业核心重要数据资产，对电子文档进行全生命周期防护，系统具有透明加密、主动加密、智能加密等多种加密方式，用户可根据部门涉密程度的不同（如核心部门和普通部门），部署力度轻重不一的梯度式文档加密防护，实现技术、管理、审计进行有机的结合，在内部构建起立体化的整体信息防泄露体系，使得成本、效率和安全三者达到平衡，实现电子文档的数据安全。<br>二、漏洞描述<br>亿赛通电子文档安全管理系统UploadFileFromClientServiceForClient接口处存在任意文件上传漏洞，未经授权的攻击者可通过此漏洞上传恶意后门文件，从而获取服务器权限。<br>三、影响范围<br>未知<br>四、复现环境<br>FOFA：app&#x3D;“亿赛通-电子文档安全管理系统”<br>五、漏洞复现<br>1.访问存在漏洞网站，抓包<br>2.POC</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angular2html\">POST /CDGServer3/UploadFileFromClientServiceForClient?AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP/1.1<br>Host: IP：port<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br>Accept-Encoding: gzip, deflate, br<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Sec-Fetch-Dest: document<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-Site: none<br>Sec-Fetch-User: ?1<br>Upgrade-Insecure-Requests: 1<br><br><br>上传的文件内容<br></code></pre></td></tr></table></figure>\n<p>3.测试，上传成功<br>4.访问ip:port&#x2F;tttT.jsp</p>\n<p>利用源码：<a href=\"https://github.com/candyadmin/CDGXStreamDeserRCE\">https://github.com/candyadmin/CDGXStreamDeserRCE</a><br>教程：<br><a href=\"https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra\">https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra</a><br><a href=\"https://blog.csdn.net/uuzeray/article/details/136690493\">https://blog.csdn.net/uuzeray/article/details/136690493</a></p>\n","excerpt":"","more":"<p>一、产品简介<br>亿赛通电子文档安全管理系统（简称：CDG）是一款电子文档安全加密软件，该系统利用驱动层透明加密技术，通过对电子文档的加密保护，防止内部员工泄密和外部人员非法窃取企业核心重要数据资产，对电子文档进行全生命周期防护，系统具有透明加密、主动加密、智能加密等多种加密方式，用户可根据部门涉密程度的不同（如核心部门和普通部门），部署力度轻重不一的梯度式文档加密防护，实现技术、管理、审计进行有机的结合，在内部构建起立体化的整体信息防泄露体系，使得成本、效率和安全三者达到平衡，实现电子文档的数据安全。<br>二、漏洞描述<br>亿赛通电子文档安全管理系统UploadFileFromClientServiceForClient接口处存在任意文件上传漏洞，未经授权的攻击者可通过此漏洞上传恶意后门文件，从而获取服务器权限。<br>三、影响范围<br>未知<br>四、复现环境<br>FOFA：app&#x3D;“亿赛通-电子文档安全管理系统”<br>五、漏洞复现<br>1.访问存在漏洞网站，抓包<br>2.POC</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angular2html\">POST /CDGServer3/UploadFileFromClientServiceForClient?AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP/1.1<br>Host: IP：port<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br>Accept-Encoding: gzip, deflate, br<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Sec-Fetch-Dest: document<br>Sec-Fetch-Mode: navigate<br>Sec-Fetch-Site: none<br>Sec-Fetch-User: ?1<br>Upgrade-Insecure-Requests: 1<br><br><br>上传的文件内容<br></code></pre></td></tr></table></figure>\n<p>3.测试，上传成功<br>4.访问ip:port&#x2F;tttT.jsp</p>\n<p>利用源码：<a href=\"https://github.com/candyadmin/CDGXStreamDeserRCE\">https://github.com/candyadmin/CDGXStreamDeserRCE</a><br>教程：<br><a href=\"https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra\">https://www.yuque.com/u34516370/hi2ux9/nibcqge2832vptra</a><br><a href=\"https://blog.csdn.net/uuzeray/article/details/136690493\">https://blog.csdn.net/uuzeray/article/details/136690493</a></p>\n"},{"title":"docker常用命令","date":"2025-02-20T07:26:30.000Z","_content":"\n新建数据库：\n\n```bash\ndocker run -d --restart=always  --name my-mysql -e MYSQL_ROOT_PASSWORD='password' -p 3306:3306 -e TZ=Asia/Shanghai  mysql:8.0.39\n```","source":"_posts/docker/docker常用命令.md","raw":"---\ntitle: docker常用命令\ndate: 2025-02-20 15:26:30\ncategories: docker\ntag: 命令\n---\n\n新建数据库：\n\n```bash\ndocker run -d --restart=always  --name my-mysql -e MYSQL_ROOT_PASSWORD='password' -p 3306:3306 -e TZ=Asia/Shanghai  mysql:8.0.39\n```","slug":"docker/docker常用命令","published":1,"updated":"2025-02-20T07:27:22.473Z","comments":1,"layout":"post","photos":[],"_id":"cm7e5cdy400001gjd96tu8p26","content":"<p>新建数据库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always  --name my-mysql -e MYSQL_ROOT_PASSWORD=<span class=\"hljs-string\">&#x27;password&#x27;</span> -p 3306:3306 -e TZ=Asia/Shanghai  mysql:8.0.39<br></code></pre></td></tr></table></figure>","excerpt":"","more":"<p>新建数据库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always  --name my-mysql -e MYSQL_ROOT_PASSWORD=<span class=\"hljs-string\">&#x27;password&#x27;</span> -p 3306:3306 -e TZ=Asia/Shanghai  mysql:8.0.39<br></code></pre></td></tr></table></figure>"},{"title":"mysql-数据备份脚本","date":"2025-02-19T09:31:43.000Z","_content":"\n\n备份：\n\n```bash\ndocker exec mysql-container mysqldump -u root -p'password' --all-databases > /path/to/backup/all_databases_backup.sql\n```\n还原：\n\n```bash\ndocker exec -i my-mysql mysql  -u root -p'password'    < /opt/mysql_back/mydatabase_backup.sql  \n```\n\n\n\n\n\n","source":"_posts/mysql/mysql-数据备份脚本.md","raw":"---\ntitle: mysql-数据备份脚本\ndate: 2025-02-19 17:31:43\ncategories: mysql\ntag: 备份\n---\n\n\n备份：\n\n```bash\ndocker exec mysql-container mysqldump -u root -p'password' --all-databases > /path/to/backup/all_databases_backup.sql\n```\n还原：\n\n```bash\ndocker exec -i my-mysql mysql  -u root -p'password'    < /opt/mysql_back/mydatabase_backup.sql  \n```\n\n\n\n\n\n","slug":"mysql/mysql-数据备份脚本","published":1,"updated":"2025-02-20T07:27:22.479Z","comments":1,"layout":"post","photos":[],"_id":"cm7e5cdy900031gjdbypv7qk6","content":"<p>备份：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> mysql-container mysqldump -u root -p<span class=\"hljs-string\">&#x27;password&#x27;</span> --all-databases &gt; /path/to/backup/all_databases_backup.sql<br></code></pre></td></tr></table></figure>\n<p>还原：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -i my-mysql mysql  -u root -p<span class=\"hljs-string\">&#x27;password&#x27;</span>    &lt; /opt/mysql_back/mydatabase_backup.sql  <br></code></pre></td></tr></table></figure>\n\n\n\n\n\n","excerpt":"","more":"<p>备份：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> mysql-container mysqldump -u root -p<span class=\"hljs-string\">&#x27;password&#x27;</span> --all-databases &gt; /path/to/backup/all_databases_backup.sql<br></code></pre></td></tr></table></figure>\n<p>还原：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -i my-mysql mysql  -u root -p<span class=\"hljs-string\">&#x27;password&#x27;</span>    &lt; /opt/mysql_back/mydatabase_backup.sql  <br></code></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"linux-常用命令","date":"2025-02-20T09:47:37.000Z","_content":"\nlinux自启动：\n\n```bash\ncd /etc/systemd/system/\nvi openvpn-client.service\n```\n\n```bash\n[Unit]\nDescription=OpenVPN client service\nAfter=network.target\n \n[Service]\nType=simple\nExecStart= /usr/sbin/openvpn --config /opt/openvpn/huawei-5600g.ovpn\nRestart=always\n \n[Install]\nWantedBy=multi-user.target\n```\n```bash\nsystemctl daemon-reload\nsystemctl enable openvpn-client.service\n```\n添加jdk环境变量：\n```bash\n　编辑/etc/profile文件 vim /etc/profile    <<---- 通过这种方式，在关闭xshell后，添加的环境变量不生效\n\n　　文件末尾添加：export PATH=\"/usr/local/nginx/sbin/:$PATH\"\n\n　　source  /etc/profile\n```","source":"_posts/linux/linux-常用命令.md","raw":"---\ntitle: linux-常用命令\ndate: 2025-02-20 17:47:37\ncategories: linux\ntag: 常用命令\n---\n\nlinux自启动：\n\n```bash\ncd /etc/systemd/system/\nvi openvpn-client.service\n```\n\n```bash\n[Unit]\nDescription=OpenVPN client service\nAfter=network.target\n \n[Service]\nType=simple\nExecStart= /usr/sbin/openvpn --config /opt/openvpn/huawei-5600g.ovpn\nRestart=always\n \n[Install]\nWantedBy=multi-user.target\n```\n```bash\nsystemctl daemon-reload\nsystemctl enable openvpn-client.service\n```\n添加jdk环境变量：\n```bash\n　编辑/etc/profile文件 vim /etc/profile    <<---- 通过这种方式，在关闭xshell后，添加的环境变量不生效\n\n　　文件末尾添加：export PATH=\"/usr/local/nginx/sbin/:$PATH\"\n\n　　source  /etc/profile\n```","slug":"linux/linux-常用命令","published":1,"updated":"2025-02-27T06:42:41.626Z","_id":"cm7e5cdy900041gjd2mjr4fj9","comments":1,"layout":"post","photos":[],"content":"<p>linux自启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /etc/systemd/system/<br>vi openvpn-client.service<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[Unit]<br>Description=OpenVPN client service<br>After=network.target<br> <br>[Service]<br>Type=simple<br>ExecStart= /usr/sbin/openvpn --config /opt/openvpn/huawei-5600g.ovpn<br>Restart=always<br> <br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload<br>systemctl <span class=\"hljs-built_in\">enable</span> openvpn-client.service<br></code></pre></td></tr></table></figure>\n<p>添加jdk环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">　编辑/etc/profile文件 vim /etc/profile    &lt;&lt;---- 通过这种方式，在关闭xshell后，添加的环境变量不生效<br><br>　　文件末尾添加：<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">&quot;/usr/local/nginx/sbin/:<span class=\"hljs-variable\">$PATH</span>&quot;</span><br><br>　　<span class=\"hljs-built_in\">source</span>  /etc/profile<br></code></pre></td></tr></table></figure>","excerpt":"","more":"<p>linux自启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> /etc/systemd/system/<br>vi openvpn-client.service<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[Unit]<br>Description=OpenVPN client service<br>After=network.target<br> <br>[Service]<br>Type=simple<br>ExecStart= /usr/sbin/openvpn --config /opt/openvpn/huawei-5600g.ovpn<br>Restart=always<br> <br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload<br>systemctl <span class=\"hljs-built_in\">enable</span> openvpn-client.service<br></code></pre></td></tr></table></figure>\n<p>添加jdk环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">　编辑/etc/profile文件 vim /etc/profile    &lt;&lt;---- 通过这种方式，在关闭xshell后，添加的环境变量不生效<br><br>　　文件末尾添加：<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">&quot;/usr/local/nginx/sbin/:<span class=\"hljs-variable\">$PATH</span>&quot;</span><br><br>　　<span class=\"hljs-built_in\">source</span>  /etc/profile<br></code></pre></td></tr></table></figure>"},{"title":"nginx配置https","date":"2025-02-26T11:52:07.000Z","_content":"```shell\nserver {\n    listen 80;\n    server_name xxx.beeflyx.cloud;\n\n    # 强制 HTTP 重定向到 HTTPS\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name xxx.beeflyx.cloud;\n\n    ssl_certificate /etc/nginx/conf.d/cert/xxx.beeflyx.cloud_bundle.crt;\n    ssl_certificate_key /etc/nginx/conf.d/cert/xxx.beeflyx.cloud.key;\n\n    location / {\n        proxy_pass http://127.0.0.1:3000;\n    }\n}\n```","source":"_posts/linux/nginx配置https.md","raw":"---\ntitle: nginx配置https\ndate: 2025-02-26 19:52:07\ncategories: linux\ntag: nginx\n---\n```shell\nserver {\n    listen 80;\n    server_name xxx.beeflyx.cloud;\n\n    # 强制 HTTP 重定向到 HTTPS\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name xxx.beeflyx.cloud;\n\n    ssl_certificate /etc/nginx/conf.d/cert/xxx.beeflyx.cloud_bundle.crt;\n    ssl_certificate_key /etc/nginx/conf.d/cert/xxx.beeflyx.cloud.key;\n\n    location / {\n        proxy_pass http://127.0.0.1:3000;\n    }\n}\n```","slug":"linux/nginx配置https","published":1,"updated":"2025-02-26T11:53:11.577Z","comments":1,"layout":"post","photos":[],"_id":"cm7lwfais000068jd0dgk14dq","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">server &#123;<br>    listen 80;<br>    server_name xxx.beeflyx.cloud;<br><br>    # 强制 HTTP 重定向到 HTTPS<br>    return 301 https://$host$request_uri;<br>&#125;<br><br>server &#123;<br>    listen 443 ssl;<br>    server_name xxx.beeflyx.cloud;<br><br>    ssl_certificate /etc/nginx/conf.d/cert/xxx.beeflyx.cloud_bundle.crt;<br>    ssl_certificate_key /etc/nginx/conf.d/cert/xxx.beeflyx.cloud.key;<br><br>    location / &#123;<br>        proxy_pass http://127.0.0.1:3000;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">server &#123;<br>    listen 80;<br>    server_name xxx.beeflyx.cloud;<br><br>    # 强制 HTTP 重定向到 HTTPS<br>    return 301 https://$host$request_uri;<br>&#125;<br><br>server &#123;<br>    listen 443 ssl;<br>    server_name xxx.beeflyx.cloud;<br><br>    ssl_certificate /etc/nginx/conf.d/cert/xxx.beeflyx.cloud_bundle.crt;<br>    ssl_certificate_key /etc/nginx/conf.d/cert/xxx.beeflyx.cloud.key;<br><br>    location / &#123;<br>        proxy_pass http://127.0.0.1:3000;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>"},{"title":"linux-配置开机自启","date":"2025-02-26T12:29:53.000Z","_content":"### 方法一： 使用 `crontab` 设置开机自动启动\n\n1. **编辑当前用户的 `crontab` 文件**  \n   运行以下命令编辑 `crontab`：\n\n   ```bash\n   crontab -e\n   ```\n\n2. **添加开机启动任务**  \n   在 `crontab` 文件的最后一行添加以下内容，将启动日志输出到log.txt中：\n\n   ```bash\n   @reboot /usr/bin/java -jar /opt/mp/mp-web-1.0.0.jar >> /opt/mp/log.txt 2>&1 \n   ```\n\n3. **验证是否设置成功**  \n   你可以使用以下命令查看已设置的 `crontab` 任务：\n\n   ```bash\n   crontab -l\n   ```\n\n\n### 方法二：使用 `systemd`\n\n`systemd` 是现代 Linux 系统用来启动和管理服务的工具，通常在大多数发行版中都默认安装。\n\n1. **创建一个 systemd 服务文件**  \n   在 `/etc/systemd/system/` 目录下创建一个新的 `.service` 文件，例如 `openvpn-client.service`。\n\n   ```bash\n   sudo vi /etc/systemd/system/openvpn-client.service\n   ```\n\n2. **编辑服务文件**  \n   在文件中加入以下内容：\n\n   ```ini\n   [Unit]\n   Description=OpenVPN client service\n   After=network.target\n   \n   [Service]\n   Type=simple\n   ExecStart= /usr/sbin/openvpn --config /opt/openvpn/xxx.ovpn\n   Restart=always\n   \n   [Install]\n   WantedBy=multi-user.target\n   ```\n3. **重新加载 `systemd` 配置**  \n\n   ```bash\n   sudo systemctl daemon-reload\n   ```\n\n4. **启动服务**  \n   启动服务并验证是否正常运行：\n\n   ```bash\n   sudo systemctl start openvpn-client.service\n   ```\n\n5. **设置开机自启**  \n   启动后，设置服务开机自动启动：\n\n   ```bash\n   sudo systemctl enable openvpn-client.service\n   ```\n\n6. **查看服务状态**  \n   查看服务是否正常运行：\n\n   ```bash\n   sudo systemctl status openvpn-client.service\n   ```\n\n### 方法三：使用 `rc.local`（适用于较老的 Linux 版本）\n\n`rc.local` 是一个比较传统的方式，在一些较老的 Linux 系统中使用。\n\n1. **编辑 `rc.local` 文件**  \n   打开 `/etc/rc.local` 文件，如果文件不存在，可能需要手动创建：\n\n   ```bash\n   sudo vi /etc/rc.local\n   ```\n\n2. **在文件末尾添加启动命令**  \n   在文件末尾添加启动 Java 应用的命令，确保添加在 `exit 0` 之前：\n\n   ```bash\n   /usr/bin/java -jar /path/to/your/project/your-app.jar &\n   ```\n\n   使用 `&` 将应用程序放入后台运行。\n\n3. **确保 `rc.local` 可执行**  \n   如果 `rc.local` 文件没有可执行权限，需要修改：\n\n   ```bash\n   sudo chmod +x /etc/rc.local\n   ```\n\n4. **重启系统**  \n   重启系统后，Java 应用将会自动启动。\n","source":"_posts/linux/linux-配置开机自启.md","raw":"---\ntitle: linux-配置开机自启\ndate: 2025-02-26 20:29:53\ncategories: linux\ntag: 开机自启\n---\n### 方法一： 使用 `crontab` 设置开机自动启动\n\n1. **编辑当前用户的 `crontab` 文件**  \n   运行以下命令编辑 `crontab`：\n\n   ```bash\n   crontab -e\n   ```\n\n2. **添加开机启动任务**  \n   在 `crontab` 文件的最后一行添加以下内容，将启动日志输出到log.txt中：\n\n   ```bash\n   @reboot /usr/bin/java -jar /opt/mp/mp-web-1.0.0.jar >> /opt/mp/log.txt 2>&1 \n   ```\n\n3. **验证是否设置成功**  \n   你可以使用以下命令查看已设置的 `crontab` 任务：\n\n   ```bash\n   crontab -l\n   ```\n\n\n### 方法二：使用 `systemd`\n\n`systemd` 是现代 Linux 系统用来启动和管理服务的工具，通常在大多数发行版中都默认安装。\n\n1. **创建一个 systemd 服务文件**  \n   在 `/etc/systemd/system/` 目录下创建一个新的 `.service` 文件，例如 `openvpn-client.service`。\n\n   ```bash\n   sudo vi /etc/systemd/system/openvpn-client.service\n   ```\n\n2. **编辑服务文件**  \n   在文件中加入以下内容：\n\n   ```ini\n   [Unit]\n   Description=OpenVPN client service\n   After=network.target\n   \n   [Service]\n   Type=simple\n   ExecStart= /usr/sbin/openvpn --config /opt/openvpn/xxx.ovpn\n   Restart=always\n   \n   [Install]\n   WantedBy=multi-user.target\n   ```\n3. **重新加载 `systemd` 配置**  \n\n   ```bash\n   sudo systemctl daemon-reload\n   ```\n\n4. **启动服务**  \n   启动服务并验证是否正常运行：\n\n   ```bash\n   sudo systemctl start openvpn-client.service\n   ```\n\n5. **设置开机自启**  \n   启动后，设置服务开机自动启动：\n\n   ```bash\n   sudo systemctl enable openvpn-client.service\n   ```\n\n6. **查看服务状态**  \n   查看服务是否正常运行：\n\n   ```bash\n   sudo systemctl status openvpn-client.service\n   ```\n\n### 方法三：使用 `rc.local`（适用于较老的 Linux 版本）\n\n`rc.local` 是一个比较传统的方式，在一些较老的 Linux 系统中使用。\n\n1. **编辑 `rc.local` 文件**  \n   打开 `/etc/rc.local` 文件，如果文件不存在，可能需要手动创建：\n\n   ```bash\n   sudo vi /etc/rc.local\n   ```\n\n2. **在文件末尾添加启动命令**  \n   在文件末尾添加启动 Java 应用的命令，确保添加在 `exit 0` 之前：\n\n   ```bash\n   /usr/bin/java -jar /path/to/your/project/your-app.jar &\n   ```\n\n   使用 `&` 将应用程序放入后台运行。\n\n3. **确保 `rc.local` 可执行**  \n   如果 `rc.local` 文件没有可执行权限，需要修改：\n\n   ```bash\n   sudo chmod +x /etc/rc.local\n   ```\n\n4. **重启系统**  \n   重启系统后，Java 应用将会自动启动。\n","slug":"linux/linux-配置开机自启","published":1,"updated":"2025-02-26T12:35:17.628Z","comments":1,"layout":"post","photos":[],"_id":"cm7lwfaiw000168jd1qhhedpk","content":"<h3 id=\"方法一：-使用-crontab-设置开机自动启动\"><a href=\"#方法一：-使用-crontab-设置开机自动启动\" class=\"headerlink\" title=\"方法一： 使用 crontab 设置开机自动启动\"></a>方法一： 使用 <code>crontab</code> 设置开机自动启动</h3><ol>\n<li><p><strong>编辑当前用户的 <code>crontab</code> 文件</strong><br>运行以下命令编辑 <code>crontab</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab -e<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加开机启动任务</strong><br>在 <code>crontab</code> 文件的最后一行添加以下内容，将启动日志输出到log.txt中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">@reboot /usr/bin/java -jar /opt/mp/mp-web-1.0.0.jar &gt;&gt; /opt/mp/log.txt 2&gt;&amp;1 <br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>验证是否设置成功</strong><br>你可以使用以下命令查看已设置的 <code>crontab</code> 任务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab -l<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法二：使用-systemd\"><a href=\"#方法二：使用-systemd\" class=\"headerlink\" title=\"方法二：使用 systemd\"></a>方法二：使用 <code>systemd</code></h3><p><code>systemd</code> 是现代 Linux 系统用来启动和管理服务的工具，通常在大多数发行版中都默认安装。</p>\n<ol>\n<li><p><strong>创建一个 systemd 服务文件</strong><br>在 <code>/etc/systemd/system/</code> 目录下创建一个新的 <code>.service</code> 文件，例如 <code>openvpn-client.service</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vi /etc/systemd/system/openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>编辑服务文件</strong><br>在文件中加入以下内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Unit]</span><br><span class=\"hljs-attr\">Description</span>=OpenVPN client service<br><span class=\"hljs-attr\">After</span>=network.target<br><br><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Type</span>=simple<br><span class=\"hljs-attr\">ExecStart</span>= /usr/sbin/openvpn --config /opt/openvpn/xxx.ovpn<br><span class=\"hljs-attr\">Restart</span>=always<br><br><span class=\"hljs-section\">[Install]</span><br><span class=\"hljs-attr\">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure></li>\n<li><p><strong>重新加载 <code>systemd</code> 配置</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl daemon-reload<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动服务</strong><br>启动服务并验证是否正常运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl start openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>设置开机自启</strong><br>启动后，设置服务开机自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看服务状态</strong><br>查看服务是否正常运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl status openvpn-client.service<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法三：使用-rc-local（适用于较老的-Linux-版本）\"><a href=\"#方法三：使用-rc-local（适用于较老的-Linux-版本）\" class=\"headerlink\" title=\"方法三：使用 rc.local（适用于较老的 Linux 版本）\"></a>方法三：使用 <code>rc.local</code>（适用于较老的 Linux 版本）</h3><p><code>rc.local</code> 是一个比较传统的方式，在一些较老的 Linux 系统中使用。</p>\n<ol>\n<li><p><strong>编辑 <code>rc.local</code> 文件</strong><br>打开 <code>/etc/rc.local</code> 文件，如果文件不存在，可能需要手动创建：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vi /etc/rc.local<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>在文件末尾添加启动命令</strong><br>在文件末尾添加启动 Java 应用的命令，确保添加在 <code>exit 0</code> 之前：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">/usr/bin/java -jar /path/to/your/project/your-app.jar &amp;<br></code></pre></td></tr></table></figure>\n\n<p>使用 <code>&amp;</code> 将应用程序放入后台运行。</p>\n</li>\n<li><p><strong>确保 <code>rc.local</code> 可执行</strong><br>如果 <code>rc.local</code> 文件没有可执行权限，需要修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">chmod</span> +x /etc/rc.local<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>重启系统</strong><br>重启系统后，Java 应用将会自动启动。</p>\n</li>\n</ol>\n","excerpt":"","more":"<h3 id=\"方法一：-使用-crontab-设置开机自动启动\"><a href=\"#方法一：-使用-crontab-设置开机自动启动\" class=\"headerlink\" title=\"方法一： 使用 crontab 设置开机自动启动\"></a>方法一： 使用 <code>crontab</code> 设置开机自动启动</h3><ol>\n<li><p><strong>编辑当前用户的 <code>crontab</code> 文件</strong><br>运行以下命令编辑 <code>crontab</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab -e<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加开机启动任务</strong><br>在 <code>crontab</code> 文件的最后一行添加以下内容，将启动日志输出到log.txt中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">@reboot /usr/bin/java -jar /opt/mp/mp-web-1.0.0.jar &gt;&gt; /opt/mp/log.txt 2&gt;&amp;1 <br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>验证是否设置成功</strong><br>你可以使用以下命令查看已设置的 <code>crontab</code> 任务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab -l<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法二：使用-systemd\"><a href=\"#方法二：使用-systemd\" class=\"headerlink\" title=\"方法二：使用 systemd\"></a>方法二：使用 <code>systemd</code></h3><p><code>systemd</code> 是现代 Linux 系统用来启动和管理服务的工具，通常在大多数发行版中都默认安装。</p>\n<ol>\n<li><p><strong>创建一个 systemd 服务文件</strong><br>在 <code>/etc/systemd/system/</code> 目录下创建一个新的 <code>.service</code> 文件，例如 <code>openvpn-client.service</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vi /etc/systemd/system/openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>编辑服务文件</strong><br>在文件中加入以下内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Unit]</span><br><span class=\"hljs-attr\">Description</span>=OpenVPN client service<br><span class=\"hljs-attr\">After</span>=network.target<br><br><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Type</span>=simple<br><span class=\"hljs-attr\">ExecStart</span>= /usr/sbin/openvpn --config /opt/openvpn/xxx.ovpn<br><span class=\"hljs-attr\">Restart</span>=always<br><br><span class=\"hljs-section\">[Install]</span><br><span class=\"hljs-attr\">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure></li>\n<li><p><strong>重新加载 <code>systemd</code> 配置</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl daemon-reload<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>启动服务</strong><br>启动服务并验证是否正常运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl start openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>设置开机自启</strong><br>启动后，设置服务开机自动启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl <span class=\"hljs-built_in\">enable</span> openvpn-client.service<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看服务状态</strong><br>查看服务是否正常运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo systemctl status openvpn-client.service<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"方法三：使用-rc-local（适用于较老的-Linux-版本）\"><a href=\"#方法三：使用-rc-local（适用于较老的-Linux-版本）\" class=\"headerlink\" title=\"方法三：使用 rc.local（适用于较老的 Linux 版本）\"></a>方法三：使用 <code>rc.local</code>（适用于较老的 Linux 版本）</h3><p><code>rc.local</code> 是一个比较传统的方式，在一些较老的 Linux 系统中使用。</p>\n<ol>\n<li><p><strong>编辑 <code>rc.local</code> 文件</strong><br>打开 <code>/etc/rc.local</code> 文件，如果文件不存在，可能需要手动创建：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo vi /etc/rc.local<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>在文件末尾添加启动命令</strong><br>在文件末尾添加启动 Java 应用的命令，确保添加在 <code>exit 0</code> 之前：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">/usr/bin/java -jar /path/to/your/project/your-app.jar &amp;<br></code></pre></td></tr></table></figure>\n\n<p>使用 <code>&amp;</code> 将应用程序放入后台运行。</p>\n</li>\n<li><p><strong>确保 <code>rc.local</code> 可执行</strong><br>如果 <code>rc.local</code> 文件没有可执行权限，需要修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">chmod</span> +x /etc/rc.local<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>重启系统</strong><br>重启系统后，Java 应用将会自动启动。</p>\n</li>\n</ol>\n"},{"title":"es常用命令","date":"2025-02-27T07:00:37.000Z","_content":"\n以下是 Elasticsearch (ES) 常用命令的总结和笔记：\n\n### 1. 查看索引相关信息\n\n- **查看指定索引的映射信息**\n  ```bash\n  GET kibana_sample_data_ecommerce\n  ```\n\n- **查看指定索引的文档总数**\n  ```bash\n  GET kibana_sample_data_ecommerce/_count\n  ```\n\n- **查看前10条文档**\n  ```bash\n  POST kibana_sample_data_ecommerce/_search\n  {\n  }\n  ```\n\n### 2. 查看索引状态与信息\n\n- **查看索引信息**\n  ```bash\n  GET /_cat/indices/kibana*?v&s=index\n  ```\n\n- **查看状态为绿的索引**\n  ```bash\n  GET /_cat/indices?v&health=green\n  ```\n\n- **按文档个数排序查看索引**\n  ```bash\n  GET /_cat/indices?v&s=docs.count:desc\n  ```\n\n- **查看具体的索引字段（健康、主分片、复制分片、文档数等）**\n  ```bash\n  GET /_cat/indices/kibana*?pri&v&h=health,index,pri,rep,docs.count,mt\n  ```\n\n- **查看每个索引使用的内存量**\n  ```bash\n  GET /_cat/indices?v&h=i,tm&s=tm:desc\n  ```\n\n### 3. 查看节点信息\n\n- **查看所有节点信息**\n  ```bash\n  GET _cat/nodes?v\n  ```\n\n- **查看特定节点信息**\n  ```bash\n  GET /_nodes/es7_01,es7_02\n  ```\n\n- **查看节点信息并显示特定字段**\n  ```bash\n  GET /_cat/nodes?v&h=id,ip,port,v,m\n  ```\n\n### 4. 查看集群健康状况\n\n- **查看集群健康状况**\n  ```bash\n  GET _cluster/health\n  ```\n\n- **查看集群健康状况，并按分片级别显示**\n  ```bash\n  GET _cluster/health?level=shards\n  ```\n\n- **查看特定索引的集群健康状况**\n  ```bash\n  GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights\n  ```\n\n- **查看特定索引的集群健康状况，并按分片级别显示**\n  ```bash\n  GET /_cluster/health/kibana_sample_data_flights?level=shards\n  ```\n\n### 5. 查看集群状态\n\n- **查看集群状态**\n  ```bash\n  GET /_cluster/state\n  ```\n\n### 6. 查看集群设置\n\n- **查看集群设置**\n  ```bash\n  GET /_cluster/settings\n  ```\n\n- **查看集群设置，包括默认设置**\n  ```bash\n  GET /_cluster/settings?include_defaults=true\n  ```\n\n### 7. 查看分片信息\n\n- **查看集群的所有分片信息**\n  ```bash\n  GET /_cat/shards\n  ```\n\n- **查看特定的分片信息（包括状态、主分片/副本分片等）**\n  ```bash\n  GET /_cat/shards?h=index,shard,prirep,state,unassigned.reason\n  ```\n\n\n\n### 1. 创建文档\n\n- **自动生成 `_id` 创建文档**\n  ```bash\n  POST users/_doc\n  {\n    \"user\" : \"Mike\",\n    \"post_date\" : \"2019-04-15T14:12:12\",\n    \"message\" : \"trying out Kibana\"\n  }\n  ```\n\n- **指定 ID 创建文档（如果 ID 已存在则报错）**\n  ```bash\n  PUT users/_doc/1?op_type=create\n  {\n    \"user\" : \"Jack\",\n    \"post_date\" : \"2019-05-15T14:12:12\",\n    \"message\" : \"trying out Elasticsearch\"\n  }\n  ```\n\n- **指定 ID 创建文档（如果 ID 已存在则报错）**\n  ```bash\n  PUT users/_create/1\n  {\n    \"user\" : \"Jack\",\n    \"post_date\" : \"2019-05-15T14:12:12\",\n    \"message\" : \"trying out Elasticsearch\"\n  }\n  ```\n\n### 2. 根据 ID 获取文档\n\n- **获取指定 ID 的文档**\n  ```bash\n  GET users/_doc/1\n  ```\n\n### 3. 更新文档\n\n- **更新指定 ID 的文档（先删除再写入）**\n  ```bash\n  PUT users/_doc/1\n  {\n    \"user\" : \"Mike\"\n  }\n  ```\n\n- **在原文档上增加字段**\n  ```bash\n  POST users/_update/1/\n  {\n    \"doc\": {\n      \"post_date\" : \"2019-05-15T14:12:12\",\n      \"message\" : \"trying out Elasticsearch\"\n    }\n  }\n  ```\n\n### 4. 删除文档\n\n- **根据 ID 删除文档**\n  ```bash\n  DELETE users/_doc/1\n  ```\n\n### 5. 批量操作 (Bulk API)\n\n- **执行批量操作**  \n  第一次执行批量操作：\n  ```bash\n  POST _bulk\n  { \"index\" : { \"_index\" : \"test\", \"_id\" : \"1\" } }\n  { \"field1\" : \"value1\" }\n  { \"delete\" : { \"_index\" : \"test\", \"_id\" : \"2\" } }\n  { \"create\" : { \"_index\" : \"test2\", \"_id\" : \"3\" } }\n  { \"field1\" : \"value3\" }\n  { \"update\" : {\"_id\" : \"1\", \"_index\" : \"test\"} }\n  { \"doc\" : {\"field2\" : \"value2\"} }\n  ```\n\n  第二次执行批量操作：\n  ```bash\n  POST _bulk\n  { \"index\" : { \"_index\" : \"test\", \"_id\" : \"1\" } }\n  { \"field1\" : \"value1\" }\n  { \"delete\" : { \"_index\" : \"test\", \"_id\" : \"2\" } }\n  { \"create\" : { \"_index\" : \"test2\", \"_id\" : \"3\" } }\n  { \"field1\" : \"value3\" }\n  { \"update\" : {\"_id\" : \"1\", \"_index\" : \"test\"} }\n  { \"doc\" : {\"field2\" : \"value2\"} }\n  ```\n\n### 6. 多文档获取 (MGET)\n\n- **获取多个文档**\n  ```bash\n  GET /_mget\n  {\n    \"docs\" : [\n      { \"_index\" : \"test\", \"_id\" : \"1\" },\n      { \"_index\" : \"test\", \"_id\" : \"2\" }\n    ]\n  }\n  ```\n\n- **URI中指定索引**\n  ```bash\n  GET /test/_mget\n  {\n    \"docs\" : [\n      { \"_id\" : \"1\" },\n      { \"_id\" : \"2\" }\n    ]\n  }\n  ```\n\n- **使用 `_source` 参数指定返回的字段**\n  ```bash\n  GET /_mget\n  {\n    \"docs\" : [\n      { \"_index\" : \"test\", \"_id\" : \"1\", \"_source\" : false },\n      { \"_index\" : \"test\", \"_id\" : \"2\", \"_source\" : [\"field3\", \"field4\"] },\n      { \"_index\" : \"test\", \"_id\" : \"3\", \"_source\" : { \"include\": [\"user\"], \"exclude\": [\"user.location\"] } }\n    ]\n  }\n  ```\n\n### 7. 多查询操作 (MSEARCH)\n\n- **执行多个查询**\n  ```bash\n  POST kibana_sample_data_ecommerce/_msearch\n  {}\n  {\"query\" : {\"match_all\" : {}},\"size\":1}\n  {\"index\" : \"kibana_sample_data_flights\"}\n  {\"query\" : {\"match_all\" : {}},\"size\":2}\n  ```\n\n### 8. 清除测试数据\n\n- **删除索引（清除数据）**\n  ```bash\n  DELETE users\n  DELETE test\n  DELETE test2\n  ```\n\n[3.4-倒排索引入门]\n\nElasticsearch 的 `_analyze` API，它用于分析文本，查看在特定分析器下，文本是如何被分词和处理的。下面是每个请求的说明：\n\n### 1. **分析 \"Mastering Elasticsearch\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Mastering Elasticsearch\"\n}\n```\n- **分析器**：使用默认的 `standard` 分析器。\n- **文本**：`\"Mastering Elasticsearch\"`。\n- **预期效果**：`standard` 分析器会将这段文本分割成单词，通常会根据空格和标点符号进行分词。\n\n### 2. **分析 \"Elasticsearch Server\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Elasticsearch Server\"\n}\n```\n- **分析器**：同样使用 `standard` 分析器。\n- **文本**：`\"Elasticsearch Server\"`。\n- **预期效果**：分析器会分割文本为单词，可能会得到类似于 `[\"elasticsearch\", \"server\"]` 的分词结果。\n\n### 3. **分析 \"Elasticsearch Essentials\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Elasticsearch Essentials\"\n}\n```\n- **分析器**：继续使用 `standard` 分析器。\n- **文本**：`\"Elasticsearch Essentials\"`。\n- **预期效果**：分析器会将文本分割成 `[\"elasticsearch\", \"essentials\"]`。\n\n### 结果\n每个请求的结果将显示由 `standard` 分析器生成的分词结果。通常，`standard` 分析器会去除大部分标点符号并将文本转换为小写。分词的具体结果如下：\n\n- `\"Mastering Elasticsearch\"` -> `[\"mastering\", \"elasticsearch\"]`\n- `\"Elasticsearch Server\"` -> `[\"elasticsearch\", \"server\"]`\n- `\"Elasticsearch Essentials\"` -> `[\"elasticsearch\", \"essentials\"]`\n\n\n以下是使用不同的分析器（Analyzer）对文本进行分词分析的示例：\n\n### 1. **Standard Analyzer**\n标准分析器会根据空格、标点符号等进行分词，并将所有文本转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 2. **Simple Analyzer**\n简单分析器按非字母字符切分，符号会被过滤，文本会转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"simple\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 3. **Stop Analyzer**\n停用词分析器会将文本转换为小写，并过滤掉常见的停用词（如 \"the\", \"a\", \"is\"）。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"stop\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"lazy\", \"dogs\", \"summer\", \"evening\"]`\n\n### 4. **Whitespace Analyzer**\n空格分析器会按空格切分文本，并且不会转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"whitespace\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"Quick\", \"brown-foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening.\"]`\n\n### 5. **Keyword Analyzer**\n关键字分析器不进行分词，直接返回原始文本。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"keyword\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"]`\n\n### 6. **Pattern Analyzer**\n模式分析器使用正则表达式进行分词，默认使用 `\\W+`（非字母字符）作为分隔符。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"pattern\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"Quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 7. **English Analyzer**\n英语分析器针对英语语言进行分词，去除停用词等。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"english\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"lazy\", \"dogs\", \"summer\", \"evening\"]`\n\n### 8. **ICU Analyzer for Chinese Text**\n使用 `icu_analyzer` 来处理中文文本，适用于多语言环境中的分词。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"icu_analyzer\",\n  \"text\": \"他说的确实在理\"\n}\n```\n- **分词结果**：`[\"他说\", \"的\", \"确实\", \"在理\"]`\n\n### 9. **Standard Analyzer for Chinese Text**\n使用标准分析器处理中文文本，通常处理中文时可能不会像中文专用分析器那样精确。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"他说的确实在理\"\n}\n```\n- **分词结果**：`[\"他说\", \"的\", \"确实\", \"在理\"]`\n\n### 10. **ICU Analyzer for Another Chinese Sentence**\n处理另一个中文句子 `\"这个苹果不大好吃\"`。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"icu_analyzer\",\n  \"text\": \"这个苹果不大好吃\"\n}\n```\n- **分词结果**：`[\"这个\", \"苹果\", \"不大\", \"好吃\"]`\n\n### 总结\n每种分析器具有不同的分词行为：\n- **Standard**：根据空格和标点符号分词并小写化。\n- **Simple**：过滤非字母字符并小写化。\n- **Stop**：去除停用词并小写化。\n- **Whitespace**：仅按空格分词，不进行大小写转换。\n- **Keyword**：不进行分词，返回整个文本。\n- **Pattern**：使用正则表达式分词，默认 `\\W+` 分割。\n- **English**：为英语文本设计的分析器，去除停用词。\n- **ICU Analyzer**：适合多语言的分词，特别适用于中文等非拉丁字母语言。\n\n这些分析器可以根据不同的语言和需求来优化索引和搜索。\n\n\n以下是您提供的一些 Elasticsearch 查询示例，涵盖了基本查询、带有分析的查询、布尔查询、范围查询、通配符查询、模糊查询等操作。下面是每种查询的详细解释和用法：\n\n### 1. **基本查询**\n查询 `movies` 索引中标题为 `2012` 的电影，并根据 `year` 字段降序排序，返回前 10 条结果：\n```bash\nGET /movies/_search?q=2012&df=title&sort=year:desc&from=0&size=10&timeout=1s\n```\n- **`q=2012`**：查询内容为 `2012`。\n- **`df=title`**：指定查询字段为 `title`。\n- **`sort=year:desc`**：按 `year` 字段降序排序。\n- **`from=0&size=10`**：分页，返回前 10 条数据。\n- **`timeout=1s`**：查询超时限制为 1 秒。\n\n### 2. **带 Profile 的查询**\n启用 `profile` 可以帮助分析查询性能，查看查询的每个阶段的时间。\n```bash\nGET /movies/_search?q=2012&df=title\n{\n\t\"profile\":\"true\"\n}\n```\n- **`\"profile\": \"true\"`**：启用查询性能分析。\n\n### 3. **泛查询，对所有字段进行查询**\n使用 `_all` 字段进行泛查询，查询所有字段。\n```bash\nGET /movies/_search?q=2012\n{\n\t\"profile\":\"true\"\n}\n```\n- **`q=2012`**：查询所有字段中包含 `2012` 的数据。\n\n### 4. **指定字段查询**\n查询 `title` 字段中包含 `2012` 的记录，并按照 `year` 字段降序排序：\n```bash\nGET /movies/_search?q=title:2012&sort=year:desc&from=0&size=10&timeout=1s\n{\n\t\"profile\":\"true\"\n}\n```\n- **`q=title:2012`**：指定查询字段为 `title`，查询内容为 `2012`。\n\n### 5. **查找美丽心灵**\n查询 `title` 字段包含 `\"Beautiful Mind\"` 的记录：\n```bash\nGET /movies/_search?q=title:Beautiful Mind\n{\n\t\"profile\":\"true\"\n}\n```\n\n### 6. **泛查询**\n查询 `title` 字段包含 `2012` 的记录：\n```bash\nGET /movies/_search?q=title:2012\n{\n\t\"profile\":\"true\"\n}\n```\n\n### 7. **Phrase 查询（短语查询）**\n查询 `title` 字段精确匹配 `\"Beautiful Mind\"`：\n```bash\nGET /movies/_search?q=title:\"Beautiful Mind\"\n{\n\t\"profile\":\"true\"\n}\n```\n- 使用引号表示精确短语匹配，要求字段内容必须完全匹配短语 `\"Beautiful Mind\"`。\n\n### 8. **分组查询（使用括号）**\n查询 `title` 字段中包含 `Beautiful Mind` 的记录：\n```bash\nGET /movies/_search?q=title:(Beautiful Mind)\n{\n\t\"profile\":\"true\"\n}\n```\n- 使用括号可以进行分组查询，类似逻辑上的括号优先级。\n\n### 9. **布尔操作符查询**\n- **AND 查询：**\n  查询 `title` 字段同时包含 `Beautiful` 和 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful AND Mind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **NOT 查询：**\n  查询 `title` 字段包含 `Beautiful` 但不包含 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful NOT Mind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **OR 查询：**\n  查询 `title` 字段包含 `Beautiful` 或 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful %2BMind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n\n### 10. **范围查询**\n查询 `title` 字段包含 `beautiful` 且 `year` 在 2002 到 2018 年之间的记录：\n```bash\nGET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D\n{\n\t\"profile\":\"true\"\n}\n```\n- **`year:[2002 TO 2018]`**：指定 `year` 字段的范围查询。\n\n### 11. **通配符查询**\n查询 `title` 字段以 `b` 开头的所有记录：\n```bash\nGET /movies/_search?q=title:b*\n{\n\t\"profile\":\"true\"\n}\n```\n- **`b*`**：使用通配符查询以 `b` 开头的字符串。\n\n### 12. **模糊查询 & 近似度匹配**\n- **模糊匹配**：查询 `title` 字段中的词语 `beautifl`，允许有 1 个字符的错误：\n  ```bash\n  GET /movies/_search?q=title:beautifl~1\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **近似度匹配**：查询 `title` 字段中的短语 `\"Lord Rings\"`，允许 2 个字符的误差：\n  ```bash\n  GET /movies/_search?q=title:\"Lord Rings\"~2\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n\n### 总结\n这些查询展示了如何使用 Elasticsearch 提供的强大查询能力来根据不同的需求筛选和搜索数据。常见的查询类型包括：\n- **基本查询**：用于查找单一词汇。\n- **布尔查询**：组合多个查询条件。\n- **范围查询**：查找特定范围内的记录。\n- **通配符查询**：模糊匹配。\n- **短语查询**：精确匹配整个短语。\n\n同时，`profile` 参数可以帮助分析查询性能，优化查询响应。\n\n\n3.8-RequestBody与QueryDSL简介\n\n以下是您提供的 Elasticsearch 查询操作，包括分页、日期排序、源过滤、脚本字段、以及不同的查询类型（如 `match`、`match_phrase`）。这些操作展示了如何在 Elasticsearch 中进行更精细的查询和数据处理。\n\n### 1. **忽略不存在的索引（`ignore_unavailable=true`）**\n在查询时，如果访问的索引不存在，使用 `ignore_unavailable=true` 可以避免报错：\n```bash\nPOST /movies,404_idx/_search?ignore_unavailable=true\n{\n  \"profile\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`ignore_unavailable=true`**：在访问不存在的索引时，忽略错误。\n\n### 2. **分页查询**\n查询 `kibana_sample_data_ecommerce` 索引并分页返回数据（从第 10 条开始，返回 20 条记录）：\n```bash\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"from\": 10,\n  \"size\": 20,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`from=10`** 和 **`size=20`**：分页，跳过前 10 条，返回接下来的 20 条。\n\n### 3. **日期排序**\n按 `order_date` 字段降序排序：\n```bash\nPOST kibana_sample_data_ecommerce/_search\n{\n  \"sort\": [{\"order_date\": \"desc\"}],\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`sort`**：按照 `order_date` 字段降序排序。\n\n### 4. **源过滤**\n只返回文档中的 `order_date` 字段，不返回其他字段：\n```bash\nPOST kibana_sample_data_ecommerce/_search\n{\n  \"_source\": [\"order_date\"],\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`_source`**：指定只返回 `order_date` 字段的数据。\n\n### 5. **脚本字段**\n使用脚本字段计算新的字段（例如，拼接 `order_date` 和 `\"hello\"`）：\n```bash\nGET kibana_sample_data_ecommerce/_search\n{\n  \"script_fields\": {\n    \"new_field\": {\n      \"script\": {\n        \"lang\": \"painless\",\n        \"source\": \"doc['order_date'].value+'hello'\"\n      }\n    }\n  },\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`script_fields`**：使用 `painless` 脚本创建新的字段 `new_field`，将 `order_date` 字段与字符串 `\"hello\"` 拼接。\n\n### 6. **`match` 查询**\n查询 `movies` 索引中 `title` 字段包含 `\"last christmas\"` 的记录：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"last christmas\"\n    }\n  }\n}\n```\n- **`match`**：进行标准的全文匹配查询。\n\n### 7. **`match` 查询并使用 AND 操作符**\n查询 `title` 包含 `\"last christmas\"` 且两个词都必须出现的记录（使用 AND 操作符）：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": {\n        \"query\": \"last christmas\",\n        \"operator\": \"and\"\n      }\n    }\n  }\n}\n```\n- **`operator: \"and\"`**：两个词必须同时出现在字段中。\n\n### 8. **`match_phrase` 查询（短语匹配）**\n查询 `title` 字段精确匹配 `\"one love\"` 作为一个短语：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"title\": {\n        \"query\": \"one love\"\n      }\n    }\n  }\n}\n```\n- **`match_phrase`**：精确匹配整个短语，必须按照指定的顺序。\n\n### 9. **`match_phrase` 查询并使用 `slop`**\n查询 `title` 字段中的短语 `\"one love\"`，并允许 1 个词语的偏移（即词语可以有一定的顺序变化）：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"title\": {\n        \"query\": \"one love\",\n        \"slop\": 1\n      }\n    }\n  }\n}\n```\n- **`slop: 1`**：允许最多 1 个词语的顺序偏移（例如，`love one` 也可以匹配）。\n\n### 总结\n这些查询展示了 Elasticsearch 中常用的查询类型：\n- **分页查询**：使用 `from` 和 `size` 来实现分页。\n- **日期排序**：使用 `sort` 来对结果进行排序。\n- **源过滤**：通过 `_source` 限制返回的字段。\n- **脚本字段**：使用 `painless` 脚本来计算新字段。\n- **布尔操作符**：通过 `operator` 来定义 `match` 查询的逻辑。\n- **短语匹配和偏移**：通过 `match_phrase` 和 `slop` 来进行更灵活的查询。\n\n这些查询可以帮助你在 Elasticsearch 中实现复杂的搜索需求。\n\n[3.9-QueryString&SimpleQueryString查询]\n\n以下是您提供的 Elasticsearch 查询操作，涉及到 `query_string` 和 `simple_query_string` 查询的使用，以及如何通过不同的字段和操作符执行复杂查询。这里的查询包括布尔操作符、字段匹配、以及指定默认操作符等。\n\n### 1. **向索引添加文档**\n首先，向 `users` 索引添加两个用户文档：\n```bash\nPUT /users/_doc/1\n{\n  \"name\": \"Ruan Yiming\",\n  \"about\": \"java, golang, node, swift, elasticsearch\"\n}\n\nPUT /users/_doc/2\n{\n  \"name\": \"Li Yiming\",\n  \"about\": \"Hadoop\"\n}\n```\n\n### 2. **`query_string` 查询：查询名称中包含 \"Ruan\" 和 \"Yiming\" 的文档**\n使用 `query_string` 查询，指定默认字段为 `name`，查询条件为 `\"Ruan AND Yiming\"`：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"query_string\": {\n      \"default_field\": \"name\",\n      \"query\": \"Ruan AND Yiming\"\n    }\n  }\n}\n```\n- **`query_string`**：用于执行复杂的查询，可以使用逻辑操作符（如 AND、OR）。\n\n### 3. **`query_string` 查询：多个字段和复杂查询**\n查询名称或简介字段包含 `\"Ruan AND Yiming\"` 或 `\"Java AND Elasticsearch\"` 的文档：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"query_string\": {\n      \"fields\": [\"name\", \"about\"],\n      \"query\": \"(Ruan AND Yiming) OR (Java AND Elasticsearch)\"\n    }\n  }\n}\n```\n- **`fields`**：可以指定多个字段进行查询。\n- **`query`**：包含布尔操作符（如 AND、OR）。\n\n### 4. **`simple_query_string` 查询（默认操作符为 OR）**\n执行一个简单查询，默认操作符为 `OR`，查询 `name` 字段中包含 `\"Ruan\"` 或 `\"Yiming\"` 的文档：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Ruan AND Yiming\",\n      \"fields\": [\"name\"]\n    }\n  }\n}\n```\n- **`simple_query_string`**：适用于较简单的查询，避免了复杂的查询语法。\n\n### 5. **`simple_query_string` 查询（默认操作符为 AND）**\n查询 `name` 字段中包含 `\"Ruan\"` 且 `\"Yiming\"` 的文档，使用 `AND` 作为默认操作符：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Ruan Yiming\",\n      \"fields\": [\"name\"],\n      \"default_operator\": \"AND\"\n    }\n  }\n}\n```\n- **`default_operator`**：设置默认操作符（`AND` 或 `OR`）。在此示例中，`AND` 用于要求 `\"Ruan\"` 和 `\"Yiming\"` 必须同时出现在 `name` 字段中。\n\n### 6. **`query_string` 查询：查询电影标题包含 \"Beautiful\" 和 \"Mind\"**\n执行 `query_string` 查询，查询电影标题中包含 `\"Beautiful\"` 和 `\"Mind\"` 的文档：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"query_string\": {\n      \"default_field\": \"title\",\n      \"query\": \"Beautiful AND Mind\"\n    }\n  }\n}\n```\n- **`query_string`**：执行复杂查询，可以使用布尔操作符（如 `AND`）。\n\n### 7. **`query_string` 查询：多个字段查询**\n查询电影的 `title` 或 `year` 字段包含 `\"2012\"` 的文档：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"query_string\": {\n      \"fields\": [\"title\", \"year\"],\n      \"query\": \"2012\"\n    }\n  }\n}\n```\n- **`fields`**：指定多个字段进行查询，这里同时查询 `title` 和 `year` 字段。\n\n### 8. **`simple_query_string` 查询：使用 `+` 进行短语匹配**\n查询电影标题中包含 `\"Beautiful\"` 和 `\"mind\"` 的文档，使用 `+` 确保两个词都出现在查询中：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Beautiful +mind\",\n      \"fields\": [\"title\"]\n    }\n  }\n}\n```\n- **`+` 操作符**：用于强制要求某个词出现在查询结果中。\n\n---\n\n### 总结\n这些查询展示了如何在 Elasticsearch 中使用不同类型的查询：\n\n- **`query_string`** 查询：用于执行复杂的查询，可以包含多个字段、布尔操作符（AND、OR、NOT）以及通配符等。\n- **`simple_query_string`** 查询：比 `query_string` 更简单，适用于不需要复杂语法的查询，并且支持默认操作符的配置。\n- **字段查询**：可以针对多个字段同时查询，指定多个字段使用 `fields` 参数。\n- **布尔操作符**：如 `AND`、`OR`、`NOT`，控制查询的逻辑。\n\n这些查询方式非常适合处理复杂的检索需求。\n\n[3.10-DynamicMapping和常见字段类型]\n\n您的示例展示了如何在 Elasticsearch 中管理映射（Mapping）以及如何处理动态字段和映射更新。以下是总结和解释：\n\n### **映射和字段定义**\n\n映射在 Elasticsearch 中类似于关系数据库中的表结构定义，主要用于：\n- **定义字段的名称**：指定文档中的字段名。\n- **定义字段的类型**：比如文本（`text`）、关键字（`keyword`）、日期（`date`）等。\n- **定义倒排索引相关配置**：比如是否需要索引字段，以及字段的 `Analyzer` 配置。\n\n### **动态映射（Dynamic Mapping）**\n\n动态映射允许 Elasticsearch 根据新文档自动推断字段的类型。可以通过 `dynamic` 属性来配置动态行为：\n- **`true`**（默认）：允许新字段自动被索引和映射。\n- **`false`**：禁止自动创建新字段，但已存在字段可以继续使用。\n- **`strict`**：禁止任何新的字段。如果文档包含未定义的字段，将导致错误。\n\n### **操作演示**\n\n1. **写入文档并查看映射**\n    - 向 `mapping_test` 索引中添加一个文档，查看映射：\n   ```bash\n   PUT mapping_test/_doc/1\n   {\n     \"firstName\": \"Chan\",\n     \"lastName\": \"Jackie\",\n     \"loginDate\": \"2018-07-24T10:29:48.103Z\"\n   }\n\n   GET mapping_test/_mapping\n   ```\n\n2. **动态映射：推断字段类型**\n    - 新字段 `uid`, `isVip`, `age` 等被自动推断并加入映射：\n   ```bash\n   PUT mapping_test/_doc/1\n   {\n     \"uid\": \"123\",\n     \"isVip\": false,\n     \"isAdmin\": \"true\",\n     \"age\": 19,\n     \"height\": 180\n   }\n\n   GET mapping_test/_mapping\n   ```\n\n3. **新增字段（默认动态）**\n    - 如果动态映射为 `true`（默认），可以动态添加新的字段：\n   ```bash\n   PUT dynamic_mapping_test/_doc/1\n   {\n     \"newField\": \"someValue\"\n   }\n\n   POST dynamic_mapping_test/_search\n   {\n     \"query\": {\n       \"match\": {\n         \"newField\": \"someValue\"\n       }\n     }\n   }\n   ```\n\n4. **修改动态设置为 `false`**\n    - 修改 `dynamic` 设置为 `false`，禁止自动推断新字段：\n   ```bash\n   PUT dynamic_mapping_test/_mapping\n   {\n     \"dynamic\": false\n   }\n\n   PUT dynamic_mapping_test/_doc/10\n   {\n     \"anotherField\": \"someValue\"\n   }\n\n   POST dynamic_mapping_test/_search\n   {\n     \"query\": {\n       \"match\": {\n         \"anotherField\": \"someValue\"\n       }\n     }\n   }\n   ```\n\n   在此示例中，`anotherField` 将不会被索引或搜索，因为动态映射已设置为 `false`。\n\n5. **修改为 `strict` 模式**\n    - 如果将 `dynamic` 设置为 `strict`，任何新的字段都会导致错误：\n   ```bash\n   PUT dynamic_mapping_test/_mapping\n   {\n     \"dynamic\": \"strict\"\n   }\n\n   PUT dynamic_mapping_test/_doc/12\n   {\n     \"lastField\": \"value\"\n   }\n   ```\n   此时，写入新字段 `lastField` 会导致错误，HTTP 返回 `400` 错误码。\n\n6. **删除索引**\n    - 删除索引：\n   ```bash\n   DELETE dynamic_mapping_test\n   ```\n\n### **总结**\n\n- **动态映射（Dynamic Mapping）**：允许 Elasticsearch 自动推断并添加新的字段，方便快速处理未知数据。\n- **`dynamic` 配置**：控制是否允许 Elasticsearch 自动映射新字段：\n    - `true`：默认允许动态字段；\n    - `false`：禁止自动映射新字段；\n    - `strict`：禁止所有未知字段，如果有未定义字段则会报错。\n- **更改映射**：映射一旦建立后不能直接修改字段类型，要修改字段配置或添加新字段需要使用 `reindex` 操作。\n\n这些操作有助于管理索引和字段的生命周期，确保数据能够根据业务需求灵活适应。\n\n\n您的示例展示了 Elasticsearch 中显式设置映射（Mapping）的一些常见操作和参数。以下是各个设置项的详细介绍和使用案例。\n\n### **1. `index: false` 设置**\n通过设置字段的 `index: false`，可以阻止某些字段被索引。这样可以避免该字段参与倒排索引，也不会进行搜索。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n    \"mappings\" : {\n      \"properties\" : {\n        \"firstName\" : {\n          \"type\" : \"text\"\n        },\n        \"lastName\" : {\n          \"type\" : \"text\"\n        },\n        \"mobile\" : {\n          \"type\" : \"text\",\n          \"index\": false  # 禁止索引该字段\n        }\n      }\n    }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\",\n  \"mobile\": \"12345678\"\n}\n\nPOST /users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"mobile\": \"12345678\"  # 搜索时不会命中mobile字段\n    }\n  }\n}\n```\n在上面的示例中，`mobile` 字段被设置为 `index: false`，因此无法用于搜索查询。\n\n### **2. `null_value` 设置**\n通过设置 `null_value`，可以在文档中存储 `null` 值，并用指定的替代值替换 `null`。这对于查询时需要处理 `null` 数据特别有用。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n    \"mappings\" : {\n      \"properties\" : {\n        \"firstName\" : {\n          \"type\" : \"text\"\n        },\n        \"lastName\" : {\n          \"type\" : \"text\"\n        },\n        \"mobile\" : {\n          \"type\" : \"keyword\",\n          \"null_value\": \"NULL\"  # null值替代为\"NULL\"\n        }\n      }\n    }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\",\n  \"mobile\": null  # 实际值是null\n}\n\nPUT users/_doc/2\n{\n  \"firstName\": \"Ruan2\",\n  \"lastName\": \"Yiming2\"  # 没有mobile字段\n}\n\nGET users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"mobile\": \"NULL\"  # 搜索时会匹配到null值字段\n    }\n  }\n}\n```\n此设置可以确保查询时用 `NULL` 代替存储的 `null` 值。\n\n### **3. `copy_to` 设置**\n`copy_to` 可以将多个字段的内容复制到另一个字段，方便进行联合查询或索引。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n  \"mappings\": {\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"text\",\n        \"copy_to\": \"fullName\"  # 将firstName复制到fullName字段\n      },\n      \"lastName\": {\n        \"type\": \"text\",\n        \"copy_to\": \"fullName\"  # 将lastName复制到fullName字段\n      }\n    }\n  }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\"\n}\n\nGET users/_search?q=fullName:(Ruan Yiming)\n\nPOST users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"fullName\": {\n        \"query\": \"Ruan Yiming\",\n        \"operator\": \"and\"  # 联合查询fullName字段\n      }\n    }\n  }\n}\n```\n这里，`firstName` 和 `lastName` 字段的内容会被复制到 `fullName` 字段，从而使得查询变得更加方便。\n\n### **4. 数组类型处理**\nElasticsearch 支持数组字段。数组中的每个元素会被视为一个单独的值，这对于多值字段非常有用。\n\n**示例**:\n```bash\nPUT users/_doc/1\n{\n  \"name\": \"onebird\",\n  \"interests\": \"reading\"  # 字段为单一值\n}\n\nPUT users/_doc/2\n{\n  \"name\": \"twobirds\",\n  \"interests\": [\"reading\", \"music\"]  # 字段为数组\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nGET users/_mapping\n```\n在此示例中，`interests` 字段既可以是单个值也可以是数组，Elasticsearch 会将每个数组元素视为独立的值进行索引。\n\n---\n\n### **总结常见的 Mapping 参数**\n\n- **`type`**: 字段的数据类型，如 `text`, `keyword`, `date` 等。\n- **`index`**: 控制是否索引该字段，`false` 表示不索引，默认为 `true`。\n- **`null_value`**: 控制 `null` 值的替代值。可以设置为任何替代值，如 `\"NULL\"`。\n- **`copy_to`**: 将多个字段的内容复制到一个目标字段中，便于联合查询。\n- **`dynamic`**: 控制动态映射，`true` 表示允许自动推断新字段，`false` 表示禁止新字段自动映射，`strict` 则表示严格模式下不允许任何新字段。\n\n通过这些映射设置，可以更好地控制数据如何存储和索引，以及如何在查询时处理和优化字段。\n\n\n您的示例展示了 Elasticsearch 中关于多字段特性以及自定义分析器（Analyzer）的配置。以下是对各个分析器和相关配置的详细解释。\n\n### **1. 自定义 Analyzer 和 Char Filter**\nElasticsearch 提供了灵活的机制来配置分词器（Tokenizer）和字符过滤器（Char Filter）。这些配置用于在索引和搜索过程中控制文本的处理方式。\n\n#### **自定义 Tokenizer 和 Char Filter 示例**\n- **Keyword Tokenizer**: `keyword` tokenizer 将整个文本当作一个单独的 token 进行处理。\n- **HTML Strip Char Filter**: `html_strip` char filter 用于从文本中去除 HTML 标签。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"keyword\",  # 使用关键词分词器\n  \"char_filter\": [\"html_strip\"],  # 使用html_strip字符过滤器\n  \"text\": \"<b>hello world</b>\"  # 输入带有HTML标签的文本\n}\n```\n输出将会是：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"hello world\",\n      \"start_offset\": 3,\n      \"end_offset\": 15,\n      \"type\": \"word\",\n      \"position\": 0\n    }\n  ]\n}\n```\n此配置移除了文本中的 `<b></b>` HTML 标签，只保留了纯文本 \"hello world\"。\n\n#### **Path Hierarchy Tokenizer**\n`path_hierarchy` tokenizer 用于处理文件路径等层级结构的数据，将路径按分隔符（如 `/`）切割。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"path_hierarchy\",  # 使用路径层级分词器\n  \"text\": \"/user/ymruan/a/b/c/d/e\"\n}\n```\n输出会将路径按 `/` 切分：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"/user/ymruan/a/b/c/d/e\",\n      \"start_offset\": 0,\n      \"end_offset\": 21,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"/user/ymruan/a/b/c/d\",\n      \"start_offset\": 0,\n      \"end_offset\": 16,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    ...\n  ]\n}\n```\n\n### **2. Char Filter 替换符号**\n字符过滤器可以用于替换文本中的特定符号或字符。例如，使用 `mapping` 类型的 `char_filter`，可以替换文本中的字符（如将 `-` 替换为 `_`）。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",  # 使用标准分词器\n  \"char_filter\": [\n    {\n      \"type\": \"mapping\",  # 使用字符映射过滤器\n      \"mappings\": [\"- => _\"]\n    }\n  ],\n  \"text\": \"123-456, I-test! test-990 650-555-1234\"\n}\n```\n此配置将文本中的 `-` 替换为 `_`，输出将是：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"123_456\",\n      \"start_offset\": 0,\n      \"end_offset\": 7,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    ...\n  ]\n}\n```\n\n### **3. Char Filter 替换表情符号**\n你还可以使用字符过滤器将表情符号替换为特定的文本（如将 `:)` 替换为 `happy`，`:(` 替换为 `sad`）。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",\n  \"char_filter\": [\n    {\n      \"type\": \"mapping\",\n      \"mappings\": [\":) => happy\", \":( => sad\"]\n    }\n  ],\n  \"text\": [\"I am felling :)\", \"Feeling :( today\"]\n}\n```\n输出：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"I\",\n      \"start_offset\": 0,\n      \"end_offset\": 1,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"am\",\n      \"start_offset\": 2,\n      \"end_offset\": 4,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"felling\",\n      \"start_offset\": 5,\n      \"end_offset\": 12,\n      \"type\": \"word\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"happy\",  # 替换表情符号:) 为 happy\n      \"start_offset\": 13,\n      \"end_offset\": 18,\n      \"type\": \"word\",\n      \"position\": 3\n    }\n  ]\n}\n```\n\n### **4. 使用 Stop 和 Snowball 过滤器**\n使用 `stop` 过滤器来删除常见的停用词，使用 `snowball` 过滤器进行词干提取（如将 \"playing\" 转换为 \"play\"）。\n\n```bash\nGET _analyze\n{\n  \"tokenizer\": \"whitespace\",  # 使用空格分词器\n  \"filter\": [\"stop\", \"snowball\"],  # 使用停用词和词干提取\n  \"text\": [\"The girls in China are playing this game!\"]\n}\n```\n输出：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"girl\",\n      \"start_offset\": 4,\n      \"end_offset\": 9,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"china\",\n      \"start_offset\": 14,\n      \"end_offset\": 19,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    ...\n  ]\n}\n```\n\n### **5. 正则表达式替换**\n通过 `pattern_replace` 字符过滤器，您可以根据正则表达式来替换文本中的特定部分。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",\n  \"char_filter\": [\n    {\n      \"type\": \"pattern_replace\",\n      \"pattern\": \"http://(.*)\",\n      \"replacement\": \"$1\"\n    }\n  ],\n  \"text\": \"http://www.elastic.co\"\n}\n```\n此配置将 `http://` 替换为一个空字符串，结果为：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"www.elastic.co\",\n      \"start_offset\": 7,\n      \"end_offset\": 23,\n      \"type\": \"word\",\n      \"position\": 0\n    }\n  ]\n}\n```\n\n### **总结：**\n- **Tokenizer**: 负责将输入文本切割成词条（token）。如 `keyword`, `standard`, `path_hierarchy`。\n- **Char Filter**: 处理文本中的字符替换、去除特殊符号或HTML标签等，如 `html_strip`, `mapping`, `pattern_replace`。\n- **Filter**: 用于文本处理，如去除停用词（`stop`）或词干提取（`snowball`）。\n\n这些工具的组合允许您灵活地处理和分析文本数据，并针对特定的业务需求优化索引和搜索行为。\n\n在 Elasticsearch 中，**Index Templates** 和 **Dynamic Templates** 是两种强大的工具，用于控制如何定义和管理索引的映射和设置。以下是这两者的详细解释和示例。\n\n### **1. Index Templates (索引模板)**\n\n**Index Templates** 是一种配置模板，用于为匹配特定模式的索引自动配置设置、映射和其他配置。当创建一个新索引时，如果该索引匹配模板中的 `index_patterns` 配置，模板中的设置、映射和其他配置就会自动应用到新索引上。\n\n#### **创建默认模板**\n下面是创建一个默认模板的示例：\n```bash\nPUT _template/template_default\n{\n  \"index_patterns\": [\"*\"],  # 匹配所有索引\n  \"order\": 0,\n  \"version\": 1,\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 1\n  }\n}\n```\n这会为所有索引设置一个模板，其中包含分片数量为1、副本数量为1。\n\n#### **为特定模式创建模板**\n另一个例子是为 `test*` 开头的索引创建模板：\n```bash\nPUT /_template/template_test\n{\n  \"index_patterns\": [\"test*\"],  # 匹配所有以test开头的索引\n  \"order\": 1,\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 2\n  },\n  \"mappings\": {\n    \"date_detection\": false,  # 禁止自动检测日期字段\n    \"numeric_detection\": true  # 自动检测数字字段\n  }\n}\n```\n\n#### **查看模板**\n你可以查看已定义的模板：\n```bash\nGET /_template/template_default\nGET /_template/temp*  # 查看所有模板\n```\n\n#### **删除模板**\n删除模板的命令如下：\n```bash\nDELETE /_template/template_default\nDELETE /_template/template_test\n```\n\n---\n\n### **2. Dynamic Templates (动态模板)**\n\n**Dynamic Templates** 用于在创建索引时自动匹配字段类型和名称，根据这些动态模板来生成字段的映射规则。可以根据字段的类型（例如字符串、数字）和字段名称（例如以某些字符开头的字段）来定义映射。\n\n#### **自动映射数字字符串和日期字符串**\n例如，数字字符串会被映射为 `text` 类型，日期字符串会被映射为日期类型：\n```bash\nPUT ttemplate/_doc/1\n{\n  \"someNumber\": \"1\",        # 字符串数字\n  \"someDate\": \"2019/01/01\"  # 字符串日期\n}\nGET ttemplate/_mapping\n```\n在这个例子中，`someNumber` 会被映射成 `text` 类型，而 `someDate` 会被映射成 `date` 类型。\n\n#### **定义动态模板映射规则**\n使用 `dynamic_templates` 可以根据字段类型和名称定义映射。例如，以下动态模板将以 `is*` 开头的字符串字段映射为 `boolean` 类型，其他字符串字段映射为 `keyword` 类型：\n```bash\nDELETE my_index\n\nPUT my_index\n{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"strings_as_boolean\": {\n          \"match_mapping_type\": \"string\",   # 匹配所有字符串类型\n          \"match\": \"is*\",  # 字段名称以is开头\n          \"mapping\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      {\n        \"strings_as_keywords\": {\n          \"match_mapping_type\": \"string\",   # 匹配所有字符串类型\n          \"mapping\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    ]\n  }\n}\n```\n在这个示例中，`isVIP` 字段会被映射为 `boolean` 类型，而其他字符串类型的字段则会被映射为 `keyword` 类型。\n\n#### **结合路径匹配**\n动态模板不仅可以基于字段名称，还可以基于字段的路径。例如，以下模板会将 `name.*` 路径下的所有字段映射为 `text` 类型，并将这些字段复制到 `full_name` 字段中：\n```bash\nPUT my_index\n{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"full_name\": {\n          \"path_match\": \"name.*\",  # 匹配name下的所有字段\n          \"path_unmatch\": \"*.middle\",  # 排除middle字段\n          \"mapping\": {\n            \"type\": \"text\",\n            \"copy_to\": \"full_name\"  # 将值复制到full_name字段\n          }\n        }\n      }\n    ]\n  }\n}\n```\n然后，插入以下数据：\n```bash\nPUT my_index/_doc/1\n{\n  \"name\": {\n    \"first\": \"John\",\n    \"middle\": \"Winston\",\n    \"last\": \"Lennon\"\n  }\n}\n```\n\n在这个例子中，`first` 和 `last` 字段将被映射为 `text` 类型，并且它们的内容会被复制到 `full_name` 字段中。\n\n#### **搜索字段**\n可以通过 `full_name` 字段来搜索：\n```bash\nGET my_index/_search?q=full_name:John\n```\n\n---\n\n### **总结：**\n- **Index Templates** 是为匹配特定索引模式（`index_patterns`）的所有索引自动配置设置和映射的模板。\n- **Dynamic Templates** 用于根据字段类型和字段名称自动映射索引字段。你可以根据字段类型（如 `string`）或字段路径（如 `name.*`）来定义映射规则。\n\n这些配置使得索引的创建和管理更加灵活，可以根据实际数据自动推断和调整映射，从而提高了 Elasticsearch 的可用性和效率。\n\n\n\nElasticsearch 提供了强大的 **聚合** 功能，用于对数据进行汇总和分析。聚合是 Elasticsearch 搜索的一个核心功能，允许你通过多种方式对数据进行分组、统计、求最大/最小值、计算平均值等操作。以下是一些常见的聚合分析操作和示例：\n\n### **1. 基本的聚合分析：按目的地分桶统计**\n在这个示例中，我们按航班的目的地（`DestCountry`）进行分桶统计，查看每个目的地的航班数量：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,  # 不返回实际的文档数据，只返回聚合结果\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"  # 按目的地国家分桶\n      }\n    }\n  }\n}\n```\n在这个聚合查询中，`terms` 聚合用于对 `DestCountry` 字段的值进行分桶，返回每个目的地国家的航班数量。\n\n### **2. 增加更多统计：平均、最大、最小价格**\n你可以在分桶内部添加更多聚合来获取其他统计信息，如每个目的地的平均票价、最高票价和最低票价：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"\n      },\n      \"aggs\": {\n        \"avg_price\": {\n          \"avg\": {\n            \"field\": \"AvgTicketPrice\"  # 计算平均票价\n          }\n        },\n        \"max_price\": {\n          \"max\": {\n            \"field\": \"AvgTicketPrice\"  # 计算最高票价\n          }\n        },\n        \"min_price\": {\n          \"min\": {\n            \"field\": \"AvgTicketPrice\"  # 计算最低票价\n          }\n        }\n      }\n    }\n  }\n}\n```\n在这个查询中，我们为每个目的地添加了三个聚合：`avg_price`、`max_price` 和 `min_price`，分别计算每个目的地的平均票价、最大票价和最小票价。\n\n### **3. 聚合价格与天气信息：统计与多重聚合**\n如果你还想结合天气信息（如 `DestWeather` 字段）与航班价格统计一起进行聚合，可以使用嵌套聚合：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"\n      },\n      \"aggs\": {\n        \"stats_price\": {\n          \"stats\": {\n            \"field\": \"AvgTicketPrice\"  # 计算票价的多项统计信息\n          }\n        },\n        \"weather\": {\n          \"terms\": {\n            \"field\": \"DestWeather\",  # 按天气类型分桶\n            \"size\": 5  # 只返回前5个天气类型\n          }\n        }\n      }\n    }\n  }\n}\n```\n在这个示例中，我们不仅计算了每个目的地的票价统计信息（如平均票价、最大票价等），还将天气信息作为另一个 `terms` 聚合，显示每个目的地的天气类型，并限制返回的天气类型数量为 5 个。\n\n---\n\n### **常见的聚合类型：**\n- **`terms` 聚合**：将文档按某个字段的值进行分桶，常用于统计词频或其他分类数据。\n- **`avg` 聚合**：计算某个数值字段的平均值。\n- **`sum` 聚合**：计算某个数值字段的总和。\n- **`min` 聚合**：返回某个数值字段的最小值。\n- **`max` 聚合**：返回某个数值字段的最大值。\n- **`stats` 聚合**：返回字段的统计信息（包括：最小值、最大值、平均值、总和和文档数量）。\n- **`date_histogram` 聚合**：按日期进行分桶，适用于时间序列数据。\n- **`histogram` 聚合**：按数值区间进行分桶，常用于数值数据的统计。\n\n---\n\n### **相关阅读：**\n- [Elasticsearch 聚合文档](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/search-aggregations.html) 详细介绍了各种聚合的使用方式和示例。\n\n聚合功能非常强大，能帮助你从海量数据中提取有价值的信息，适用于各种数据分析场景。\n\n\n","source":"_posts/elasticsearch/es常用命令.md","raw":"---\ntitle: es常用命令\ndate: 2025-02-27 15:00:37\ntags:\n---\n\n以下是 Elasticsearch (ES) 常用命令的总结和笔记：\n\n### 1. 查看索引相关信息\n\n- **查看指定索引的映射信息**\n  ```bash\n  GET kibana_sample_data_ecommerce\n  ```\n\n- **查看指定索引的文档总数**\n  ```bash\n  GET kibana_sample_data_ecommerce/_count\n  ```\n\n- **查看前10条文档**\n  ```bash\n  POST kibana_sample_data_ecommerce/_search\n  {\n  }\n  ```\n\n### 2. 查看索引状态与信息\n\n- **查看索引信息**\n  ```bash\n  GET /_cat/indices/kibana*?v&s=index\n  ```\n\n- **查看状态为绿的索引**\n  ```bash\n  GET /_cat/indices?v&health=green\n  ```\n\n- **按文档个数排序查看索引**\n  ```bash\n  GET /_cat/indices?v&s=docs.count:desc\n  ```\n\n- **查看具体的索引字段（健康、主分片、复制分片、文档数等）**\n  ```bash\n  GET /_cat/indices/kibana*?pri&v&h=health,index,pri,rep,docs.count,mt\n  ```\n\n- **查看每个索引使用的内存量**\n  ```bash\n  GET /_cat/indices?v&h=i,tm&s=tm:desc\n  ```\n\n### 3. 查看节点信息\n\n- **查看所有节点信息**\n  ```bash\n  GET _cat/nodes?v\n  ```\n\n- **查看特定节点信息**\n  ```bash\n  GET /_nodes/es7_01,es7_02\n  ```\n\n- **查看节点信息并显示特定字段**\n  ```bash\n  GET /_cat/nodes?v&h=id,ip,port,v,m\n  ```\n\n### 4. 查看集群健康状况\n\n- **查看集群健康状况**\n  ```bash\n  GET _cluster/health\n  ```\n\n- **查看集群健康状况，并按分片级别显示**\n  ```bash\n  GET _cluster/health?level=shards\n  ```\n\n- **查看特定索引的集群健康状况**\n  ```bash\n  GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights\n  ```\n\n- **查看特定索引的集群健康状况，并按分片级别显示**\n  ```bash\n  GET /_cluster/health/kibana_sample_data_flights?level=shards\n  ```\n\n### 5. 查看集群状态\n\n- **查看集群状态**\n  ```bash\n  GET /_cluster/state\n  ```\n\n### 6. 查看集群设置\n\n- **查看集群设置**\n  ```bash\n  GET /_cluster/settings\n  ```\n\n- **查看集群设置，包括默认设置**\n  ```bash\n  GET /_cluster/settings?include_defaults=true\n  ```\n\n### 7. 查看分片信息\n\n- **查看集群的所有分片信息**\n  ```bash\n  GET /_cat/shards\n  ```\n\n- **查看特定的分片信息（包括状态、主分片/副本分片等）**\n  ```bash\n  GET /_cat/shards?h=index,shard,prirep,state,unassigned.reason\n  ```\n\n\n\n### 1. 创建文档\n\n- **自动生成 `_id` 创建文档**\n  ```bash\n  POST users/_doc\n  {\n    \"user\" : \"Mike\",\n    \"post_date\" : \"2019-04-15T14:12:12\",\n    \"message\" : \"trying out Kibana\"\n  }\n  ```\n\n- **指定 ID 创建文档（如果 ID 已存在则报错）**\n  ```bash\n  PUT users/_doc/1?op_type=create\n  {\n    \"user\" : \"Jack\",\n    \"post_date\" : \"2019-05-15T14:12:12\",\n    \"message\" : \"trying out Elasticsearch\"\n  }\n  ```\n\n- **指定 ID 创建文档（如果 ID 已存在则报错）**\n  ```bash\n  PUT users/_create/1\n  {\n    \"user\" : \"Jack\",\n    \"post_date\" : \"2019-05-15T14:12:12\",\n    \"message\" : \"trying out Elasticsearch\"\n  }\n  ```\n\n### 2. 根据 ID 获取文档\n\n- **获取指定 ID 的文档**\n  ```bash\n  GET users/_doc/1\n  ```\n\n### 3. 更新文档\n\n- **更新指定 ID 的文档（先删除再写入）**\n  ```bash\n  PUT users/_doc/1\n  {\n    \"user\" : \"Mike\"\n  }\n  ```\n\n- **在原文档上增加字段**\n  ```bash\n  POST users/_update/1/\n  {\n    \"doc\": {\n      \"post_date\" : \"2019-05-15T14:12:12\",\n      \"message\" : \"trying out Elasticsearch\"\n    }\n  }\n  ```\n\n### 4. 删除文档\n\n- **根据 ID 删除文档**\n  ```bash\n  DELETE users/_doc/1\n  ```\n\n### 5. 批量操作 (Bulk API)\n\n- **执行批量操作**  \n  第一次执行批量操作：\n  ```bash\n  POST _bulk\n  { \"index\" : { \"_index\" : \"test\", \"_id\" : \"1\" } }\n  { \"field1\" : \"value1\" }\n  { \"delete\" : { \"_index\" : \"test\", \"_id\" : \"2\" } }\n  { \"create\" : { \"_index\" : \"test2\", \"_id\" : \"3\" } }\n  { \"field1\" : \"value3\" }\n  { \"update\" : {\"_id\" : \"1\", \"_index\" : \"test\"} }\n  { \"doc\" : {\"field2\" : \"value2\"} }\n  ```\n\n  第二次执行批量操作：\n  ```bash\n  POST _bulk\n  { \"index\" : { \"_index\" : \"test\", \"_id\" : \"1\" } }\n  { \"field1\" : \"value1\" }\n  { \"delete\" : { \"_index\" : \"test\", \"_id\" : \"2\" } }\n  { \"create\" : { \"_index\" : \"test2\", \"_id\" : \"3\" } }\n  { \"field1\" : \"value3\" }\n  { \"update\" : {\"_id\" : \"1\", \"_index\" : \"test\"} }\n  { \"doc\" : {\"field2\" : \"value2\"} }\n  ```\n\n### 6. 多文档获取 (MGET)\n\n- **获取多个文档**\n  ```bash\n  GET /_mget\n  {\n    \"docs\" : [\n      { \"_index\" : \"test\", \"_id\" : \"1\" },\n      { \"_index\" : \"test\", \"_id\" : \"2\" }\n    ]\n  }\n  ```\n\n- **URI中指定索引**\n  ```bash\n  GET /test/_mget\n  {\n    \"docs\" : [\n      { \"_id\" : \"1\" },\n      { \"_id\" : \"2\" }\n    ]\n  }\n  ```\n\n- **使用 `_source` 参数指定返回的字段**\n  ```bash\n  GET /_mget\n  {\n    \"docs\" : [\n      { \"_index\" : \"test\", \"_id\" : \"1\", \"_source\" : false },\n      { \"_index\" : \"test\", \"_id\" : \"2\", \"_source\" : [\"field3\", \"field4\"] },\n      { \"_index\" : \"test\", \"_id\" : \"3\", \"_source\" : { \"include\": [\"user\"], \"exclude\": [\"user.location\"] } }\n    ]\n  }\n  ```\n\n### 7. 多查询操作 (MSEARCH)\n\n- **执行多个查询**\n  ```bash\n  POST kibana_sample_data_ecommerce/_msearch\n  {}\n  {\"query\" : {\"match_all\" : {}},\"size\":1}\n  {\"index\" : \"kibana_sample_data_flights\"}\n  {\"query\" : {\"match_all\" : {}},\"size\":2}\n  ```\n\n### 8. 清除测试数据\n\n- **删除索引（清除数据）**\n  ```bash\n  DELETE users\n  DELETE test\n  DELETE test2\n  ```\n\n[3.4-倒排索引入门]\n\nElasticsearch 的 `_analyze` API，它用于分析文本，查看在特定分析器下，文本是如何被分词和处理的。下面是每个请求的说明：\n\n### 1. **分析 \"Mastering Elasticsearch\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Mastering Elasticsearch\"\n}\n```\n- **分析器**：使用默认的 `standard` 分析器。\n- **文本**：`\"Mastering Elasticsearch\"`。\n- **预期效果**：`standard` 分析器会将这段文本分割成单词，通常会根据空格和标点符号进行分词。\n\n### 2. **分析 \"Elasticsearch Server\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Elasticsearch Server\"\n}\n```\n- **分析器**：同样使用 `standard` 分析器。\n- **文本**：`\"Elasticsearch Server\"`。\n- **预期效果**：分析器会分割文本为单词，可能会得到类似于 `[\"elasticsearch\", \"server\"]` 的分词结果。\n\n### 3. **分析 \"Elasticsearch Essentials\"**\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"Elasticsearch Essentials\"\n}\n```\n- **分析器**：继续使用 `standard` 分析器。\n- **文本**：`\"Elasticsearch Essentials\"`。\n- **预期效果**：分析器会将文本分割成 `[\"elasticsearch\", \"essentials\"]`。\n\n### 结果\n每个请求的结果将显示由 `standard` 分析器生成的分词结果。通常，`standard` 分析器会去除大部分标点符号并将文本转换为小写。分词的具体结果如下：\n\n- `\"Mastering Elasticsearch\"` -> `[\"mastering\", \"elasticsearch\"]`\n- `\"Elasticsearch Server\"` -> `[\"elasticsearch\", \"server\"]`\n- `\"Elasticsearch Essentials\"` -> `[\"elasticsearch\", \"essentials\"]`\n\n\n以下是使用不同的分析器（Analyzer）对文本进行分词分析的示例：\n\n### 1. **Standard Analyzer**\n标准分析器会根据空格、标点符号等进行分词，并将所有文本转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 2. **Simple Analyzer**\n简单分析器按非字母字符切分，符号会被过滤，文本会转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"simple\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 3. **Stop Analyzer**\n停用词分析器会将文本转换为小写，并过滤掉常见的停用词（如 \"the\", \"a\", \"is\"）。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"stop\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"lazy\", \"dogs\", \"summer\", \"evening\"]`\n\n### 4. **Whitespace Analyzer**\n空格分析器会按空格切分文本，并且不会转换为小写。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"whitespace\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"Quick\", \"brown-foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening.\"]`\n\n### 5. **Keyword Analyzer**\n关键字分析器不进行分词，直接返回原始文本。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"keyword\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"]`\n\n### 6. **Pattern Analyzer**\n模式分析器使用正则表达式进行分词，默认使用 `\\W+`（非字母字符）作为分隔符。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"pattern\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"Quick\", \"brown\", \"foxes\", \"leap\", \"over\", \"lazy\", \"dogs\", \"in\", \"the\", \"summer\", \"evening\"]`\n\n### 7. **English Analyzer**\n英语分析器针对英语语言进行分词，去除停用词等。\n```bash\nGET _analyze\n{\n  \"analyzer\": \"english\",\n  \"text\": \"2 running Quick brown-foxes leap over lazy dogs in the summer evening.\"\n}\n```\n- **分词结果**：`[\"2\", \"running\", \"quick\", \"brown\", \"foxes\", \"leap\", \"lazy\", \"dogs\", \"summer\", \"evening\"]`\n\n### 8. **ICU Analyzer for Chinese Text**\n使用 `icu_analyzer` 来处理中文文本，适用于多语言环境中的分词。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"icu_analyzer\",\n  \"text\": \"他说的确实在理\"\n}\n```\n- **分词结果**：`[\"他说\", \"的\", \"确实\", \"在理\"]`\n\n### 9. **Standard Analyzer for Chinese Text**\n使用标准分析器处理中文文本，通常处理中文时可能不会像中文专用分析器那样精确。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\": \"他说的确实在理\"\n}\n```\n- **分词结果**：`[\"他说\", \"的\", \"确实\", \"在理\"]`\n\n### 10. **ICU Analyzer for Another Chinese Sentence**\n处理另一个中文句子 `\"这个苹果不大好吃\"`。\n```bash\nPOST _analyze\n{\n  \"analyzer\": \"icu_analyzer\",\n  \"text\": \"这个苹果不大好吃\"\n}\n```\n- **分词结果**：`[\"这个\", \"苹果\", \"不大\", \"好吃\"]`\n\n### 总结\n每种分析器具有不同的分词行为：\n- **Standard**：根据空格和标点符号分词并小写化。\n- **Simple**：过滤非字母字符并小写化。\n- **Stop**：去除停用词并小写化。\n- **Whitespace**：仅按空格分词，不进行大小写转换。\n- **Keyword**：不进行分词，返回整个文本。\n- **Pattern**：使用正则表达式分词，默认 `\\W+` 分割。\n- **English**：为英语文本设计的分析器，去除停用词。\n- **ICU Analyzer**：适合多语言的分词，特别适用于中文等非拉丁字母语言。\n\n这些分析器可以根据不同的语言和需求来优化索引和搜索。\n\n\n以下是您提供的一些 Elasticsearch 查询示例，涵盖了基本查询、带有分析的查询、布尔查询、范围查询、通配符查询、模糊查询等操作。下面是每种查询的详细解释和用法：\n\n### 1. **基本查询**\n查询 `movies` 索引中标题为 `2012` 的电影，并根据 `year` 字段降序排序，返回前 10 条结果：\n```bash\nGET /movies/_search?q=2012&df=title&sort=year:desc&from=0&size=10&timeout=1s\n```\n- **`q=2012`**：查询内容为 `2012`。\n- **`df=title`**：指定查询字段为 `title`。\n- **`sort=year:desc`**：按 `year` 字段降序排序。\n- **`from=0&size=10`**：分页，返回前 10 条数据。\n- **`timeout=1s`**：查询超时限制为 1 秒。\n\n### 2. **带 Profile 的查询**\n启用 `profile` 可以帮助分析查询性能，查看查询的每个阶段的时间。\n```bash\nGET /movies/_search?q=2012&df=title\n{\n\t\"profile\":\"true\"\n}\n```\n- **`\"profile\": \"true\"`**：启用查询性能分析。\n\n### 3. **泛查询，对所有字段进行查询**\n使用 `_all` 字段进行泛查询，查询所有字段。\n```bash\nGET /movies/_search?q=2012\n{\n\t\"profile\":\"true\"\n}\n```\n- **`q=2012`**：查询所有字段中包含 `2012` 的数据。\n\n### 4. **指定字段查询**\n查询 `title` 字段中包含 `2012` 的记录，并按照 `year` 字段降序排序：\n```bash\nGET /movies/_search?q=title:2012&sort=year:desc&from=0&size=10&timeout=1s\n{\n\t\"profile\":\"true\"\n}\n```\n- **`q=title:2012`**：指定查询字段为 `title`，查询内容为 `2012`。\n\n### 5. **查找美丽心灵**\n查询 `title` 字段包含 `\"Beautiful Mind\"` 的记录：\n```bash\nGET /movies/_search?q=title:Beautiful Mind\n{\n\t\"profile\":\"true\"\n}\n```\n\n### 6. **泛查询**\n查询 `title` 字段包含 `2012` 的记录：\n```bash\nGET /movies/_search?q=title:2012\n{\n\t\"profile\":\"true\"\n}\n```\n\n### 7. **Phrase 查询（短语查询）**\n查询 `title` 字段精确匹配 `\"Beautiful Mind\"`：\n```bash\nGET /movies/_search?q=title:\"Beautiful Mind\"\n{\n\t\"profile\":\"true\"\n}\n```\n- 使用引号表示精确短语匹配，要求字段内容必须完全匹配短语 `\"Beautiful Mind\"`。\n\n### 8. **分组查询（使用括号）**\n查询 `title` 字段中包含 `Beautiful Mind` 的记录：\n```bash\nGET /movies/_search?q=title:(Beautiful Mind)\n{\n\t\"profile\":\"true\"\n}\n```\n- 使用括号可以进行分组查询，类似逻辑上的括号优先级。\n\n### 9. **布尔操作符查询**\n- **AND 查询：**\n  查询 `title` 字段同时包含 `Beautiful` 和 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful AND Mind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **NOT 查询：**\n  查询 `title` 字段包含 `Beautiful` 但不包含 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful NOT Mind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **OR 查询：**\n  查询 `title` 字段包含 `Beautiful` 或 `Mind` 的记录：\n  ```bash\n  GET /movies/_search?q=title:(Beautiful %2BMind)\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n\n### 10. **范围查询**\n查询 `title` 字段包含 `beautiful` 且 `year` 在 2002 到 2018 年之间的记录：\n```bash\nGET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D\n{\n\t\"profile\":\"true\"\n}\n```\n- **`year:[2002 TO 2018]`**：指定 `year` 字段的范围查询。\n\n### 11. **通配符查询**\n查询 `title` 字段以 `b` 开头的所有记录：\n```bash\nGET /movies/_search?q=title:b*\n{\n\t\"profile\":\"true\"\n}\n```\n- **`b*`**：使用通配符查询以 `b` 开头的字符串。\n\n### 12. **模糊查询 & 近似度匹配**\n- **模糊匹配**：查询 `title` 字段中的词语 `beautifl`，允许有 1 个字符的错误：\n  ```bash\n  GET /movies/_search?q=title:beautifl~1\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n- **近似度匹配**：查询 `title` 字段中的短语 `\"Lord Rings\"`，允许 2 个字符的误差：\n  ```bash\n  GET /movies/_search?q=title:\"Lord Rings\"~2\n  {\n  \t\"profile\":\"true\"\n  }\n  ```\n\n### 总结\n这些查询展示了如何使用 Elasticsearch 提供的强大查询能力来根据不同的需求筛选和搜索数据。常见的查询类型包括：\n- **基本查询**：用于查找单一词汇。\n- **布尔查询**：组合多个查询条件。\n- **范围查询**：查找特定范围内的记录。\n- **通配符查询**：模糊匹配。\n- **短语查询**：精确匹配整个短语。\n\n同时，`profile` 参数可以帮助分析查询性能，优化查询响应。\n\n\n3.8-RequestBody与QueryDSL简介\n\n以下是您提供的 Elasticsearch 查询操作，包括分页、日期排序、源过滤、脚本字段、以及不同的查询类型（如 `match`、`match_phrase`）。这些操作展示了如何在 Elasticsearch 中进行更精细的查询和数据处理。\n\n### 1. **忽略不存在的索引（`ignore_unavailable=true`）**\n在查询时，如果访问的索引不存在，使用 `ignore_unavailable=true` 可以避免报错：\n```bash\nPOST /movies,404_idx/_search?ignore_unavailable=true\n{\n  \"profile\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`ignore_unavailable=true`**：在访问不存在的索引时，忽略错误。\n\n### 2. **分页查询**\n查询 `kibana_sample_data_ecommerce` 索引并分页返回数据（从第 10 条开始，返回 20 条记录）：\n```bash\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"from\": 10,\n  \"size\": 20,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`from=10`** 和 **`size=20`**：分页，跳过前 10 条，返回接下来的 20 条。\n\n### 3. **日期排序**\n按 `order_date` 字段降序排序：\n```bash\nPOST kibana_sample_data_ecommerce/_search\n{\n  \"sort\": [{\"order_date\": \"desc\"}],\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`sort`**：按照 `order_date` 字段降序排序。\n\n### 4. **源过滤**\n只返回文档中的 `order_date` 字段，不返回其他字段：\n```bash\nPOST kibana_sample_data_ecommerce/_search\n{\n  \"_source\": [\"order_date\"],\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`_source`**：指定只返回 `order_date` 字段的数据。\n\n### 5. **脚本字段**\n使用脚本字段计算新的字段（例如，拼接 `order_date` 和 `\"hello\"`）：\n```bash\nGET kibana_sample_data_ecommerce/_search\n{\n  \"script_fields\": {\n    \"new_field\": {\n      \"script\": {\n        \"lang\": \"painless\",\n        \"source\": \"doc['order_date'].value+'hello'\"\n      }\n    }\n  },\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n```\n- **`script_fields`**：使用 `painless` 脚本创建新的字段 `new_field`，将 `order_date` 字段与字符串 `\"hello\"` 拼接。\n\n### 6. **`match` 查询**\n查询 `movies` 索引中 `title` 字段包含 `\"last christmas\"` 的记录：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"last christmas\"\n    }\n  }\n}\n```\n- **`match`**：进行标准的全文匹配查询。\n\n### 7. **`match` 查询并使用 AND 操作符**\n查询 `title` 包含 `\"last christmas\"` 且两个词都必须出现的记录（使用 AND 操作符）：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": {\n        \"query\": \"last christmas\",\n        \"operator\": \"and\"\n      }\n    }\n  }\n}\n```\n- **`operator: \"and\"`**：两个词必须同时出现在字段中。\n\n### 8. **`match_phrase` 查询（短语匹配）**\n查询 `title` 字段精确匹配 `\"one love\"` 作为一个短语：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"title\": {\n        \"query\": \"one love\"\n      }\n    }\n  }\n}\n```\n- **`match_phrase`**：精确匹配整个短语，必须按照指定的顺序。\n\n### 9. **`match_phrase` 查询并使用 `slop`**\n查询 `title` 字段中的短语 `\"one love\"`，并允许 1 个词语的偏移（即词语可以有一定的顺序变化）：\n```bash\nPOST movies/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"title\": {\n        \"query\": \"one love\",\n        \"slop\": 1\n      }\n    }\n  }\n}\n```\n- **`slop: 1`**：允许最多 1 个词语的顺序偏移（例如，`love one` 也可以匹配）。\n\n### 总结\n这些查询展示了 Elasticsearch 中常用的查询类型：\n- **分页查询**：使用 `from` 和 `size` 来实现分页。\n- **日期排序**：使用 `sort` 来对结果进行排序。\n- **源过滤**：通过 `_source` 限制返回的字段。\n- **脚本字段**：使用 `painless` 脚本来计算新字段。\n- **布尔操作符**：通过 `operator` 来定义 `match` 查询的逻辑。\n- **短语匹配和偏移**：通过 `match_phrase` 和 `slop` 来进行更灵活的查询。\n\n这些查询可以帮助你在 Elasticsearch 中实现复杂的搜索需求。\n\n[3.9-QueryString&SimpleQueryString查询]\n\n以下是您提供的 Elasticsearch 查询操作，涉及到 `query_string` 和 `simple_query_string` 查询的使用，以及如何通过不同的字段和操作符执行复杂查询。这里的查询包括布尔操作符、字段匹配、以及指定默认操作符等。\n\n### 1. **向索引添加文档**\n首先，向 `users` 索引添加两个用户文档：\n```bash\nPUT /users/_doc/1\n{\n  \"name\": \"Ruan Yiming\",\n  \"about\": \"java, golang, node, swift, elasticsearch\"\n}\n\nPUT /users/_doc/2\n{\n  \"name\": \"Li Yiming\",\n  \"about\": \"Hadoop\"\n}\n```\n\n### 2. **`query_string` 查询：查询名称中包含 \"Ruan\" 和 \"Yiming\" 的文档**\n使用 `query_string` 查询，指定默认字段为 `name`，查询条件为 `\"Ruan AND Yiming\"`：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"query_string\": {\n      \"default_field\": \"name\",\n      \"query\": \"Ruan AND Yiming\"\n    }\n  }\n}\n```\n- **`query_string`**：用于执行复杂的查询，可以使用逻辑操作符（如 AND、OR）。\n\n### 3. **`query_string` 查询：多个字段和复杂查询**\n查询名称或简介字段包含 `\"Ruan AND Yiming\"` 或 `\"Java AND Elasticsearch\"` 的文档：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"query_string\": {\n      \"fields\": [\"name\", \"about\"],\n      \"query\": \"(Ruan AND Yiming) OR (Java AND Elasticsearch)\"\n    }\n  }\n}\n```\n- **`fields`**：可以指定多个字段进行查询。\n- **`query`**：包含布尔操作符（如 AND、OR）。\n\n### 4. **`simple_query_string` 查询（默认操作符为 OR）**\n执行一个简单查询，默认操作符为 `OR`，查询 `name` 字段中包含 `\"Ruan\"` 或 `\"Yiming\"` 的文档：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Ruan AND Yiming\",\n      \"fields\": [\"name\"]\n    }\n  }\n}\n```\n- **`simple_query_string`**：适用于较简单的查询，避免了复杂的查询语法。\n\n### 5. **`simple_query_string` 查询（默认操作符为 AND）**\n查询 `name` 字段中包含 `\"Ruan\"` 且 `\"Yiming\"` 的文档，使用 `AND` 作为默认操作符：\n```bash\nPOST users/_search\n{\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Ruan Yiming\",\n      \"fields\": [\"name\"],\n      \"default_operator\": \"AND\"\n    }\n  }\n}\n```\n- **`default_operator`**：设置默认操作符（`AND` 或 `OR`）。在此示例中，`AND` 用于要求 `\"Ruan\"` 和 `\"Yiming\"` 必须同时出现在 `name` 字段中。\n\n### 6. **`query_string` 查询：查询电影标题包含 \"Beautiful\" 和 \"Mind\"**\n执行 `query_string` 查询，查询电影标题中包含 `\"Beautiful\"` 和 `\"Mind\"` 的文档：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"query_string\": {\n      \"default_field\": \"title\",\n      \"query\": \"Beautiful AND Mind\"\n    }\n  }\n}\n```\n- **`query_string`**：执行复杂查询，可以使用布尔操作符（如 `AND`）。\n\n### 7. **`query_string` 查询：多个字段查询**\n查询电影的 `title` 或 `year` 字段包含 `\"2012\"` 的文档：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"query_string\": {\n      \"fields\": [\"title\", \"year\"],\n      \"query\": \"2012\"\n    }\n  }\n}\n```\n- **`fields`**：指定多个字段进行查询，这里同时查询 `title` 和 `year` 字段。\n\n### 8. **`simple_query_string` 查询：使用 `+` 进行短语匹配**\n查询电影标题中包含 `\"Beautiful\"` 和 `\"mind\"` 的文档，使用 `+` 确保两个词都出现在查询中：\n```bash\nGET /movies/_search\n{\n  \"profile\": true,\n  \"query\": {\n    \"simple_query_string\": {\n      \"query\": \"Beautiful +mind\",\n      \"fields\": [\"title\"]\n    }\n  }\n}\n```\n- **`+` 操作符**：用于强制要求某个词出现在查询结果中。\n\n---\n\n### 总结\n这些查询展示了如何在 Elasticsearch 中使用不同类型的查询：\n\n- **`query_string`** 查询：用于执行复杂的查询，可以包含多个字段、布尔操作符（AND、OR、NOT）以及通配符等。\n- **`simple_query_string`** 查询：比 `query_string` 更简单，适用于不需要复杂语法的查询，并且支持默认操作符的配置。\n- **字段查询**：可以针对多个字段同时查询，指定多个字段使用 `fields` 参数。\n- **布尔操作符**：如 `AND`、`OR`、`NOT`，控制查询的逻辑。\n\n这些查询方式非常适合处理复杂的检索需求。\n\n[3.10-DynamicMapping和常见字段类型]\n\n您的示例展示了如何在 Elasticsearch 中管理映射（Mapping）以及如何处理动态字段和映射更新。以下是总结和解释：\n\n### **映射和字段定义**\n\n映射在 Elasticsearch 中类似于关系数据库中的表结构定义，主要用于：\n- **定义字段的名称**：指定文档中的字段名。\n- **定义字段的类型**：比如文本（`text`）、关键字（`keyword`）、日期（`date`）等。\n- **定义倒排索引相关配置**：比如是否需要索引字段，以及字段的 `Analyzer` 配置。\n\n### **动态映射（Dynamic Mapping）**\n\n动态映射允许 Elasticsearch 根据新文档自动推断字段的类型。可以通过 `dynamic` 属性来配置动态行为：\n- **`true`**（默认）：允许新字段自动被索引和映射。\n- **`false`**：禁止自动创建新字段，但已存在字段可以继续使用。\n- **`strict`**：禁止任何新的字段。如果文档包含未定义的字段，将导致错误。\n\n### **操作演示**\n\n1. **写入文档并查看映射**\n    - 向 `mapping_test` 索引中添加一个文档，查看映射：\n   ```bash\n   PUT mapping_test/_doc/1\n   {\n     \"firstName\": \"Chan\",\n     \"lastName\": \"Jackie\",\n     \"loginDate\": \"2018-07-24T10:29:48.103Z\"\n   }\n\n   GET mapping_test/_mapping\n   ```\n\n2. **动态映射：推断字段类型**\n    - 新字段 `uid`, `isVip`, `age` 等被自动推断并加入映射：\n   ```bash\n   PUT mapping_test/_doc/1\n   {\n     \"uid\": \"123\",\n     \"isVip\": false,\n     \"isAdmin\": \"true\",\n     \"age\": 19,\n     \"height\": 180\n   }\n\n   GET mapping_test/_mapping\n   ```\n\n3. **新增字段（默认动态）**\n    - 如果动态映射为 `true`（默认），可以动态添加新的字段：\n   ```bash\n   PUT dynamic_mapping_test/_doc/1\n   {\n     \"newField\": \"someValue\"\n   }\n\n   POST dynamic_mapping_test/_search\n   {\n     \"query\": {\n       \"match\": {\n         \"newField\": \"someValue\"\n       }\n     }\n   }\n   ```\n\n4. **修改动态设置为 `false`**\n    - 修改 `dynamic` 设置为 `false`，禁止自动推断新字段：\n   ```bash\n   PUT dynamic_mapping_test/_mapping\n   {\n     \"dynamic\": false\n   }\n\n   PUT dynamic_mapping_test/_doc/10\n   {\n     \"anotherField\": \"someValue\"\n   }\n\n   POST dynamic_mapping_test/_search\n   {\n     \"query\": {\n       \"match\": {\n         \"anotherField\": \"someValue\"\n       }\n     }\n   }\n   ```\n\n   在此示例中，`anotherField` 将不会被索引或搜索，因为动态映射已设置为 `false`。\n\n5. **修改为 `strict` 模式**\n    - 如果将 `dynamic` 设置为 `strict`，任何新的字段都会导致错误：\n   ```bash\n   PUT dynamic_mapping_test/_mapping\n   {\n     \"dynamic\": \"strict\"\n   }\n\n   PUT dynamic_mapping_test/_doc/12\n   {\n     \"lastField\": \"value\"\n   }\n   ```\n   此时，写入新字段 `lastField` 会导致错误，HTTP 返回 `400` 错误码。\n\n6. **删除索引**\n    - 删除索引：\n   ```bash\n   DELETE dynamic_mapping_test\n   ```\n\n### **总结**\n\n- **动态映射（Dynamic Mapping）**：允许 Elasticsearch 自动推断并添加新的字段，方便快速处理未知数据。\n- **`dynamic` 配置**：控制是否允许 Elasticsearch 自动映射新字段：\n    - `true`：默认允许动态字段；\n    - `false`：禁止自动映射新字段；\n    - `strict`：禁止所有未知字段，如果有未定义字段则会报错。\n- **更改映射**：映射一旦建立后不能直接修改字段类型，要修改字段配置或添加新字段需要使用 `reindex` 操作。\n\n这些操作有助于管理索引和字段的生命周期，确保数据能够根据业务需求灵活适应。\n\n\n您的示例展示了 Elasticsearch 中显式设置映射（Mapping）的一些常见操作和参数。以下是各个设置项的详细介绍和使用案例。\n\n### **1. `index: false` 设置**\n通过设置字段的 `index: false`，可以阻止某些字段被索引。这样可以避免该字段参与倒排索引，也不会进行搜索。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n    \"mappings\" : {\n      \"properties\" : {\n        \"firstName\" : {\n          \"type\" : \"text\"\n        },\n        \"lastName\" : {\n          \"type\" : \"text\"\n        },\n        \"mobile\" : {\n          \"type\" : \"text\",\n          \"index\": false  # 禁止索引该字段\n        }\n      }\n    }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\",\n  \"mobile\": \"12345678\"\n}\n\nPOST /users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"mobile\": \"12345678\"  # 搜索时不会命中mobile字段\n    }\n  }\n}\n```\n在上面的示例中，`mobile` 字段被设置为 `index: false`，因此无法用于搜索查询。\n\n### **2. `null_value` 设置**\n通过设置 `null_value`，可以在文档中存储 `null` 值，并用指定的替代值替换 `null`。这对于查询时需要处理 `null` 数据特别有用。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n    \"mappings\" : {\n      \"properties\" : {\n        \"firstName\" : {\n          \"type\" : \"text\"\n        },\n        \"lastName\" : {\n          \"type\" : \"text\"\n        },\n        \"mobile\" : {\n          \"type\" : \"keyword\",\n          \"null_value\": \"NULL\"  # null值替代为\"NULL\"\n        }\n      }\n    }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\",\n  \"mobile\": null  # 实际值是null\n}\n\nPUT users/_doc/2\n{\n  \"firstName\": \"Ruan2\",\n  \"lastName\": \"Yiming2\"  # 没有mobile字段\n}\n\nGET users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"mobile\": \"NULL\"  # 搜索时会匹配到null值字段\n    }\n  }\n}\n```\n此设置可以确保查询时用 `NULL` 代替存储的 `null` 值。\n\n### **3. `copy_to` 设置**\n`copy_to` 可以将多个字段的内容复制到另一个字段，方便进行联合查询或索引。\n\n**示例**:\n```bash\nDELETE users\nPUT users\n{\n  \"mappings\": {\n    \"properties\": {\n      \"firstName\": {\n        \"type\": \"text\",\n        \"copy_to\": \"fullName\"  # 将firstName复制到fullName字段\n      },\n      \"lastName\": {\n        \"type\": \"text\",\n        \"copy_to\": \"fullName\"  # 将lastName复制到fullName字段\n      }\n    }\n  }\n}\n\nPUT users/_doc/1\n{\n  \"firstName\": \"Ruan\",\n  \"lastName\": \"Yiming\"\n}\n\nGET users/_search?q=fullName:(Ruan Yiming)\n\nPOST users/_search\n{\n  \"query\": {\n    \"match\": {\n      \"fullName\": {\n        \"query\": \"Ruan Yiming\",\n        \"operator\": \"and\"  # 联合查询fullName字段\n      }\n    }\n  }\n}\n```\n这里，`firstName` 和 `lastName` 字段的内容会被复制到 `fullName` 字段，从而使得查询变得更加方便。\n\n### **4. 数组类型处理**\nElasticsearch 支持数组字段。数组中的每个元素会被视为一个单独的值，这对于多值字段非常有用。\n\n**示例**:\n```bash\nPUT users/_doc/1\n{\n  \"name\": \"onebird\",\n  \"interests\": \"reading\"  # 字段为单一值\n}\n\nPUT users/_doc/2\n{\n  \"name\": \"twobirds\",\n  \"interests\": [\"reading\", \"music\"]  # 字段为数组\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nGET users/_mapping\n```\n在此示例中，`interests` 字段既可以是单个值也可以是数组，Elasticsearch 会将每个数组元素视为独立的值进行索引。\n\n---\n\n### **总结常见的 Mapping 参数**\n\n- **`type`**: 字段的数据类型，如 `text`, `keyword`, `date` 等。\n- **`index`**: 控制是否索引该字段，`false` 表示不索引，默认为 `true`。\n- **`null_value`**: 控制 `null` 值的替代值。可以设置为任何替代值，如 `\"NULL\"`。\n- **`copy_to`**: 将多个字段的内容复制到一个目标字段中，便于联合查询。\n- **`dynamic`**: 控制动态映射，`true` 表示允许自动推断新字段，`false` 表示禁止新字段自动映射，`strict` 则表示严格模式下不允许任何新字段。\n\n通过这些映射设置，可以更好地控制数据如何存储和索引，以及如何在查询时处理和优化字段。\n\n\n您的示例展示了 Elasticsearch 中关于多字段特性以及自定义分析器（Analyzer）的配置。以下是对各个分析器和相关配置的详细解释。\n\n### **1. 自定义 Analyzer 和 Char Filter**\nElasticsearch 提供了灵活的机制来配置分词器（Tokenizer）和字符过滤器（Char Filter）。这些配置用于在索引和搜索过程中控制文本的处理方式。\n\n#### **自定义 Tokenizer 和 Char Filter 示例**\n- **Keyword Tokenizer**: `keyword` tokenizer 将整个文本当作一个单独的 token 进行处理。\n- **HTML Strip Char Filter**: `html_strip` char filter 用于从文本中去除 HTML 标签。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"keyword\",  # 使用关键词分词器\n  \"char_filter\": [\"html_strip\"],  # 使用html_strip字符过滤器\n  \"text\": \"<b>hello world</b>\"  # 输入带有HTML标签的文本\n}\n```\n输出将会是：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"hello world\",\n      \"start_offset\": 3,\n      \"end_offset\": 15,\n      \"type\": \"word\",\n      \"position\": 0\n    }\n  ]\n}\n```\n此配置移除了文本中的 `<b></b>` HTML 标签，只保留了纯文本 \"hello world\"。\n\n#### **Path Hierarchy Tokenizer**\n`path_hierarchy` tokenizer 用于处理文件路径等层级结构的数据，将路径按分隔符（如 `/`）切割。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"path_hierarchy\",  # 使用路径层级分词器\n  \"text\": \"/user/ymruan/a/b/c/d/e\"\n}\n```\n输出会将路径按 `/` 切分：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"/user/ymruan/a/b/c/d/e\",\n      \"start_offset\": 0,\n      \"end_offset\": 21,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"/user/ymruan/a/b/c/d\",\n      \"start_offset\": 0,\n      \"end_offset\": 16,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    ...\n  ]\n}\n```\n\n### **2. Char Filter 替换符号**\n字符过滤器可以用于替换文本中的特定符号或字符。例如，使用 `mapping` 类型的 `char_filter`，可以替换文本中的字符（如将 `-` 替换为 `_`）。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",  # 使用标准分词器\n  \"char_filter\": [\n    {\n      \"type\": \"mapping\",  # 使用字符映射过滤器\n      \"mappings\": [\"- => _\"]\n    }\n  ],\n  \"text\": \"123-456, I-test! test-990 650-555-1234\"\n}\n```\n此配置将文本中的 `-` 替换为 `_`，输出将是：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"123_456\",\n      \"start_offset\": 0,\n      \"end_offset\": 7,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    ...\n  ]\n}\n```\n\n### **3. Char Filter 替换表情符号**\n你还可以使用字符过滤器将表情符号替换为特定的文本（如将 `:)` 替换为 `happy`，`:(` 替换为 `sad`）。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",\n  \"char_filter\": [\n    {\n      \"type\": \"mapping\",\n      \"mappings\": [\":) => happy\", \":( => sad\"]\n    }\n  ],\n  \"text\": [\"I am felling :)\", \"Feeling :( today\"]\n}\n```\n输出：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"I\",\n      \"start_offset\": 0,\n      \"end_offset\": 1,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"am\",\n      \"start_offset\": 2,\n      \"end_offset\": 4,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"felling\",\n      \"start_offset\": 5,\n      \"end_offset\": 12,\n      \"type\": \"word\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"happy\",  # 替换表情符号:) 为 happy\n      \"start_offset\": 13,\n      \"end_offset\": 18,\n      \"type\": \"word\",\n      \"position\": 3\n    }\n  ]\n}\n```\n\n### **4. 使用 Stop 和 Snowball 过滤器**\n使用 `stop` 过滤器来删除常见的停用词，使用 `snowball` 过滤器进行词干提取（如将 \"playing\" 转换为 \"play\"）。\n\n```bash\nGET _analyze\n{\n  \"tokenizer\": \"whitespace\",  # 使用空格分词器\n  \"filter\": [\"stop\", \"snowball\"],  # 使用停用词和词干提取\n  \"text\": [\"The girls in China are playing this game!\"]\n}\n```\n输出：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"girl\",\n      \"start_offset\": 4,\n      \"end_offset\": 9,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"china\",\n      \"start_offset\": 14,\n      \"end_offset\": 19,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    ...\n  ]\n}\n```\n\n### **5. 正则表达式替换**\n通过 `pattern_replace` 字符过滤器，您可以根据正则表达式来替换文本中的特定部分。\n\n```bash\nPOST _analyze\n{\n  \"tokenizer\": \"standard\",\n  \"char_filter\": [\n    {\n      \"type\": \"pattern_replace\",\n      \"pattern\": \"http://(.*)\",\n      \"replacement\": \"$1\"\n    }\n  ],\n  \"text\": \"http://www.elastic.co\"\n}\n```\n此配置将 `http://` 替换为一个空字符串，结果为：\n```json\n{\n  \"tokens\": [\n    {\n      \"token\": \"www.elastic.co\",\n      \"start_offset\": 7,\n      \"end_offset\": 23,\n      \"type\": \"word\",\n      \"position\": 0\n    }\n  ]\n}\n```\n\n### **总结：**\n- **Tokenizer**: 负责将输入文本切割成词条（token）。如 `keyword`, `standard`, `path_hierarchy`。\n- **Char Filter**: 处理文本中的字符替换、去除特殊符号或HTML标签等，如 `html_strip`, `mapping`, `pattern_replace`。\n- **Filter**: 用于文本处理，如去除停用词（`stop`）或词干提取（`snowball`）。\n\n这些工具的组合允许您灵活地处理和分析文本数据，并针对特定的业务需求优化索引和搜索行为。\n\n在 Elasticsearch 中，**Index Templates** 和 **Dynamic Templates** 是两种强大的工具，用于控制如何定义和管理索引的映射和设置。以下是这两者的详细解释和示例。\n\n### **1. Index Templates (索引模板)**\n\n**Index Templates** 是一种配置模板，用于为匹配特定模式的索引自动配置设置、映射和其他配置。当创建一个新索引时，如果该索引匹配模板中的 `index_patterns` 配置，模板中的设置、映射和其他配置就会自动应用到新索引上。\n\n#### **创建默认模板**\n下面是创建一个默认模板的示例：\n```bash\nPUT _template/template_default\n{\n  \"index_patterns\": [\"*\"],  # 匹配所有索引\n  \"order\": 0,\n  \"version\": 1,\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 1\n  }\n}\n```\n这会为所有索引设置一个模板，其中包含分片数量为1、副本数量为1。\n\n#### **为特定模式创建模板**\n另一个例子是为 `test*` 开头的索引创建模板：\n```bash\nPUT /_template/template_test\n{\n  \"index_patterns\": [\"test*\"],  # 匹配所有以test开头的索引\n  \"order\": 1,\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 2\n  },\n  \"mappings\": {\n    \"date_detection\": false,  # 禁止自动检测日期字段\n    \"numeric_detection\": true  # 自动检测数字字段\n  }\n}\n```\n\n#### **查看模板**\n你可以查看已定义的模板：\n```bash\nGET /_template/template_default\nGET /_template/temp*  # 查看所有模板\n```\n\n#### **删除模板**\n删除模板的命令如下：\n```bash\nDELETE /_template/template_default\nDELETE /_template/template_test\n```\n\n---\n\n### **2. Dynamic Templates (动态模板)**\n\n**Dynamic Templates** 用于在创建索引时自动匹配字段类型和名称，根据这些动态模板来生成字段的映射规则。可以根据字段的类型（例如字符串、数字）和字段名称（例如以某些字符开头的字段）来定义映射。\n\n#### **自动映射数字字符串和日期字符串**\n例如，数字字符串会被映射为 `text` 类型，日期字符串会被映射为日期类型：\n```bash\nPUT ttemplate/_doc/1\n{\n  \"someNumber\": \"1\",        # 字符串数字\n  \"someDate\": \"2019/01/01\"  # 字符串日期\n}\nGET ttemplate/_mapping\n```\n在这个例子中，`someNumber` 会被映射成 `text` 类型，而 `someDate` 会被映射成 `date` 类型。\n\n#### **定义动态模板映射规则**\n使用 `dynamic_templates` 可以根据字段类型和名称定义映射。例如，以下动态模板将以 `is*` 开头的字符串字段映射为 `boolean` 类型，其他字符串字段映射为 `keyword` 类型：\n```bash\nDELETE my_index\n\nPUT my_index\n{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"strings_as_boolean\": {\n          \"match_mapping_type\": \"string\",   # 匹配所有字符串类型\n          \"match\": \"is*\",  # 字段名称以is开头\n          \"mapping\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      {\n        \"strings_as_keywords\": {\n          \"match_mapping_type\": \"string\",   # 匹配所有字符串类型\n          \"mapping\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    ]\n  }\n}\n```\n在这个示例中，`isVIP` 字段会被映射为 `boolean` 类型，而其他字符串类型的字段则会被映射为 `keyword` 类型。\n\n#### **结合路径匹配**\n动态模板不仅可以基于字段名称，还可以基于字段的路径。例如，以下模板会将 `name.*` 路径下的所有字段映射为 `text` 类型，并将这些字段复制到 `full_name` 字段中：\n```bash\nPUT my_index\n{\n  \"mappings\": {\n    \"dynamic_templates\": [\n      {\n        \"full_name\": {\n          \"path_match\": \"name.*\",  # 匹配name下的所有字段\n          \"path_unmatch\": \"*.middle\",  # 排除middle字段\n          \"mapping\": {\n            \"type\": \"text\",\n            \"copy_to\": \"full_name\"  # 将值复制到full_name字段\n          }\n        }\n      }\n    ]\n  }\n}\n```\n然后，插入以下数据：\n```bash\nPUT my_index/_doc/1\n{\n  \"name\": {\n    \"first\": \"John\",\n    \"middle\": \"Winston\",\n    \"last\": \"Lennon\"\n  }\n}\n```\n\n在这个例子中，`first` 和 `last` 字段将被映射为 `text` 类型，并且它们的内容会被复制到 `full_name` 字段中。\n\n#### **搜索字段**\n可以通过 `full_name` 字段来搜索：\n```bash\nGET my_index/_search?q=full_name:John\n```\n\n---\n\n### **总结：**\n- **Index Templates** 是为匹配特定索引模式（`index_patterns`）的所有索引自动配置设置和映射的模板。\n- **Dynamic Templates** 用于根据字段类型和字段名称自动映射索引字段。你可以根据字段类型（如 `string`）或字段路径（如 `name.*`）来定义映射规则。\n\n这些配置使得索引的创建和管理更加灵活，可以根据实际数据自动推断和调整映射，从而提高了 Elasticsearch 的可用性和效率。\n\n\n\nElasticsearch 提供了强大的 **聚合** 功能，用于对数据进行汇总和分析。聚合是 Elasticsearch 搜索的一个核心功能，允许你通过多种方式对数据进行分组、统计、求最大/最小值、计算平均值等操作。以下是一些常见的聚合分析操作和示例：\n\n### **1. 基本的聚合分析：按目的地分桶统计**\n在这个示例中，我们按航班的目的地（`DestCountry`）进行分桶统计，查看每个目的地的航班数量：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,  # 不返回实际的文档数据，只返回聚合结果\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"  # 按目的地国家分桶\n      }\n    }\n  }\n}\n```\n在这个聚合查询中，`terms` 聚合用于对 `DestCountry` 字段的值进行分桶，返回每个目的地国家的航班数量。\n\n### **2. 增加更多统计：平均、最大、最小价格**\n你可以在分桶内部添加更多聚合来获取其他统计信息，如每个目的地的平均票价、最高票价和最低票价：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"\n      },\n      \"aggs\": {\n        \"avg_price\": {\n          \"avg\": {\n            \"field\": \"AvgTicketPrice\"  # 计算平均票价\n          }\n        },\n        \"max_price\": {\n          \"max\": {\n            \"field\": \"AvgTicketPrice\"  # 计算最高票价\n          }\n        },\n        \"min_price\": {\n          \"min\": {\n            \"field\": \"AvgTicketPrice\"  # 计算最低票价\n          }\n        }\n      }\n    }\n  }\n}\n```\n在这个查询中，我们为每个目的地添加了三个聚合：`avg_price`、`max_price` 和 `min_price`，分别计算每个目的地的平均票价、最大票价和最小票价。\n\n### **3. 聚合价格与天气信息：统计与多重聚合**\n如果你还想结合天气信息（如 `DestWeather` 字段）与航班价格统计一起进行聚合，可以使用嵌套聚合：\n```bash\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"flight_dest\": {\n      \"terms\": {\n        \"field\": \"DestCountry\"\n      },\n      \"aggs\": {\n        \"stats_price\": {\n          \"stats\": {\n            \"field\": \"AvgTicketPrice\"  # 计算票价的多项统计信息\n          }\n        },\n        \"weather\": {\n          \"terms\": {\n            \"field\": \"DestWeather\",  # 按天气类型分桶\n            \"size\": 5  # 只返回前5个天气类型\n          }\n        }\n      }\n    }\n  }\n}\n```\n在这个示例中，我们不仅计算了每个目的地的票价统计信息（如平均票价、最大票价等），还将天气信息作为另一个 `terms` 聚合，显示每个目的地的天气类型，并限制返回的天气类型数量为 5 个。\n\n---\n\n### **常见的聚合类型：**\n- **`terms` 聚合**：将文档按某个字段的值进行分桶，常用于统计词频或其他分类数据。\n- **`avg` 聚合**：计算某个数值字段的平均值。\n- **`sum` 聚合**：计算某个数值字段的总和。\n- **`min` 聚合**：返回某个数值字段的最小值。\n- **`max` 聚合**：返回某个数值字段的最大值。\n- **`stats` 聚合**：返回字段的统计信息（包括：最小值、最大值、平均值、总和和文档数量）。\n- **`date_histogram` 聚合**：按日期进行分桶，适用于时间序列数据。\n- **`histogram` 聚合**：按数值区间进行分桶，常用于数值数据的统计。\n\n---\n\n### **相关阅读：**\n- [Elasticsearch 聚合文档](https://www.elastic.co/guide/en/elasticsearch/reference/7.1/search-aggregations.html) 详细介绍了各种聚合的使用方式和示例。\n\n聚合功能非常强大，能帮助你从海量数据中提取有价值的信息，适用于各种数据分析场景。\n\n\n","slug":"elasticsearch/es常用命令","published":1,"updated":"2025-02-27T07:39:13.589Z","comments":1,"layout":"post","photos":[],"_id":"cm7n27c2s0009igjdasdb33oh","content":"<p>以下是 Elasticsearch (ES) 常用命令的总结和笔记：</p>\n<h3 id=\"1-查看索引相关信息\"><a href=\"#1-查看索引相关信息\" class=\"headerlink\" title=\"1. 查看索引相关信息\"></a>1. 查看索引相关信息</h3><ul>\n<li><p><strong>查看指定索引的映射信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看指定索引的文档总数</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_count<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看前10条文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-查看索引状态与信息\"><a href=\"#2-查看索引状态与信息\" class=\"headerlink\" title=\"2. 查看索引状态与信息\"></a>2. 查看索引状态与信息</h3><ul>\n<li><p><strong>查看索引信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices/kibana*?v&amp;s=index<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看状态为绿的索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;health=green<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>按文档个数排序查看索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;s=docs.count:desc<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看具体的索引字段（健康、主分片、复制分片、文档数等）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices/kibana*?pri&amp;v&amp;h=health,index,pri,rep,docs.count,mt<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看每个索引使用的内存量</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;h=i,tm&amp;s=tm:desc<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-查看节点信息\"><a href=\"#3-查看节点信息\" class=\"headerlink\" title=\"3. 查看节点信息\"></a>3. 查看节点信息</h3><ul>\n<li><p><strong>查看所有节点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cat/nodes?v<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定节点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_nodes/es7_01,es7_02<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看节点信息并显示特定字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/nodes?v&amp;h=<span class=\"hljs-built_in\">id</span>,ip,port,v,m<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-查看集群健康状况\"><a href=\"#4-查看集群健康状况\" class=\"headerlink\" title=\"4. 查看集群健康状况\"></a>4. 查看集群健康状况</h3><ul>\n<li><p><strong>查看集群健康状况</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看集群健康状况，并按分片级别显示</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health?level=shards<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定索引的集群健康状况</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定索引的集群健康状况，并按分片级别显示</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/kibana_sample_data_flights?level=shards<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"5-查看集群状态\"><a href=\"#5-查看集群状态\" class=\"headerlink\" title=\"5. 查看集群状态\"></a>5. 查看集群状态</h3><ul>\n<li><strong>查看集群状态</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/state<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-查看集群设置\"><a href=\"#6-查看集群设置\" class=\"headerlink\" title=\"6. 查看集群设置\"></a>6. 查看集群设置</h3><ul>\n<li><p><strong>查看集群设置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/settings<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看集群设置，包括默认设置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/settings?include_defaults=<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-查看分片信息\"><a href=\"#7-查看分片信息\" class=\"headerlink\" title=\"7. 查看分片信息\"></a>7. 查看分片信息</h3><ul>\n<li><p><strong>查看集群的所有分片信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/shards<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定的分片信息（包括状态、主分片&#x2F;副本分片等）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/shards?h=index,shard,prirep,state,unassigned.reason<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"1-创建文档\"><a href=\"#1-创建文档\" class=\"headerlink\" title=\"1. 创建文档\"></a>1. 创建文档</h3><ul>\n<li><p><strong>自动生成 <code>_id</code> 创建文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Mike&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-04-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Kibana&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>指定 ID 创建文档（如果 ID 已存在则报错）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1?op_type=create<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>指定 ID 创建文档（如果 ID 已存在则报错）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_create/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-根据-ID-获取文档\"><a href=\"#2-根据-ID-获取文档\" class=\"headerlink\" title=\"2. 根据 ID 获取文档\"></a>2. 根据 ID 获取文档</h3><ul>\n<li><strong>获取指定 ID 的文档</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET <span class=\"hljs-built_in\">users</span>/_doc/1<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-更新文档\"><a href=\"#3-更新文档\" class=\"headerlink\" title=\"3. 更新文档\"></a>3. 更新文档</h3><ul>\n<li><p><strong>更新指定 ID 的文档（先删除再写入）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Mike&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>在原文档上增加字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_update/1/<br>&#123;<br>  <span class=\"hljs-string\">&quot;doc&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>    <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-删除文档\"><a href=\"#4-删除文档\" class=\"headerlink\" title=\"4. 删除文档\"></a>4. 删除文档</h3><ul>\n<li><strong>根据 ID 删除文档</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span>/_doc/1<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"5-批量操作-Bulk-API\"><a href=\"#5-批量操作-Bulk-API\" class=\"headerlink\" title=\"5. 批量操作 (Bulk API)\"></a>5. 批量操作 (Bulk API)</h3><ul>\n<li><strong>执行批量操作</strong><br>第一次执行批量操作：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value1&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;delete&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;create&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test2&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;update&quot;</span> : &#123;<span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>&#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;doc&quot;</span> : &#123;<span class=\"hljs-string\">&quot;field2&quot;</span> : <span class=\"hljs-string\">&quot;value2&quot;</span>&#125; &#125;<br></code></pre></td></tr></table></figure>\n\n第二次执行批量操作：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value1&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;delete&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;create&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test2&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;update&quot;</span> : &#123;<span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>&#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;doc&quot;</span> : &#123;<span class=\"hljs-string\">&quot;field2&quot;</span> : <span class=\"hljs-string\">&quot;value2&quot;</span>&#125; &#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-多文档获取-MGET\"><a href=\"#6-多文档获取-MGET\" class=\"headerlink\" title=\"6. 多文档获取 (MGET)\"></a>6. 多文档获取 (MGET)</h3><ul>\n<li><p><strong>获取多个文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>URI中指定索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /test/_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>使用 <code>_source</code> 参数指定返回的字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : <span class=\"hljs-literal\">false</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : [<span class=\"hljs-string\">&quot;field3&quot;</span>, <span class=\"hljs-string\">&quot;field4&quot;</span>] &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : &#123; <span class=\"hljs-string\">&quot;include&quot;</span>: [<span class=\"hljs-string\">&quot;user&quot;</span>], <span class=\"hljs-string\">&quot;exclude&quot;</span>: [<span class=\"hljs-string\">&quot;user.location&quot;</span>] &#125; &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-多查询操作-MSEARCH\"><a href=\"#7-多查询操作-MSEARCH\" class=\"headerlink\" title=\"7. 多查询操作 (MSEARCH)\"></a>7. 多查询操作 (MSEARCH)</h3><ul>\n<li><strong>执行多个查询</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_msearch<br>&#123;&#125;<br>&#123;<span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;&#125;&#125;,<span class=\"hljs-string\">&quot;size&quot;</span>:1&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span> : <span class=\"hljs-string\">&quot;kibana_sample_data_flights&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;&#125;&#125;,<span class=\"hljs-string\">&quot;size&quot;</span>:2&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"8-清除测试数据\"><a href=\"#8-清除测试数据\" class=\"headerlink\" title=\"8. 清除测试数据\"></a>8. 清除测试数据</h3><ul>\n<li><strong>删除索引（清除数据）</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>DELETE <span class=\"hljs-built_in\">test</span><br>DELETE test2<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p>[3.4-倒排索引入门]</p>\n<p>Elasticsearch 的 <code>_analyze</code> API，它用于分析文本，查看在特定分析器下，文本是如何被分词和处理的。下面是每个请求的说明：</p>\n<h3 id=\"1-分析-“Mastering-Elasticsearch”\"><a href=\"#1-分析-“Mastering-Elasticsearch”\" class=\"headerlink\" title=\"1. 分析 “Mastering Elasticsearch”\"></a>1. <strong>分析 “Mastering Elasticsearch”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Mastering Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：使用默认的 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Mastering Elasticsearch&quot;</code>。</li>\n<li><strong>预期效果</strong>：<code>standard</code> 分析器会将这段文本分割成单词，通常会根据空格和标点符号进行分词。</li>\n</ul>\n<h3 id=\"2-分析-“Elasticsearch-Server”\"><a href=\"#2-分析-“Elasticsearch-Server”\" class=\"headerlink\" title=\"2. 分析 “Elasticsearch Server”\"></a>2. <strong>分析 “Elasticsearch Server”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch Server&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：同样使用 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Elasticsearch Server&quot;</code>。</li>\n<li><strong>预期效果</strong>：分析器会分割文本为单词，可能会得到类似于 <code>[&quot;elasticsearch&quot;, &quot;server&quot;]</code> 的分词结果。</li>\n</ul>\n<h3 id=\"3-分析-“Elasticsearch-Essentials”\"><a href=\"#3-分析-“Elasticsearch-Essentials”\" class=\"headerlink\" title=\"3. 分析 “Elasticsearch Essentials”\"></a>3. <strong>分析 “Elasticsearch Essentials”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch Essentials&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：继续使用 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Elasticsearch Essentials&quot;</code>。</li>\n<li><strong>预期效果</strong>：分析器会将文本分割成 <code>[&quot;elasticsearch&quot;, &quot;essentials&quot;]</code>。</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>每个请求的结果将显示由 <code>standard</code> 分析器生成的分词结果。通常，<code>standard</code> 分析器会去除大部分标点符号并将文本转换为小写。分词的具体结果如下：</p>\n<ul>\n<li><code>&quot;Mastering Elasticsearch&quot;</code> -&gt; <code>[&quot;mastering&quot;, &quot;elasticsearch&quot;]</code></li>\n<li><code>&quot;Elasticsearch Server&quot;</code> -&gt; <code>[&quot;elasticsearch&quot;, &quot;server&quot;]</code></li>\n<li><code>&quot;Elasticsearch Essentials&quot;</code> -&gt; <code>[&quot;elasticsearch&quot;, &quot;essentials&quot;]</code></li>\n</ul>\n<p>以下是使用不同的分析器（Analyzer）对文本进行分词分析的示例：</p>\n<h3 id=\"1-Standard-Analyzer\"><a href=\"#1-Standard-Analyzer\" class=\"headerlink\" title=\"1. Standard Analyzer\"></a>1. <strong>Standard Analyzer</strong></h3><p>标准分析器会根据空格、标点符号等进行分词，并将所有文本转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"2-Simple-Analyzer\"><a href=\"#2-Simple-Analyzer\" class=\"headerlink\" title=\"2. Simple Analyzer\"></a>2. <strong>Simple Analyzer</strong></h3><p>简单分析器按非字母字符切分，符号会被过滤，文本会转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;simple&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"3-Stop-Analyzer\"><a href=\"#3-Stop-Analyzer\" class=\"headerlink\" title=\"3. Stop Analyzer\"></a>3. <strong>Stop Analyzer</strong></h3><p>停用词分析器会将文本转换为小写，并过滤掉常见的停用词（如 “the”, “a”, “is”）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;stop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"4-Whitespace-Analyzer\"><a href=\"#4-Whitespace-Analyzer\" class=\"headerlink\" title=\"4. Whitespace Analyzer\"></a>4. <strong>Whitespace Analyzer</strong></h3><p>空格分析器会按空格切分文本，并且不会转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;whitespace&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;Quick&quot;, &quot;brown-foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening.&quot;]</code></li>\n</ul>\n<h3 id=\"5-Keyword-Analyzer\"><a href=\"#5-Keyword-Analyzer\" class=\"headerlink\" title=\"5. Keyword Analyzer\"></a>5. <strong>Keyword Analyzer</strong></h3><p>关键字分析器不进行分词，直接返回原始文本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;]</code></li>\n</ul>\n<h3 id=\"6-Pattern-Analyzer\"><a href=\"#6-Pattern-Analyzer\" class=\"headerlink\" title=\"6. Pattern Analyzer\"></a>6. <strong>Pattern Analyzer</strong></h3><p>模式分析器使用正则表达式进行分词，默认使用 <code>\\W+</code>（非字母字符）作为分隔符。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;pattern&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;Quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"7-English-Analyzer\"><a href=\"#7-English-Analyzer\" class=\"headerlink\" title=\"7. English Analyzer\"></a>7. <strong>English Analyzer</strong></h3><p>英语分析器针对英语语言进行分词，去除停用词等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"8-ICU-Analyzer-for-Chinese-Text\"><a href=\"#8-ICU-Analyzer-for-Chinese-Text\" class=\"headerlink\" title=\"8. ICU Analyzer for Chinese Text\"></a>8. <strong>ICU Analyzer for Chinese Text</strong></h3><p>使用 <code>icu_analyzer</code> 来处理中文文本，适用于多语言环境中的分词。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;icu_analyzer&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;他说的确实在理&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;他说&quot;, &quot;的&quot;, &quot;确实&quot;, &quot;在理&quot;]</code></li>\n</ul>\n<h3 id=\"9-Standard-Analyzer-for-Chinese-Text\"><a href=\"#9-Standard-Analyzer-for-Chinese-Text\" class=\"headerlink\" title=\"9. Standard Analyzer for Chinese Text\"></a>9. <strong>Standard Analyzer for Chinese Text</strong></h3><p>使用标准分析器处理中文文本，通常处理中文时可能不会像中文专用分析器那样精确。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;他说的确实在理&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;他说&quot;, &quot;的&quot;, &quot;确实&quot;, &quot;在理&quot;]</code></li>\n</ul>\n<h3 id=\"10-ICU-Analyzer-for-Another-Chinese-Sentence\"><a href=\"#10-ICU-Analyzer-for-Another-Chinese-Sentence\" class=\"headerlink\" title=\"10. ICU Analyzer for Another Chinese Sentence\"></a>10. <strong>ICU Analyzer for Another Chinese Sentence</strong></h3><p>处理另一个中文句子 <code>&quot;这个苹果不大好吃&quot;</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;icu_analyzer&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;这个苹果不大好吃&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;这个&quot;, &quot;苹果&quot;, &quot;不大&quot;, &quot;好吃&quot;]</code></li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>每种分析器具有不同的分词行为：</p>\n<ul>\n<li><strong>Standard</strong>：根据空格和标点符号分词并小写化。</li>\n<li><strong>Simple</strong>：过滤非字母字符并小写化。</li>\n<li><strong>Stop</strong>：去除停用词并小写化。</li>\n<li><strong>Whitespace</strong>：仅按空格分词，不进行大小写转换。</li>\n<li><strong>Keyword</strong>：不进行分词，返回整个文本。</li>\n<li><strong>Pattern</strong>：使用正则表达式分词，默认 <code>\\W+</code> 分割。</li>\n<li><strong>English</strong>：为英语文本设计的分析器，去除停用词。</li>\n<li><strong>ICU Analyzer</strong>：适合多语言的分词，特别适用于中文等非拉丁字母语言。</li>\n</ul>\n<p>这些分析器可以根据不同的语言和需求来优化索引和搜索。</p>\n<p>以下是您提供的一些 Elasticsearch 查询示例，涵盖了基本查询、带有分析的查询、布尔查询、范围查询、通配符查询、模糊查询等操作。下面是每种查询的详细解释和用法：</p>\n<h3 id=\"1-基本查询\"><a href=\"#1-基本查询\" class=\"headerlink\" title=\"1. 基本查询\"></a>1. <strong>基本查询</strong></h3><p>查询 <code>movies</code> 索引中标题为 <code>2012</code> 的电影，并根据 <code>year</code> 字段降序排序，返回前 10 条结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012&amp;<span class=\"hljs-built_in\">df</span>=title&amp;<span class=\"hljs-built_in\">sort</span>=year:desc&amp;from=0&amp;size=10&amp;<span class=\"hljs-built_in\">timeout</span>=1s<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=2012</code>**：查询内容为 <code>2012</code>。</li>\n<li>**<code>df=title</code>**：指定查询字段为 <code>title</code>。</li>\n<li>**<code>sort=year:desc</code>**：按 <code>year</code> 字段降序排序。</li>\n<li>**<code>from=0&amp;size=10</code>**：分页，返回前 10 条数据。</li>\n<li>**<code>timeout=1s</code>**：查询超时限制为 1 秒。</li>\n</ul>\n<h3 id=\"2-带-Profile-的查询\"><a href=\"#2-带-Profile-的查询\" class=\"headerlink\" title=\"2. 带 Profile 的查询\"></a>2. <strong>带 Profile 的查询</strong></h3><p>启用 <code>profile</code> 可以帮助分析查询性能，查看查询的每个阶段的时间。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012&amp;<span class=\"hljs-built_in\">df</span>=title<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>&quot;profile&quot;: &quot;true&quot;</code>**：启用查询性能分析。</li>\n</ul>\n<h3 id=\"3-泛查询，对所有字段进行查询\"><a href=\"#3-泛查询，对所有字段进行查询\" class=\"headerlink\" title=\"3. 泛查询，对所有字段进行查询\"></a>3. <strong>泛查询，对所有字段进行查询</strong></h3><p>使用 <code>_all</code> 字段进行泛查询，查询所有字段。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=2012</code>**：查询所有字段中包含 <code>2012</code> 的数据。</li>\n</ul>\n<h3 id=\"4-指定字段查询\"><a href=\"#4-指定字段查询\" class=\"headerlink\" title=\"4. 指定字段查询\"></a>4. <strong>指定字段查询</strong></h3><p>查询 <code>title</code> 字段中包含 <code>2012</code> 的记录，并按照 <code>year</code> 字段降序排序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:2012&amp;<span class=\"hljs-built_in\">sort</span>=year:desc&amp;from=0&amp;size=10&amp;<span class=\"hljs-built_in\">timeout</span>=1s<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=title:2012</code>**：指定查询字段为 <code>title</code>，查询内容为 <code>2012</code>。</li>\n</ul>\n<h3 id=\"5-查找美丽心灵\"><a href=\"#5-查找美丽心灵\" class=\"headerlink\" title=\"5. 查找美丽心灵\"></a>5. <strong>查找美丽心灵</strong></h3><p>查询 <code>title</code> 字段包含 <code>&quot;Beautiful Mind&quot;</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:Beautiful Mind<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-泛查询\"><a href=\"#6-泛查询\" class=\"headerlink\" title=\"6. 泛查询\"></a>6. <strong>泛查询</strong></h3><p>查询 <code>title</code> 字段包含 <code>2012</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:2012<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"7-Phrase-查询（短语查询）\"><a href=\"#7-Phrase-查询（短语查询）\" class=\"headerlink\" title=\"7. Phrase 查询（短语查询）\"></a>7. <strong>Phrase 查询（短语查询）</strong></h3><p>查询 <code>title</code> 字段精确匹配 <code>&quot;Beautiful Mind&quot;</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:<span class=\"hljs-string\">&quot;Beautiful Mind&quot;</span><br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>使用引号表示精确短语匹配，要求字段内容必须完全匹配短语 <code>&quot;Beautiful Mind&quot;</code>。</li>\n</ul>\n<h3 id=\"8-分组查询（使用括号）\"><a href=\"#8-分组查询（使用括号）\" class=\"headerlink\" title=\"8. 分组查询（使用括号）\"></a>8. <strong>分组查询（使用括号）</strong></h3><p>查询 <code>title</code> 字段中包含 <code>Beautiful Mind</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>使用括号可以进行分组查询，类似逻辑上的括号优先级。</li>\n</ul>\n<h3 id=\"9-布尔操作符查询\"><a href=\"#9-布尔操作符查询\" class=\"headerlink\" title=\"9. 布尔操作符查询\"></a>9. <strong>布尔操作符查询</strong></h3><ul>\n<li><strong>AND 查询：</strong><br>查询 <code>title</code> 字段同时包含 <code>Beautiful</code> 和 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful AND Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>NOT 查询：</strong><br>查询 <code>title</code> 字段包含 <code>Beautiful</code> 但不包含 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful NOT Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>OR 查询：</strong><br>查询 <code>title</code> 字段包含 <code>Beautiful</code> 或 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful %2BMind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"10-范围查询\"><a href=\"#10-范围查询\" class=\"headerlink\" title=\"10. 范围查询\"></a>10. <strong>范围查询</strong></h3><p>查询 <code>title</code> 字段包含 <code>beautiful</code> 且 <code>year</code> 在 2002 到 2018 年之间的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>year:[2002 TO 2018]</code>**：指定 <code>year</code> 字段的范围查询。</li>\n</ul>\n<h3 id=\"11-通配符查询\"><a href=\"#11-通配符查询\" class=\"headerlink\" title=\"11. 通配符查询\"></a>11. <strong>通配符查询</strong></h3><p>查询 <code>title</code> 字段以 <code>b</code> 开头的所有记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:b*<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>b*</code>**：使用通配符查询以 <code>b</code> 开头的字符串。</li>\n</ul>\n<h3 id=\"12-模糊查询-近似度匹配\"><a href=\"#12-模糊查询-近似度匹配\" class=\"headerlink\" title=\"12. 模糊查询 &amp; 近似度匹配\"></a>12. <strong>模糊查询 &amp; 近似度匹配</strong></h3><ul>\n<li><strong>模糊匹配</strong>：查询 <code>title</code> 字段中的词语 <code>beautifl</code>，允许有 1 个字符的错误：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:beautifl~1<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>近似度匹配</strong>：查询 <code>title</code> 字段中的短语 <code>&quot;Lord Rings&quot;</code>，允许 2 个字符的误差：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:<span class=\"hljs-string\">&quot;Lord Rings&quot;</span>~2<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了如何使用 Elasticsearch 提供的强大查询能力来根据不同的需求筛选和搜索数据。常见的查询类型包括：</p>\n<ul>\n<li><strong>基本查询</strong>：用于查找单一词汇。</li>\n<li><strong>布尔查询</strong>：组合多个查询条件。</li>\n<li><strong>范围查询</strong>：查找特定范围内的记录。</li>\n<li><strong>通配符查询</strong>：模糊匹配。</li>\n<li><strong>短语查询</strong>：精确匹配整个短语。</li>\n</ul>\n<p>同时，<code>profile</code> 参数可以帮助分析查询性能，优化查询响应。</p>\n<p>3.8-RequestBody与QueryDSL简介</p>\n<p>以下是您提供的 Elasticsearch 查询操作，包括分页、日期排序、源过滤、脚本字段、以及不同的查询类型（如 <code>match</code>、<code>match_phrase</code>）。这些操作展示了如何在 Elasticsearch 中进行更精细的查询和数据处理。</p>\n<h3 id=\"1-忽略不存在的索引（ignore-unavailable-true）\"><a href=\"#1-忽略不存在的索引（ignore-unavailable-true）\" class=\"headerlink\" title=\"1. 忽略不存在的索引（ignore_unavailable=true）\"></a>1. <strong>忽略不存在的索引（<code>ignore_unavailable=true</code>）</strong></h3><p>在查询时，如果访问的索引不存在，使用 <code>ignore_unavailable=true</code> 可以避免报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /movies,404_idx/_search?ignore_unavailable=<span class=\"hljs-literal\">true</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>ignore_unavailable=true</code>**：在访问不存在的索引时，忽略错误。</li>\n</ul>\n<h3 id=\"2-分页查询\"><a href=\"#2-分页查询\" class=\"headerlink\" title=\"2. 分页查询\"></a>2. <strong>分页查询</strong></h3><p>查询 <code>kibana_sample_data_ecommerce</code> 索引并分页返回数据（从第 10 条开始，返回 20 条记录）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;from&quot;</span>: 10,<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 20,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong><code>from=10</code></strong> 和 **<code>size=20</code>**：分页，跳过前 10 条，返回接下来的 20 条。</li>\n</ul>\n<h3 id=\"3-日期排序\"><a href=\"#3-日期排序\" class=\"headerlink\" title=\"3. 日期排序\"></a>3. <strong>日期排序</strong></h3><p>按 <code>order_date</code> 字段降序排序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [&#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>sort</code>**：按照 <code>order_date</code> 字段降序排序。</li>\n</ul>\n<h3 id=\"4-源过滤\"><a href=\"#4-源过滤\" class=\"headerlink\" title=\"4. 源过滤\"></a>4. <strong>源过滤</strong></h3><p>只返回文档中的 <code>order_date</code> 字段，不返回其他字段：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;order_date&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>_source</code>**：指定只返回 <code>order_date</code> 字段的数据。</li>\n</ul>\n<h3 id=\"5-脚本字段\"><a href=\"#5-脚本字段\" class=\"headerlink\" title=\"5. 脚本字段\"></a>5. <strong>脚本字段</strong></h3><p>使用脚本字段计算新的字段（例如，拼接 <code>order_date</code> 和 <code>&quot;hello&quot;</code>）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;script_fields&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;new_field&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;lang&quot;</span>: <span class=\"hljs-string\">&quot;painless&quot;</span>,<br>        <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;order_date&#x27;].value+&#x27;hello&#x27;&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>script_fields</code>**：使用 <code>painless</code> 脚本创建新的字段 <code>new_field</code>，将 <code>order_date</code> 字段与字符串 <code>&quot;hello&quot;</code> 拼接。</li>\n</ul>\n<h3 id=\"6-match-查询\"><a href=\"#6-match-查询\" class=\"headerlink\" title=\"6. match 查询\"></a>6. <strong><code>match</code> 查询</strong></h3><p>查询 <code>movies</code> 索引中 <code>title</code> 字段包含 <code>&quot;last christmas&quot;</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;last christmas&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>match</code>**：进行标准的全文匹配查询。</li>\n</ul>\n<h3 id=\"7-match-查询并使用-AND-操作符\"><a href=\"#7-match-查询并使用-AND-操作符\" class=\"headerlink\" title=\"7. match 查询并使用 AND 操作符\"></a>7. <strong><code>match</code> 查询并使用 AND 操作符</strong></h3><p>查询 <code>title</code> 包含 <code>&quot;last christmas&quot;</code> 且两个词都必须出现的记录（使用 AND 操作符）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;last christmas&quot;</span>,<br>        <span class=\"hljs-string\">&quot;operator&quot;</span>: <span class=\"hljs-string\">&quot;and&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>operator: &quot;and&quot;</code>**：两个词必须同时出现在字段中。</li>\n</ul>\n<h3 id=\"8-match-phrase-查询（短语匹配）\"><a href=\"#8-match-phrase-查询（短语匹配）\" class=\"headerlink\" title=\"8. match_phrase 查询（短语匹配）\"></a>8. <strong><code>match_phrase</code> 查询（短语匹配）</strong></h3><p>查询 <code>title</code> 字段精确匹配 <code>&quot;one love&quot;</code> 作为一个短语：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;one love&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>match_phrase</code>**：精确匹配整个短语，必须按照指定的顺序。</li>\n</ul>\n<h3 id=\"9-match-phrase-查询并使用-slop\"><a href=\"#9-match-phrase-查询并使用-slop\" class=\"headerlink\" title=\"9. match_phrase 查询并使用 slop\"></a>9. <strong><code>match_phrase</code> 查询并使用 <code>slop</code></strong></h3><p>查询 <code>title</code> 字段中的短语 <code>&quot;one love&quot;</code>，并允许 1 个词语的偏移（即词语可以有一定的顺序变化）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;one love&quot;</span>,<br>        <span class=\"hljs-string\">&quot;slop&quot;</span>: 1<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>slop: 1</code>**：允许最多 1 个词语的顺序偏移（例如，<code>love one</code> 也可以匹配）。</li>\n</ul>\n<h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了 Elasticsearch 中常用的查询类型：</p>\n<ul>\n<li><strong>分页查询</strong>：使用 <code>from</code> 和 <code>size</code> 来实现分页。</li>\n<li><strong>日期排序</strong>：使用 <code>sort</code> 来对结果进行排序。</li>\n<li><strong>源过滤</strong>：通过 <code>_source</code> 限制返回的字段。</li>\n<li><strong>脚本字段</strong>：使用 <code>painless</code> 脚本来计算新字段。</li>\n<li><strong>布尔操作符</strong>：通过 <code>operator</code> 来定义 <code>match</code> 查询的逻辑。</li>\n<li><strong>短语匹配和偏移</strong>：通过 <code>match_phrase</code> 和 <code>slop</code> 来进行更灵活的查询。</li>\n</ul>\n<p>这些查询可以帮助你在 Elasticsearch 中实现复杂的搜索需求。</p>\n<p>[3.9-QueryString&amp;SimpleQueryString查询]</p>\n<p>以下是您提供的 Elasticsearch 查询操作，涉及到 <code>query_string</code> 和 <code>simple_query_string</code> 查询的使用，以及如何通过不同的字段和操作符执行复杂查询。这里的查询包括布尔操作符、字段匹配、以及指定默认操作符等。</p>\n<h3 id=\"1-向索引添加文档\"><a href=\"#1-向索引添加文档\" class=\"headerlink\" title=\"1. 向索引添加文档\"></a>1. <strong>向索引添加文档</strong></h3><p>首先，向 <code>users</code> 索引添加两个用户文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /users/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;about&quot;</span>: <span class=\"hljs-string\">&quot;java, golang, node, swift, elasticsearch&quot;</span><br>&#125;<br><br>PUT /users/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;Li Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;about&quot;</span>: <span class=\"hljs-string\">&quot;Hadoop&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-query-string-查询：查询名称中包含-“Ruan”-和-“Yiming”-的文档\"><a href=\"#2-query-string-查询：查询名称中包含-“Ruan”-和-“Yiming”-的文档\" class=\"headerlink\" title=\"2. query_string 查询：查询名称中包含 “Ruan” 和 “Yiming” 的文档\"></a>2. <strong><code>query_string</code> 查询：查询名称中包含 “Ruan” 和 “Yiming” 的文档</strong></h3><p>使用 <code>query_string</code> 查询，指定默认字段为 <code>name</code>，查询条件为 <code>&quot;Ruan AND Yiming&quot;</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;default_field&quot;</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan AND Yiming&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>query_string</code>**：用于执行复杂的查询，可以使用逻辑操作符（如 AND、OR）。</li>\n</ul>\n<h3 id=\"3-query-string-查询：多个字段和复杂查询\"><a href=\"#3-query-string-查询：多个字段和复杂查询\" class=\"headerlink\" title=\"3. query_string 查询：多个字段和复杂查询\"></a>3. <strong><code>query_string</code> 查询：多个字段和复杂查询</strong></h3><p>查询名称或简介字段包含 <code>&quot;Ruan AND Yiming&quot;</code> 或 <code>&quot;Java AND Elasticsearch&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;about&quot;</span>],<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;(Ruan AND Yiming) OR (Java AND Elasticsearch)&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>fields</code>**：可以指定多个字段进行查询。</li>\n<li>**<code>query</code>**：包含布尔操作符（如 AND、OR）。</li>\n</ul>\n<h3 id=\"4-simple-query-string-查询（默认操作符为-OR）\"><a href=\"#4-simple-query-string-查询（默认操作符为-OR）\" class=\"headerlink\" title=\"4. simple_query_string 查询（默认操作符为 OR）\"></a>4. <strong><code>simple_query_string</code> 查询（默认操作符为 OR）</strong></h3><p>执行一个简单查询，默认操作符为 <code>OR</code>，查询 <code>name</code> 字段中包含 <code>&quot;Ruan&quot;</code> 或 <code>&quot;Yiming&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan AND Yiming&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>simple_query_string</code>**：适用于较简单的查询，避免了复杂的查询语法。</li>\n</ul>\n<h3 id=\"5-simple-query-string-查询（默认操作符为-AND）\"><a href=\"#5-simple-query-string-查询（默认操作符为-AND）\" class=\"headerlink\" title=\"5. simple_query_string 查询（默认操作符为 AND）\"></a>5. <strong><code>simple_query_string</code> 查询（默认操作符为 AND）</strong></h3><p>查询 <code>name</code> 字段中包含 <code>&quot;Ruan&quot;</code> 且 <code>&quot;Yiming&quot;</code> 的文档，使用 <code>AND</code> 作为默认操作符：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>],<br>      <span class=\"hljs-string\">&quot;default_operator&quot;</span>: <span class=\"hljs-string\">&quot;AND&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>default_operator</code>**：设置默认操作符（<code>AND</code> 或 <code>OR</code>）。在此示例中，<code>AND</code> 用于要求 <code>&quot;Ruan&quot;</code> 和 <code>&quot;Yiming&quot;</code> 必须同时出现在 <code>name</code> 字段中。</li>\n</ul>\n<h3 id=\"6-query-string-查询：查询电影标题包含-“Beautiful”-和-“Mind”\"><a href=\"#6-query-string-查询：查询电影标题包含-“Beautiful”-和-“Mind”\" class=\"headerlink\" title=\"6. query_string 查询：查询电影标题包含 “Beautiful” 和 “Mind”\"></a>6. <strong><code>query_string</code> 查询：查询电影标题包含 “Beautiful” 和 “Mind”</strong></h3><p>执行 <code>query_string</code> 查询，查询电影标题中包含 <code>&quot;Beautiful&quot;</code> 和 <code>&quot;Mind&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;default_field&quot;</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Beautiful AND Mind&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>query_string</code>**：执行复杂查询，可以使用布尔操作符（如 <code>AND</code>）。</li>\n</ul>\n<h3 id=\"7-query-string-查询：多个字段查询\"><a href=\"#7-query-string-查询：多个字段查询\" class=\"headerlink\" title=\"7. query_string 查询：多个字段查询\"></a>7. <strong><code>query_string</code> 查询：多个字段查询</strong></h3><p>查询电影的 <code>title</code> 或 <code>year</code> 字段包含 <code>&quot;2012&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;year&quot;</span>],<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;2012&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>fields</code>**：指定多个字段进行查询，这里同时查询 <code>title</code> 和 <code>year</code> 字段。</li>\n</ul>\n<h3 id=\"8-simple-query-string-查询：使用-进行短语匹配\"><a href=\"#8-simple-query-string-查询：使用-进行短语匹配\" class=\"headerlink\" title=\"8. simple_query_string 查询：使用 + 进行短语匹配\"></a>8. <strong><code>simple_query_string</code> 查询：使用 <code>+</code> 进行短语匹配</strong></h3><p>查询电影标题中包含 <code>&quot;Beautiful&quot;</code> 和 <code>&quot;mind&quot;</code> 的文档，使用 <code>+</code> 确保两个词都出现在查询中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Beautiful +mind&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong><code>+</code> 操作符</strong>：用于强制要求某个词出现在查询结果中。</li>\n</ul>\n<hr>\n<h3 id=\"总结-3\"><a href=\"#总结-3\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了如何在 Elasticsearch 中使用不同类型的查询：</p>\n<ul>\n<li><strong><code>query_string</code></strong> 查询：用于执行复杂的查询，可以包含多个字段、布尔操作符（AND、OR、NOT）以及通配符等。</li>\n<li><strong><code>simple_query_string</code></strong> 查询：比 <code>query_string</code> 更简单，适用于不需要复杂语法的查询，并且支持默认操作符的配置。</li>\n<li><strong>字段查询</strong>：可以针对多个字段同时查询，指定多个字段使用 <code>fields</code> 参数。</li>\n<li><strong>布尔操作符</strong>：如 <code>AND</code>、<code>OR</code>、<code>NOT</code>，控制查询的逻辑。</li>\n</ul>\n<p>这些查询方式非常适合处理复杂的检索需求。</p>\n<p>[3.10-DynamicMapping和常见字段类型]</p>\n<p>您的示例展示了如何在 Elasticsearch 中管理映射（Mapping）以及如何处理动态字段和映射更新。以下是总结和解释：</p>\n<h3 id=\"映射和字段定义\"><a href=\"#映射和字段定义\" class=\"headerlink\" title=\"映射和字段定义\"></a><strong>映射和字段定义</strong></h3><p>映射在 Elasticsearch 中类似于关系数据库中的表结构定义，主要用于：</p>\n<ul>\n<li><strong>定义字段的名称</strong>：指定文档中的字段名。</li>\n<li><strong>定义字段的类型</strong>：比如文本（<code>text</code>）、关键字（<code>keyword</code>）、日期（<code>date</code>）等。</li>\n<li><strong>定义倒排索引相关配置</strong>：比如是否需要索引字段，以及字段的 <code>Analyzer</code> 配置。</li>\n</ul>\n<h3 id=\"动态映射（Dynamic-Mapping）\"><a href=\"#动态映射（Dynamic-Mapping）\" class=\"headerlink\" title=\"动态映射（Dynamic Mapping）\"></a><strong>动态映射（Dynamic Mapping）</strong></h3><p>动态映射允许 Elasticsearch 根据新文档自动推断字段的类型。可以通过 <code>dynamic</code> 属性来配置动态行为：</p>\n<ul>\n<li>**<code>true</code>**（默认）：允许新字段自动被索引和映射。</li>\n<li>**<code>false</code>**：禁止自动创建新字段，但已存在字段可以继续使用。</li>\n<li>**<code>strict</code>**：禁止任何新的字段。如果文档包含未定义的字段，将导致错误。</li>\n</ul>\n<h3 id=\"操作演示\"><a href=\"#操作演示\" class=\"headerlink\" title=\"操作演示\"></a><strong>操作演示</strong></h3><ol>\n<li><p><strong>写入文档并查看映射</strong></p>\n<ul>\n<li>向 <code>mapping_test</code> 索引中添加一个文档，查看映射：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Chan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Jackie&quot;</span>,<br>  <span class=\"hljs-string\">&quot;loginDate&quot;</span>: <span class=\"hljs-string\">&quot;2018-07-24T10:29:48.103Z&quot;</span><br>&#125;<br><br>GET mapping_test/_mapping<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>动态映射：推断字段类型</strong></p>\n<ul>\n<li>新字段 <code>uid</code>, <code>isVip</code>, <code>age</code> 等被自动推断并加入映射：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;uid&quot;</span>: <span class=\"hljs-string\">&quot;123&quot;</span>,<br>  <span class=\"hljs-string\">&quot;isVip&quot;</span>: <span class=\"hljs-literal\">false</span>,<br>  <span class=\"hljs-string\">&quot;isAdmin&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;age&quot;</span>: 19,<br>  <span class=\"hljs-string\">&quot;height&quot;</span>: 180<br>&#125;<br><br>GET mapping_test/_mapping<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>新增字段（默认动态）</strong></p>\n<ul>\n<li>如果动态映射为 <code>true</code>（默认），可以动态添加新的字段：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;newField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>&#125;<br><br>POST dynamic_mapping_test/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;newField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>修改动态设置为 <code>false</code></strong></p>\n<ul>\n<li>修改 <code>dynamic</code> 设置为 <code>false</code>，禁止自动推断新字段：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-literal\">false</span><br>&#125;<br><br>PUT dynamic_mapping_test/_doc/10<br>&#123;<br>  <span class=\"hljs-string\">&quot;anotherField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>&#125;<br><br>POST dynamic_mapping_test/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;anotherField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p>在此示例中，<code>anotherField</code> 将不会被索引或搜索，因为动态映射已设置为 <code>false</code>。</p>\n</li>\n<li><p><strong>修改为 <code>strict</code> 模式</strong></p>\n<ul>\n<li>如果将 <code>dynamic</code> 设置为 <code>strict</code>，任何新的字段都会导致错误：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-string\">&quot;strict&quot;</span><br>&#125;<br><br>PUT dynamic_mapping_test/_doc/12<br>&#123;<br>  <span class=\"hljs-string\">&quot;lastField&quot;</span>: <span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n此时，写入新字段 <code>lastField</code> 会导致错误，HTTP 返回 <code>400</code> 错误码。</li>\n</ul>\n</li>\n<li><p><strong>删除索引</strong></p>\n<ul>\n<li>删除索引：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE dynamic_mapping_test<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"总结-4\"><a href=\"#总结-4\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><ul>\n<li><strong>动态映射（Dynamic Mapping）</strong>：允许 Elasticsearch 自动推断并添加新的字段，方便快速处理未知数据。</li>\n<li><strong><code>dynamic</code> 配置</strong>：控制是否允许 Elasticsearch 自动映射新字段：<ul>\n<li><code>true</code>：默认允许动态字段；</li>\n<li><code>false</code>：禁止自动映射新字段；</li>\n<li><code>strict</code>：禁止所有未知字段，如果有未定义字段则会报错。</li>\n</ul>\n</li>\n<li><strong>更改映射</strong>：映射一旦建立后不能直接修改字段类型，要修改字段配置或添加新字段需要使用 <code>reindex</code> 操作。</li>\n</ul>\n<p>这些操作有助于管理索引和字段的生命周期，确保数据能够根据业务需求灵活适应。</p>\n<p>您的示例展示了 Elasticsearch 中显式设置映射（Mapping）的一些常见操作和参数。以下是各个设置项的详细介绍和使用案例。</p>\n<h3 id=\"1-index-false-设置\"><a href=\"#1-index-false-设置\" class=\"headerlink\" title=\"1. index: false 设置\"></a><strong>1. <code>index: false</code> 设置</strong></h3><p>通过设置字段的 <code>index: false</code>，可以阻止某些字段被索引。这样可以避免该字段参与倒排索引，也不会进行搜索。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;firstName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;lastName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;mobile&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\"># 禁止索引该字段</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;12345678&quot;</span><br>&#125;<br><br>POST /users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;12345678&quot;</span>  <span class=\"hljs-comment\"># 搜索时不会命中mobile字段</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在上面的示例中，<code>mobile</code> 字段被设置为 <code>index: false</code>，因此无法用于搜索查询。</p>\n<h3 id=\"2-null-value-设置\"><a href=\"#2-null-value-设置\" class=\"headerlink\" title=\"2. null_value 设置\"></a><strong>2. <code>null_value</code> 设置</strong></h3><p>通过设置 <code>null_value</code>，可以在文档中存储 <code>null</code> 值，并用指定的替代值替换 <code>null</code>。这对于查询时需要处理 <code>null</code> 数据特别有用。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;firstName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;lastName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;mobile&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>          <span class=\"hljs-string\">&quot;null_value&quot;</span>: <span class=\"hljs-string\">&quot;NULL&quot;</span>  <span class=\"hljs-comment\"># null值替代为&quot;NULL&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;mobile&quot;</span>: null  <span class=\"hljs-comment\"># 实际值是null</span><br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan2&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming2&quot;</span>  <span class=\"hljs-comment\"># 没有mobile字段</span><br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;NULL&quot;</span>  <span class=\"hljs-comment\"># 搜索时会匹配到null值字段</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此设置可以确保查询时用 <code>NULL</code> 代替存储的 <code>null</code> 值。</p>\n<h3 id=\"3-copy-to-设置\"><a href=\"#3-copy-to-设置\" class=\"headerlink\" title=\"3. copy_to 设置\"></a><strong>3. <code>copy_to</code> 设置</strong></h3><p><code>copy_to</code> 可以将多个字段的内容复制到另一个字段，方便进行联合查询或索引。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;firstName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;fullName&quot;</span>  <span class=\"hljs-comment\"># 将firstName复制到fullName字段</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;lastName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;fullName&quot;</span>  <span class=\"hljs-comment\"># 将lastName复制到fullName字段</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span><br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_search?q=fullName:(Ruan Yiming)<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fullName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>        <span class=\"hljs-string\">&quot;operator&quot;</span>: <span class=\"hljs-string\">&quot;and&quot;</span>  <span class=\"hljs-comment\"># 联合查询fullName字段</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这里，<code>firstName</code> 和 <code>lastName</code> 字段的内容会被复制到 <code>fullName</code> 字段，从而使得查询变得更加方便。</p>\n<h3 id=\"4-数组类型处理\"><a href=\"#4-数组类型处理\" class=\"headerlink\" title=\"4. 数组类型处理\"></a><strong>4. 数组类型处理</strong></h3><p>Elasticsearch 支持数组字段。数组中的每个元素会被视为一个单独的值，这对于多值字段非常有用。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;onebird&quot;</span>,<br>  <span class=\"hljs-string\">&quot;interests&quot;</span>: <span class=\"hljs-string\">&quot;reading&quot;</span>  <span class=\"hljs-comment\"># 字段为单一值</span><br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;twobirds&quot;</span>,<br>  <span class=\"hljs-string\">&quot;interests&quot;</span>: [<span class=\"hljs-string\">&quot;reading&quot;</span>, <span class=\"hljs-string\">&quot;music&quot;</span>]  <span class=\"hljs-comment\"># 字段为数组</span><br>&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_mapping<br></code></pre></td></tr></table></figure>\n<p>在此示例中，<code>interests</code> 字段既可以是单个值也可以是数组，Elasticsearch 会将每个数组元素视为独立的值进行索引。</p>\n<hr>\n<h3 id=\"总结常见的-Mapping-参数\"><a href=\"#总结常见的-Mapping-参数\" class=\"headerlink\" title=\"总结常见的 Mapping 参数\"></a><strong>总结常见的 Mapping 参数</strong></h3><ul>\n<li><strong><code>type</code></strong>: 字段的数据类型，如 <code>text</code>, <code>keyword</code>, <code>date</code> 等。</li>\n<li><strong><code>index</code></strong>: 控制是否索引该字段，<code>false</code> 表示不索引，默认为 <code>true</code>。</li>\n<li><strong><code>null_value</code></strong>: 控制 <code>null</code> 值的替代值。可以设置为任何替代值，如 <code>&quot;NULL&quot;</code>。</li>\n<li><strong><code>copy_to</code></strong>: 将多个字段的内容复制到一个目标字段中，便于联合查询。</li>\n<li><strong><code>dynamic</code></strong>: 控制动态映射，<code>true</code> 表示允许自动推断新字段，<code>false</code> 表示禁止新字段自动映射，<code>strict</code> 则表示严格模式下不允许任何新字段。</li>\n</ul>\n<p>通过这些映射设置，可以更好地控制数据如何存储和索引，以及如何在查询时处理和优化字段。</p>\n<p>您的示例展示了 Elasticsearch 中关于多字段特性以及自定义分析器（Analyzer）的配置。以下是对各个分析器和相关配置的详细解释。</p>\n<h3 id=\"1-自定义-Analyzer-和-Char-Filter\"><a href=\"#1-自定义-Analyzer-和-Char-Filter\" class=\"headerlink\" title=\"1. 自定义 Analyzer 和 Char Filter\"></a><strong>1. 自定义 Analyzer 和 Char Filter</strong></h3><p>Elasticsearch 提供了灵活的机制来配置分词器（Tokenizer）和字符过滤器（Char Filter）。这些配置用于在索引和搜索过程中控制文本的处理方式。</p>\n<h4 id=\"自定义-Tokenizer-和-Char-Filter-示例\"><a href=\"#自定义-Tokenizer-和-Char-Filter-示例\" class=\"headerlink\" title=\"自定义 Tokenizer 和 Char Filter 示例\"></a><strong>自定义 Tokenizer 和 Char Filter 示例</strong></h4><ul>\n<li><strong>Keyword Tokenizer</strong>: <code>keyword</code> tokenizer 将整个文本当作一个单独的 token 进行处理。</li>\n<li><strong>HTML Strip Char Filter</strong>: <code>html_strip</code> char filter 用于从文本中去除 HTML 标签。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,  <span class=\"hljs-comment\"># 使用关键词分词器</span><br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<span class=\"hljs-string\">&quot;html_strip&quot;</span>],  <span class=\"hljs-comment\"># 使用html_strip字符过滤器</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;&lt;b&gt;hello world&lt;/b&gt;&quot;</span>  <span class=\"hljs-comment\"># 输入带有HTML标签的文本</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出将会是：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;hello world&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n<p>此配置移除了文本中的 <code>&lt;b&gt;&lt;/b&gt;</code> HTML 标签，只保留了纯文本 “hello world”。</p>\n<h4 id=\"Path-Hierarchy-Tokenizer\"><a href=\"#Path-Hierarchy-Tokenizer\" class=\"headerlink\" title=\"Path Hierarchy Tokenizer\"></a><strong>Path Hierarchy Tokenizer</strong></h4><p><code>path_hierarchy</code> tokenizer 用于处理文件路径等层级结构的数据，将路径按分隔符（如 <code>/</code>）切割。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;path_hierarchy&quot;</span>,  <span class=\"hljs-comment\"># 使用路径层级分词器</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d/e&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出会将路径按 <code>/</code> 切分：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d/e&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">21</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">16</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-Char-Filter-替换符号\"><a href=\"#2-Char-Filter-替换符号\" class=\"headerlink\" title=\"2. Char Filter 替换符号\"></a><strong>2. Char Filter 替换符号</strong></h3><p>字符过滤器可以用于替换文本中的特定符号或字符。例如，使用 <code>mapping</code> 类型的 <code>char_filter</code>，可以替换文本中的字符（如将 <code>-</code> 替换为 <code>_</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,  <span class=\"hljs-comment\"># 使用标准分词器</span><br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;mapping&quot;</span>,  <span class=\"hljs-comment\"># 使用字符映射过滤器</span><br>      <span class=\"hljs-string\">&quot;mappings&quot;</span>: [<span class=\"hljs-string\">&quot;- =&gt; _&quot;</span>]<br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;123-456, I-test! test-990 650-555-1234&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此配置将文本中的 <code>-</code> 替换为 <code>_</code>，输出将是：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;123_456&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-Char-Filter-替换表情符号\"><a href=\"#3-Char-Filter-替换表情符号\" class=\"headerlink\" title=\"3. Char Filter 替换表情符号\"></a><strong>3. Char Filter 替换表情符号</strong></h3><p>你还可以使用字符过滤器将表情符号替换为特定的文本（如将 <code>:)</code> 替换为 <code>happy</code>，<code>:(</code> 替换为 <code>sad</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;mapping&quot;</span>,<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span>: [<span class=\"hljs-string\">&quot;:) =&gt; happy&quot;</span>, <span class=\"hljs-string\">&quot;:( =&gt; sad&quot;</span>]<br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;I am felling :)&quot;</span>, <span class=\"hljs-string\">&quot;Feeling :( today&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;I&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;am&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;felling&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;happy&quot;</span><span class=\"hljs-punctuation\">,</span>  # 替换表情符号<span class=\"hljs-punctuation\">:</span>) 为 happy<br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">18</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-Stop-和-Snowball-过滤器\"><a href=\"#4-使用-Stop-和-Snowball-过滤器\" class=\"headerlink\" title=\"4. 使用 Stop 和 Snowball 过滤器\"></a><strong>4. 使用 Stop 和 Snowball 过滤器</strong></h3><p>使用 <code>stop</code> 过滤器来删除常见的停用词，使用 <code>snowball</code> 过滤器进行词干提取（如将 “playing” 转换为 “play”）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;whitespace&quot;</span>,  <span class=\"hljs-comment\"># 使用空格分词器</span><br>  <span class=\"hljs-string\">&quot;filter&quot;</span>: [<span class=\"hljs-string\">&quot;stop&quot;</span>, <span class=\"hljs-string\">&quot;snowball&quot;</span>],  <span class=\"hljs-comment\"># 使用停用词和词干提取</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;The girls in China are playing this game!&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;girl&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">9</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;china&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">14</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">19</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-正则表达式替换\"><a href=\"#5-正则表达式替换\" class=\"headerlink\" title=\"5. 正则表达式替换\"></a><strong>5. 正则表达式替换</strong></h3><p>通过 <code>pattern_replace</code> 字符过滤器，您可以根据正则表达式来替换文本中的特定部分。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;pattern_replace&quot;</span>,<br>      <span class=\"hljs-string\">&quot;pattern&quot;</span>: <span class=\"hljs-string\">&quot;http://(.*)&quot;</span>,<br>      <span class=\"hljs-string\">&quot;replacement&quot;</span>: <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$1</span>&quot;</span><br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;http://www.elastic.co&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此配置将 <code>http://</code> 替换为一个空字符串，结果为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;www.elastic.co&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a><strong>总结：</strong></h3><ul>\n<li><strong>Tokenizer</strong>: 负责将输入文本切割成词条（token）。如 <code>keyword</code>, <code>standard</code>, <code>path_hierarchy</code>。</li>\n<li><strong>Char Filter</strong>: 处理文本中的字符替换、去除特殊符号或HTML标签等，如 <code>html_strip</code>, <code>mapping</code>, <code>pattern_replace</code>。</li>\n<li><strong>Filter</strong>: 用于文本处理，如去除停用词（<code>stop</code>）或词干提取（<code>snowball</code>）。</li>\n</ul>\n<p>这些工具的组合允许您灵活地处理和分析文本数据，并针对特定的业务需求优化索引和搜索行为。</p>\n<p>在 Elasticsearch 中，<strong>Index Templates</strong> 和 <strong>Dynamic Templates</strong> 是两种强大的工具，用于控制如何定义和管理索引的映射和设置。以下是这两者的详细解释和示例。</p>\n<h3 id=\"1-Index-Templates-索引模板\"><a href=\"#1-Index-Templates-索引模板\" class=\"headerlink\" title=\"1. Index Templates (索引模板)\"></a><strong>1. Index Templates (索引模板)</strong></h3><p><strong>Index Templates</strong> 是一种配置模板，用于为匹配特定模式的索引自动配置设置、映射和其他配置。当创建一个新索引时，如果该索引匹配模板中的 <code>index_patterns</code> 配置，模板中的设置、映射和其他配置就会自动应用到新索引上。</p>\n<h4 id=\"创建默认模板\"><a href=\"#创建默认模板\" class=\"headerlink\" title=\"创建默认模板\"></a><strong>创建默认模板</strong></h4><p>下面是创建一个默认模板的示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _template/template_default<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span>: [<span class=\"hljs-string\">&quot;*&quot;</span>],  <span class=\"hljs-comment\"># 匹配所有索引</span><br>  <span class=\"hljs-string\">&quot;order&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;version&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 1<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这会为所有索引设置一个模板，其中包含分片数量为1、副本数量为1。</p>\n<h4 id=\"为特定模式创建模板\"><a href=\"#为特定模式创建模板\" class=\"headerlink\" title=\"为特定模式创建模板\"></a><strong>为特定模式创建模板</strong></h4><p>另一个例子是为 <code>test*</code> 开头的索引创建模板：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_template/template_test<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span>: [<span class=\"hljs-string\">&quot;test*&quot;</span>],  <span class=\"hljs-comment\"># 匹配所有以test开头的索引</span><br>  <span class=\"hljs-string\">&quot;order&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 2<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;date_detection&quot;</span>: <span class=\"hljs-literal\">false</span>,  <span class=\"hljs-comment\"># 禁止自动检测日期字段</span><br>    <span class=\"hljs-string\">&quot;numeric_detection&quot;</span>: <span class=\"hljs-literal\">true</span>  <span class=\"hljs-comment\"># 自动检测数字字段</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看模板\"><a href=\"#查看模板\" class=\"headerlink\" title=\"查看模板\"></a><strong>查看模板</strong></h4><p>你可以查看已定义的模板：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_template/template_default<br>GET /_template/temp*  <span class=\"hljs-comment\"># 查看所有模板</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"删除模板\"><a href=\"#删除模板\" class=\"headerlink\" title=\"删除模板\"></a><strong>删除模板</strong></h4><p>删除模板的命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /_template/template_default<br>DELETE /_template/template_test<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"2-Dynamic-Templates-动态模板\"><a href=\"#2-Dynamic-Templates-动态模板\" class=\"headerlink\" title=\"2. Dynamic Templates (动态模板)\"></a><strong>2. Dynamic Templates (动态模板)</strong></h3><p><strong>Dynamic Templates</strong> 用于在创建索引时自动匹配字段类型和名称，根据这些动态模板来生成字段的映射规则。可以根据字段的类型（例如字符串、数字）和字段名称（例如以某些字符开头的字段）来定义映射。</p>\n<h4 id=\"自动映射数字字符串和日期字符串\"><a href=\"#自动映射数字字符串和日期字符串\" class=\"headerlink\" title=\"自动映射数字字符串和日期字符串\"></a><strong>自动映射数字字符串和日期字符串</strong></h4><p>例如，数字字符串会被映射为 <code>text</code> 类型，日期字符串会被映射为日期类型：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT ttemplate/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;someNumber&quot;</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,        <span class=\"hljs-comment\"># 字符串数字</span><br>  <span class=\"hljs-string\">&quot;someDate&quot;</span>: <span class=\"hljs-string\">&quot;2019/01/01&quot;</span>  <span class=\"hljs-comment\"># 字符串日期</span><br>&#125;<br>GET ttemplate/_mapping<br></code></pre></td></tr></table></figure>\n<p>在这个例子中，<code>someNumber</code> 会被映射成 <code>text</code> 类型，而 <code>someDate</code> 会被映射成 <code>date</code> 类型。</p>\n<h4 id=\"定义动态模板映射规则\"><a href=\"#定义动态模板映射规则\" class=\"headerlink\" title=\"定义动态模板映射规则\"></a><strong>定义动态模板映射规则</strong></h4><p>使用 <code>dynamic_templates</code> 可以根据字段类型和名称定义映射。例如，以下动态模板将以 <code>is*</code> 开头的字符串字段映射为 <code>boolean</code> 类型，其他字符串字段映射为 <code>keyword</code> 类型：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE my_index<br><br>PUT my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic_templates&quot;</span>: [<br>      &#123;<br>        <span class=\"hljs-string\">&quot;strings_as_boolean&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;match_mapping_type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,   <span class=\"hljs-comment\"># 匹配所有字符串类型</span><br>          <span class=\"hljs-string\">&quot;match&quot;</span>: <span class=\"hljs-string\">&quot;is*&quot;</span>,  <span class=\"hljs-comment\"># 字段名称以is开头</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;boolean&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;,<br>      &#123;<br>        <span class=\"hljs-string\">&quot;strings_as_keywords&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;match_mapping_type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,   <span class=\"hljs-comment\"># 匹配所有字符串类型</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个示例中，<code>isVIP</code> 字段会被映射为 <code>boolean</code> 类型，而其他字符串类型的字段则会被映射为 <code>keyword</code> 类型。</p>\n<h4 id=\"结合路径匹配\"><a href=\"#结合路径匹配\" class=\"headerlink\" title=\"结合路径匹配\"></a><strong>结合路径匹配</strong></h4><p>动态模板不仅可以基于字段名称，还可以基于字段的路径。例如，以下模板会将 <code>name.*</code> 路径下的所有字段映射为 <code>text</code> 类型，并将这些字段复制到 <code>full_name</code> 字段中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic_templates&quot;</span>: [<br>      &#123;<br>        <span class=\"hljs-string\">&quot;full_name&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;path_match&quot;</span>: <span class=\"hljs-string\">&quot;name.*&quot;</span>,  <span class=\"hljs-comment\"># 匹配name下的所有字段</span><br>          <span class=\"hljs-string\">&quot;path_unmatch&quot;</span>: <span class=\"hljs-string\">&quot;*.middle&quot;</span>,  <span class=\"hljs-comment\"># 排除middle字段</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>            <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;full_name&quot;</span>  <span class=\"hljs-comment\"># 将值复制到full_name字段</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>然后，插入以下数据：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;first&quot;</span>: <span class=\"hljs-string\">&quot;John&quot;</span>,<br>    <span class=\"hljs-string\">&quot;middle&quot;</span>: <span class=\"hljs-string\">&quot;Winston&quot;</span>,<br>    <span class=\"hljs-string\">&quot;last&quot;</span>: <span class=\"hljs-string\">&quot;Lennon&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个例子中，<code>first</code> 和 <code>last</code> 字段将被映射为 <code>text</code> 类型，并且它们的内容会被复制到 <code>full_name</code> 字段中。</p>\n<h4 id=\"搜索字段\"><a href=\"#搜索字段\" class=\"headerlink\" title=\"搜索字段\"></a><strong>搜索字段</strong></h4><p>可以通过 <code>full_name</code> 字段来搜索：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET my_index/_search?q=full_name:John<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"总结：-1\"><a href=\"#总结：-1\" class=\"headerlink\" title=\"总结：\"></a><strong>总结：</strong></h3><ul>\n<li><strong>Index Templates</strong> 是为匹配特定索引模式（<code>index_patterns</code>）的所有索引自动配置设置和映射的模板。</li>\n<li><strong>Dynamic Templates</strong> 用于根据字段类型和字段名称自动映射索引字段。你可以根据字段类型（如 <code>string</code>）或字段路径（如 <code>name.*</code>）来定义映射规则。</li>\n</ul>\n<p>这些配置使得索引的创建和管理更加灵活，可以根据实际数据自动推断和调整映射，从而提高了 Elasticsearch 的可用性和效率。</p>\n<p>Elasticsearch 提供了强大的 <strong>聚合</strong> 功能，用于对数据进行汇总和分析。聚合是 Elasticsearch 搜索的一个核心功能，允许你通过多种方式对数据进行分组、统计、求最大&#x2F;最小值、计算平均值等操作。以下是一些常见的聚合分析操作和示例：</p>\n<h3 id=\"1-基本的聚合分析：按目的地分桶统计\"><a href=\"#1-基本的聚合分析：按目的地分桶统计\" class=\"headerlink\" title=\"1. 基本的聚合分析：按目的地分桶统计\"></a><strong>1. 基本的聚合分析：按目的地分桶统计</strong></h3><p>在这个示例中，我们按航班的目的地（<code>DestCountry</code>）进行分桶统计，查看每个目的地的航班数量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,  <span class=\"hljs-comment\"># 不返回实际的文档数据，只返回聚合结果</span><br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span>  <span class=\"hljs-comment\"># 按目的地国家分桶</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个聚合查询中，<code>terms</code> 聚合用于对 <code>DestCountry</code> 字段的值进行分桶，返回每个目的地国家的航班数量。</p>\n<h3 id=\"2-增加更多统计：平均、最大、最小价格\"><a href=\"#2-增加更多统计：平均、最大、最小价格\" class=\"headerlink\" title=\"2. 增加更多统计：平均、最大、最小价格\"></a><strong>2. 增加更多统计：平均、最大、最小价格</strong></h3><p>你可以在分桶内部添加更多聚合来获取其他统计信息，如每个目的地的平均票价、最高票价和最低票价：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算平均票价</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;max_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算最高票价</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;min_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算最低票价</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个查询中，我们为每个目的地添加了三个聚合：<code>avg_price</code>、<code>max_price</code> 和 <code>min_price</code>，分别计算每个目的地的平均票价、最大票价和最小票价。</p>\n<h3 id=\"3-聚合价格与天气信息：统计与多重聚合\"><a href=\"#3-聚合价格与天气信息：统计与多重聚合\" class=\"headerlink\" title=\"3. 聚合价格与天气信息：统计与多重聚合\"></a><strong>3. 聚合价格与天气信息：统计与多重聚合</strong></h3><p>如果你还想结合天气信息（如 <code>DestWeather</code> 字段）与航班价格统计一起进行聚合，可以使用嵌套聚合：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;stats_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算票价的多项统计信息</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestWeather&quot;</span>,  <span class=\"hljs-comment\"># 按天气类型分桶</span><br>            <span class=\"hljs-string\">&quot;size&quot;</span>: 5  <span class=\"hljs-comment\"># 只返回前5个天气类型</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个示例中，我们不仅计算了每个目的地的票价统计信息（如平均票价、最大票价等），还将天气信息作为另一个 <code>terms</code> 聚合，显示每个目的地的天气类型，并限制返回的天气类型数量为 5 个。</p>\n<hr>\n<h3 id=\"常见的聚合类型：\"><a href=\"#常见的聚合类型：\" class=\"headerlink\" title=\"常见的聚合类型：\"></a><strong>常见的聚合类型：</strong></h3><ul>\n<li><strong><code>terms</code> 聚合</strong>：将文档按某个字段的值进行分桶，常用于统计词频或其他分类数据。</li>\n<li><strong><code>avg</code> 聚合</strong>：计算某个数值字段的平均值。</li>\n<li><strong><code>sum</code> 聚合</strong>：计算某个数值字段的总和。</li>\n<li><strong><code>min</code> 聚合</strong>：返回某个数值字段的最小值。</li>\n<li><strong><code>max</code> 聚合</strong>：返回某个数值字段的最大值。</li>\n<li><strong><code>stats</code> 聚合</strong>：返回字段的统计信息（包括：最小值、最大值、平均值、总和和文档数量）。</li>\n<li><strong><code>date_histogram</code> 聚合</strong>：按日期进行分桶，适用于时间序列数据。</li>\n<li><strong><code>histogram</code> 聚合</strong>：按数值区间进行分桶，常用于数值数据的统计。</li>\n</ul>\n<hr>\n<h3 id=\"相关阅读：\"><a href=\"#相关阅读：\" class=\"headerlink\" title=\"相关阅读：\"></a><strong>相关阅读：</strong></h3><ul>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/7.1/search-aggregations.html\">Elasticsearch 聚合文档</a> 详细介绍了各种聚合的使用方式和示例。</li>\n</ul>\n<p>聚合功能非常强大，能帮助你从海量数据中提取有价值的信息，适用于各种数据分析场景。</p>\n","excerpt":"","more":"<p>以下是 Elasticsearch (ES) 常用命令的总结和笔记：</p>\n<h3 id=\"1-查看索引相关信息\"><a href=\"#1-查看索引相关信息\" class=\"headerlink\" title=\"1. 查看索引相关信息\"></a>1. 查看索引相关信息</h3><ul>\n<li><p><strong>查看指定索引的映射信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看指定索引的文档总数</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_count<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看前10条文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-查看索引状态与信息\"><a href=\"#2-查看索引状态与信息\" class=\"headerlink\" title=\"2. 查看索引状态与信息\"></a>2. 查看索引状态与信息</h3><ul>\n<li><p><strong>查看索引信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices/kibana*?v&amp;s=index<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看状态为绿的索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;health=green<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>按文档个数排序查看索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;s=docs.count:desc<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看具体的索引字段（健康、主分片、复制分片、文档数等）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices/kibana*?pri&amp;v&amp;h=health,index,pri,rep,docs.count,mt<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看每个索引使用的内存量</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/indices?v&amp;h=i,tm&amp;s=tm:desc<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-查看节点信息\"><a href=\"#3-查看节点信息\" class=\"headerlink\" title=\"3. 查看节点信息\"></a>3. 查看节点信息</h3><ul>\n<li><p><strong>查看所有节点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cat/nodes?v<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定节点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_nodes/es7_01,es7_02<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看节点信息并显示特定字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/nodes?v&amp;h=<span class=\"hljs-built_in\">id</span>,ip,port,v,m<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-查看集群健康状况\"><a href=\"#4-查看集群健康状况\" class=\"headerlink\" title=\"4. 查看集群健康状况\"></a>4. 查看集群健康状况</h3><ul>\n<li><p><strong>查看集群健康状况</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看集群健康状况，并按分片级别显示</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health?level=shards<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定索引的集群健康状况</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定索引的集群健康状况，并按分片级别显示</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/kibana_sample_data_flights?level=shards<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"5-查看集群状态\"><a href=\"#5-查看集群状态\" class=\"headerlink\" title=\"5. 查看集群状态\"></a>5. 查看集群状态</h3><ul>\n<li><strong>查看集群状态</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/state<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-查看集群设置\"><a href=\"#6-查看集群设置\" class=\"headerlink\" title=\"6. 查看集群设置\"></a>6. 查看集群设置</h3><ul>\n<li><p><strong>查看集群设置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/settings<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看集群设置，包括默认设置</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/settings?include_defaults=<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-查看分片信息\"><a href=\"#7-查看分片信息\" class=\"headerlink\" title=\"7. 查看分片信息\"></a>7. 查看分片信息</h3><ul>\n<li><p><strong>查看集群的所有分片信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/shards<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>查看特定的分片信息（包括状态、主分片&#x2F;副本分片等）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cat/shards?h=index,shard,prirep,state,unassigned.reason<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"1-创建文档\"><a href=\"#1-创建文档\" class=\"headerlink\" title=\"1. 创建文档\"></a>1. 创建文档</h3><ul>\n<li><p><strong>自动生成 <code>_id</code> 创建文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Mike&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-04-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Kibana&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>指定 ID 创建文档（如果 ID 已存在则报错）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1?op_type=create<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>指定 ID 创建文档（如果 ID 已存在则报错）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_create/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>  <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-根据-ID-获取文档\"><a href=\"#2-根据-ID-获取文档\" class=\"headerlink\" title=\"2. 根据 ID 获取文档\"></a>2. 根据 ID 获取文档</h3><ul>\n<li><strong>获取指定 ID 的文档</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET <span class=\"hljs-built_in\">users</span>/_doc/1<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-更新文档\"><a href=\"#3-更新文档\" class=\"headerlink\" title=\"3. 更新文档\"></a>3. 更新文档</h3><ul>\n<li><p><strong>更新指定 ID 的文档（先删除再写入）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;user&quot;</span> : <span class=\"hljs-string\">&quot;Mike&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>在原文档上增加字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_update/1/<br>&#123;<br>  <span class=\"hljs-string\">&quot;doc&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;post_date&quot;</span> : <span class=\"hljs-string\">&quot;2019-05-15T14:12:12&quot;</span>,<br>    <span class=\"hljs-string\">&quot;message&quot;</span> : <span class=\"hljs-string\">&quot;trying out Elasticsearch&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-删除文档\"><a href=\"#4-删除文档\" class=\"headerlink\" title=\"4. 删除文档\"></a>4. 删除文档</h3><ul>\n<li><strong>根据 ID 删除文档</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span>/_doc/1<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"5-批量操作-Bulk-API\"><a href=\"#5-批量操作-Bulk-API\" class=\"headerlink\" title=\"5. 批量操作 (Bulk API)\"></a>5. 批量操作 (Bulk API)</h3><ul>\n<li><strong>执行批量操作</strong><br>第一次执行批量操作：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value1&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;delete&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;create&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test2&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;update&quot;</span> : &#123;<span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>&#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;doc&quot;</span> : &#123;<span class=\"hljs-string\">&quot;field2&quot;</span> : <span class=\"hljs-string\">&quot;value2&quot;</span>&#125; &#125;<br></code></pre></td></tr></table></figure>\n\n第二次执行批量操作：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value1&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;delete&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;create&quot;</span> : &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test2&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;field1&quot;</span> : <span class=\"hljs-string\">&quot;value3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;update&quot;</span> : &#123;<span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>&#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;doc&quot;</span> : &#123;<span class=\"hljs-string\">&quot;field2&quot;</span> : <span class=\"hljs-string\">&quot;value2&quot;</span>&#125; &#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-多文档获取-MGET\"><a href=\"#6-多文档获取-MGET\" class=\"headerlink\" title=\"6. 多文档获取 (MGET)\"></a>6. 多文档获取 (MGET)</h3><ul>\n<li><p><strong>获取多个文档</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>URI中指定索引</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /test/_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>使用 <code>_source</code> 参数指定返回的字段</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_mget<br>&#123;<br>  <span class=\"hljs-string\">&quot;docs&quot;</span> : [<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : <span class=\"hljs-literal\">false</span> &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : [<span class=\"hljs-string\">&quot;field3&quot;</span>, <span class=\"hljs-string\">&quot;field4&quot;</span>] &#125;,<br>    &#123; <span class=\"hljs-string\">&quot;_index&quot;</span> : <span class=\"hljs-string\">&quot;test&quot;</span>, <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span>, <span class=\"hljs-string\">&quot;_source&quot;</span> : &#123; <span class=\"hljs-string\">&quot;include&quot;</span>: [<span class=\"hljs-string\">&quot;user&quot;</span>], <span class=\"hljs-string\">&quot;exclude&quot;</span>: [<span class=\"hljs-string\">&quot;user.location&quot;</span>] &#125; &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-多查询操作-MSEARCH\"><a href=\"#7-多查询操作-MSEARCH\" class=\"headerlink\" title=\"7. 多查询操作 (MSEARCH)\"></a>7. 多查询操作 (MSEARCH)</h3><ul>\n<li><strong>执行多个查询</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_msearch<br>&#123;&#125;<br>&#123;<span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;&#125;&#125;,<span class=\"hljs-string\">&quot;size&quot;</span>:1&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span> : <span class=\"hljs-string\">&quot;kibana_sample_data_flights&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;&#125;&#125;,<span class=\"hljs-string\">&quot;size&quot;</span>:2&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"8-清除测试数据\"><a href=\"#8-清除测试数据\" class=\"headerlink\" title=\"8. 清除测试数据\"></a>8. 清除测试数据</h3><ul>\n<li><strong>删除索引（清除数据）</strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>DELETE <span class=\"hljs-built_in\">test</span><br>DELETE test2<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p>[3.4-倒排索引入门]</p>\n<p>Elasticsearch 的 <code>_analyze</code> API，它用于分析文本，查看在特定分析器下，文本是如何被分词和处理的。下面是每个请求的说明：</p>\n<h3 id=\"1-分析-“Mastering-Elasticsearch”\"><a href=\"#1-分析-“Mastering-Elasticsearch”\" class=\"headerlink\" title=\"1. 分析 “Mastering Elasticsearch”\"></a>1. <strong>分析 “Mastering Elasticsearch”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Mastering Elasticsearch&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：使用默认的 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Mastering Elasticsearch&quot;</code>。</li>\n<li><strong>预期效果</strong>：<code>standard</code> 分析器会将这段文本分割成单词，通常会根据空格和标点符号进行分词。</li>\n</ul>\n<h3 id=\"2-分析-“Elasticsearch-Server”\"><a href=\"#2-分析-“Elasticsearch-Server”\" class=\"headerlink\" title=\"2. 分析 “Elasticsearch Server”\"></a>2. <strong>分析 “Elasticsearch Server”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch Server&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：同样使用 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Elasticsearch Server&quot;</code>。</li>\n<li><strong>预期效果</strong>：分析器会分割文本为单词，可能会得到类似于 <code>[&quot;elasticsearch&quot;, &quot;server&quot;]</code> 的分词结果。</li>\n</ul>\n<h3 id=\"3-分析-“Elasticsearch-Essentials”\"><a href=\"#3-分析-“Elasticsearch-Essentials”\" class=\"headerlink\" title=\"3. 分析 “Elasticsearch Essentials”\"></a>3. <strong>分析 “Elasticsearch Essentials”</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch Essentials&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分析器</strong>：继续使用 <code>standard</code> 分析器。</li>\n<li><strong>文本</strong>：<code>&quot;Elasticsearch Essentials&quot;</code>。</li>\n<li><strong>预期效果</strong>：分析器会将文本分割成 <code>[&quot;elasticsearch&quot;, &quot;essentials&quot;]</code>。</li>\n</ul>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>每个请求的结果将显示由 <code>standard</code> 分析器生成的分词结果。通常，<code>standard</code> 分析器会去除大部分标点符号并将文本转换为小写。分词的具体结果如下：</p>\n<ul>\n<li><code>&quot;Mastering Elasticsearch&quot;</code> -&gt; <code>[&quot;mastering&quot;, &quot;elasticsearch&quot;]</code></li>\n<li><code>&quot;Elasticsearch Server&quot;</code> -&gt; <code>[&quot;elasticsearch&quot;, &quot;server&quot;]</code></li>\n<li><code>&quot;Elasticsearch Essentials&quot;</code> -&gt; <code>[&quot;elasticsearch&quot;, &quot;essentials&quot;]</code></li>\n</ul>\n<p>以下是使用不同的分析器（Analyzer）对文本进行分词分析的示例：</p>\n<h3 id=\"1-Standard-Analyzer\"><a href=\"#1-Standard-Analyzer\" class=\"headerlink\" title=\"1. Standard Analyzer\"></a>1. <strong>Standard Analyzer</strong></h3><p>标准分析器会根据空格、标点符号等进行分词，并将所有文本转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"2-Simple-Analyzer\"><a href=\"#2-Simple-Analyzer\" class=\"headerlink\" title=\"2. Simple Analyzer\"></a>2. <strong>Simple Analyzer</strong></h3><p>简单分析器按非字母字符切分，符号会被过滤，文本会转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;simple&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"3-Stop-Analyzer\"><a href=\"#3-Stop-Analyzer\" class=\"headerlink\" title=\"3. Stop Analyzer\"></a>3. <strong>Stop Analyzer</strong></h3><p>停用词分析器会将文本转换为小写，并过滤掉常见的停用词（如 “the”, “a”, “is”）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;stop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"4-Whitespace-Analyzer\"><a href=\"#4-Whitespace-Analyzer\" class=\"headerlink\" title=\"4. Whitespace Analyzer\"></a>4. <strong>Whitespace Analyzer</strong></h3><p>空格分析器会按空格切分文本，并且不会转换为小写。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;whitespace&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;Quick&quot;, &quot;brown-foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening.&quot;]</code></li>\n</ul>\n<h3 id=\"5-Keyword-Analyzer\"><a href=\"#5-Keyword-Analyzer\" class=\"headerlink\" title=\"5. Keyword Analyzer\"></a>5. <strong>Keyword Analyzer</strong></h3><p>关键字分析器不进行分词，直接返回原始文本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;]</code></li>\n</ul>\n<h3 id=\"6-Pattern-Analyzer\"><a href=\"#6-Pattern-Analyzer\" class=\"headerlink\" title=\"6. Pattern Analyzer\"></a>6. <strong>Pattern Analyzer</strong></h3><p>模式分析器使用正则表达式进行分词，默认使用 <code>\\W+</code>（非字母字符）作为分隔符。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;pattern&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;Quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;over&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;in&quot;, &quot;the&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"7-English-Analyzer\"><a href=\"#7-English-Analyzer\" class=\"headerlink\" title=\"7. English Analyzer\"></a>7. <strong>English Analyzer</strong></h3><p>英语分析器针对英语语言进行分词，去除停用词等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;2&quot;, &quot;running&quot;, &quot;quick&quot;, &quot;brown&quot;, &quot;foxes&quot;, &quot;leap&quot;, &quot;lazy&quot;, &quot;dogs&quot;, &quot;summer&quot;, &quot;evening&quot;]</code></li>\n</ul>\n<h3 id=\"8-ICU-Analyzer-for-Chinese-Text\"><a href=\"#8-ICU-Analyzer-for-Chinese-Text\" class=\"headerlink\" title=\"8. ICU Analyzer for Chinese Text\"></a>8. <strong>ICU Analyzer for Chinese Text</strong></h3><p>使用 <code>icu_analyzer</code> 来处理中文文本，适用于多语言环境中的分词。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;icu_analyzer&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;他说的确实在理&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;他说&quot;, &quot;的&quot;, &quot;确实&quot;, &quot;在理&quot;]</code></li>\n</ul>\n<h3 id=\"9-Standard-Analyzer-for-Chinese-Text\"><a href=\"#9-Standard-Analyzer-for-Chinese-Text\" class=\"headerlink\" title=\"9. Standard Analyzer for Chinese Text\"></a>9. <strong>Standard Analyzer for Chinese Text</strong></h3><p>使用标准分析器处理中文文本，通常处理中文时可能不会像中文专用分析器那样精确。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;他说的确实在理&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;他说&quot;, &quot;的&quot;, &quot;确实&quot;, &quot;在理&quot;]</code></li>\n</ul>\n<h3 id=\"10-ICU-Analyzer-for-Another-Chinese-Sentence\"><a href=\"#10-ICU-Analyzer-for-Another-Chinese-Sentence\" class=\"headerlink\" title=\"10. ICU Analyzer for Another Chinese Sentence\"></a>10. <strong>ICU Analyzer for Another Chinese Sentence</strong></h3><p>处理另一个中文句子 <code>&quot;这个苹果不大好吃&quot;</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;icu_analyzer&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;这个苹果不大好吃&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong>分词结果</strong>：<code>[&quot;这个&quot;, &quot;苹果&quot;, &quot;不大&quot;, &quot;好吃&quot;]</code></li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>每种分析器具有不同的分词行为：</p>\n<ul>\n<li><strong>Standard</strong>：根据空格和标点符号分词并小写化。</li>\n<li><strong>Simple</strong>：过滤非字母字符并小写化。</li>\n<li><strong>Stop</strong>：去除停用词并小写化。</li>\n<li><strong>Whitespace</strong>：仅按空格分词，不进行大小写转换。</li>\n<li><strong>Keyword</strong>：不进行分词，返回整个文本。</li>\n<li><strong>Pattern</strong>：使用正则表达式分词，默认 <code>\\W+</code> 分割。</li>\n<li><strong>English</strong>：为英语文本设计的分析器，去除停用词。</li>\n<li><strong>ICU Analyzer</strong>：适合多语言的分词，特别适用于中文等非拉丁字母语言。</li>\n</ul>\n<p>这些分析器可以根据不同的语言和需求来优化索引和搜索。</p>\n<p>以下是您提供的一些 Elasticsearch 查询示例，涵盖了基本查询、带有分析的查询、布尔查询、范围查询、通配符查询、模糊查询等操作。下面是每种查询的详细解释和用法：</p>\n<h3 id=\"1-基本查询\"><a href=\"#1-基本查询\" class=\"headerlink\" title=\"1. 基本查询\"></a>1. <strong>基本查询</strong></h3><p>查询 <code>movies</code> 索引中标题为 <code>2012</code> 的电影，并根据 <code>year</code> 字段降序排序，返回前 10 条结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012&amp;<span class=\"hljs-built_in\">df</span>=title&amp;<span class=\"hljs-built_in\">sort</span>=year:desc&amp;from=0&amp;size=10&amp;<span class=\"hljs-built_in\">timeout</span>=1s<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=2012</code>**：查询内容为 <code>2012</code>。</li>\n<li>**<code>df=title</code>**：指定查询字段为 <code>title</code>。</li>\n<li>**<code>sort=year:desc</code>**：按 <code>year</code> 字段降序排序。</li>\n<li>**<code>from=0&amp;size=10</code>**：分页，返回前 10 条数据。</li>\n<li>**<code>timeout=1s</code>**：查询超时限制为 1 秒。</li>\n</ul>\n<h3 id=\"2-带-Profile-的查询\"><a href=\"#2-带-Profile-的查询\" class=\"headerlink\" title=\"2. 带 Profile 的查询\"></a>2. <strong>带 Profile 的查询</strong></h3><p>启用 <code>profile</code> 可以帮助分析查询性能，查看查询的每个阶段的时间。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012&amp;<span class=\"hljs-built_in\">df</span>=title<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>&quot;profile&quot;: &quot;true&quot;</code>**：启用查询性能分析。</li>\n</ul>\n<h3 id=\"3-泛查询，对所有字段进行查询\"><a href=\"#3-泛查询，对所有字段进行查询\" class=\"headerlink\" title=\"3. 泛查询，对所有字段进行查询\"></a>3. <strong>泛查询，对所有字段进行查询</strong></h3><p>使用 <code>_all</code> 字段进行泛查询，查询所有字段。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=2012<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=2012</code>**：查询所有字段中包含 <code>2012</code> 的数据。</li>\n</ul>\n<h3 id=\"4-指定字段查询\"><a href=\"#4-指定字段查询\" class=\"headerlink\" title=\"4. 指定字段查询\"></a>4. <strong>指定字段查询</strong></h3><p>查询 <code>title</code> 字段中包含 <code>2012</code> 的记录，并按照 <code>year</code> 字段降序排序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:2012&amp;<span class=\"hljs-built_in\">sort</span>=year:desc&amp;from=0&amp;size=10&amp;<span class=\"hljs-built_in\">timeout</span>=1s<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>q=title:2012</code>**：指定查询字段为 <code>title</code>，查询内容为 <code>2012</code>。</li>\n</ul>\n<h3 id=\"5-查找美丽心灵\"><a href=\"#5-查找美丽心灵\" class=\"headerlink\" title=\"5. 查找美丽心灵\"></a>5. <strong>查找美丽心灵</strong></h3><p>查询 <code>title</code> 字段包含 <code>&quot;Beautiful Mind&quot;</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:Beautiful Mind<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-泛查询\"><a href=\"#6-泛查询\" class=\"headerlink\" title=\"6. 泛查询\"></a>6. <strong>泛查询</strong></h3><p>查询 <code>title</code> 字段包含 <code>2012</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:2012<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"7-Phrase-查询（短语查询）\"><a href=\"#7-Phrase-查询（短语查询）\" class=\"headerlink\" title=\"7. Phrase 查询（短语查询）\"></a>7. <strong>Phrase 查询（短语查询）</strong></h3><p>查询 <code>title</code> 字段精确匹配 <code>&quot;Beautiful Mind&quot;</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:<span class=\"hljs-string\">&quot;Beautiful Mind&quot;</span><br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>使用引号表示精确短语匹配，要求字段内容必须完全匹配短语 <code>&quot;Beautiful Mind&quot;</code>。</li>\n</ul>\n<h3 id=\"8-分组查询（使用括号）\"><a href=\"#8-分组查询（使用括号）\" class=\"headerlink\" title=\"8. 分组查询（使用括号）\"></a>8. <strong>分组查询（使用括号）</strong></h3><p>查询 <code>title</code> 字段中包含 <code>Beautiful Mind</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>使用括号可以进行分组查询，类似逻辑上的括号优先级。</li>\n</ul>\n<h3 id=\"9-布尔操作符查询\"><a href=\"#9-布尔操作符查询\" class=\"headerlink\" title=\"9. 布尔操作符查询\"></a>9. <strong>布尔操作符查询</strong></h3><ul>\n<li><strong>AND 查询：</strong><br>查询 <code>title</code> 字段同时包含 <code>Beautiful</code> 和 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful AND Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>NOT 查询：</strong><br>查询 <code>title</code> 字段包含 <code>Beautiful</code> 但不包含 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful NOT Mind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>OR 查询：</strong><br>查询 <code>title</code> 字段包含 <code>Beautiful</code> 或 <code>Mind</code> 的记录：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:(Beautiful %2BMind)<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"10-范围查询\"><a href=\"#10-范围查询\" class=\"headerlink\" title=\"10. 范围查询\"></a>10. <strong>范围查询</strong></h3><p>查询 <code>title</code> 字段包含 <code>beautiful</code> 且 <code>year</code> 在 2002 到 2018 年之间的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>year:[2002 TO 2018]</code>**：指定 <code>year</code> 字段的范围查询。</li>\n</ul>\n<h3 id=\"11-通配符查询\"><a href=\"#11-通配符查询\" class=\"headerlink\" title=\"11. 通配符查询\"></a>11. <strong>通配符查询</strong></h3><p>查询 <code>title</code> 字段以 <code>b</code> 开头的所有记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:b*<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>b*</code>**：使用通配符查询以 <code>b</code> 开头的字符串。</li>\n</ul>\n<h3 id=\"12-模糊查询-近似度匹配\"><a href=\"#12-模糊查询-近似度匹配\" class=\"headerlink\" title=\"12. 模糊查询 &amp; 近似度匹配\"></a>12. <strong>模糊查询 &amp; 近似度匹配</strong></h3><ul>\n<li><strong>模糊匹配</strong>：查询 <code>title</code> 字段中的词语 <code>beautifl</code>，允许有 1 个字符的错误：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:beautifl~1<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><strong>近似度匹配</strong>：查询 <code>title</code> 字段中的短语 <code>&quot;Lord Rings&quot;</code>，允许 2 个字符的误差：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search?q=title:<span class=\"hljs-string\">&quot;Lord Rings&quot;</span>~2<br>&#123;<br>\t<span class=\"hljs-string\">&quot;profile&quot;</span>:<span class=\"hljs-string\">&quot;true&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了如何使用 Elasticsearch 提供的强大查询能力来根据不同的需求筛选和搜索数据。常见的查询类型包括：</p>\n<ul>\n<li><strong>基本查询</strong>：用于查找单一词汇。</li>\n<li><strong>布尔查询</strong>：组合多个查询条件。</li>\n<li><strong>范围查询</strong>：查找特定范围内的记录。</li>\n<li><strong>通配符查询</strong>：模糊匹配。</li>\n<li><strong>短语查询</strong>：精确匹配整个短语。</li>\n</ul>\n<p>同时，<code>profile</code> 参数可以帮助分析查询性能，优化查询响应。</p>\n<p>3.8-RequestBody与QueryDSL简介</p>\n<p>以下是您提供的 Elasticsearch 查询操作，包括分页、日期排序、源过滤、脚本字段、以及不同的查询类型（如 <code>match</code>、<code>match_phrase</code>）。这些操作展示了如何在 Elasticsearch 中进行更精细的查询和数据处理。</p>\n<h3 id=\"1-忽略不存在的索引（ignore-unavailable-true）\"><a href=\"#1-忽略不存在的索引（ignore-unavailable-true）\" class=\"headerlink\" title=\"1. 忽略不存在的索引（ignore_unavailable=true）\"></a>1. <strong>忽略不存在的索引（<code>ignore_unavailable=true</code>）</strong></h3><p>在查询时，如果访问的索引不存在，使用 <code>ignore_unavailable=true</code> 可以避免报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /movies,404_idx/_search?ignore_unavailable=<span class=\"hljs-literal\">true</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>ignore_unavailable=true</code>**：在访问不存在的索引时，忽略错误。</li>\n</ul>\n<h3 id=\"2-分页查询\"><a href=\"#2-分页查询\" class=\"headerlink\" title=\"2. 分页查询\"></a>2. <strong>分页查询</strong></h3><p>查询 <code>kibana_sample_data_ecommerce</code> 索引并分页返回数据（从第 10 条开始，返回 20 条记录）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;from&quot;</span>: 10,<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 20,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong><code>from=10</code></strong> 和 **<code>size=20</code>**：分页，跳过前 10 条，返回接下来的 20 条。</li>\n</ul>\n<h3 id=\"3-日期排序\"><a href=\"#3-日期排序\" class=\"headerlink\" title=\"3. 日期排序\"></a>3. <strong>日期排序</strong></h3><p>按 <code>order_date</code> 字段降序排序：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [&#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>sort</code>**：按照 <code>order_date</code> 字段降序排序。</li>\n</ul>\n<h3 id=\"4-源过滤\"><a href=\"#4-源过滤\" class=\"headerlink\" title=\"4. 源过滤\"></a>4. <strong>源过滤</strong></h3><p>只返回文档中的 <code>order_date</code> 字段，不返回其他字段：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;order_date&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>_source</code>**：指定只返回 <code>order_date</code> 字段的数据。</li>\n</ul>\n<h3 id=\"5-脚本字段\"><a href=\"#5-脚本字段\" class=\"headerlink\" title=\"5. 脚本字段\"></a>5. <strong>脚本字段</strong></h3><p>使用脚本字段计算新的字段（例如，拼接 <code>order_date</code> 和 <code>&quot;hello&quot;</code>）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;script_fields&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;new_field&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;lang&quot;</span>: <span class=\"hljs-string\">&quot;painless&quot;</span>,<br>        <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;order_date&#x27;].value+&#x27;hello&#x27;&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>script_fields</code>**：使用 <code>painless</code> 脚本创建新的字段 <code>new_field</code>，将 <code>order_date</code> 字段与字符串 <code>&quot;hello&quot;</code> 拼接。</li>\n</ul>\n<h3 id=\"6-match-查询\"><a href=\"#6-match-查询\" class=\"headerlink\" title=\"6. match 查询\"></a>6. <strong><code>match</code> 查询</strong></h3><p>查询 <code>movies</code> 索引中 <code>title</code> 字段包含 <code>&quot;last christmas&quot;</code> 的记录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;last christmas&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>match</code>**：进行标准的全文匹配查询。</li>\n</ul>\n<h3 id=\"7-match-查询并使用-AND-操作符\"><a href=\"#7-match-查询并使用-AND-操作符\" class=\"headerlink\" title=\"7. match 查询并使用 AND 操作符\"></a>7. <strong><code>match</code> 查询并使用 AND 操作符</strong></h3><p>查询 <code>title</code> 包含 <code>&quot;last christmas&quot;</code> 且两个词都必须出现的记录（使用 AND 操作符）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;last christmas&quot;</span>,<br>        <span class=\"hljs-string\">&quot;operator&quot;</span>: <span class=\"hljs-string\">&quot;and&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>operator: &quot;and&quot;</code>**：两个词必须同时出现在字段中。</li>\n</ul>\n<h3 id=\"8-match-phrase-查询（短语匹配）\"><a href=\"#8-match-phrase-查询（短语匹配）\" class=\"headerlink\" title=\"8. match_phrase 查询（短语匹配）\"></a>8. <strong><code>match_phrase</code> 查询（短语匹配）</strong></h3><p>查询 <code>title</code> 字段精确匹配 <code>&quot;one love&quot;</code> 作为一个短语：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;one love&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>match_phrase</code>**：精确匹配整个短语，必须按照指定的顺序。</li>\n</ul>\n<h3 id=\"9-match-phrase-查询并使用-slop\"><a href=\"#9-match-phrase-查询并使用-slop\" class=\"headerlink\" title=\"9. match_phrase 查询并使用 slop\"></a>9. <strong><code>match_phrase</code> 查询并使用 <code>slop</code></strong></h3><p>查询 <code>title</code> 字段中的短语 <code>&quot;one love&quot;</code>，并允许 1 个词语的偏移（即词语可以有一定的顺序变化）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;one love&quot;</span>,<br>        <span class=\"hljs-string\">&quot;slop&quot;</span>: 1<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>slop: 1</code>**：允许最多 1 个词语的顺序偏移（例如，<code>love one</code> 也可以匹配）。</li>\n</ul>\n<h3 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了 Elasticsearch 中常用的查询类型：</p>\n<ul>\n<li><strong>分页查询</strong>：使用 <code>from</code> 和 <code>size</code> 来实现分页。</li>\n<li><strong>日期排序</strong>：使用 <code>sort</code> 来对结果进行排序。</li>\n<li><strong>源过滤</strong>：通过 <code>_source</code> 限制返回的字段。</li>\n<li><strong>脚本字段</strong>：使用 <code>painless</code> 脚本来计算新字段。</li>\n<li><strong>布尔操作符</strong>：通过 <code>operator</code> 来定义 <code>match</code> 查询的逻辑。</li>\n<li><strong>短语匹配和偏移</strong>：通过 <code>match_phrase</code> 和 <code>slop</code> 来进行更灵活的查询。</li>\n</ul>\n<p>这些查询可以帮助你在 Elasticsearch 中实现复杂的搜索需求。</p>\n<p>[3.9-QueryString&amp;SimpleQueryString查询]</p>\n<p>以下是您提供的 Elasticsearch 查询操作，涉及到 <code>query_string</code> 和 <code>simple_query_string</code> 查询的使用，以及如何通过不同的字段和操作符执行复杂查询。这里的查询包括布尔操作符、字段匹配、以及指定默认操作符等。</p>\n<h3 id=\"1-向索引添加文档\"><a href=\"#1-向索引添加文档\" class=\"headerlink\" title=\"1. 向索引添加文档\"></a>1. <strong>向索引添加文档</strong></h3><p>首先，向 <code>users</code> 索引添加两个用户文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /users/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;about&quot;</span>: <span class=\"hljs-string\">&quot;java, golang, node, swift, elasticsearch&quot;</span><br>&#125;<br><br>PUT /users/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;Li Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;about&quot;</span>: <span class=\"hljs-string\">&quot;Hadoop&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-query-string-查询：查询名称中包含-“Ruan”-和-“Yiming”-的文档\"><a href=\"#2-query-string-查询：查询名称中包含-“Ruan”-和-“Yiming”-的文档\" class=\"headerlink\" title=\"2. query_string 查询：查询名称中包含 “Ruan” 和 “Yiming” 的文档\"></a>2. <strong><code>query_string</code> 查询：查询名称中包含 “Ruan” 和 “Yiming” 的文档</strong></h3><p>使用 <code>query_string</code> 查询，指定默认字段为 <code>name</code>，查询条件为 <code>&quot;Ruan AND Yiming&quot;</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;default_field&quot;</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan AND Yiming&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>query_string</code>**：用于执行复杂的查询，可以使用逻辑操作符（如 AND、OR）。</li>\n</ul>\n<h3 id=\"3-query-string-查询：多个字段和复杂查询\"><a href=\"#3-query-string-查询：多个字段和复杂查询\" class=\"headerlink\" title=\"3. query_string 查询：多个字段和复杂查询\"></a>3. <strong><code>query_string</code> 查询：多个字段和复杂查询</strong></h3><p>查询名称或简介字段包含 <code>&quot;Ruan AND Yiming&quot;</code> 或 <code>&quot;Java AND Elasticsearch&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;about&quot;</span>],<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;(Ruan AND Yiming) OR (Java AND Elasticsearch)&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>fields</code>**：可以指定多个字段进行查询。</li>\n<li>**<code>query</code>**：包含布尔操作符（如 AND、OR）。</li>\n</ul>\n<h3 id=\"4-simple-query-string-查询（默认操作符为-OR）\"><a href=\"#4-simple-query-string-查询（默认操作符为-OR）\" class=\"headerlink\" title=\"4. simple_query_string 查询（默认操作符为 OR）\"></a>4. <strong><code>simple_query_string</code> 查询（默认操作符为 OR）</strong></h3><p>执行一个简单查询，默认操作符为 <code>OR</code>，查询 <code>name</code> 字段中包含 <code>&quot;Ruan&quot;</code> 或 <code>&quot;Yiming&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan AND Yiming&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>simple_query_string</code>**：适用于较简单的查询，避免了复杂的查询语法。</li>\n</ul>\n<h3 id=\"5-simple-query-string-查询（默认操作符为-AND）\"><a href=\"#5-simple-query-string-查询（默认操作符为-AND）\" class=\"headerlink\" title=\"5. simple_query_string 查询（默认操作符为 AND）\"></a>5. <strong><code>simple_query_string</code> 查询（默认操作符为 AND）</strong></h3><p>查询 <code>name</code> 字段中包含 <code>&quot;Ruan&quot;</code> 且 <code>&quot;Yiming&quot;</code> 的文档，使用 <code>AND</code> 作为默认操作符：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;name&quot;</span>],<br>      <span class=\"hljs-string\">&quot;default_operator&quot;</span>: <span class=\"hljs-string\">&quot;AND&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>default_operator</code>**：设置默认操作符（<code>AND</code> 或 <code>OR</code>）。在此示例中，<code>AND</code> 用于要求 <code>&quot;Ruan&quot;</code> 和 <code>&quot;Yiming&quot;</code> 必须同时出现在 <code>name</code> 字段中。</li>\n</ul>\n<h3 id=\"6-query-string-查询：查询电影标题包含-“Beautiful”-和-“Mind”\"><a href=\"#6-query-string-查询：查询电影标题包含-“Beautiful”-和-“Mind”\" class=\"headerlink\" title=\"6. query_string 查询：查询电影标题包含 “Beautiful” 和 “Mind”\"></a>6. <strong><code>query_string</code> 查询：查询电影标题包含 “Beautiful” 和 “Mind”</strong></h3><p>执行 <code>query_string</code> 查询，查询电影标题中包含 <code>&quot;Beautiful&quot;</code> 和 <code>&quot;Mind&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;default_field&quot;</span>: <span class=\"hljs-string\">&quot;title&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Beautiful AND Mind&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>query_string</code>**：执行复杂查询，可以使用布尔操作符（如 <code>AND</code>）。</li>\n</ul>\n<h3 id=\"7-query-string-查询：多个字段查询\"><a href=\"#7-query-string-查询：多个字段查询\" class=\"headerlink\" title=\"7. query_string 查询：多个字段查询\"></a>7. <strong><code>query_string</code> 查询：多个字段查询</strong></h3><p>查询电影的 <code>title</code> 或 <code>year</code> 字段包含 <code>&quot;2012&quot;</code> 的文档：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;year&quot;</span>],<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;2012&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>**<code>fields</code>**：指定多个字段进行查询，这里同时查询 <code>title</code> 和 <code>year</code> 字段。</li>\n</ul>\n<h3 id=\"8-simple-query-string-查询：使用-进行短语匹配\"><a href=\"#8-simple-query-string-查询：使用-进行短语匹配\" class=\"headerlink\" title=\"8. simple_query_string 查询：使用 + 进行短语匹配\"></a>8. <strong><code>simple_query_string</code> 查询：使用 <code>+</code> 进行短语匹配</strong></h3><p>查询电影标题中包含 <code>&quot;Beautiful&quot;</code> 和 <code>&quot;mind&quot;</code> 的文档，使用 <code>+</code> 确保两个词都出现在查询中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;simple_query_string&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Beautiful +mind&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li><strong><code>+</code> 操作符</strong>：用于强制要求某个词出现在查询结果中。</li>\n</ul>\n<hr>\n<h3 id=\"总结-3\"><a href=\"#总结-3\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这些查询展示了如何在 Elasticsearch 中使用不同类型的查询：</p>\n<ul>\n<li><strong><code>query_string</code></strong> 查询：用于执行复杂的查询，可以包含多个字段、布尔操作符（AND、OR、NOT）以及通配符等。</li>\n<li><strong><code>simple_query_string</code></strong> 查询：比 <code>query_string</code> 更简单，适用于不需要复杂语法的查询，并且支持默认操作符的配置。</li>\n<li><strong>字段查询</strong>：可以针对多个字段同时查询，指定多个字段使用 <code>fields</code> 参数。</li>\n<li><strong>布尔操作符</strong>：如 <code>AND</code>、<code>OR</code>、<code>NOT</code>，控制查询的逻辑。</li>\n</ul>\n<p>这些查询方式非常适合处理复杂的检索需求。</p>\n<p>[3.10-DynamicMapping和常见字段类型]</p>\n<p>您的示例展示了如何在 Elasticsearch 中管理映射（Mapping）以及如何处理动态字段和映射更新。以下是总结和解释：</p>\n<h3 id=\"映射和字段定义\"><a href=\"#映射和字段定义\" class=\"headerlink\" title=\"映射和字段定义\"></a><strong>映射和字段定义</strong></h3><p>映射在 Elasticsearch 中类似于关系数据库中的表结构定义，主要用于：</p>\n<ul>\n<li><strong>定义字段的名称</strong>：指定文档中的字段名。</li>\n<li><strong>定义字段的类型</strong>：比如文本（<code>text</code>）、关键字（<code>keyword</code>）、日期（<code>date</code>）等。</li>\n<li><strong>定义倒排索引相关配置</strong>：比如是否需要索引字段，以及字段的 <code>Analyzer</code> 配置。</li>\n</ul>\n<h3 id=\"动态映射（Dynamic-Mapping）\"><a href=\"#动态映射（Dynamic-Mapping）\" class=\"headerlink\" title=\"动态映射（Dynamic Mapping）\"></a><strong>动态映射（Dynamic Mapping）</strong></h3><p>动态映射允许 Elasticsearch 根据新文档自动推断字段的类型。可以通过 <code>dynamic</code> 属性来配置动态行为：</p>\n<ul>\n<li>**<code>true</code>**（默认）：允许新字段自动被索引和映射。</li>\n<li>**<code>false</code>**：禁止自动创建新字段，但已存在字段可以继续使用。</li>\n<li>**<code>strict</code>**：禁止任何新的字段。如果文档包含未定义的字段，将导致错误。</li>\n</ul>\n<h3 id=\"操作演示\"><a href=\"#操作演示\" class=\"headerlink\" title=\"操作演示\"></a><strong>操作演示</strong></h3><ol>\n<li><p><strong>写入文档并查看映射</strong></p>\n<ul>\n<li>向 <code>mapping_test</code> 索引中添加一个文档，查看映射：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Chan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Jackie&quot;</span>,<br>  <span class=\"hljs-string\">&quot;loginDate&quot;</span>: <span class=\"hljs-string\">&quot;2018-07-24T10:29:48.103Z&quot;</span><br>&#125;<br><br>GET mapping_test/_mapping<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>动态映射：推断字段类型</strong></p>\n<ul>\n<li>新字段 <code>uid</code>, <code>isVip</code>, <code>age</code> 等被自动推断并加入映射：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;uid&quot;</span>: <span class=\"hljs-string\">&quot;123&quot;</span>,<br>  <span class=\"hljs-string\">&quot;isVip&quot;</span>: <span class=\"hljs-literal\">false</span>,<br>  <span class=\"hljs-string\">&quot;isAdmin&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;age&quot;</span>: 19,<br>  <span class=\"hljs-string\">&quot;height&quot;</span>: 180<br>&#125;<br><br>GET mapping_test/_mapping<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>新增字段（默认动态）</strong></p>\n<ul>\n<li>如果动态映射为 <code>true</code>（默认），可以动态添加新的字段：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;newField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>&#125;<br><br>POST dynamic_mapping_test/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;newField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>修改动态设置为 <code>false</code></strong></p>\n<ul>\n<li>修改 <code>dynamic</code> 设置为 <code>false</code>，禁止自动推断新字段：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-literal\">false</span><br>&#125;<br><br>PUT dynamic_mapping_test/_doc/10<br>&#123;<br>  <span class=\"hljs-string\">&quot;anotherField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>&#125;<br><br>POST dynamic_mapping_test/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;anotherField&quot;</span>: <span class=\"hljs-string\">&quot;someValue&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<p>在此示例中，<code>anotherField</code> 将不会被索引或搜索，因为动态映射已设置为 <code>false</code>。</p>\n</li>\n<li><p><strong>修改为 <code>strict</code> 模式</strong></p>\n<ul>\n<li>如果将 <code>dynamic</code> 设置为 <code>strict</code>，任何新的字段都会导致错误：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT dynamic_mapping_test/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-string\">&quot;strict&quot;</span><br>&#125;<br><br>PUT dynamic_mapping_test/_doc/12<br>&#123;<br>  <span class=\"hljs-string\">&quot;lastField&quot;</span>: <span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n此时，写入新字段 <code>lastField</code> 会导致错误，HTTP 返回 <code>400</code> 错误码。</li>\n</ul>\n</li>\n<li><p><strong>删除索引</strong></p>\n<ul>\n<li>删除索引：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE dynamic_mapping_test<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"总结-4\"><a href=\"#总结-4\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h3><ul>\n<li><strong>动态映射（Dynamic Mapping）</strong>：允许 Elasticsearch 自动推断并添加新的字段，方便快速处理未知数据。</li>\n<li><strong><code>dynamic</code> 配置</strong>：控制是否允许 Elasticsearch 自动映射新字段：<ul>\n<li><code>true</code>：默认允许动态字段；</li>\n<li><code>false</code>：禁止自动映射新字段；</li>\n<li><code>strict</code>：禁止所有未知字段，如果有未定义字段则会报错。</li>\n</ul>\n</li>\n<li><strong>更改映射</strong>：映射一旦建立后不能直接修改字段类型，要修改字段配置或添加新字段需要使用 <code>reindex</code> 操作。</li>\n</ul>\n<p>这些操作有助于管理索引和字段的生命周期，确保数据能够根据业务需求灵活适应。</p>\n<p>您的示例展示了 Elasticsearch 中显式设置映射（Mapping）的一些常见操作和参数。以下是各个设置项的详细介绍和使用案例。</p>\n<h3 id=\"1-index-false-设置\"><a href=\"#1-index-false-设置\" class=\"headerlink\" title=\"1. index: false 设置\"></a><strong>1. <code>index: false</code> 设置</strong></h3><p>通过设置字段的 <code>index: false</code>，可以阻止某些字段被索引。这样可以避免该字段参与倒排索引，也不会进行搜索。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;firstName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;lastName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;mobile&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\"># 禁止索引该字段</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;12345678&quot;</span><br>&#125;<br><br>POST /users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;12345678&quot;</span>  <span class=\"hljs-comment\"># 搜索时不会命中mobile字段</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在上面的示例中，<code>mobile</code> 字段被设置为 <code>index: false</code>，因此无法用于搜索查询。</p>\n<h3 id=\"2-null-value-设置\"><a href=\"#2-null-value-设置\" class=\"headerlink\" title=\"2. null_value 设置\"></a><strong>2. <code>null_value</code> 设置</strong></h3><p>通过设置 <code>null_value</code>，可以在文档中存储 <code>null</code> 值，并用指定的替代值替换 <code>null</code>。这对于查询时需要处理 <code>null</code> 数据特别有用。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;firstName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;lastName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;mobile&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>          <span class=\"hljs-string\">&quot;null_value&quot;</span>: <span class=\"hljs-string\">&quot;NULL&quot;</span>  <span class=\"hljs-comment\"># null值替代为&quot;NULL&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span>,<br>  <span class=\"hljs-string\">&quot;mobile&quot;</span>: null  <span class=\"hljs-comment\"># 实际值是null</span><br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan2&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming2&quot;</span>  <span class=\"hljs-comment\"># 没有mobile字段</span><br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;mobile&quot;</span>: <span class=\"hljs-string\">&quot;NULL&quot;</span>  <span class=\"hljs-comment\"># 搜索时会匹配到null值字段</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此设置可以确保查询时用 <code>NULL</code> 代替存储的 <code>null</code> 值。</p>\n<h3 id=\"3-copy-to-设置\"><a href=\"#3-copy-to-设置\" class=\"headerlink\" title=\"3. copy_to 设置\"></a><strong>3. <code>copy_to</code> 设置</strong></h3><p><code>copy_to</code> 可以将多个字段的内容复制到另一个字段，方便进行联合查询或索引。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">users</span><br>PUT <span class=\"hljs-built_in\">users</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;firstName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;fullName&quot;</span>  <span class=\"hljs-comment\"># 将firstName复制到fullName字段</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;lastName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;fullName&quot;</span>  <span class=\"hljs-comment\"># 将lastName复制到fullName字段</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;firstName&quot;</span>: <span class=\"hljs-string\">&quot;Ruan&quot;</span>,<br>  <span class=\"hljs-string\">&quot;lastName&quot;</span>: <span class=\"hljs-string\">&quot;Yiming&quot;</span><br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_search?q=fullName:(Ruan Yiming)<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;fullName&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Ruan Yiming&quot;</span>,<br>        <span class=\"hljs-string\">&quot;operator&quot;</span>: <span class=\"hljs-string\">&quot;and&quot;</span>  <span class=\"hljs-comment\"># 联合查询fullName字段</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这里，<code>firstName</code> 和 <code>lastName</code> 字段的内容会被复制到 <code>fullName</code> 字段，从而使得查询变得更加方便。</p>\n<h3 id=\"4-数组类型处理\"><a href=\"#4-数组类型处理\" class=\"headerlink\" title=\"4. 数组类型处理\"></a><strong>4. 数组类型处理</strong></h3><p>Elasticsearch 支持数组字段。数组中的每个元素会被视为一个单独的值，这对于多值字段非常有用。</p>\n<p><strong>示例</strong>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT <span class=\"hljs-built_in\">users</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;onebird&quot;</span>,<br>  <span class=\"hljs-string\">&quot;interests&quot;</span>: <span class=\"hljs-string\">&quot;reading&quot;</span>  <span class=\"hljs-comment\"># 字段为单一值</span><br>&#125;<br><br>PUT <span class=\"hljs-built_in\">users</span>/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;twobirds&quot;</span>,<br>  <span class=\"hljs-string\">&quot;interests&quot;</span>: [<span class=\"hljs-string\">&quot;reading&quot;</span>, <span class=\"hljs-string\">&quot;music&quot;</span>]  <span class=\"hljs-comment\"># 字段为数组</span><br>&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>GET <span class=\"hljs-built_in\">users</span>/_mapping<br></code></pre></td></tr></table></figure>\n<p>在此示例中，<code>interests</code> 字段既可以是单个值也可以是数组，Elasticsearch 会将每个数组元素视为独立的值进行索引。</p>\n<hr>\n<h3 id=\"总结常见的-Mapping-参数\"><a href=\"#总结常见的-Mapping-参数\" class=\"headerlink\" title=\"总结常见的 Mapping 参数\"></a><strong>总结常见的 Mapping 参数</strong></h3><ul>\n<li><strong><code>type</code></strong>: 字段的数据类型，如 <code>text</code>, <code>keyword</code>, <code>date</code> 等。</li>\n<li><strong><code>index</code></strong>: 控制是否索引该字段，<code>false</code> 表示不索引，默认为 <code>true</code>。</li>\n<li><strong><code>null_value</code></strong>: 控制 <code>null</code> 值的替代值。可以设置为任何替代值，如 <code>&quot;NULL&quot;</code>。</li>\n<li><strong><code>copy_to</code></strong>: 将多个字段的内容复制到一个目标字段中，便于联合查询。</li>\n<li><strong><code>dynamic</code></strong>: 控制动态映射，<code>true</code> 表示允许自动推断新字段，<code>false</code> 表示禁止新字段自动映射，<code>strict</code> 则表示严格模式下不允许任何新字段。</li>\n</ul>\n<p>通过这些映射设置，可以更好地控制数据如何存储和索引，以及如何在查询时处理和优化字段。</p>\n<p>您的示例展示了 Elasticsearch 中关于多字段特性以及自定义分析器（Analyzer）的配置。以下是对各个分析器和相关配置的详细解释。</p>\n<h3 id=\"1-自定义-Analyzer-和-Char-Filter\"><a href=\"#1-自定义-Analyzer-和-Char-Filter\" class=\"headerlink\" title=\"1. 自定义 Analyzer 和 Char Filter\"></a><strong>1. 自定义 Analyzer 和 Char Filter</strong></h3><p>Elasticsearch 提供了灵活的机制来配置分词器（Tokenizer）和字符过滤器（Char Filter）。这些配置用于在索引和搜索过程中控制文本的处理方式。</p>\n<h4 id=\"自定义-Tokenizer-和-Char-Filter-示例\"><a href=\"#自定义-Tokenizer-和-Char-Filter-示例\" class=\"headerlink\" title=\"自定义 Tokenizer 和 Char Filter 示例\"></a><strong>自定义 Tokenizer 和 Char Filter 示例</strong></h4><ul>\n<li><strong>Keyword Tokenizer</strong>: <code>keyword</code> tokenizer 将整个文本当作一个单独的 token 进行处理。</li>\n<li><strong>HTML Strip Char Filter</strong>: <code>html_strip</code> char filter 用于从文本中去除 HTML 标签。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,  <span class=\"hljs-comment\"># 使用关键词分词器</span><br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<span class=\"hljs-string\">&quot;html_strip&quot;</span>],  <span class=\"hljs-comment\"># 使用html_strip字符过滤器</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;&lt;b&gt;hello world&lt;/b&gt;&quot;</span>  <span class=\"hljs-comment\"># 输入带有HTML标签的文本</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出将会是：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;hello world&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n<p>此配置移除了文本中的 <code>&lt;b&gt;&lt;/b&gt;</code> HTML 标签，只保留了纯文本 “hello world”。</p>\n<h4 id=\"Path-Hierarchy-Tokenizer\"><a href=\"#Path-Hierarchy-Tokenizer\" class=\"headerlink\" title=\"Path Hierarchy Tokenizer\"></a><strong>Path Hierarchy Tokenizer</strong></h4><p><code>path_hierarchy</code> tokenizer 用于处理文件路径等层级结构的数据，将路径按分隔符（如 <code>/</code>）切割。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;path_hierarchy&quot;</span>,  <span class=\"hljs-comment\"># 使用路径层级分词器</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d/e&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出会将路径按 <code>/</code> 切分：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d/e&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">21</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/user/ymruan/a/b/c/d&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">16</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-Char-Filter-替换符号\"><a href=\"#2-Char-Filter-替换符号\" class=\"headerlink\" title=\"2. Char Filter 替换符号\"></a><strong>2. Char Filter 替换符号</strong></h3><p>字符过滤器可以用于替换文本中的特定符号或字符。例如，使用 <code>mapping</code> 类型的 <code>char_filter</code>，可以替换文本中的字符（如将 <code>-</code> 替换为 <code>_</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,  <span class=\"hljs-comment\"># 使用标准分词器</span><br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;mapping&quot;</span>,  <span class=\"hljs-comment\"># 使用字符映射过滤器</span><br>      <span class=\"hljs-string\">&quot;mappings&quot;</span>: [<span class=\"hljs-string\">&quot;- =&gt; _&quot;</span>]<br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;123-456, I-test! test-990 650-555-1234&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此配置将文本中的 <code>-</code> 替换为 <code>_</code>，输出将是：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;123_456&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-Char-Filter-替换表情符号\"><a href=\"#3-Char-Filter-替换表情符号\" class=\"headerlink\" title=\"3. Char Filter 替换表情符号\"></a><strong>3. Char Filter 替换表情符号</strong></h3><p>你还可以使用字符过滤器将表情符号替换为特定的文本（如将 <code>:)</code> 替换为 <code>happy</code>，<code>:(</code> 替换为 <code>sad</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;mapping&quot;</span>,<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span>: [<span class=\"hljs-string\">&quot;:) =&gt; happy&quot;</span>, <span class=\"hljs-string\">&quot;:( =&gt; sad&quot;</span>]<br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;I am felling :)&quot;</span>, <span class=\"hljs-string\">&quot;Feeling :( today&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;I&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;am&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;felling&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;happy&quot;</span><span class=\"hljs-punctuation\">,</span>  # 替换表情符号<span class=\"hljs-punctuation\">:</span>) 为 happy<br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">18</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-使用-Stop-和-Snowball-过滤器\"><a href=\"#4-使用-Stop-和-Snowball-过滤器\" class=\"headerlink\" title=\"4. 使用 Stop 和 Snowball 过滤器\"></a><strong>4. 使用 Stop 和 Snowball 过滤器</strong></h3><p>使用 <code>stop</code> 过滤器来删除常见的停用词，使用 <code>snowball</code> 过滤器进行词干提取（如将 “playing” 转换为 “play”）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;whitespace&quot;</span>,  <span class=\"hljs-comment\"># 使用空格分词器</span><br>  <span class=\"hljs-string\">&quot;filter&quot;</span>: [<span class=\"hljs-string\">&quot;stop&quot;</span>, <span class=\"hljs-string\">&quot;snowball&quot;</span>],  <span class=\"hljs-comment\"># 使用停用词和词干提取</span><br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;The girls in China are playing this game!&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>输出：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;girl&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">9</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;china&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">14</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">19</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    ...<br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-正则表达式替换\"><a href=\"#5-正则表达式替换\" class=\"headerlink\" title=\"5. 正则表达式替换\"></a><strong>5. 正则表达式替换</strong></h3><p>通过 <code>pattern_replace</code> 字符过滤器，您可以根据正则表达式来替换文本中的特定部分。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;tokenizer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;char_filter&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;pattern_replace&quot;</span>,<br>      <span class=\"hljs-string\">&quot;pattern&quot;</span>: <span class=\"hljs-string\">&quot;http://(.*)&quot;</span>,<br>      <span class=\"hljs-string\">&quot;replacement&quot;</span>: <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$1</span>&quot;</span><br>    &#125;<br>  ],<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;http://www.elastic.co&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>此配置将 <code>http://</code> 替换为一个空字符串，结果为：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;tokens&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;token&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;www.elastic.co&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;start_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;end_offset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;word&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;position&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a><strong>总结：</strong></h3><ul>\n<li><strong>Tokenizer</strong>: 负责将输入文本切割成词条（token）。如 <code>keyword</code>, <code>standard</code>, <code>path_hierarchy</code>。</li>\n<li><strong>Char Filter</strong>: 处理文本中的字符替换、去除特殊符号或HTML标签等，如 <code>html_strip</code>, <code>mapping</code>, <code>pattern_replace</code>。</li>\n<li><strong>Filter</strong>: 用于文本处理，如去除停用词（<code>stop</code>）或词干提取（<code>snowball</code>）。</li>\n</ul>\n<p>这些工具的组合允许您灵活地处理和分析文本数据，并针对特定的业务需求优化索引和搜索行为。</p>\n<p>在 Elasticsearch 中，<strong>Index Templates</strong> 和 <strong>Dynamic Templates</strong> 是两种强大的工具，用于控制如何定义和管理索引的映射和设置。以下是这两者的详细解释和示例。</p>\n<h3 id=\"1-Index-Templates-索引模板\"><a href=\"#1-Index-Templates-索引模板\" class=\"headerlink\" title=\"1. Index Templates (索引模板)\"></a><strong>1. Index Templates (索引模板)</strong></h3><p><strong>Index Templates</strong> 是一种配置模板，用于为匹配特定模式的索引自动配置设置、映射和其他配置。当创建一个新索引时，如果该索引匹配模板中的 <code>index_patterns</code> 配置，模板中的设置、映射和其他配置就会自动应用到新索引上。</p>\n<h4 id=\"创建默认模板\"><a href=\"#创建默认模板\" class=\"headerlink\" title=\"创建默认模板\"></a><strong>创建默认模板</strong></h4><p>下面是创建一个默认模板的示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _template/template_default<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span>: [<span class=\"hljs-string\">&quot;*&quot;</span>],  <span class=\"hljs-comment\"># 匹配所有索引</span><br>  <span class=\"hljs-string\">&quot;order&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;version&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 1<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这会为所有索引设置一个模板，其中包含分片数量为1、副本数量为1。</p>\n<h4 id=\"为特定模式创建模板\"><a href=\"#为特定模式创建模板\" class=\"headerlink\" title=\"为特定模式创建模板\"></a><strong>为特定模式创建模板</strong></h4><p>另一个例子是为 <code>test*</code> 开头的索引创建模板：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_template/template_test<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span>: [<span class=\"hljs-string\">&quot;test*&quot;</span>],  <span class=\"hljs-comment\"># 匹配所有以test开头的索引</span><br>  <span class=\"hljs-string\">&quot;order&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 2<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;date_detection&quot;</span>: <span class=\"hljs-literal\">false</span>,  <span class=\"hljs-comment\"># 禁止自动检测日期字段</span><br>    <span class=\"hljs-string\">&quot;numeric_detection&quot;</span>: <span class=\"hljs-literal\">true</span>  <span class=\"hljs-comment\"># 自动检测数字字段</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看模板\"><a href=\"#查看模板\" class=\"headerlink\" title=\"查看模板\"></a><strong>查看模板</strong></h4><p>你可以查看已定义的模板：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_template/template_default<br>GET /_template/temp*  <span class=\"hljs-comment\"># 查看所有模板</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"删除模板\"><a href=\"#删除模板\" class=\"headerlink\" title=\"删除模板\"></a><strong>删除模板</strong></h4><p>删除模板的命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /_template/template_default<br>DELETE /_template/template_test<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"2-Dynamic-Templates-动态模板\"><a href=\"#2-Dynamic-Templates-动态模板\" class=\"headerlink\" title=\"2. Dynamic Templates (动态模板)\"></a><strong>2. Dynamic Templates (动态模板)</strong></h3><p><strong>Dynamic Templates</strong> 用于在创建索引时自动匹配字段类型和名称，根据这些动态模板来生成字段的映射规则。可以根据字段的类型（例如字符串、数字）和字段名称（例如以某些字符开头的字段）来定义映射。</p>\n<h4 id=\"自动映射数字字符串和日期字符串\"><a href=\"#自动映射数字字符串和日期字符串\" class=\"headerlink\" title=\"自动映射数字字符串和日期字符串\"></a><strong>自动映射数字字符串和日期字符串</strong></h4><p>例如，数字字符串会被映射为 <code>text</code> 类型，日期字符串会被映射为日期类型：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT ttemplate/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;someNumber&quot;</span>: <span class=\"hljs-string\">&quot;1&quot;</span>,        <span class=\"hljs-comment\"># 字符串数字</span><br>  <span class=\"hljs-string\">&quot;someDate&quot;</span>: <span class=\"hljs-string\">&quot;2019/01/01&quot;</span>  <span class=\"hljs-comment\"># 字符串日期</span><br>&#125;<br>GET ttemplate/_mapping<br></code></pre></td></tr></table></figure>\n<p>在这个例子中，<code>someNumber</code> 会被映射成 <code>text</code> 类型，而 <code>someDate</code> 会被映射成 <code>date</code> 类型。</p>\n<h4 id=\"定义动态模板映射规则\"><a href=\"#定义动态模板映射规则\" class=\"headerlink\" title=\"定义动态模板映射规则\"></a><strong>定义动态模板映射规则</strong></h4><p>使用 <code>dynamic_templates</code> 可以根据字段类型和名称定义映射。例如，以下动态模板将以 <code>is*</code> 开头的字符串字段映射为 <code>boolean</code> 类型，其他字符串字段映射为 <code>keyword</code> 类型：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE my_index<br><br>PUT my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic_templates&quot;</span>: [<br>      &#123;<br>        <span class=\"hljs-string\">&quot;strings_as_boolean&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;match_mapping_type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,   <span class=\"hljs-comment\"># 匹配所有字符串类型</span><br>          <span class=\"hljs-string\">&quot;match&quot;</span>: <span class=\"hljs-string\">&quot;is*&quot;</span>,  <span class=\"hljs-comment\"># 字段名称以is开头</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;boolean&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;,<br>      &#123;<br>        <span class=\"hljs-string\">&quot;strings_as_keywords&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;match_mapping_type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,   <span class=\"hljs-comment\"># 匹配所有字符串类型</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个示例中，<code>isVIP</code> 字段会被映射为 <code>boolean</code> 类型，而其他字符串类型的字段则会被映射为 <code>keyword</code> 类型。</p>\n<h4 id=\"结合路径匹配\"><a href=\"#结合路径匹配\" class=\"headerlink\" title=\"结合路径匹配\"></a><strong>结合路径匹配</strong></h4><p>动态模板不仅可以基于字段名称，还可以基于字段的路径。例如，以下模板会将 <code>name.*</code> 路径下的所有字段映射为 <code>text</code> 类型，并将这些字段复制到 <code>full_name</code> 字段中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic_templates&quot;</span>: [<br>      &#123;<br>        <span class=\"hljs-string\">&quot;full_name&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;path_match&quot;</span>: <span class=\"hljs-string\">&quot;name.*&quot;</span>,  <span class=\"hljs-comment\"># 匹配name下的所有字段</span><br>          <span class=\"hljs-string\">&quot;path_unmatch&quot;</span>: <span class=\"hljs-string\">&quot;*.middle&quot;</span>,  <span class=\"hljs-comment\"># 排除middle字段</span><br>          <span class=\"hljs-string\">&quot;mapping&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>            <span class=\"hljs-string\">&quot;copy_to&quot;</span>: <span class=\"hljs-string\">&quot;full_name&quot;</span>  <span class=\"hljs-comment\"># 将值复制到full_name字段</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>然后，插入以下数据：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;first&quot;</span>: <span class=\"hljs-string\">&quot;John&quot;</span>,<br>    <span class=\"hljs-string\">&quot;middle&quot;</span>: <span class=\"hljs-string\">&quot;Winston&quot;</span>,<br>    <span class=\"hljs-string\">&quot;last&quot;</span>: <span class=\"hljs-string\">&quot;Lennon&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这个例子中，<code>first</code> 和 <code>last</code> 字段将被映射为 <code>text</code> 类型，并且它们的内容会被复制到 <code>full_name</code> 字段中。</p>\n<h4 id=\"搜索字段\"><a href=\"#搜索字段\" class=\"headerlink\" title=\"搜索字段\"></a><strong>搜索字段</strong></h4><p>可以通过 <code>full_name</code> 字段来搜索：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET my_index/_search?q=full_name:John<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"总结：-1\"><a href=\"#总结：-1\" class=\"headerlink\" title=\"总结：\"></a><strong>总结：</strong></h3><ul>\n<li><strong>Index Templates</strong> 是为匹配特定索引模式（<code>index_patterns</code>）的所有索引自动配置设置和映射的模板。</li>\n<li><strong>Dynamic Templates</strong> 用于根据字段类型和字段名称自动映射索引字段。你可以根据字段类型（如 <code>string</code>）或字段路径（如 <code>name.*</code>）来定义映射规则。</li>\n</ul>\n<p>这些配置使得索引的创建和管理更加灵活，可以根据实际数据自动推断和调整映射，从而提高了 Elasticsearch 的可用性和效率。</p>\n<p>Elasticsearch 提供了强大的 <strong>聚合</strong> 功能，用于对数据进行汇总和分析。聚合是 Elasticsearch 搜索的一个核心功能，允许你通过多种方式对数据进行分组、统计、求最大&#x2F;最小值、计算平均值等操作。以下是一些常见的聚合分析操作和示例：</p>\n<h3 id=\"1-基本的聚合分析：按目的地分桶统计\"><a href=\"#1-基本的聚合分析：按目的地分桶统计\" class=\"headerlink\" title=\"1. 基本的聚合分析：按目的地分桶统计\"></a><strong>1. 基本的聚合分析：按目的地分桶统计</strong></h3><p>在这个示例中，我们按航班的目的地（<code>DestCountry</code>）进行分桶统计，查看每个目的地的航班数量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,  <span class=\"hljs-comment\"># 不返回实际的文档数据，只返回聚合结果</span><br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span>  <span class=\"hljs-comment\"># 按目的地国家分桶</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个聚合查询中，<code>terms</code> 聚合用于对 <code>DestCountry</code> 字段的值进行分桶，返回每个目的地国家的航班数量。</p>\n<h3 id=\"2-增加更多统计：平均、最大、最小价格\"><a href=\"#2-增加更多统计：平均、最大、最小价格\" class=\"headerlink\" title=\"2. 增加更多统计：平均、最大、最小价格\"></a><strong>2. 增加更多统计：平均、最大、最小价格</strong></h3><p>你可以在分桶内部添加更多聚合来获取其他统计信息，如每个目的地的平均票价、最高票价和最低票价：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算平均票价</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;max_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算最高票价</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;min_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算最低票价</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个查询中，我们为每个目的地添加了三个聚合：<code>avg_price</code>、<code>max_price</code> 和 <code>min_price</code>，分别计算每个目的地的平均票价、最大票价和最小票价。</p>\n<h3 id=\"3-聚合价格与天气信息：统计与多重聚合\"><a href=\"#3-聚合价格与天气信息：统计与多重聚合\" class=\"headerlink\" title=\"3. 聚合价格与天气信息：统计与多重聚合\"></a><strong>3. 聚合价格与天气信息：统计与多重聚合</strong></h3><p>如果你还想结合天气信息（如 <code>DestWeather</code> 字段）与航班价格统计一起进行聚合，可以使用嵌套聚合：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_flights/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;flight_dest&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestCountry&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;stats_price&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span>  <span class=\"hljs-comment\"># 计算票价的多项统计信息</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;DestWeather&quot;</span>,  <span class=\"hljs-comment\"># 按天气类型分桶</span><br>            <span class=\"hljs-string\">&quot;size&quot;</span>: 5  <span class=\"hljs-comment\"># 只返回前5个天气类型</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>在这个示例中，我们不仅计算了每个目的地的票价统计信息（如平均票价、最大票价等），还将天气信息作为另一个 <code>terms</code> 聚合，显示每个目的地的天气类型，并限制返回的天气类型数量为 5 个。</p>\n<hr>\n<h3 id=\"常见的聚合类型：\"><a href=\"#常见的聚合类型：\" class=\"headerlink\" title=\"常见的聚合类型：\"></a><strong>常见的聚合类型：</strong></h3><ul>\n<li><strong><code>terms</code> 聚合</strong>：将文档按某个字段的值进行分桶，常用于统计词频或其他分类数据。</li>\n<li><strong><code>avg</code> 聚合</strong>：计算某个数值字段的平均值。</li>\n<li><strong><code>sum</code> 聚合</strong>：计算某个数值字段的总和。</li>\n<li><strong><code>min</code> 聚合</strong>：返回某个数值字段的最小值。</li>\n<li><strong><code>max</code> 聚合</strong>：返回某个数值字段的最大值。</li>\n<li><strong><code>stats</code> 聚合</strong>：返回字段的统计信息（包括：最小值、最大值、平均值、总和和文档数量）。</li>\n<li><strong><code>date_histogram</code> 聚合</strong>：按日期进行分桶，适用于时间序列数据。</li>\n<li><strong><code>histogram</code> 聚合</strong>：按数值区间进行分桶，常用于数值数据的统计。</li>\n</ul>\n<hr>\n<h3 id=\"相关阅读：\"><a href=\"#相关阅读：\" class=\"headerlink\" title=\"相关阅读：\"></a><strong>相关阅读：</strong></h3><ul>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/7.1/search-aggregations.html\">Elasticsearch 聚合文档</a> 详细介绍了各种聚合的使用方式和示例。</li>\n</ul>\n<p>聚合功能非常强大，能帮助你从海量数据中提取有价值的信息，适用于各种数据分析场景。</p>\n"},{"title":"在Docker容器中运行Elasticsearch,Kibana和Cerebro","date":"2025-02-27T02:42:36.000Z","_content":"\ndocker-compose.yml如下\n```shell\nversion: '2.2'\nservices:\n  cerebro:\n    image: lmenezes/cerebro:0.8.3\n    container_name: cerebro\n    ports:\n      - \"9000:9000\"\n    command:\n      - -Dhosts.0.host=http://elasticsearch:9200\n    networks:\n      - es7net\n  kibana:\n    image: docker.elastic.co/kibana/kibana:7.1.0\n    container_name: kibana7\n    environment:\n      - I18N_LOCALE=zh-CN\n      - XPACK_GRAPH_ENABLED=true\n      - TIMELION_ENABLED=true\n      - XPACK_MONITORING_COLLECTION_ENABLED=\"true\"\n    ports:\n      - \"5601:5601\"\n    networks:\n      - es7net\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0\n    container_name: es7_01\n    environment:\n      - cluster.name=geektime\n      - node.name=es7_01\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - discovery.seed_hosts=es7_01,es7_02\n      - cluster.initial_master_nodes=es7_01,es7_02\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - es7data1:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    networks:\n      - es7net\n  elasticsearch2:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0\n    container_name: es7_02\n    environment:\n      - cluster.name=geektime\n      - node.name=es7_02\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - discovery.seed_hosts=es7_01,es7_02\n      - cluster.initial_master_nodes=es7_01,es7_02\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - es7data2:/usr/share/elasticsearch/data\n    networks:\n      - es7net\n\nvolumes:\n  es7data1:\n    driver: local\n  es7data2:\n    driver: local\n\nnetworks:\n  es7net:\n    driver: bridge\n```\n这个 `docker-compose.yml` 文件用于配置并部署一个包含 **Elasticsearch**、**Kibana** 和 **Cerebro** 的集群环境。\n\n#### 1. **cerebro**\n- **image**: 使用 `lmenezes/cerebro:0.8.3` 这个镜像，Cerebro 是一个开源的 Elasticsearch 管理工具。\n- **container_name**: 将容器命名为 `cerebro`。\n- **ports**: 将主机的 9000 端口映射到容器内的 9000 端口，允许通过浏览器访问 Cerebro 界面。\n- **command**: 启动时设置参数，`-Dhosts.0.host=http://elasticsearch:9200` 指定 Cerebro 连接的 Elasticsearch 地址为 `elasticsearch:9200`。\n- **networks**: 配置 `cerebro` 服务连接到 `es7net` 网络。\n\n#### 2. **kibana**\n- **image**: 使用 `docker.elastic.co/kibana/kibana:7.1.0` 镜像，这是 Elasticsearch 官方的 Kibana 7.1.0 版本。\n- **container_name**: 容器命名为 `kibana7`。\n- **environment**: 设置了一些 Kibana 配置项：\n    - `I18N_LOCALE=zh-CN`：设置 Kibana 界面语言为中文。\n    - `XPACK_GRAPH_ENABLED=true`、`TIMELION_ENABLED=true`：启用一些高级功能。\n    - `XPACK_MONITORING_COLLECTION_ENABLED=\"true\"`：启用监控功能。\n- **ports**: 映射主机的 5601 端口到容器的 5601 端口，用于通过浏览器访问 Kibana 界面。\n- **networks**: `kibana` 服务连接到 `es7net` 网络。\n\n#### 3. **elasticsearch**\n- **image**: 使用 `docker.elastic.co/elasticsearch/elasticsearch:7.1.0` 镜像，这是 Elasticsearch 7.1.0 的官方版本。\n- **container_name**: 容器命名为 `es7_01`。\n- **environment**: 设置 Elasticsearch 的环境变量：\n    - `cluster.name=geektime`：集群名称为 `geektime`。\n    - `node.name=es7_01`：节点名称为 `es7_01`。\n    - `bootstrap.memory_lock=true`：启用内存锁定，防止虚拟内存交换。\n    - `ES_JAVA_OPTS=-Xms512m -Xmx512m`：设置 JVM 的初始内存和最大内存为 512MB。\n    - `discovery.seed_hosts=es7_01,es7_02`：指定集群中的其他节点用于发现集群成员。\n    - `cluster.initial_master_nodes=es7_01,es7_02`：设置初始的主节点，用于集群初始化。\n- **ulimits**: 配置容器的内存锁定，`soft` 和 `hard` 都设置为 -1，表示没有限制。\n- **volumes**: 使用 `es7data1` 持久化数据。\n- **ports**: 映射主机的 9200 端口到容器的 9200 端口，允许通过 HTTP 访问 Elasticsearch。\n- **networks**: `elasticsearch` 服务连接到 `es7net` 网络。\n\n#### 4. **elasticsearch2**\n- **image**: 使用相同的 `docker.elastic.co/elasticsearch/elasticsearch:7.1.0` 镜像。\n- **container_name**: 容器命名为 `es7_02`。\n- **environment**: 与 `elasticsearch` 配置类似，唯一的区别是 `node.name` 设置为 `es7_02`，这是另一个节点。\n- **ulimits**: 配置内存锁定，和 `es7_01` 节点一致。\n- **volumes**: 使用 `es7data2` 持久化数据。\n- **networks**: `elasticsearch2` 服务连接到 `es7net` 网络。\n\n### `volumes`\n- **es7data1** 和 **es7data2**：定义了两个持久化数据卷，分别用于 Elasticsearch 节点 `es7_01` 和 `es7_02` 的数据存储，使用 `local` 驱动。\n\n### `networks`\n- **es7net**: 定义了一个名为 `es7net` 的网络，所有的服务都将连接到这个网络上。网络使用 `bridge` 驱动，适用于 Docker 容器间的通信。\n\n### 总结\n这个 `docker-compose.yml` 文件定义了一个完整的 Elasticsearch 集群（包含两个节点），同时部署了 Kibana 和 Cerebro 来进行集群管理和可视化。通过将这些服务连接到一个共享的网络 `es7net`，它们能够相互通信。数据卷 `es7data1` 和 `es7data2` 保证了 Elasticsearch 的数据持久性，即使容器停止或重启，数据也不会丢失。","source":"_posts/elasticsearch/在Docker容器中运行Elasticsearch-Kibana和Cerebro.md","raw":"---\ntitle: 在Docker容器中运行Elasticsearch,Kibana和Cerebro\ndate: 2025-02-27 10:42:36\ncategories: elasticsearch\ntag: docker部署\n---\n\ndocker-compose.yml如下\n```shell\nversion: '2.2'\nservices:\n  cerebro:\n    image: lmenezes/cerebro:0.8.3\n    container_name: cerebro\n    ports:\n      - \"9000:9000\"\n    command:\n      - -Dhosts.0.host=http://elasticsearch:9200\n    networks:\n      - es7net\n  kibana:\n    image: docker.elastic.co/kibana/kibana:7.1.0\n    container_name: kibana7\n    environment:\n      - I18N_LOCALE=zh-CN\n      - XPACK_GRAPH_ENABLED=true\n      - TIMELION_ENABLED=true\n      - XPACK_MONITORING_COLLECTION_ENABLED=\"true\"\n    ports:\n      - \"5601:5601\"\n    networks:\n      - es7net\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0\n    container_name: es7_01\n    environment:\n      - cluster.name=geektime\n      - node.name=es7_01\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - discovery.seed_hosts=es7_01,es7_02\n      - cluster.initial_master_nodes=es7_01,es7_02\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - es7data1:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    networks:\n      - es7net\n  elasticsearch2:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0\n    container_name: es7_02\n    environment:\n      - cluster.name=geektime\n      - node.name=es7_02\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - discovery.seed_hosts=es7_01,es7_02\n      - cluster.initial_master_nodes=es7_01,es7_02\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - es7data2:/usr/share/elasticsearch/data\n    networks:\n      - es7net\n\nvolumes:\n  es7data1:\n    driver: local\n  es7data2:\n    driver: local\n\nnetworks:\n  es7net:\n    driver: bridge\n```\n这个 `docker-compose.yml` 文件用于配置并部署一个包含 **Elasticsearch**、**Kibana** 和 **Cerebro** 的集群环境。\n\n#### 1. **cerebro**\n- **image**: 使用 `lmenezes/cerebro:0.8.3` 这个镜像，Cerebro 是一个开源的 Elasticsearch 管理工具。\n- **container_name**: 将容器命名为 `cerebro`。\n- **ports**: 将主机的 9000 端口映射到容器内的 9000 端口，允许通过浏览器访问 Cerebro 界面。\n- **command**: 启动时设置参数，`-Dhosts.0.host=http://elasticsearch:9200` 指定 Cerebro 连接的 Elasticsearch 地址为 `elasticsearch:9200`。\n- **networks**: 配置 `cerebro` 服务连接到 `es7net` 网络。\n\n#### 2. **kibana**\n- **image**: 使用 `docker.elastic.co/kibana/kibana:7.1.0` 镜像，这是 Elasticsearch 官方的 Kibana 7.1.0 版本。\n- **container_name**: 容器命名为 `kibana7`。\n- **environment**: 设置了一些 Kibana 配置项：\n    - `I18N_LOCALE=zh-CN`：设置 Kibana 界面语言为中文。\n    - `XPACK_GRAPH_ENABLED=true`、`TIMELION_ENABLED=true`：启用一些高级功能。\n    - `XPACK_MONITORING_COLLECTION_ENABLED=\"true\"`：启用监控功能。\n- **ports**: 映射主机的 5601 端口到容器的 5601 端口，用于通过浏览器访问 Kibana 界面。\n- **networks**: `kibana` 服务连接到 `es7net` 网络。\n\n#### 3. **elasticsearch**\n- **image**: 使用 `docker.elastic.co/elasticsearch/elasticsearch:7.1.0` 镜像，这是 Elasticsearch 7.1.0 的官方版本。\n- **container_name**: 容器命名为 `es7_01`。\n- **environment**: 设置 Elasticsearch 的环境变量：\n    - `cluster.name=geektime`：集群名称为 `geektime`。\n    - `node.name=es7_01`：节点名称为 `es7_01`。\n    - `bootstrap.memory_lock=true`：启用内存锁定，防止虚拟内存交换。\n    - `ES_JAVA_OPTS=-Xms512m -Xmx512m`：设置 JVM 的初始内存和最大内存为 512MB。\n    - `discovery.seed_hosts=es7_01,es7_02`：指定集群中的其他节点用于发现集群成员。\n    - `cluster.initial_master_nodes=es7_01,es7_02`：设置初始的主节点，用于集群初始化。\n- **ulimits**: 配置容器的内存锁定，`soft` 和 `hard` 都设置为 -1，表示没有限制。\n- **volumes**: 使用 `es7data1` 持久化数据。\n- **ports**: 映射主机的 9200 端口到容器的 9200 端口，允许通过 HTTP 访问 Elasticsearch。\n- **networks**: `elasticsearch` 服务连接到 `es7net` 网络。\n\n#### 4. **elasticsearch2**\n- **image**: 使用相同的 `docker.elastic.co/elasticsearch/elasticsearch:7.1.0` 镜像。\n- **container_name**: 容器命名为 `es7_02`。\n- **environment**: 与 `elasticsearch` 配置类似，唯一的区别是 `node.name` 设置为 `es7_02`，这是另一个节点。\n- **ulimits**: 配置内存锁定，和 `es7_01` 节点一致。\n- **volumes**: 使用 `es7data2` 持久化数据。\n- **networks**: `elasticsearch2` 服务连接到 `es7net` 网络。\n\n### `volumes`\n- **es7data1** 和 **es7data2**：定义了两个持久化数据卷，分别用于 Elasticsearch 节点 `es7_01` 和 `es7_02` 的数据存储，使用 `local` 驱动。\n\n### `networks`\n- **es7net**: 定义了一个名为 `es7net` 的网络，所有的服务都将连接到这个网络上。网络使用 `bridge` 驱动，适用于 Docker 容器间的通信。\n\n### 总结\n这个 `docker-compose.yml` 文件定义了一个完整的 Elasticsearch 集群（包含两个节点），同时部署了 Kibana 和 Cerebro 来进行集群管理和可视化。通过将这些服务连接到一个共享的网络 `es7net`，它们能够相互通信。数据卷 `es7data1` 和 `es7data2` 保证了 Elasticsearch 的数据持久性，即使容器停止或重启，数据也不会丢失。","slug":"elasticsearch/在Docker容器中运行Elasticsearch-Kibana和Cerebro","published":1,"updated":"2025-02-27T05:58:21.489Z","comments":1,"layout":"post","photos":[],"_id":"cm7n27c2t000aigjd5hvzgp7j","content":"<p>docker-compose.yml如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">version: &#x27;2.2&#x27;<br>services:<br>  cerebro:<br>    image: lmenezes/cerebro:0.8.3<br>    container_name: cerebro<br>    ports:<br>      - &quot;9000:9000&quot;<br>    command:<br>      - -Dhosts.0.host=http://elasticsearch:9200<br>    networks:<br>      - es7net<br>  kibana:<br>    image: docker.elastic.co/kibana/kibana:7.1.0<br>    container_name: kibana7<br>    environment:<br>      - I18N_LOCALE=zh-CN<br>      - XPACK_GRAPH_ENABLED=true<br>      - TIMELION_ENABLED=true<br>      - XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;<br>    ports:<br>      - &quot;5601:5601&quot;<br>    networks:<br>      - es7net<br>  elasticsearch:<br>    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0<br>    container_name: es7_01<br>    environment:<br>      - cluster.name=geektime<br>      - node.name=es7_01<br>      - bootstrap.memory_lock=true<br>      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;<br>      - discovery.seed_hosts=es7_01,es7_02<br>      - cluster.initial_master_nodes=es7_01,es7_02<br>    ulimits:<br>      memlock:<br>        soft: -1<br>        hard: -1<br>    volumes:<br>      - es7data1:/usr/share/elasticsearch/data<br>    ports:<br>      - 9200:9200<br>    networks:<br>      - es7net<br>  elasticsearch2:<br>    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0<br>    container_name: es7_02<br>    environment:<br>      - cluster.name=geektime<br>      - node.name=es7_02<br>      - bootstrap.memory_lock=true<br>      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;<br>      - discovery.seed_hosts=es7_01,es7_02<br>      - cluster.initial_master_nodes=es7_01,es7_02<br>    ulimits:<br>      memlock:<br>        soft: -1<br>        hard: -1<br>    volumes:<br>      - es7data2:/usr/share/elasticsearch/data<br>    networks:<br>      - es7net<br><br>volumes:<br>  es7data1:<br>    driver: local<br>  es7data2:<br>    driver: local<br><br>networks:<br>  es7net:<br>    driver: bridge<br></code></pre></td></tr></table></figure>\n<p>这个 <code>docker-compose.yml</code> 文件用于配置并部署一个包含 <strong>Elasticsearch</strong>、<strong>Kibana</strong> 和 <strong>Cerebro</strong> 的集群环境。</p>\n<h4 id=\"1-cerebro\"><a href=\"#1-cerebro\" class=\"headerlink\" title=\"1. cerebro\"></a>1. <strong>cerebro</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>lmenezes/cerebro:0.8.3</code> 这个镜像，Cerebro 是一个开源的 Elasticsearch 管理工具。</li>\n<li><strong>container_name</strong>: 将容器命名为 <code>cerebro</code>。</li>\n<li><strong>ports</strong>: 将主机的 9000 端口映射到容器内的 9000 端口，允许通过浏览器访问 Cerebro 界面。</li>\n<li><strong>command</strong>: 启动时设置参数，<code>-Dhosts.0.host=http://elasticsearch:9200</code> 指定 Cerebro 连接的 Elasticsearch 地址为 <code>elasticsearch:9200</code>。</li>\n<li><strong>networks</strong>: 配置 <code>cerebro</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"2-kibana\"><a href=\"#2-kibana\" class=\"headerlink\" title=\"2. kibana\"></a>2. <strong>kibana</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>docker.elastic.co/kibana/kibana:7.1.0</code> 镜像，这是 Elasticsearch 官方的 Kibana 7.1.0 版本。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>kibana7</code>。</li>\n<li><strong>environment</strong>: 设置了一些 Kibana 配置项：<ul>\n<li><code>I18N_LOCALE=zh-CN</code>：设置 Kibana 界面语言为中文。</li>\n<li><code>XPACK_GRAPH_ENABLED=true</code>、<code>TIMELION_ENABLED=true</code>：启用一些高级功能。</li>\n<li><code>XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;</code>：启用监控功能。</li>\n</ul>\n</li>\n<li><strong>ports</strong>: 映射主机的 5601 端口到容器的 5601 端口，用于通过浏览器访问 Kibana 界面。</li>\n<li><strong>networks</strong>: <code>kibana</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"3-elasticsearch\"><a href=\"#3-elasticsearch\" class=\"headerlink\" title=\"3. elasticsearch\"></a>3. <strong>elasticsearch</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>docker.elastic.co/elasticsearch/elasticsearch:7.1.0</code> 镜像，这是 Elasticsearch 7.1.0 的官方版本。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>es7_01</code>。</li>\n<li><strong>environment</strong>: 设置 Elasticsearch 的环境变量：<ul>\n<li><code>cluster.name=geektime</code>：集群名称为 <code>geektime</code>。</li>\n<li><code>node.name=es7_01</code>：节点名称为 <code>es7_01</code>。</li>\n<li><code>bootstrap.memory_lock=true</code>：启用内存锁定，防止虚拟内存交换。</li>\n<li><code>ES_JAVA_OPTS=-Xms512m -Xmx512m</code>：设置 JVM 的初始内存和最大内存为 512MB。</li>\n<li><code>discovery.seed_hosts=es7_01,es7_02</code>：指定集群中的其他节点用于发现集群成员。</li>\n<li><code>cluster.initial_master_nodes=es7_01,es7_02</code>：设置初始的主节点，用于集群初始化。</li>\n</ul>\n</li>\n<li><strong>ulimits</strong>: 配置容器的内存锁定，<code>soft</code> 和 <code>hard</code> 都设置为 -1，表示没有限制。</li>\n<li><strong>volumes</strong>: 使用 <code>es7data1</code> 持久化数据。</li>\n<li><strong>ports</strong>: 映射主机的 9200 端口到容器的 9200 端口，允许通过 HTTP 访问 Elasticsearch。</li>\n<li><strong>networks</strong>: <code>elasticsearch</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"4-elasticsearch2\"><a href=\"#4-elasticsearch2\" class=\"headerlink\" title=\"4. elasticsearch2\"></a>4. <strong>elasticsearch2</strong></h4><ul>\n<li><strong>image</strong>: 使用相同的 <code>docker.elastic.co/elasticsearch/elasticsearch:7.1.0</code> 镜像。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>es7_02</code>。</li>\n<li><strong>environment</strong>: 与 <code>elasticsearch</code> 配置类似，唯一的区别是 <code>node.name</code> 设置为 <code>es7_02</code>，这是另一个节点。</li>\n<li><strong>ulimits</strong>: 配置内存锁定，和 <code>es7_01</code> 节点一致。</li>\n<li><strong>volumes</strong>: 使用 <code>es7data2</code> 持久化数据。</li>\n<li><strong>networks</strong>: <code>elasticsearch2</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h3 id=\"volumes\"><a href=\"#volumes\" class=\"headerlink\" title=\"volumes\"></a><code>volumes</code></h3><ul>\n<li><strong>es7data1</strong> 和 <strong>es7data2</strong>：定义了两个持久化数据卷，分别用于 Elasticsearch 节点 <code>es7_01</code> 和 <code>es7_02</code> 的数据存储，使用 <code>local</code> 驱动。</li>\n</ul>\n<h3 id=\"networks\"><a href=\"#networks\" class=\"headerlink\" title=\"networks\"></a><code>networks</code></h3><ul>\n<li><strong>es7net</strong>: 定义了一个名为 <code>es7net</code> 的网络，所有的服务都将连接到这个网络上。网络使用 <code>bridge</code> 驱动，适用于 Docker 容器间的通信。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这个 <code>docker-compose.yml</code> 文件定义了一个完整的 Elasticsearch 集群（包含两个节点），同时部署了 Kibana 和 Cerebro 来进行集群管理和可视化。通过将这些服务连接到一个共享的网络 <code>es7net</code>，它们能够相互通信。数据卷 <code>es7data1</code> 和 <code>es7data2</code> 保证了 Elasticsearch 的数据持久性，即使容器停止或重启，数据也不会丢失。</p>\n","excerpt":"","more":"<p>docker-compose.yml如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">version: &#x27;2.2&#x27;<br>services:<br>  cerebro:<br>    image: lmenezes/cerebro:0.8.3<br>    container_name: cerebro<br>    ports:<br>      - &quot;9000:9000&quot;<br>    command:<br>      - -Dhosts.0.host=http://elasticsearch:9200<br>    networks:<br>      - es7net<br>  kibana:<br>    image: docker.elastic.co/kibana/kibana:7.1.0<br>    container_name: kibana7<br>    environment:<br>      - I18N_LOCALE=zh-CN<br>      - XPACK_GRAPH_ENABLED=true<br>      - TIMELION_ENABLED=true<br>      - XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;<br>    ports:<br>      - &quot;5601:5601&quot;<br>    networks:<br>      - es7net<br>  elasticsearch:<br>    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0<br>    container_name: es7_01<br>    environment:<br>      - cluster.name=geektime<br>      - node.name=es7_01<br>      - bootstrap.memory_lock=true<br>      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;<br>      - discovery.seed_hosts=es7_01,es7_02<br>      - cluster.initial_master_nodes=es7_01,es7_02<br>    ulimits:<br>      memlock:<br>        soft: -1<br>        hard: -1<br>    volumes:<br>      - es7data1:/usr/share/elasticsearch/data<br>    ports:<br>      - 9200:9200<br>    networks:<br>      - es7net<br>  elasticsearch2:<br>    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0<br>    container_name: es7_02<br>    environment:<br>      - cluster.name=geektime<br>      - node.name=es7_02<br>      - bootstrap.memory_lock=true<br>      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;<br>      - discovery.seed_hosts=es7_01,es7_02<br>      - cluster.initial_master_nodes=es7_01,es7_02<br>    ulimits:<br>      memlock:<br>        soft: -1<br>        hard: -1<br>    volumes:<br>      - es7data2:/usr/share/elasticsearch/data<br>    networks:<br>      - es7net<br><br>volumes:<br>  es7data1:<br>    driver: local<br>  es7data2:<br>    driver: local<br><br>networks:<br>  es7net:<br>    driver: bridge<br></code></pre></td></tr></table></figure>\n<p>这个 <code>docker-compose.yml</code> 文件用于配置并部署一个包含 <strong>Elasticsearch</strong>、<strong>Kibana</strong> 和 <strong>Cerebro</strong> 的集群环境。</p>\n<h4 id=\"1-cerebro\"><a href=\"#1-cerebro\" class=\"headerlink\" title=\"1. cerebro\"></a>1. <strong>cerebro</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>lmenezes/cerebro:0.8.3</code> 这个镜像，Cerebro 是一个开源的 Elasticsearch 管理工具。</li>\n<li><strong>container_name</strong>: 将容器命名为 <code>cerebro</code>。</li>\n<li><strong>ports</strong>: 将主机的 9000 端口映射到容器内的 9000 端口，允许通过浏览器访问 Cerebro 界面。</li>\n<li><strong>command</strong>: 启动时设置参数，<code>-Dhosts.0.host=http://elasticsearch:9200</code> 指定 Cerebro 连接的 Elasticsearch 地址为 <code>elasticsearch:9200</code>。</li>\n<li><strong>networks</strong>: 配置 <code>cerebro</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"2-kibana\"><a href=\"#2-kibana\" class=\"headerlink\" title=\"2. kibana\"></a>2. <strong>kibana</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>docker.elastic.co/kibana/kibana:7.1.0</code> 镜像，这是 Elasticsearch 官方的 Kibana 7.1.0 版本。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>kibana7</code>。</li>\n<li><strong>environment</strong>: 设置了一些 Kibana 配置项：<ul>\n<li><code>I18N_LOCALE=zh-CN</code>：设置 Kibana 界面语言为中文。</li>\n<li><code>XPACK_GRAPH_ENABLED=true</code>、<code>TIMELION_ENABLED=true</code>：启用一些高级功能。</li>\n<li><code>XPACK_MONITORING_COLLECTION_ENABLED=&quot;true&quot;</code>：启用监控功能。</li>\n</ul>\n</li>\n<li><strong>ports</strong>: 映射主机的 5601 端口到容器的 5601 端口，用于通过浏览器访问 Kibana 界面。</li>\n<li><strong>networks</strong>: <code>kibana</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"3-elasticsearch\"><a href=\"#3-elasticsearch\" class=\"headerlink\" title=\"3. elasticsearch\"></a>3. <strong>elasticsearch</strong></h4><ul>\n<li><strong>image</strong>: 使用 <code>docker.elastic.co/elasticsearch/elasticsearch:7.1.0</code> 镜像，这是 Elasticsearch 7.1.0 的官方版本。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>es7_01</code>。</li>\n<li><strong>environment</strong>: 设置 Elasticsearch 的环境变量：<ul>\n<li><code>cluster.name=geektime</code>：集群名称为 <code>geektime</code>。</li>\n<li><code>node.name=es7_01</code>：节点名称为 <code>es7_01</code>。</li>\n<li><code>bootstrap.memory_lock=true</code>：启用内存锁定，防止虚拟内存交换。</li>\n<li><code>ES_JAVA_OPTS=-Xms512m -Xmx512m</code>：设置 JVM 的初始内存和最大内存为 512MB。</li>\n<li><code>discovery.seed_hosts=es7_01,es7_02</code>：指定集群中的其他节点用于发现集群成员。</li>\n<li><code>cluster.initial_master_nodes=es7_01,es7_02</code>：设置初始的主节点，用于集群初始化。</li>\n</ul>\n</li>\n<li><strong>ulimits</strong>: 配置容器的内存锁定，<code>soft</code> 和 <code>hard</code> 都设置为 -1，表示没有限制。</li>\n<li><strong>volumes</strong>: 使用 <code>es7data1</code> 持久化数据。</li>\n<li><strong>ports</strong>: 映射主机的 9200 端口到容器的 9200 端口，允许通过 HTTP 访问 Elasticsearch。</li>\n<li><strong>networks</strong>: <code>elasticsearch</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h4 id=\"4-elasticsearch2\"><a href=\"#4-elasticsearch2\" class=\"headerlink\" title=\"4. elasticsearch2\"></a>4. <strong>elasticsearch2</strong></h4><ul>\n<li><strong>image</strong>: 使用相同的 <code>docker.elastic.co/elasticsearch/elasticsearch:7.1.0</code> 镜像。</li>\n<li><strong>container_name</strong>: 容器命名为 <code>es7_02</code>。</li>\n<li><strong>environment</strong>: 与 <code>elasticsearch</code> 配置类似，唯一的区别是 <code>node.name</code> 设置为 <code>es7_02</code>，这是另一个节点。</li>\n<li><strong>ulimits</strong>: 配置内存锁定，和 <code>es7_01</code> 节点一致。</li>\n<li><strong>volumes</strong>: 使用 <code>es7data2</code> 持久化数据。</li>\n<li><strong>networks</strong>: <code>elasticsearch2</code> 服务连接到 <code>es7net</code> 网络。</li>\n</ul>\n<h3 id=\"volumes\"><a href=\"#volumes\" class=\"headerlink\" title=\"volumes\"></a><code>volumes</code></h3><ul>\n<li><strong>es7data1</strong> 和 <strong>es7data2</strong>：定义了两个持久化数据卷，分别用于 Elasticsearch 节点 <code>es7_01</code> 和 <code>es7_02</code> 的数据存储，使用 <code>local</code> 驱动。</li>\n</ul>\n<h3 id=\"networks\"><a href=\"#networks\" class=\"headerlink\" title=\"networks\"></a><code>networks</code></h3><ul>\n<li><strong>es7net</strong>: 定义了一个名为 <code>es7net</code> 的网络，所有的服务都将连接到这个网络上。网络使用 <code>bridge</code> 驱动，适用于 Docker 容器间的通信。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>这个 <code>docker-compose.yml</code> 文件定义了一个完整的 Elasticsearch 集群（包含两个节点），同时部署了 Kibana 和 Cerebro 来进行集群管理和可视化。通过将这些服务连接到一个共享的网络 <code>es7net</code>，它们能够相互通信。数据卷 <code>es7data1</code> 和 <code>es7data2</code> 保证了 Elasticsearch 的数据持久性，即使容器停止或重启，数据也不会丢失。</p>\n"},{"title":"logstach安装和导入数据","date":"2025-02-27T06:09:00.000Z","_content":"\n使用[logstash.conf](../../resource/logstash.conf)\n\n运行logstash\n```shell\nwget https://artifacts.elastic.co/downloads/logstash/logstash-oss-7.1.0.tar.gz\ntar -zxvf logstash-oss-7.1.0.tar.gz\ncd logstash-oss-7.1.0\nbin/logstash -f logstash.conf\n```\n","source":"_posts/elasticsearch/logstach安装和导入数据.md","raw":"---\ntitle: logstach安装和导入数据\ndate: 2025-02-27 14:09:00\ntags:\n---\n\n使用[logstash.conf](../../resource/logstash.conf)\n\n运行logstash\n```shell\nwget https://artifacts.elastic.co/downloads/logstash/logstash-oss-7.1.0.tar.gz\ntar -zxvf logstash-oss-7.1.0.tar.gz\ncd logstash-oss-7.1.0\nbin/logstash -f logstash.conf\n```\n","slug":"elasticsearch/logstach安装和导入数据","published":1,"updated":"2025-02-27T06:25:18.049Z","comments":1,"layout":"post","photos":[],"_id":"cm7n27c36000digjdenw4h8ao","content":"<p>使用<a href=\"../../resource/logstash.conf\">logstash.conf</a></p>\n<p>运行logstash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">wget https://artifacts.elastic.co/downloads/logstash/logstash-oss-7.1.0.tar.gz<br>tar -zxvf logstash-oss-7.1.0.tar.gz<br>cd logstash-oss-7.1.0<br>bin/logstash -f logstash.conf<br></code></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>使用<a href=\"../../resource/logstash.conf\">logstash.conf</a></p>\n<p>运行logstash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">wget https://artifacts.elastic.co/downloads/logstash/logstash-oss-7.1.0.tar.gz<br>tar -zxvf logstash-oss-7.1.0.tar.gz<br>cd logstash-oss-7.1.0<br>bin/logstash -f logstash.conf<br></code></pre></td></tr></table></figure>\n"},{"_content":"## 课程demo\n```\n{\n\"template\": \"logs-*\",\n\"settings\": {\n\"index.indexing.slowlog.threshold.index.debug\": \"2s\",\n\"index.indexing.slowlog.threshold.index.info\": \"5s\",\n\"index.indexing.slowlog.threshold.index.trace\": \"500ms\",\n\"index.indexing.slowlog.threshold.index.warn\": \"10s\",\n\"index.merge.policy.max_merged_segment\": \"2gb\",\n\"index.merge.policy.segments_per_tier\": \"24\",\n\"index.number_of_replicas\": \"1\",\n\"index.number_of_shards\": \"12\",\n\"index.optimize_auto_generated_id\": \"true\",\n\"index.refresh_interval\": \"600s\",\n\"index.routing.allocation.total_shards_per_node\": \"-1\",\n\"index.search.slowlog.threshold.fetch.debug\": \"500ms\",\n\"index.search.slowlog.threshold.fetch.info\": \"800ms\",\n\"index.search.slowlog.threshold.fetch.trace\": \"200ms\",\n\"index.search.slowlog.threshold.fetch.warn\": \"1s\",\n\"index.search.slowlog.threshold.query.debug\": \"2s\",\n\"index.search.slowlog.threshold.query.info\": \"5s\",\n\"index.search.slowlog.threshold.query.trace\": \"500ms\",\n\"index.search.slowlog.threshold.query.warn\": \"10s\",\n\"index.translog.durability\": \"async\",\n\"index.translog.flush_threshold_size\": \"5000mb\",\n\"index.translog.sync_interval\": \"120s\",\n\"index.unassigned.node_left.delayed_timeout\": \"7200m\"\n},\n\"mappings\": {\n\"_default_\": {\n\"_all\": {\n\"store\": \"false\"\n}\n},\n\"typename\": {\n\"dynamic\": false,\n\"properties\": {\n\"full_name\": {\n\"type\": \"text\"\n}\n}\n}\n}\n}\n```\n","source":"_posts/elasticsearch/集群写性能优化.md","raw":"## 课程demo\n```\n{\n\"template\": \"logs-*\",\n\"settings\": {\n\"index.indexing.slowlog.threshold.index.debug\": \"2s\",\n\"index.indexing.slowlog.threshold.index.info\": \"5s\",\n\"index.indexing.slowlog.threshold.index.trace\": \"500ms\",\n\"index.indexing.slowlog.threshold.index.warn\": \"10s\",\n\"index.merge.policy.max_merged_segment\": \"2gb\",\n\"index.merge.policy.segments_per_tier\": \"24\",\n\"index.number_of_replicas\": \"1\",\n\"index.number_of_shards\": \"12\",\n\"index.optimize_auto_generated_id\": \"true\",\n\"index.refresh_interval\": \"600s\",\n\"index.routing.allocation.total_shards_per_node\": \"-1\",\n\"index.search.slowlog.threshold.fetch.debug\": \"500ms\",\n\"index.search.slowlog.threshold.fetch.info\": \"800ms\",\n\"index.search.slowlog.threshold.fetch.trace\": \"200ms\",\n\"index.search.slowlog.threshold.fetch.warn\": \"1s\",\n\"index.search.slowlog.threshold.query.debug\": \"2s\",\n\"index.search.slowlog.threshold.query.info\": \"5s\",\n\"index.search.slowlog.threshold.query.trace\": \"500ms\",\n\"index.search.slowlog.threshold.query.warn\": \"10s\",\n\"index.translog.durability\": \"async\",\n\"index.translog.flush_threshold_size\": \"5000mb\",\n\"index.translog.sync_interval\": \"120s\",\n\"index.unassigned.node_left.delayed_timeout\": \"7200m\"\n},\n\"mappings\": {\n\"_default_\": {\n\"_all\": {\n\"store\": \"false\"\n}\n},\n\"typename\": {\n\"dynamic\": false,\n\"properties\": {\n\"full_name\": {\n\"type\": \"text\"\n}\n}\n}\n}\n}\n```\n","slug":"elasticsearch/集群写性能优化","published":1,"date":"2025-02-27T08:05:09.784Z","updated":"2024-10-30T05:34:53.777Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm7n27c37000eigjd1qwigbia","content":"<h2 id=\"课程demo\"><a href=\"#课程demo\" class=\"headerlink\" title=\"课程demo\"></a>课程demo</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;template&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;logs-*&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;settings&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.merge.policy.max_merged_segment&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2gb&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.merge.policy.segments_per_tier&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;24&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.number_of_replicas&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;1&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.number_of_shards&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;12&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.optimize_auto_generated_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;true&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.refresh_interval&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;600s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.routing.allocation.total_shards_per_node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;-1&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;800ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;200ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;1s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.durability&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;async&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.flush_threshold_size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5000mb&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.sync_interval&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;120s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.unassigned.node_left.delayed_timeout&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;7200m&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;mappings&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;_default_&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;_all&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;store&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;false&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;typename&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;dynamic&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;properties&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;full_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"课程demo\"><a href=\"#课程demo\" class=\"headerlink\" title=\"课程demo\"></a>课程demo</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;template&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;logs-*&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;settings&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.indexing.slowlog.threshold.index.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.merge.policy.max_merged_segment&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2gb&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.merge.policy.segments_per_tier&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;24&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.number_of_replicas&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;1&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.number_of_shards&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;12&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.optimize_auto_generated_id&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;true&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.refresh_interval&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;600s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.routing.allocation.total_shards_per_node&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;-1&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;800ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;200ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.fetch.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;1s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;2s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.trace&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;500ms&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.search.slowlog.threshold.query.warn&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.durability&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;async&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.flush_threshold_size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;5000mb&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.translog.sync_interval&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;120s&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;index.unassigned.node_left.delayed_timeout&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;7200m&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;mappings&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;_default_&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;_all&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;store&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;false&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;typename&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;dynamic&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;properties&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;full_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br><span class=\"hljs-attr\">&quot;type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text&quot;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n"},{"title":"es高级命令","date":"2025-02-27T08:05:47.000Z","_content":"以下是优化过的笔记，已加入注释并调整格式，使其更符合Markdown标准：\n\n---\n\n# Elasticsearch 集群管理与优化笔记\n\n## 1. 移动分片到另一个节点\n```bash\nPOST _cluster/reroute\n{\n  \"commands\": [\n    {\n      \"move\": {\n        \"index\": \"index_name\",   # 索引名称\n        \"shard\": 0,               # 分片编号\n        \"from_node\": \"node_name_1\", # 源节点\n        \"to_node\": \"node_name_2\"   # 目标节点\n      }\n    }\n  ]\n}\n```\n\n## 2. 强制分配未分配的分片（带原因说明）\n```bash\nPOST _cluster/reroute?explain\n{\n  \"commands\": [\n    {\n      \"allocate\": {\n        \"index\": \"index_name\",   # 索引名称\n        \"shard\": 0,              # 分片编号\n        \"node\": \"nodename\"       # 目标节点\n      }\n    }\n  ]\n}\n```\n\n## 3. 从集群中移除节点\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.exclude._ip\": \"the_IP_of_your_node\"   # 要排除的节点IP\n  }\n}\n```\n\n## 4. 强制执行同步刷新\n```bash\nPOST _flush/synced\n```\n\n## 5. 调整集群平衡时移动的分片数量\n```bash\nPUT /_cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.cluster_concurrent_rebalance\": 2   # 同时平衡的分片数\n  }\n}\n```\n\n## 6. 调整每个节点同时恢复的分片数量\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.node_concurrent_recoveries\": 5   # 每个节点并行恢复的分片数\n  }\n}\n```\n\n## 7. 调整恢复速度\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"indices.recovery.max_bytes_per_sec\": \"80mb\"   # 恢复速率\n  }\n}\n```\n\n## 8. 调整单节点恢复时并发流数量\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"indices.recovery.concurrent_streams\": 6   # 单节点恢复时的并发流数\n  }\n}\n```\n\n## 9. 调整搜索队列大小\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"threadpool.search.queue_size\": 2000   # 搜索队列大小\n  }\n}\n```\n\n## 10. 清除节点缓存\n```bash\nPOST _cache/clear\n```\n\n## 11. 调整断路器配置\n```bash\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.total.limit\": \"40%\"   # 设置内存断路器的总内存限制\n  }\n}\n```\n\n---\n\n# 监控 Elasticsearch 集群\n\n## 1. 节点统计\n```bash\nGET _nodes/stats\n```\n\n## 2. 集群统计\n```bash\nGET _cluster/stats\n```\n\n## 3. 索引统计\n```bash\nGET kibana_sample_data_ecommerce/_stats\n```\n\n## 4. 查看待处理的集群任务\n```bash\nGET _cluster/pending_tasks\n```\n\n## 5. 查看所有任务，支持取消任务\n```bash\nGET _tasks\n```\n\n## 6. 查看节点的线程池信息\n```bash\nGET _nodes/thread_pool\nGET _nodes/stats/thread_pool\nGET _cat/thread_pool?v\nGET _nodes/hot_threads\nGET _nodes/stats/thread_pool\n```\n\n## 7. 设置索引慢日志（Slowlog）\n- 设置索引慢日志阈值：\n```bash\nPUT my_index/_settings\n{\n  \"index.indexing.slowlog\": {\n    \"threshold.index\": {\n      \"warn\": \"10s\",    # 警告级别\n      \"info\": \"4s\",     # 信息级别\n      \"debug\": \"2s\",    # 调试级别\n      \"trace\": \"0s\"     # 跟踪级别\n    },\n    \"level\": \"trace\",\n    \"source\": 1000   # 日志源的最大字符数\n  }\n}\n```\n\n- 设置查询慢日志：\n```bash\nDELETE my_index\nPUT my_index/\n{\n  \"settings\": {\n    \"index.search.slowlog.threshold\": {\n      \"query.warn\": \"10s\",   # 查询慢日志警告级别\n      \"query.info\": \"3s\",    # 查询慢日志信息级别\n      \"query.debug\": \"2s\",   # 查询慢日志调试级别\n      \"query.trace\": \"0s\",   # 查询慢日志跟踪级别\n      \"fetch.warn\": \"1s\",    # 获取慢日志警告级别\n      \"fetch.info\": \"600ms\", # 获取慢日志信息级别\n      \"fetch.debug\": \"400ms\",# 获取慢日志调试级别\n      \"fetch.trace\": \"0s\"    # 获取慢日志跟踪级别\n    }\n  }\n}\n```\n\n---\n\n# 解决集群 Yellow 与 Red 状态问题\n\n## 1. 检查集群健康状态\n```bash\nGET /_cluster/health/\n```\n\n## 2. 查看索引级别健康状态，找出红色索引\n```bash\nGET /_cluster/health?level=indices\n```\n\n## 3. 查看分片级别健康状态\n```bash\nGET _cluster/health?level=shards\n```\n\n## 4. 解释索引分片无法分配的原因\n```bash\nGET /_cluster/allocation/explain\n```\n\n## 5. 删除并重新创建索引\n```bash\nDELETE mytest\nPUT mytest\n{\n  \"settings\": {\n    \"number_of_shards\": 3,    # 分片数\n    \"number_of_replicas\": 0,   # 副本数\n    \"index.routing.allocation.require.box_type\": \"hot\"   # 指定节点类型\n  }\n}\n```\n\n---\n\n# 提升集群写性能\n\n## 1. 设置优化写入性能的索引设置\n```bash\nDELETE myindex\nPUT myindex\n{\n  \"settings\": {\n    \"index\": {\n      \"refresh_interval\": \"30s\",     # 刷新间隔\n      \"number_of_shards\": \"2\"        # 分片数\n    },\n    \"routing\": {\n      \"allocation\": {\n        \"total_shards_per_node\": \"3\" # 每个节点的最大分片数\n      }\n    },\n    \"translog\": {\n      \"sync_interval\": \"30s\",         # 事务日志同步间隔\n      \"durability\": \"async\"           # 异步持久化\n    },\n    \"number_of_replicas\": 0          # 副本数\n  },\n  \"mappings\": {\n    \"dynamic\": false,                # 禁用动态映射\n    \"properties\": {}\n  }\n}\n```\n\n---\n\n# 提升集群读性能\n\n## 1. 示例：查询优化\n```bash\nPUT blogs/_doc/1\n{\n  \"title\": \"elasticsearch\"\n}\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": { \"title\": \"elasticsearch\" }}\n      ],\n      \"filter\": {\n        \"script\": {\n          \"script\": {\n            \"source\": \"doc['title.keyword'].value.length()>5\"\n          }\n        }\n      }\n    }\n  }\n}\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"elasticsearch\"}},\n        {\n          \"range\": {\n            \"publish_date\": {\n              \"gte\": 2017,\n              \"lte\": 2019\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n---\n\n# 集群压力测试\n\n## 1. 安装并配置 esrally\n```bash\npip3 install esrally\nesrally configure\n```\n\n## 2. 执行简单的压力测试\n```bash\nesrally --distribution-version=7.1.0 --test-mode\n```\n\n## 3. 执行完整数据测试\n```bash\nesrally --distribution-version=7.1.0\n```\n\n---\n\n# 使用缓存与 Breaker 限制内存使用\n\n## 1. 获取节点统计信息\n```bash\nGET _cat/nodes?v\nGET _nodes/stats/indices?pretty\nGET _cat/nodes?v&h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count\n```\n\n## 2. 设置内存限制\n```bash\nPUT /_cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.request.limit\": \"90%\"   # 设置请求断路器内存限制\n  }\n}\n```\n\n---\n\n# 使用 Shrink 与 Rollover API 管理索引\n\n## 1. Shrink 索引\n```bash\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n```\n\n## 2. Rollover 索引\n```bash\nPOST nginx_logs_write/_rollover\n{\n  \"conditions\": {\n    \"max_age\": \"1d\",\n    \"max_docs\": 5,\n    \"max_size\": \"5gb\"\n  }\n}\n```\n\n\n```\n# 11.2-索引全生命周期管理及工具介绍.md\n\n# 索引全生命周期管理及工具介绍\n```\n\n# 运行三个节点，分片 将box_type设置成 hot，warm和cold\n# 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\n\n\n\nDELETE *\n\n\n\n# 设置 1秒刷新1次，生产环境10分种刷新一次\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.lifecycle.poll_interval\":\"1s\"\n  }\n}\n\n# 设置 Policy\nPUT /_ilm/policy/log_ilm_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_docs\": 5\n          }\n        }\n      },\n      \"warm\": {\n        \"min_age\": \"10s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"warm\"\n            }\n          }\n        }\n      },\n      \"cold\": {\n        \"min_age\": \"15s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"cold\"\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"20s\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n\n\n\n# 设置索引模版\nPUT /_template/log_ilm_template\n{\n  \"index_patterns\" : [\n      \"ilm_index-*\"\n    ],\n    \"settings\" : {\n      \"index\" : {\n        \"lifecycle\" : {\n          \"name\" : \"log_ilm_policy\",\n          \"rollover_alias\" : \"ilm_alias\"\n        },\n        \"routing\" : {\n          \"allocation\" : {\n            \"include\" : {\n              \"box_type\" : \"hot\"\n            }\n          }\n        },\n        \"number_of_shards\" : \"1\",\n        \"number_of_replicas\" : \"0\"\n      }\n    },\n    \"mappings\" : { },\n    \"aliases\" : { }\n}\n\n\n\n#创建索引\nPUT ilm_index-000001\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 0,\n    \"index.lifecycle.name\": \"log_ilm_policy\",\n    \"index.lifecycle.rollover_alias\": \"ilm_alias\",\n    \"index.routing.allocation.include.box_type\":\"hot\"\n  },\n  \"aliases\": {\n    \"ilm_alias\": {\n      \"is_write_index\": true\n    }\n  }\n}\n\n# 对 Alias写入文档\nPOST  ilm_alias/_doc\n{\n  \"dfd\":\"dfdsf\"\n}\n\n```\n# 12.1-Logstash入门及架构介绍.md\n\n# Logstash 入门及架构介绍\n```\n\n\n# 一个 Demo， demo 运行\nsudo bin/logstash -f logstash-filter.conf\n\n# demo数据\n127.0.0.1 - - [11/Dec/2013:00:01:45 -0800] \"GET /xampp/status.php HTTP/1.1\" 200 3891 \"http://cadenza/xampp/navi.php\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n\n\n# codec demo\n\n\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>json}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> dots}}\"\n\n\nsudo bin/logstash -f multiline-exception.conf\n\n# 多行数据，异常\nException in thread \"main\" java.lang.NullPointerException\n        at com.example.myproject.Book.getTitle(Book.java:16)\n        at com.example.myproject.Author.getBookTitles(Author.java:25)\n        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)\n\n\n\n# 一个实例\nhttps://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\n\n```\n\n\n# 12.2-利用JDBC插件导入数据到Elasticsearch.md\n\n# Logstash插件及文档介绍\n```\nhttps://spring.io/guides/gs/accessing-data-mysql/\ncreate database db_example;\nuse db_example;\nshow tables;\ndrop table user;\nselect * from user;\n\n\n\n# 新增用户\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\n#查看所有的用户\ncurl 'localhost:8080/demo/all'\n\n# 更新用户\ncurl -X PUT localhost:8080/demo/update -d id=16 -d name=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ\n\n# 删除用户\ncurl -X DELETE localhost:8080/demo/delete -d id=15\n\n\n\nmysql-demo.conf\n\n# 创建 alias，只显示没有被标记 deleted的用户\nPOST /_aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"users\",\n        \"alias\": \"view_users\",\n         \"filter\" : { \"term\" : { \"is_deleted\" : false } }\n      }\n    }\n  ]\n}\n\n# 通过 Alias查询，查不到被标记成 deleted的用户\nPOST view_users/_search\n{\n\n}\n\n\nPOST view_users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 12.3-Beats介绍.md\n\n# Beats介绍\n```\n\n##\n# 查看 packetbeat 模块\n# 设置 packetbeat 的mysql 模块\n# 启动运行\n#\n./metricbeat modules list\n./metricbeat modules enable mysql\n./metricbeat setup --dashboards\n\n# 安装mysql\ncreate database db_example\nuse db_example;\nshow tables;\nselect * from user\n\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\ncurl 'localhost:8080/demo/all'\n\n\n# 配置 packetbeat\n# 启动\n修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控\n\nsudo chown root packetbeat.yml\nsudo ./packetbeat setup --dashboards\nsudo ./packetbeat\n\n\n# 查看所有 Filebeat 模块\n# 查看所有的modules\n./filebeat modules list\n\n#\n./filebeat modules enable mysql\n\n```\n\n\n# 13.1-使用IndexPattern配置数据.md\n\n\n```\n\nlocalhost:5601/status\n\n\n\n\nPUT /logstash-2015.05.18\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\nPUT /logstash-2015.05.19\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /logstash-2015.05.20\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl\n\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\n\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"logs.jsonl\"\n\n\n\nGET /_cat/indices?v\n\n```\n\n\n# 13.2-使用KibanaDiscover探索数据.md\n\n# 使用Kibana Discovery 探索数据\n```\n\n设置时间过滤器\n搜索你的数据\n根据字段进行过滤\n查看文档数据\n查看文档上下文\n暂时字段数据统计\nSave Query\n\n\n```\n\n\n# 13.3-基本可视化组件介绍.md\n\n# 基本可视化组件介绍\n```\n\nPUT /shakespeare\n{\n  \"mappings\": {\n    \"properties\": {\n    \"speaker\": {\"type\": \"keyword\"},\n    \"play_name\": {\"type\": \"keyword\"},\n    \"line_id\": {\"type\": \"integer\"},\n    \"speech_number\": {\"type\": \"integer\"}\n    }\n  }\n}\n\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/bank/account/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"accounts.json\"\nInvoke-RestMethod \"http://localhost:9200/shakespeare/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"shakespeare.json\"\n\n\n```\n\n\n# 13.4-构建Dashboard.md\n\n# 构建Dashboard\n```\n- 创建仪表潘\n- 加载仪表盘\n- 共享仪表盘\n\n```\n\n\n# 14.3用机器学习实现时序数据的异常检测-上.md\n\nmkdir server_metrics\ncd server_metrics\nwget https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\ntar -xvf server_metrics.tar.gz\n\n\n# 14.5-用ELK进行日志管理.md\n\n# 用 ELK 来做日志管理\n```\n./filebeat modules list\n./filebeat modules enable system\n./filebeat modules enable elasticsearch\n\n\n## 进 modules.d 编辑相应的文件，修改log路径\n\n./filebeat setup –dashboards\n\n./filebeat export template | more\n\n./filebeat -e\n\n```\n\n# 14.6-用Canvas做数据演示.md\n\nPOST elasticoffee/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"by\": {\n      \"terms\": {\n        \"field\": \"beverage.keyword\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n# 4.1-基于词项和基于全文的搜索.md\n\n# 基于词项和基于全文的搜索\n\n\n```\nDELETE products\nPUT products\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  }\n}\n\n\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"productID\" : \"XHDK-A-1293-#fJ3\",\"desc\":\"iPhone\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"productID\" : \"KDKE-B-9947-#kL5\",\"desc\":\"iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"productID\" : \"JODL-X-1937-#pV7\",\"desc\":\"MBP\" }\n\nGET /products\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n        //\"value\": \"iPhone\"\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        //\"value\": \"iPhone\"\n        //\"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"productID\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\n\n\n\nPOST /products/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n\n    }\n  }\n}\n\n\n#设置 position_increment_gap\nDELETE groups\nPUT groups\n{\n  \"mappings\": {\n    \"properties\": {\n      \"names\":{\n        \"type\": \"text\",\n        \"position_increment_gap\": 0\n      }\n    }\n  }\n}\n\nGET groups/_mapping\n\nPOST groups/_doc\n{\n  \"names\": [ \"John Water\", \"Water Smith\"]\n}\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": {\n        \"query\": \"Water Water\",\n        \"slop\": 100\n      }\n    }\n  }\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": \"Water Smith\"\n    }\n  }\n}\n```\n\n# 4.10-综合排序：Function Score Query 优化算分.md\n\n# 综合排序：Function Score Query 优化算分\n```\nDELETE blogs\nPUT /blogs/_doc/1\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   0\n}\n\nPUT /blogs/_doc/2\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   100\n}\n\nPUT /blogs/_doc/3\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   1000000\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\"\n      }\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\"\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      },\n      \"boost_mode\": \"sum\",\n      \"max_boost\": 3\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"random_score\": {\n        \"seed\": 911119\n      }\n    }\n  }\n}\n```\n# 4.12-自动补全与基于上下文的提示.md\n\n# 自动补全与基于上下文的提示\n```\nDELETE articles\nPUT articles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title_completion\":{\n        \"type\": \"completion\"\n      }\n    }\n  }\n}\n\nPOST articles/_bulk\n{ \"index\" : { } }\n{ \"title_completion\": \"lucene is very cool\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch builds on top of lucene\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch rocks\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"elastic is the company behind ELK stack\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elk stack rocks\"}\n{ \"index\" : {} }\n\n\nPOST articles/_search?pretty\n{\n  \"size\": 0,\n  \"suggest\": {\n    \"article-suggester\": {\n      \"prefix\": \"elk \",\n      \"completion\": {\n        \"field\": \"title_completion\"\n      }\n    }\n  }\n}\n\n\nDELETE comments\nPUT comments\nPUT comments/_mapping\n{\n  \"properties\": {\n    \"comment_autocomplete\":{\n      \"type\": \"completion\",\n      \"contexts\":[{\n        \"type\":\"category\",\n        \"name\":\"comment_category\"\n      }]\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"I love the star war movies\",\n  \"comment_autocomplete\":{\n    \"input\":[\"star wars\"],\n    \"contexts\":{\n      \"comment_category\":\"movies\"\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"Where can I find a Starbucks\",\n  \"comment_autocomplete\":{\n    \"input\":[\"starbucks\"],\n    \"contexts\":{\n      \"comment_category\":\"coffee\"\n    }\n  }\n}\n\n\nPOST comments/_search\n{\n  \"suggest\": {\n    \"MY_SUGGESTION\": {\n      \"prefix\": \"sta\",\n      \"completion\":{\n        \"field\":\"comment_autocomplete\",\n        \"contexts\":{\n          \"comment_category\":\"coffee\"\n        }\n      }\n    }\n  }\n}\n```\n\n\n# 4.13-跨集群搜索.md\n\n# 跨集群搜索\n```\n//启动3个集群\n\nbin/elasticsearch -E node.name=cluster0node -E cluster.name=cluster0 -E path.data=cluster0_data -E discovery.type=single-node -E http.port=9200 -E transport.port=9300\nbin/elasticsearch -E node.name=cluster1node -E cluster.name=cluster1 -E path.data=cluster1_data -E discovery.type=single-node -E http.port=9201 -E transport.port=9301\nbin/elasticsearch -E node.name=cluster2node -E cluster.name=cluster2 -E path.data=cluster2_data -E discovery.type=single-node -E http.port=9202 -E transport.port=9302\n\n\n//在每个集群上设置动态的设置\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster\": {\n      \"remote\": {\n        \"cluster0\": {\n          \"seeds\": [\n            \"127.0.0.1:9300\"\n          ],\n          \"transport.ping_schedule\": \"30s\"\n        },\n        \"cluster1\": {\n          \"seeds\": [\n            \"127.0.0.1:9301\"\n          ],\n          \"transport.compress\": true,\n          \"skip_unavailable\": true\n        },\n        \"cluster2\": {\n          \"seeds\": [\n            \"127.0.0.1:9302\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#cURL\ncurl -XPUT \"http://localhost:9200/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9201/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9202/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\n\n#创建测试数据\ncurl -XPOST \"http://localhost:9200/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user1\",\"age\":10}'\n\ncurl -XPOST \"http://localhost:9201/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user2\",\"age\":20}'\n\ncurl -XPOST \"http://localhost:9202/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user3\",\"age\":30}'\n\n\n#查询\nGET /users,cluster1:users,cluster2:users/_search\n{\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20,\n        \"lte\": 40\n      }\n    }\n  }\n}\n\n```\n\n\n# 4.2-结构化搜索.md\n\n# 结构化搜索\n\n```\n\n#结构化搜索，精确匹配\nDELETE products\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\nGET products/_mapping\n\n\n\n#对布尔值 match 查询，有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"avaliable\": true\n    }\n  }\n}\n\n\n\n#对布尔值，通过constant score 转成 filtering，没有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": true\n        }\n      }\n    }\n  }\n}\n\n\n#数字类型 Term\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": 30\n    }\n  }\n}\n\n#数字类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"price\": [\n            \"20\",\n            \"30\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#数字 Range 查询\nGET products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"price\" : {\n                        \"gte\" : 20,\n                        \"lte\"  : 30\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n# 日期 range\nPOST products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"date\" : {\n                      \"gte\" : \"now-1y\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n#exists查询\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"exists\": {\n          \"field\": \"date\"\n        }\n      }\n    }\n  }\n}\n\n#处理多值字段\nPOST /movies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\"}\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"] }\n\n\n#处理多值字段，term 查询是包含，而不是等于\nPOST movies/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"genre.keyword\": \"Comedy\"\n        }\n      }\n    }\n  }\n}\n\n\n#字符类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"productID.keyword\": [\n            \"QQPX-R-3956-#aD8\",\n            \"JODL-X-1937-#pV7\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": 30\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n    }\n  }\n}\n\n#对布尔数值\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": \"false\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"avaliable\": {\n        \"value\": \"false\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": {\n        \"value\": \"20\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": \"20\"\n    }\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"bool\": {\n          \"must_not\": {\n            \"exists\": {\n              \"field\": \"date\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n```\n# 4.3-搜索的相关性算分.md\n\n# 搜索的相关性算分\n\n```\n\n\nPUT testscore\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n\n\nPUT testscore/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"we use Elasticsearch to power the search\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"we like elasticsearch\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"The scoring of documents is caculated by the scoring formula\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"content\":\"you know, for search\" }\n\n\n\nPOST /testscore/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"content\":\"you\"\n      //\"content\": \"elasticsearch\"\n      //\"content\":\"the\"\n      //\"content\": \"the elasticsearch\"\n    }\n  }\n}\n\nPOST testscore/_search\n{\n    \"query\": {\n        \"boosting\" : {\n            \"positive\" : {\n                \"term\" : {\n                    \"content\" : \"elasticsearch\"\n                }\n            },\n            \"negative\" : {\n                 \"term\" : {\n                     \"content\" : \"like\"\n                }\n            },\n            \"negative_boost\" : 0.2\n        }\n    }\n}\n\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"more_like_this\": {\n      \"fields\": [\n        \"title^10\",\"overview\"\n      ],\n      \"like\": [{\"_id\":\"14191\"}],\n      \"min_term_freq\": 1,\n      \"max_query_terms\": 12\n    }\n  }\n}\n\n\n\n```\n\n\n# 4.4-Query&Filtering实现多字符串多字段查询.md\n\n# Query & Filtering 与多字符串多字段查询\n\n```\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\n\n#基本语法\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :1\n    }\n  }\n}\n\n#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题\nPOST /newmovies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\",\"genre_count\":1 }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"],\"genre_count\":2 }\n\n#must，有算分\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n\n      ]\n    }\n  }\n}\n\n#Filter。不参与算分，结果的score是0\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n        ]\n\n    }\n  }\n}\n\n\n#Filtering Context\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      }\n    }\n  }\n}\n\n\n#Query Context\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"term\": {\n            \"productID.keyword\": {\n              \"value\": \"JODL-X-1937-#pV7\"}}\n        },\n        {\"term\": {\"avaliable\": {\"value\": true}}\n        }\n      ]\n    }\n  }\n}\n\n\n#嵌套，实现了 should not 逻辑\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"price\": \"30\"\n        }\n      },\n      \"should\": [\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": {\n                \"avaliable\": \"false\"\n              }\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n\n\n#Controll the Precision\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :2\n    }\n  }\n}\n\n\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"brown\" }},\n        { \"term\": { \"text\": \"red\" }},\n        { \"term\": { \"text\": \"quick\"   }},\n        { \"term\": { \"text\": \"dog\"   }}\n      ]\n    }\n  }\n}\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"quick\" }},\n        { \"term\": { \"text\": \"dog\"   }},\n        {\n          \"bool\":{\n            \"should\":[\n               { \"term\": { \"text\": \"brown\" }},\n                 { \"term\": { \"text\": \"brown\" }},\n            ]\n          }\n\n        }\n      ]\n    }\n  }\n}\n\n\nDELETE blogs\nPOST /blogs/_bulk\n{ \"index\": { \"_id\": 1 }}\n{\"title\":\"Apple iPad\", \"content\":\"Apple iPad,Apple iPad\" }\n{ \"index\": { \"_id\": 2 }}\n{\"title\":\"Apple iPad,Apple iPad\", \"content\":\"Apple iPad\" }\n\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\"match\": {\n          \"title\": {\n            \"query\": \"apple,ipad\",\n            \"boost\": 1.1\n          }\n        }},\n\n        {\"match\": {\n          \"content\": {\n            \"query\": \"apple,ipad\",\n            \"boost\":\n          }\n        }}\n      ]\n    }\n  }\n}\n\nDELETE news\nPOST /news/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"Apple Mac\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"Apple iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"Apple employee like Apple Pie and Apple Juice\" }\n\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      },\n      \"must_not\": {\n        \"match\":{\"content\":\"pie\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"match\": {\n          \"content\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"match\": {\n          \"content\": \"pie\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\n```\n\n# 4.5-单字符串多字段查询-DisMaxQuery.md\n\n# 单字符串多字段查询：Dis Max Query\n```\n\nPUT /blogs/_doc/1\n{\n    \"title\": \"Quick brown rabbits\",\n    \"body\":  \"Brown rabbits are commonly seen.\"\n}\n\nPUT /blogs/_doc/2\n{\n    \"title\": \"Keeping pets healthy\",\n    \"body\":  \"My quick brown fox eats rabbits on a regular basis.\"\n}\n\nPOST /blogs/_search\n{\n    \"query\": {\n        \"bool\": {\n            \"should\": [\n                { \"match\": { \"title\": \"Brown fox\" }},\n                { \"match\": { \"body\":  \"Brown fox\" }}\n            ]\n        }\n    }\n}\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ]\n        }\n    }\n}\n\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\n\n```\n# 4.6-单字符串多字段查询-Multi-Match.md\n\n# 单字符串多字段查询：Multi Match\n```\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\": \"best_fields\",\n      \"query\": \"Quick pets\",\n      \"fields\": [\"title\",\"body\"],\n      \"tie_breaker\": 0.2,\n      \"minimum_should_match\": \"20%\"\n    }\n  }\n}\n\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": \"*_title\"\n    }\n}\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": [ \"*_title\", \"chapter_title^2\" ]\n    }\n}\n\n\n\nDELETE /titles\nPUT /titles\n{\n    \"settings\": { \"number_of_shards\": 1 },\n    \"mappings\": {\n        \"my_type\": {\n            \"properties\": {\n                \"title\": {\n                    \"type\":     \"string\",\n                    \"analyzer\": \"english\",\n                    \"fields\": {\n                        \"std\":   {\n                            \"type\":     \"string\",\n                            \"analyzer\": \"standard\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\"\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\n\nGET titles/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"barking dogs\"\n    }\n  }\n}\n\nDELETE /titles\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\",\n        \"fields\": {\"std\": {\"type\": \"text\",\"analyzer\": \"standard\"}}\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title\", \"title.std\" ]\n        }\n    }\n}\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title^10\", \"title.std\" ]\n        }\n    }\n}\n\n```\n\n# 4.7-多语言及中文分词与检索.md\n\n# 多语言及中文分词与检索\n\n- 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”\n\n- 你也想犯范范玮琪犯过的错吗\n- 校长说衣服上除了校徽别别别的\n- 这几天天天天气不好\n- 我背有点驼，麻麻说“你的背得背背背背佳\n\n```\n#stop word\n\nDELETE my_index\nPUT /my_index/_doc/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/_doc/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\n\nPOST my_index/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"not happy fox\"\n    }\n  }\n}\n\n\n#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:\n\nDELETE my_index\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"analyzer\": \"english\"\n        }\n      }\n    }\n  }\n}\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"fields\": {\n            \"english\": {\n              \"type\":     \"string\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /my_index/blog/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/blog/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\nGET /_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\":     \"most_fields\",\n      \"query\":    \"not happy foxes\",\n      \"fields\": [ \"title\", \"title.english\" ]\n    }\n  }\n}\n\n\n#安装插件\n./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\n#安装插件\nbin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\n\n\n\n\n#ik_max_word\n#ik_smart\n#hanlp: hanlp默认分词\n#hanlp_standard: 标准分词\n#hanlp_index: 索引分词\n#hanlp_nlp: NLP分词\n#hanlp_n_short: N-最短路分词\n#hanlp_dijkstra: 最短路分词\n#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）\n#hanlp_speed: 极速词典分词\n\nPOST _analyze\n{\n  \"analyzer\": \"hanlp_standard\",\n  \"text\": [\"剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜\"]\n\n}     \n\n#Pinyin\nPUT /artists/\n{\n    \"settings\" : {\n        \"analysis\" : {\n            \"analyzer\" : {\n                \"user_name_analyzer\" : {\n                    \"tokenizer\" : \"whitespace\",\n                    \"filter\" : \"pinyin_first_letter_and_full_pinyin_filter\"\n                }\n            },\n            \"filter\" : {\n                \"pinyin_first_letter_and_full_pinyin_filter\" : {\n                    \"type\" : \"pinyin\",\n                    \"keep_first_letter\" : true,\n                    \"keep_full_pinyin\" : false,\n                    \"keep_none_chinese\" : true,\n                    \"keep_original\" : false,\n                    \"limit_first_letter_length\" : 16,\n                    \"lowercase\" : true,\n                    \"trim_whitespace\" : true,\n                    \"keep_none_chinese_in_first_letter\" : true\n                }\n            }\n        }\n    }\n}\n\n\nGET /artists/_analyze\n{\n  \"text\": [\"刘德华 张学友 郭富城 黎明 四大天王\"],\n  \"analyzer\": \"user_name_analyzer\"\n}\n\n\n```\n\n## 相关资源\n- Elasticsearch IK分词插件 https://github.com/medcl/elasticsearch-analysis-ik/releases\n- Elasticsearch hanlp 分词插件 https://github.com/KennFalcon/elasticsearch-analysis-hanlp\n\n- 分词算法综述 https://zhuanlan.zhihu.com/p/50444885\n\n### 一些分词工具，供参考：\n- 中科院计算所NLPIR http://ictclas.nlpir.org/nlpir/\n- ansj分词器 https://github.com/NLPchina/ansj_seg\n- 哈工大的LTP https://github.com/HIT-SCIR/ltp\n- 清华大学THULAC https://github.com/thunlp/THULAC\n- 斯坦福分词器 https://nlp.stanford.edu/software/segmenter.shtml\n- Hanlp分词器 https://github.com/hankcs/HanLP\n- 结巴分词 https://github.com/yanyiwu/cppjieba\n- KCWS分词器(字嵌入+Bi-LSTM+CRF) https://github.com/koth/kcws\n- ZPar https://github.com/frcchang/zpar/releases\n- IKAnalyzer https://github.com/wks/ik-analyzer\n\n\n# 4.8-SpaceJam一个全文搜索的实例.md\n\n# Space Jam，一次全文搜索的实例\n\n## 环境要求\n- Python 2.7.15\n- 可以使用pyenv管理多个python版本（可选）\n\n## 进入 tmdb-search目录\nRun\npip install -r requirements.txt\nRun python ./ingest_tmdb_from_file.py\n```\nPOST tmdb/_search\n{\n\"_source\": [\"title\",\"overview\"],\n \"query\": {\n   \"match_all\": {}\n }\n}\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"basketball with cartoon aliens\",\n      \"fields\": [\"title\",\"overview\"]\n    }\n  },\n  \"highlight\" : {\n        \"fields\" : {\n            \"overview\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] },\n            \"title\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] }\n\n        }\n    }\n}\n```\n\n## 相关\n- Windows 安装 pyenv https://github.com/pyenv-win/pyenv-win\n- Mac 安装pyenv https://segmentfault.com/a/1190000017403221\n- Linux 安装 pyenv https://blog.csdn.net/GX_1_11_real/article/details/80237064\n- Python.org https://www.python.org/\n\n\n# 4.9-使用SearchTemplate和IndexAlias进行查询.md\n\n# 使用 Search Template 和 Index Alias 查询\n\n```\nPOST _scripts/tmdb\n{\n  \"script\": {\n    \"lang\": \"mustache\",\n    \"source\": {\n      \"_source\": [\n        \"title\",\"overview\"\n      ],\n      \"size\": 20,\n      \"query\": {\n        \"multi_match\": {\n          \"query\": \"{{q}}\",\n          \"fields\": [\"title\",\"overview\"]\n        }\n      }\n    }\n  }\n}\nDELETE _scripts/tmdb\n\nGET _scripts/tmdb\n\nPOST tmdb/_search/template\n{\n    \"id\":\"tmdb\",\n    \"params\": {\n        \"q\": \"basketball with cartoon aliens\"\n    }\n}\n\n\nPUT movies-2019/_doc/1\n{\n  \"name\":\"the matrix\",\n  \"rating\":5\n}\n\nPUT movies-2019/_doc/2\n{\n  \"name\":\"Speed\",\n  \"rating\":3\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-latest\"\n      }\n    }\n  ]\n}\n\nPOST movies-latest/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-lastest-highrate\",\n        \"filter\": {\n          \"range\": {\n            \"rating\": {\n              \"gte\": 4\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n\nPOST movies-lastest-highrate/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\n\n```\n\n\n# 5.1-集群分布式模型及选主与脑裂问题.md\n\n# 集群分布式模型及选主与脑裂问题\n\n```\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data\nbin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.data=node3_data\n\n```\n# 5.2-分片与集群的故障转移.md\n\n# 分片与集群的故障转移\n\n\n# 5.3-文档分布式存储.md\n\n# 文档分布式存储\n\n\n# 5.4-分片及其生命周期.md\n\n# 分片及其生命周期\n\n\n# 5.5-剖析分布式查询及相关性评分.md\n\n# 剖析分布式查询及相关性评分\n```\nDELETE message\nPUT message\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  }\n}\n\nGET message\n\nPOST message/_doc?routing=1\n{\n  \"content\":\"good\"\n}\n\nPOST message/_doc?routing=2\n{\n  \"content\":\"good morning\"\n}\n\nPOST message/_doc?routing=3\n{\n  \"content\":\"good morning everyone\"\n}\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n\nPOST message/_search?search_type=dfs_query_then_fetch\n{\n\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 5.6-排序及DocValues&Fielddata.md\n\n# 排序及Doc Values & Fielddata\n```\n#单字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}}\n  ]\n}\n\n#多字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}},\n    {\"_doc\":{\"order\": \"asc\"}},\n    {\"_score\":{ \"order\": \"desc\"}}\n  ]\n}\n\nGET kibana_sample_data_ecommerce/_mapping\n\n#对 text 字段进行排序。默认会报错，需打开fielddata\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"customer_full_name\": {\"order\": \"desc\"}}\n  ]\n}\n\n#打开 text的 fielddata\nPUT kibana_sample_data_ecommerce/_mapping\n{\n  \"properties\": {\n    \"customer_full_name\" : {\n          \"type\" : \"text\",\n          \"fielddata\": true,\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n  }\n}\n\n#关闭 keyword的 doc values\nPUT test_keyword\nPUT test_keyword/_mapping\n{\n  \"properties\": {\n    \"user_name\":{\n      \"type\": \"keyword\",\n      \"doc_values\":false\n    }\n  }\n}\n\nDELETE test_keyword\n\nPUT test_text\nPUT test_text/_mapping\n{\n  \"properties\": {\n    \"intro\":{\n      \"type\": \"text\",\n      \"doc_values\":true\n    }\n  }\n}\n\nDELETE test_text\n\n\nDELETE temp_users\nPUT temp_users\nPUT temp_users/_mapping\n{\n  \"properties\": {\n    \"name\":{\"type\": \"text\",\"fielddata\": true},\n    \"desc\":{\"type\": \"text\",\"fielddata\": true}\n  }\n}\n\nPost temp_users/_doc\n{\"name\":\"Jack\",\"desc\":\"Jack is a good boy!\",\"age\":10}\n\n#打开fielddata 后，查看 docvalue_fields数据\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"name\",\"desc\"\n    ]\n}\n\n#查看整型字段的docvalues\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"age\"\n    ]\n}\n```\n\n\n# 5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI.md\n\n# 分页与遍历 - From, Size, Search_after & Scroll API\n```\n\nPOST tmdb/_search\n{\n  \"from\": 10000,\n  \"size\": 1,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  }\n}\n\n#Scroll API\nDELETE users\n\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":11}\n\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":12}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":13}\n\nPOST users/_count\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"search_after\":\n        [\n          10,\n          \"ZQ0vYGsBrR8X3IP75QqX\"],\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\n\n#Scroll API\nDELETE users\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":20}\n\nPOST users/_doc\n{\"name\":\"user3\",\"age\":30}\n\nPOST users/_doc\n{\"name\":\"user4\",\"age\":40}\n\nPOST /users/_search?scroll=5m\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\" : {\n        }\n    }\n}\n\n\nPOST users/_doc\n{\"name\":\"user5\",\"age\":50}\nPOST /_search/scroll\n{\n    \"scroll\" : \"1m\",\n    \"scroll_id\" : \"DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==\"\n}\n\n\n```\n\n\n# 5.8-处理并发读写.md\n\n# 处理并发读写操作\n```\n\nDELETE products\nPUT products\n\nPUT products/_doc/1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nGET products/_doc/1\n\nPUT products/_doc/1?if_seq_no=1&if_primary_term=1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nPUT products/_doc/1?version=30000&version_type=external\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\n```\n\n\n# 6.1-Bucket&Metric聚合分析及嵌套聚合.md\n\n# Bucket & Metric Aggregation\n## demos\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n# Metric 聚合，找到最低的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"min_salary\": {\n      \"min\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# Metric 聚合，找到最高的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# 多个 Metric 聚合，找到最低最高和平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"min_salary\": {\n      \"min\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"avg_salary\": {\n      \"avg\": {\n        \"field\": \"salary\"\n      }\n    }\n  }\n}\n\n# 一个聚合，输出多值\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"stats_salary\": {\n      \"stats\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n\n\n\n# 对keword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 聚合查询，失败\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\n# 对 Text 字段打开 fielddata，支持terms aggregation\nPUT employees/_mapping\n{\n  \"properties\" : {\n    \"job\":{\n       \"type\":     \"text\",\n       \"fielddata\": true\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 分词。分词后的terms\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"cardinate\": {\n      \"cardinality\": {\n        \"field\": \"job\"\n      }\n    }\n  }\n}\n\n\n# 对 性别的 keyword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"gender\": {\n      \"terms\": {\n        \"field\":\"gender\"\n      }\n    }\n  }\n}\n\n\n#指定 bucket 的 size\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ages_5\": {\n      \"terms\": {\n        \"field\":\"age\",\n        \"size\":3\n      }\n    }\n  }\n}\n\n\n\n# 指定size，不同工种中，年纪最大的3个员工的具体信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      },\n      \"aggs\":{\n        \"old_employee\":{\n          \"top_hits\":{\n            \"size\":3,\n            \"sort\":[\n              {\n                \"age\":{\n                  \"order\":\"desc\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n#Salary Ranges 分桶，可以自己定义 key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_range\": {\n      \"range\": {\n        \"field\":\"salary\",\n        \"ranges\":[\n          {\n            \"to\":10000\n          },\n          {\n            \"from\":10000,\n            \"to\":20000\n          },\n          {\n            \"key\":\">20000\",\n            \"from\":20000\n          }\n        ]\n      }\n    }\n  }\n}\n\n\n#Salary Histogram,工资0到10万，以 5000一个区间进行分桶\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_histrogram\": {\n      \"histogram\": {\n        \"field\":\"salary\",\n        \"interval\":5000,\n        \"extended_bounds\":{\n          \"min\":0,\n          \"max\":100000\n\n        }\n      }\n    }\n  }\n}\n\n\n# 嵌套聚合1，按照工作类型分桶，并统计工资信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_salary_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"salary\": {\n          \"stats\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_gender_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"gender_stats\": {\n          \"terms\": {\n            \"field\": \"gender\"\n          },\n          \"aggs\": {\n            \"salary_stats\": {\n              \"stats\": {\n                \"field\": \"salary\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n\n# 6.2-Pipeline聚合分析.md\n\n# Pipeline 聚合分析\n## 课程 demo\n```\nDELETE employees\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# 平均工资最低的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"min_salary_by_job\":{\n      \"min_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资最高的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"max_salary_by_job\":{\n      \"max_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"avg_salary_by_job\":{\n      \"avg_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的统计分析\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"stats_salary_by_job\":{\n      \"stats_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的百分位数\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"percentiles_salary_by_job\":{\n      \"percentiles_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n\n#按照年龄对平均工资求导\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"derivative_avg_salary\":{\n          \"derivative\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#Cumulative_sum\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"cumulative_salary\":{\n          \"cumulative_sum\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n#Moving Function\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"moving_avg_salary\":{\n          \"moving_fn\": {\n            \"buckets_path\": \"avg_salary\",\n            \"window\":10,\n            \"script\": \"MovingFunctions.min(values)\"\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n# 6.3-作用范围与排序.md\n\n# 作用范围与排序\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# Query\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n#Filter\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"older_person\": {\n      \"filter\":{\n        \"range\":{\n          \"age\":{\n            \"from\":35\n          }\n        }\n      },\n      \"aggs\":{\n         \"jobs\":{\n           \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n      }\n    }},\n    \"all_jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n\n#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果\nPOST employees/_search\n{\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      }\n    }\n  },\n  \"post_filter\": {\n    \"match\": {\n      \"job.keyword\": \"Dev Manager\"\n    }\n  }\n}\n\n\n#global\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 40\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    },\n    \n    \"all\":{\n      \"global\":{},\n      \"aggs\":{\n        \"salary_avg\":{\n          \"avg\":{\n            \"field\":\"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[\n          {\"_count\":\"asc\"},\n          {\"_key\":\"desc\"}\n          ]\n        \n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"avg_salary\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"avg_salary\": {\n        \"avg\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"stats_salary.min\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"stats_salary\": {\n        \"stats\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n```\n\n# 6.4-聚合分析的原理及精准度问题.md\n\n# 聚合分析的原理及精准度问题\n```\nDELETE my_flights\nPUT my_flights\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  },\n  \"mappings\" : {\n      \"properties\" : {\n        \"AvgTicketPrice\" : {\n          \"type\" : \"float\"\n        },\n        \"Cancelled\" : {\n          \"type\" : \"boolean\"\n        },\n        \"Carrier\" : {\n          \"type\" : \"keyword\"\n        },\n        \"Dest\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"DestRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DistanceKilometers\" : {\n          \"type\" : \"float\"\n        },\n        \"DistanceMiles\" : {\n          \"type\" : \"float\"\n        },\n        \"FlightDelay\" : {\n          \"type\" : \"boolean\"\n        },\n        \"FlightDelayMin\" : {\n          \"type\" : \"integer\"\n        },\n        \"FlightDelayType\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightNum\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeHour\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeMin\" : {\n          \"type\" : \"float\"\n        },\n        \"Origin\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"OriginRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"dayOfWeek\" : {\n          \"type\" : \"integer\"\n        },\n        \"timestamp\" : {\n          \"type\" : \"date\"\n        }\n      }\n    }\n}\n\n\nPOST _reindex\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_flights\"\n  },\n  \"dest\": {\n    \"index\": \"my_flights\"\n  }\n}\n\nGET kibana_sample_data_flights/_count\nGET my_flights/_count\n\nget kibana_sample_data_flights/_search\n\n\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":5,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n\nGET my_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":1,\n        \"shard_size\":1,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n```\n# 7.1-对象及 Nested 对象.md\n\n# 对象及Nested对象\n```\nDELETE blog\n# 设置blog的 Mapping\nPUT /blog\n{\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"time\": {\n        \"type\": \"date\"\n      },\n      \"user\": {\n        \"properties\": {\n          \"city\": {\n            \"type\": \"text\"\n          },\n          \"userid\": {\n            \"type\": \"long\"\n          },\n          \"username\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 插入一条 Blog 信息\nPUT blog/_doc/1\n{\n  \"content\":\"I like Elasticsearch\",\n  \"time\":\"2019-01-01T00:00:00\",\n  \"user\":{\n    \"userid\":1,\n    \"username\":\"Jack\",\n    \"city\":\"Shanghai\"\n  }\n}\n\n\n# 查询 Blog 信息\nPOST blog/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"content\": \"Elasticsearch\"}},\n        {\"match\": {\"user.username\": \"Jack\"}}\n      ]\n    }\n  }\n}\n\n\nDELETE my_movies\n\n# 电影的Mapping信息\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"keyword\"\n            },\n            \"last_name\" : {\n              \"type\" : \"keyword\"\n            }\n          }\n        },\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n      }\n    }\n}\n\n\n# 写入一条电影信息\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# 查询电影信息\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"actors.first_name\": \"Keanu\"}},\n        {\"match\": {\"actors.last_name\": \"Hopper\"}}\n      ]\n    }\n  }\n\n}\n\nDELETE my_movies\n# 创建 Nested 对象 Mapping\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"type\": \"nested\",\n          \"properties\" : {\n            \"first_name\" : {\"type\" : \"keyword\"},\n            \"last_name\" : {\"type\" : \"keyword\"}\n          }},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}\n        }\n      }\n    }\n}\n\n\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# Nested 查询\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"Speed\"}},\n        {\n          \"nested\": {\n            \"path\": \"actors\",\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\"match\": {\n                    \"actors.first_name\": \"Keanu\"\n                  }},\n\n                  {\"match\": {\n                    \"actors.last_name\": \"Hopper\"\n                  }}\n                ]\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\n\n# Nested Aggregation\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"actors\": {\n      \"nested\": {\n        \"path\": \"actors\"\n      },\n      \"aggs\": {\n        \"actor_name\": {\n          \"terms\": {\n            \"field\": \"actors.first_name\",\n            \"size\": 10\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 普通 aggregation不工作\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"NAME\": {\n      \"terms\": {\n        \"field\": \"actors.first_name\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n```\n\n# 7.2-文档的父子关系.md\n\n# 文档的父子关系\n```\nDELETE my_blogs\n\n# 设定 Parent/Child Mapping\nPUT my_blogs\n{\n  \"settings\": {\n    \"number_of_shards\": 2\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"blog_comments_relation\": {\n        \"type\": \"join\",\n        \"relations\": {\n          \"blog\": \"comment\"\n        }\n      },\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"title\": {\n        \"type\": \"keyword\"\n      }\n    }\n  }\n}\n\n\n#索引父文档\nPUT my_blogs/_doc/blog1\n{\n  \"title\":\"Learning Elasticsearch\",\n  \"content\":\"learning ELK @ geektime\",\n  \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n#索引父文档\nPUT my_blogs/_doc/blog2\n{\n  \"title\":\"Learning Hadoop\",\n  \"content\":\"learning Hadoop\",\n    \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n\n#索引子文档\nPUT my_blogs/_doc/comment1?routing=blog1\n{\n  \"comment\":\"I am learning ELK\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog1\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment2?routing=blog2\n{\n  \"comment\":\"I like Hadoop!!!!!\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n  \"comment\":\"Hello Hadoop\",\n  \"username\":\"Bob\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n# 查询所有文档\nPOST my_blogs/_search\n{\n\n}\n\n\n#根据父文档ID查看\nGET my_blogs/_doc/blog2\n\n# Parent Id 查询\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"parent_id\": {\n      \"type\": \"comment\",\n      \"id\": \"blog2\"\n    }\n  }\n}\n\n# Has Child 查询,返回父文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_child\": {\n      \"type\": \"comment\",\n      \"query\" : {\n                \"match\": {\n                    \"username\" : \"Jack\"\n                }\n            }\n    }\n  }\n}\n\n\n# Has Parent 查询，返回相关的子文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_parent\": {\n      \"parent_type\": \"blog\",\n      \"query\" : {\n                \"match\": {\n                    \"title\" : \"Learning Hadoop\"\n                }\n            }\n    }\n  }\n}\n\n\n\n#通过ID ，访问子文档\nGET my_blogs/_doc/comment3\n#通过ID和routing ，访问子文档\nGET my_blogs/_doc/comment3?routing=blog2\n\n#更新子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n    \"comment\": \"Hello Hadoop??\",\n    \"blog_comments_relation\": {\n      \"name\": \"comment\",\n      \"parent\": \"blog2\"\n    }\n}\n\n\n```\n\n# 7.5-Elasticsearch数据建模实例.md\n\n# Elasticsearch 数据建模实例\n```\n###### Data Modeling Example\n\n# Index 一本书的信息\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n\n\n#查询自动创建的Mapping\nGET books/_mapping\n\nDELETE books\n\n#优化字段类型\nPUT books\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\"},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false},\n        \"description\" : {\"type\" : \"text\"},\n        \"public_date\" : {\"type\" : \"date\"},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          }\n        }\n      }\n    }\n}\n\n#Cover URL index 设置成false，无法对该字段进行搜索\nPOST books/_search\n{\n  \"query\": {\n    \"term\": {\n      \"cover_url\": {\n        \"value\": \"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n      }\n    }\n  }\n}\n\n#Cover URL index 设置成false，依然支持聚合分析\nPOST books/_search\n{\n  \"aggs\": {\n    \"cover\": {\n      \"terms\": {\n        \"field\": \"cover_url\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n\nDELETE books\n#新增 Content字段。数据量很大。选择将Source 关闭\nPUT books\n{\n      \"mappings\" : {\n      \"_source\": {\"enabled\": false},\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\",\"store\": true},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false,\"store\": true},\n        \"description\" : {\"type\" : \"text\",\"store\": true},\n         \"content\" : {\"type\" : \"text\",\"store\": true},\n        \"public_date\" : {\"type\" : \"date\",\"store\": true},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          },\n          \"store\": true\n        }\n      }\n    }\n}\n\n\n# Index 一本书的信息,包含Content\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"content\":\"The content of the book......Indexing data, aggregation, searching.    something else. something in the way............\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n#查询结果中，Source不包含数据\nPOST books/_search\n{}\n\n#搜索，通过store 字段显示数据，同时高亮显示 conent的内容\nPOST books/_search\n{\n  \"stored_fields\": [\"title\",\"author\",\"public_date\"],\n  \"query\": {\n    \"match\": {\n      \"content\": \"searching\"\n    }\n  },\n\n  \"highlight\": {\n    \"fields\": {\n      \"content\":{}\n    }\n  }\n\n}\n\n```\n# 7.6-Elasticsearch 数据建模最佳实践.md\n\n# Elasticsearch 数据建模最佳实践\n\n\n```\n\n###### Cookie Service\n\n##索引数据，dynamic mapping 会不断加入新增字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":{\n   \"username\":\"tom\",\n   \"age\":32\n }\n}\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":{\n   \"login\":\"2019-01-01\",\n   \"email\":\"xyz@abc.com\"\n }\n}\n\n\nDELETE cookie_service\n#使用 Nested 对象，增加key/value\nPUT cookie_service\n{\n  \"mappings\": {\n    \"properties\": {\n      \"cookies\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"keyword\"\n          },\n          \"dateValue\": {\n            \"type\": \"date\"\n          },\n          \"keywordValue\": {\n            \"type\": \"keyword\"\n          },\n          \"IntValue\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"url\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"keyword\": {\n            \"type\": \"keyword\",\n            \"ignore_above\": 256\n          }\n        }\n      }\n    }\n  }\n}\n\n\n##写入数据，使用key和合适类型的value字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":[\n    {\n      \"name\":\"username\",\n      \"keywordValue\":\"tom\"\n    },\n    {\n       \"name\":\"age\",\n      \"intValue\":32\n\n    }\n\n   ]\n }\n\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":[\n    {\n      \"name\":\"login\",\n      \"dateValue\":\"2019-01-01\"\n    },\n    {\n       \"name\":\"email\",\n      \"IntValue\":32\n\n    }\n\n   ]\n }\n\n\n# Nested 查询，通过bool查询进行过滤\nPOST cookie_service/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"cookies\",\n      \"query\": {\n        \"bool\": {\n          \"filter\": [\n            {\n            \"term\": {\n              \"cookies.name\": \"age\"\n            }},\n            {\n              \"range\":{\n                \"cookies.intValue\":{\n                  \"gte\":30\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\n# 在Mapping中加入元信息，便于管理\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.0\"\n    }\n  }\n}\n\nGET softwares/_mapping\nPUT softwares/_doc/1\n{\n  \"software_version\":\"7.1.0\"\n}\n\nDELETE softwares\n# 优化,使用inner object\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.1\"\n    },\n    \"properties\": {\n      \"version\": {\n        \"properties\": {\n          \"display_name\": {\n            \"type\": \"keyword\"\n          },\n          \"hot_fix\": {\n            \"type\": \"byte\"\n          },\n          \"marjor\": {\n            \"type\": \"byte\"\n          },\n          \"minor\": {\n            \"type\": \"byte\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#通过 Inner Object 写入多个文档\nPUT softwares/_doc/1\n{\n  \"version\":{\n  \"display_name\":\"7.1.0\",\n  \"marjor\":7,\n  \"minor\":1,\n  \"hot_fix\":0  \n  }\n\n}\n\nPUT softwares/_doc/2\n{\n  \"version\":{\n  \"display_name\":\"7.2.0\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":0  \n  }\n}\n\nPUT softwares/_doc/3\n{\n  \"version\":{\n  \"display_name\":\"7.2.1\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":1  \n  }\n}\n\n\n# 通过 bool 查询，\nPOST softwares/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match\":{\n            \"version.marjor\":7\n          }\n        },\n        {\n          \"match\":{\n            \"version.minor\":2\n          }\n        }\n\n      ]\n    }\n  }\n}\n\n\n\n\n# Not Null 解决聚合的问题\nDELETE ratings\nPUT ratings\n{\n  \"mappings\": {\n      \"properties\": {\n        \"rating\": {\n          \"type\": \"float\",\n          \"null_value\": 1.0\n        }\n      }\n    }\n}\n\n\nPUT ratings/_doc/1\n{\n \"rating\":5\n}\nPUT ratings/_doc/2\n{\n \"rating\":null\n}\n\n\nPOST ratings/_search\nPOST ratings/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"avg\": {\n      \"avg\": {\n        \"field\": \"rating\"\n      }\n    }\n  }\n}\n\nPOST ratings/_search\n{\n  \"query\": {\n    \"term\": {\n      \"rating\": {\n        \"value\": 1\n      }\n    }\n  }\n}\n\n```\n\n\n\n# 7.7-第二部分总结与测验.md\n\n# 第二部分总结与测验\n```\nDELETE test\nPUT test/_doc/1\n{\n  \"content\":\"Hello World\"\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\n\n```\n\n\n# 8.1-集群身份认证与用户鉴权.md\n\n# 集群身份认证与用户鉴权\n- 如何为集群启用X-Pack Security\n- 如何为内置用户设置密码\n- 设置 Kibana与ElasticSearch通信鉴权\n- 使用安全API创建对特定索引具有有限访问权限的用户\n\nThis tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:\n\ndiscovery.type: single-node\n\n```\n#启动单节点\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true\n\n#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误\ncurl 'localhost:9200/_cat/nodes?pretty'\n\n#运行密码设定的命令，设置ES内置用户及其初始密码。\nbin/elasticsearch-setup-passwords interactive\n\ncurl -u elastic 'localhost:9200/_cat/nodes?pretty'\n\n\n# 修改 kibana.yml\nelasticsearch.username: \"kibana\"\nelasticsearch.password: \"changeme\"\n\n#启动。使用用户名，elastic，密码elastic\n./bin/kibana\n\n\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n#create a new role named read_only_orders, that satisfies the following criteria:\n#The role has no cluster privileges\n#The role only has access to indices that match the pattern sales_record\n#The index privileges are read, and view_index_metadata\n\n\n#create sales_user that satisfies the following criteria:\n# Use your own email address\n# Assign the user to two roles: read_only_orders and kibana_user\n\n\n#验证读权限,可以执行\nPOST orders/_search\n{}\n\n#验证写权限,报错\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n```\n\n# 8.2-集群内部安全通信.md\n\n#\n\n```\n# 生成证书\n# 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\nbin/elasticsearch-certutil ca\n\n#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：\nbin/elasticsearch-certutil cert --ca elastic-stack-ca.p12\n\n#将证书拷贝到 config/certs目录下\nelastic-certificates.p12\n\n\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E http.port=9201 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\n\n#不提供证书的节点，无法加入\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E http.port=9202 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate\n\n\n```\n\n\n```\n## elasticsearch.yml 配置\n\n#xpack.security.transport.ssl.enabled: true\n#xpack.security.transport.ssl.verification_mode: certificate\n\n#xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12\n#xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12\n\n\n```\n\n# 8.3-集群与外部间的安全通信.md\n\n\n\n```\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12\nxpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12\n\n```\n```\n\n\n# ES 启用 https\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.enabled=true -E xpack.security.http.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.path=certs/elastic-certificates.p12\n\n```\n\n```\n#Kibana 连接 ES https\n\n\n\n# 为kibana生成pem\nopenssl pkcs12 -in elastic-certificates.p12 -cacerts -nokeys -out elastic-ca.pem\n\n\nelasticsearch.hosts: [\"https://localhost:9200\"]\nelasticsearch.ssl.certificateAuthorities: [ \"/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem\" ]\nelasticsearch.ssl.verificationMode: certificate\n\n\n\n# 为 Kibna 配置 HTTPS\n# 生成后解压，包含了instance.crt 和 instance.key\nbin/elasticsearch-certutil ca --pem\n\nserver.ssl.enabled: true\nserver.ssl.certificate: config/certs/instance.crt\nserver.ssl.key: config/certs/instance.key\n\n\n```\n\n\n\n# 9.1-常见的集群部署方式.md\n\n# 常见的集群部署方式\n\n\n# 9.2-Hot&Warm架构与ShardFiltering.md\n\n# Hot & Warm 架构与 Shard Filtering\n## 课程代码\n```\n# 标记一个 Hot 节点\nbin/elasticsearch  -E node.name=hotnode -E cluster.name=geektime -E path.data=hot_data -E node.attr.my_node_type=hot\n\n# 标记一个 warm 节点\nbin/elasticsearch  -E node.name=warmnode -E cluster.name=geektime -E path.data=warm_data -E node.attr.my_node_type=warm\n\n# 查看节点\nGET /_cat/nodeattrs?v\n\n# 配置到 Hot节点\nPUT logs-2019-06-27\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.my_node_type\":\"hot\"\n  }\n}\n\n\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\nGET _cat/shards?v\n\n\n# 配置到 warm 节点\nPUT PUT logs-2019-06-27/_settings\n{  \n  \"index.routing.allocation.require.my_node_type\":\"warm\"\n}\n\n\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack2\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\"\n  }\n}\n\nPUT my_index1\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1\n  }\n}\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\nGET _cat/shards?v\nDELETE my_index1/_doc/1\n\n\n\n# Fore awareness\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack1\n\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\",\n    \"cluster.routing.allocation.awareness.force.my_rack_id.values\": \"rack1,rack2\"\n  }\n}\nGET _cluster/settings\n\n# 集群黄色\nGET _cluster/health\n\n# 副本无法分配\nGET _cat/shards?v\n\n\nGET _cluster/allocation/explain?pretty\n```\n# 9.3-如何对集群进行容量规划.md\n\n# 如何对集群进行容量规划\n## 代码Demo\n\n```\nPUT logs_2019-06-27\nPUT logs_2019-06-26\n\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"logs_2019-06-27\",\n        \"alias\": \"logs_write\"\n      }\n    },\n    {\n      \"remove\": {\n        \"index\": \"logs_2019-06-26\",\n        \"alias\": \"logs_write\"\n      }\n    }\n  ]\n}\n\n\n# POST /<logs-{now/d}/_search\nPOST /%3Clogs-%7Bnow%2Fd%7D%3E/_search\n\n# POST /<logs-{now/w}/_search\nPOST /%3Clogs-%7Bnow%2Fw%7D%3E/_search\n\n```\n\n# 9.4-分片设计及管理.md\n\n# 分片设计及管理\n\n# 9.5-在私有云上管理与部署Elasticsearch集群.md\n\n# 在私有云上管理与部署 Elasticsearch 集群\n\n# 9.6-在公有云上管理与部署Elasticsearch集群.md\n\n# 在公有云上管理与部署 Elasticsearch 集群\n\n# result.md\n\n# 10.1-生产环境常用配置与上线清单.md\n\n# 生产环境查用配置与线上清单\n\n# 10.10-一些运维相关的建议.md\n\n# 一些运维相关的建议\n```\n# 移动一个分片从一个节点到另外一个节点\n\nPOST _cluster/reroute\n{\n  \"commands\": [\n    {\n      \"move\": {\n        \"index\": \"index_name\",\n        \"shard\": 0,\n        \"from_node\": \"node_name_1\",\n        \"to_node\": \"node_name_2\"\n      }\n    }\n  ]\n}\n\n\n# Fore the allocation of an unassinged shard with a reason\n\nPOST _cluster/reroute?explain\n{\n  \"commands\": [\n    {\n      \"allocate\": {\n        \"index\": \"index_name\",\n        \"shard\": 0,\n        \"node\": \"nodename\"\n      }\n    }\n  ]\n}\n\n\n# remove the nodes from cluster \nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.exclude._ip\":\"the_IP_of_your_node\"\n  }\n}\n\n# Force a synced flush\nPOST _flush/synced\n\n\n# change the number of moving shards to balance the cluster\nPUT /_cluster/settings\n{\n  \"transient\": {\"cluster.routing.allocation.cluster_concurrent_rebalance\":2}\n}\n\n# change the number of shards being recovered simultanceously per node\nPUT _cluster/settings\n{\n  \"transient\": {\"cluster.routing.allocation.node_concurrent_recoveries\":5}\n}\n\n# Change the recovery speed\nPUT /_cluster/settings\n{\n  \"transient\": {\"indices.recovery.max_bytes_per_sec\": \"80mb\"}\n}\n\n# Change the number of concurrent streams for a recovery on a single node\nPUT _cluster/settings\n{\n  \"transient\": {\"indices.recovery.concurrent_streams\":6}\n}\n\n\n# Change the sinze of the search queue\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"threadpool.search.queue_size\":2000\n  }\n}\n\n# Clear the cache on a node\nPOST _cache/clear\n\n\n#Adjust the circuit breakers\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.total.limit\":\"40%\"\n  }\n}\n\n\n```\n\n# 10.2-监控Elasticsearch集群.md\n\n# 监控 Elasticsearch 集群\n```\n# Node Stats：\nGET _nodes/stats\n\n#Cluster Stats:\nGET _cluster/stats\n\n#Index Stats:\nGET kibana_sample_data_ecommerce/_stats\n\n#Pending Cluster Tasks API:\nGET _cluster/pending_tasks\n\n# 查看所有的 tasks，也支持 cancel task\nGET _tasks\n\n\nGET _nodes/thread_pool\nGET _nodes/stats/thread_pool\nGET _cat/thread_pool?v\nGET _nodes/hot_threads\nGET _nodes/stats/thread_pool\n\n\n# 设置 Index Slowlogs\n# the first 1000 characters of the doc's source will be logged\nPUT my_index/_settings\n{\n  \"index.indexing.slowlog\":{\n    \"threshold.index\":{\n      \"warn\":\"10s\",\n      \"info\": \"4s\",\n      \"debug\":\"2s\",\n      \"trace\":\"0s\"\n    },\n    \"level\":\"trace\",\n    \"source\":1000  \n  }\n}\n\n# 设置查询\nDELETE my_index\n//\"0\" logs all queries\nPUT my_index/\n{\n  \"settings\": {\n    \"index.search.slowlog.threshold\": {\n      \"query.warn\": \"10s\",\n      \"query.info\": \"3s\",\n      \"query.debug\": \"2s\",\n      \"query.trace\": \"0s\",\n      \"fetch.warn\": \"1s\",\n      \"fetch.info\": \"600ms\",\n      \"fetch.debug\": \"400ms\",\n      \"fetch.trace\": \"0s\"\n    }\n  }\n}\n\nGET my_index\n\n\n```\n\n# 10.3-诊断集群的潜在问题.md\n\n# 诊断集群的潜在问题\n# 10.4-解决集群Yellow与Red的问题.md\n\n# 集群健康与问题排查\n```\n#案例1\nDELETE mytest\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":3,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.box_type\":\"hott\"\n  }\n}\n\n\n\n\n\n# 检查集群状态，查看是否有节点丢失，有多少分片无法分配\nGET /_cluster/health/\n\n# 查看索引级别,找到红色的索引\nGET /_cluster/health?level=indices\n\n\n#查看索引的分片\nGET _cluster/health?level=shards\n\n# Explain 变红的原因\nGET /_cluster/allocation/explain\n\nGET /_cat/shards/mytest\nGET _cat/nodeattrs\n\nDELETE mytest\nGET /_cluster/health/\n\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":3,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.box_type\":\"hot\"\n  }\n}\n\nGET /_cluster/health/\n\n#案例2, Explain 看 hot 上的 explain\nDELETE mytest\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1,\n    \"index.routing.allocation.require.box_type\":\"hot\"\n  }\n}\n\nGET _cluster/health\nGET _cat/shards/mytest\nGET /_cluster/allocation/explain\n\nPUT mytest/_settings\n{\n    \"number_of_replicas\": 0\n}\n\n```\n\n# 10.5-提升集群写性能.md\n\n# 提升集群写性能\n```\nDELETE myindex\nPUT myindex\n{\n  \"settings\": {\n    \"index\": {\n      \"refresh_interval\": \"30s\",\n      \"number_of_shards\": \"2\"\n    },\n    \"routing\": {\n      \"allocation\": {\n        \"total_shards_per_node\": \"3\"\n      }\n    },\n    \"translog\": {\n      \"sync_interval\": \"30s\",\n      \"durability\": \"async\"\n    },\n    \"number_of_replicas\": 0\n  },\n  \"mappings\": {\n    \"dynamic\": false,\n    \"properties\": {}\n  }\n}\n```\n\n# 10.6-提升集群读性能.md\n\n# 提升集群读性能\n```\nPUT blogs/_doc/1\n{\n  \"title\":\"elasticsearch\"\n}\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\n          \"title\": \"elasticsearch\"\n        }}\n      ],\n      \n      \"filter\": {\n        \"script\": {\n          \"script\": {\n            \"source\": \"doc['title.keyword'].value.length()>5\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"elasticsearch\"}},\n        {\n          \"range\": {\n            \"publish_date\": {\n              \"gte\": 2017,\n              \"lte\": 2019\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n# 10.7-集群压力测试.md\n\n# 集群压力测试\n```\npip3 install esrally\n\nesrally configure\n\n# 只测试 1000条数据\nesrally --distribution-version=7.1.0 --test-mode\n\n# 测试完整数据\nesrally --distribution-version=7.1.0\n\n```\n- https://github.com/elastic/rally-tracks\n- https://logz.io/blog/rally/\n\n\n# 10.9-缓存及使用Breaker限制内存使用.md\n\n# 缓存及使用Circuit Breaker限制内存使用\n```\nGET _cat/nodes?v\n\nGET _nodes/stats/indices?pretty\n\nGET _cat/nodes?v&h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count\n\nGET _cat/nodes?h=name,port,segments.memory,segments.index_writer_memory,fielddata.memory_size,query_cache.memory_size,request_cache.memory_size&v\n\n\nPUT /_cluster/settings\n{\n    \"persistent\" : {\n       \"indices.breaker.request.limit\" : \"90%\"\n    }\n}\n\n```\n## 补充阅读\n- https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker\n\n\n# 11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md\n\n# 使用 shrink与rolloverAPI有效的管理索引\n```\n\n\n# 打开关闭索引\nDELETE test\n#查看索引是否存在\nHEAD test\n\nPUT test/_doc/1\n{\n  \"key\":\"value\"\n}\n\n#关闭索引\nPOST /test/_close\n#索引存在\nHEAD test\n# 无法查询\nPOST test/_count\n\n#打开索引\nPOST /test/_open\nPOST test/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\nPOST test/_count\n\n\n# 在一个 hot-warm-cold的集群上进行测试\nGET _cat/nodes\nGET _cat/nodeattrs\n\nDELETE my_source_index\nDELETE my_target_index\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n# 分片数3，会失败\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 3,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n\n\n# 报错，因为没有置成 readonly\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n#将 my_source_index 设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n# 报错，必须都在一个节点\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\nDELETE my_source_index\n## 确保分片都在 hot\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0,\n   \"index.routing.allocation.include.box_type\":\"hot\"\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n#设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n\nGET _cat/shards/my_target_index\n\n# My target_index状态为也只读\nPUT my_target_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\n# Split Index\nDELETE my_source_index\nDELETE my_target_index\n\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n# 必须是倍数\nPOST my_source_index/_split/my_target\n{\n  \"settings\": {\n    \"index.number_of_shards\": 10\n  }\n}\n\n# 必须是只读\nPOST my_source_index/_split/my_target\n{\n  \"settings\": {\n    \"index.number_of_shards\": 8\n  }\n}\n\n\n#设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n\nPOST my_source_index/_split/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_shards\": 8,\n    \"index.number_of_replicas\":0\n  }\n}\n\nGET _cat/shards/my_target_index\n\n\n\n# write block\nPUT my_target_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\n#Rollover API\nDELETE nginx-logs*\n# 不设定 is_write_true\n# 名字符合命名规范\nPUT /nginx-logs-000001\n{\n  \"aliases\": {\n    \"nginx_logs_write\": {}\n  }\n}\n\n# 多次写入文档\nPOST nginx_logs_write/_doc\n{\n  \"log\":\"something\"\n}\n\n\nPOST /nginx_logs_write/_rollover\n{\n  \"conditions\": {\n    \"max_age\":   \"1d\",\n    \"max_docs\":  5,\n    \"max_size\":  \"5gb\"\n  }\n}\n\nGET /nginx_logs_write/_count\n# 查看 Alias信息\nGET /nginx_logs_write\n\n\nDELETE apache-logs*\n\n\n# 设置 is_write_index\nPUT apache-logs1\n{\n  \"aliases\": {\n    \"apache_logs\": {\n      \"is_write_index\":true\n    }\n  }\n}\nPOST apache_logs/_count\n\nPOST apache_logs/_doc\n{\n  \"key\":\"value\"\n}\n\n# 需要指定 target 的名字\nPOST /apache_logs/_rollover/apache-logs8xxxx\n{\n  \"conditions\": {\n    \"max_age\":   \"1d\",\n    \"max_docs\":  1,\n    \"max_size\":  \"5gb\"\n  }\n}\n\n\n# 查看 Alias信息\nGET /apache_logs\n\n\n```\n\n# 11.2-索引全生命周期管理及工具介绍.md\n\n# 索引全生命周期管理及工具介绍\n```\n\n# 运行三个节点，分片 将box_type设置成 hot，warm和cold\n# 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\n\n\n\nDELETE *\n\n\n\n# 设置 1秒刷新1次，生产环境10分种刷新一次\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.lifecycle.poll_interval\":\"1s\"\n  }\n}\n\n# 设置 Policy\nPUT /_ilm/policy/log_ilm_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_docs\": 5\n          }\n        }\n      },\n      \"warm\": {\n        \"min_age\": \"10s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"warm\"\n            }\n          }\n        }\n      },\n      \"cold\": {\n        \"min_age\": \"15s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"cold\"\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"20s\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n\n\n\n# 设置索引模版\nPUT /_template/log_ilm_template\n{\n  \"index_patterns\" : [\n      \"ilm_index-*\"\n    ],\n    \"settings\" : {\n      \"index\" : {\n        \"lifecycle\" : {\n          \"name\" : \"log_ilm_policy\",\n          \"rollover_alias\" : \"ilm_alias\"\n        },\n        \"routing\" : {\n          \"allocation\" : {\n            \"include\" : {\n              \"box_type\" : \"hot\"\n            }\n          }\n        },\n        \"number_of_shards\" : \"1\",\n        \"number_of_replicas\" : \"0\"\n      }\n    },\n    \"mappings\" : { },\n    \"aliases\" : { }\n}\n\n\n\n#创建索引\nPUT ilm_index-000001\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 0,\n    \"index.lifecycle.name\": \"log_ilm_policy\",\n    \"index.lifecycle.rollover_alias\": \"ilm_alias\",\n    \"index.routing.allocation.include.box_type\":\"hot\"\n  },\n  \"aliases\": {\n    \"ilm_alias\": {\n      \"is_write_index\": true\n    }\n  }\n}\n\n# 对 Alias写入文档\nPOST  ilm_alias/_doc\n{\n  \"dfd\":\"dfdsf\"\n}\n\n```\n\n# 12.1-Logstash入门及架构介绍.md\n\n# Logstash 入门及架构介绍\n```\n\n\n# 一个 Demo， demo 运行\nsudo bin/logstash -f logstash-filter.conf\n\n# demo数据\n127.0.0.1 - - [11/Dec/2013:00:01:45 -0800] \"GET /xampp/status.php HTTP/1.1\" 200 3891 \"http://cadenza/xampp/navi.php\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n\n\n# codec demo\n\n\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>json}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> dots}}\"\n\n\nsudo bin/logstash -f multiline-exception.conf\n\n# 多行数据，异常\nException in thread \"main\" java.lang.NullPointerException\n        at com.example.myproject.Book.getTitle(Book.java:16)\n        at com.example.myproject.Author.getBookTitles(Author.java:25)\n        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)\n\n\n\n# 一个实例\nhttps://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\n\n```\n\n\n# 12.2-利用JDBC插件导入数据到Elasticsearch.md\n\n# Logstash插件及文档介绍\n```\nhttps://spring.io/guides/gs/accessing-data-mysql/\ncreate database db_example;\nuse db_example;\nshow tables;\ndrop table user;\nselect * from user;\n\n\n\n# 新增用户\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\n#查看所有的用户\ncurl 'localhost:8080/demo/all'\n\n# 更新用户\ncurl -X PUT localhost:8080/demo/update -d id=16 -d name=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ\n\n# 删除用户\ncurl -X DELETE localhost:8080/demo/delete -d id=15\n\n\n\nmysql-demo.conf\n\n# 创建 alias，只显示没有被标记 deleted的用户\nPOST /_aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"users\",\n        \"alias\": \"view_users\",\n         \"filter\" : { \"term\" : { \"is_deleted\" : false } }\n      }\n    }\n  ]\n}\n\n# 通过 Alias查询，查不到被标记成 deleted的用户\nPOST view_users/_search\n{\n\n}\n\n\nPOST view_users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 12.3-Beats介绍.md\n\n# Beats介绍\n```\n\n##\n# 查看 packetbeat 模块\n# 设置 packetbeat 的mysql 模块\n# 启动运行\n#\n./metricbeat modules list\n./metricbeat modules enable mysql\n./metricbeat setup --dashboards\n\n# 安装mysql\ncreate database db_example\nuse db_example;\nshow tables;\nselect * from user\n\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\ncurl 'localhost:8080/demo/all'\n\n\n# 配置 packetbeat\n# 启动\n修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控\n\nsudo chown root packetbeat.yml\nsudo ./packetbeat setup --dashboards\nsudo ./packetbeat\n\n\n# 查看所有 Filebeat 模块\n# 查看所有的modules\n./filebeat modules list\n\n#\n./filebeat modules enable mysql\n\n```\n\n\n# 13.1-使用IndexPattern配置数据.md\n\n\n```\n\nlocalhost:5601/status\n\n\n\n\nPUT /logstash-2015.05.18\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\nPUT /logstash-2015.05.19\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /logstash-2015.05.20\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl\n\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\n\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"logs.jsonl\"\n\n\n\nGET /_cat/indices?v\n\n```\n\n\n# 13.2-使用KibanaDiscover探索数据.md\n\n# 使用Kibana Discovery 探索数据\n```\n\n设置时间过滤器\n搜索你的数据\n根据字段进行过滤\n查看文档数据\n查看文档上下文\n暂时字段数据统计\nSave Query\n\n\n```\n\n\n# 13.3-基本可视化组件介绍.md\n\n# 基本可视化组件介绍\n```\n\nPUT /shakespeare\n{\n  \"mappings\": {\n    \"properties\": {\n    \"speaker\": {\"type\": \"keyword\"},\n    \"play_name\": {\"type\": \"keyword\"},\n    \"line_id\": {\"type\": \"integer\"},\n    \"speech_number\": {\"type\": \"integer\"}\n    }\n  }\n}\n\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/bank/account/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"accounts.json\"\nInvoke-RestMethod \"http://localhost:9200/shakespeare/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"shakespeare.json\"\n\n\n```\n\n\n# 13.4-构建Dashboard.md\n\n# 构建Dashboard\n```\n- 创建仪表潘\n- 加载仪表盘\n- 共享仪表盘\n\n```\n\n\n# 14.3用机器学习实现时序数据的异常检测-上.md\n\nmkdir server_metrics\ncd server_metrics\nwget https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\ntar -xvf server_metrics.tar.gz\n\n\n# 14.5-用ELK进行日志管理.md\n\n# 用 ELK 来做日志管理\n```\n./filebeat modules list\n./filebeat modules enable system\n./filebeat modules enable elasticsearch\n\n\n## 进 modules.d 编辑相应的文件，修改log路径\n\n./filebeat setup –dashboards\n\n./filebeat export template | more\n\n./filebeat -e\n\n```\n\n# 14.6-用Canvas做数据演示.md\n\nPOST elasticoffee/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"by\": {\n      \"terms\": {\n        \"field\": \"beverage.keyword\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n# 4.1-基于词项和基于全文的搜索.md\n\n# 基于词项和基于全文的搜索\n\n\n```\nDELETE products\nPUT products\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  }\n}\n\n\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"productID\" : \"XHDK-A-1293-#fJ3\",\"desc\":\"iPhone\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"productID\" : \"KDKE-B-9947-#kL5\",\"desc\":\"iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"productID\" : \"JODL-X-1937-#pV7\",\"desc\":\"MBP\" }\n\nGET /products\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n        //\"value\": \"iPhone\"\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        //\"value\": \"iPhone\"\n        //\"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"productID\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\n\n\n\nPOST /products/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n\n    }\n  }\n}\n\n\n#设置 position_increment_gap\nDELETE groups\nPUT groups\n{\n  \"mappings\": {\n    \"properties\": {\n      \"names\":{\n        \"type\": \"text\",\n        \"position_increment_gap\": 0\n      }\n    }\n  }\n}\n\nGET groups/_mapping\n\nPOST groups/_doc\n{\n  \"names\": [ \"John Water\", \"Water Smith\"]\n}\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": {\n        \"query\": \"Water Water\",\n        \"slop\": 100\n      }\n    }\n  }\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": \"Water Smith\"\n    }\n  }\n}\n```\n\n# 4.10-综合排序：Function Score Query 优化算分.md\n\n# 综合排序：Function Score Query 优化算分\n```\nDELETE blogs\nPUT /blogs/_doc/1\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   0\n}\n\nPUT /blogs/_doc/2\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   100\n}\n\nPUT /blogs/_doc/3\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   1000000\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\"\n      }\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\"\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      },\n      \"boost_mode\": \"sum\",\n      \"max_boost\": 3\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"random_score\": {\n        \"seed\": 911119\n      }\n    }\n  }\n}\n```\n\n# 4.12-自动补全与基于上下文的提示.md\n\n# 自动补全与基于上下文的提示\n```\nDELETE articles\nPUT articles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title_completion\":{\n        \"type\": \"completion\"\n      }\n    }\n  }\n}\n\nPOST articles/_bulk\n{ \"index\" : { } }\n{ \"title_completion\": \"lucene is very cool\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch builds on top of lucene\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch rocks\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"elastic is the company behind ELK stack\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elk stack rocks\"}\n{ \"index\" : {} }\n\n\nPOST articles/_search?pretty\n{\n  \"size\": 0,\n  \"suggest\": {\n    \"article-suggester\": {\n      \"prefix\": \"elk \",\n      \"completion\": {\n        \"field\": \"title_completion\"\n      }\n    }\n  }\n}\n\n\nDELETE comments\nPUT comments\nPUT comments/_mapping\n{\n  \"properties\": {\n    \"comment_autocomplete\":{\n      \"type\": \"completion\",\n      \"contexts\":[{\n        \"type\":\"category\",\n        \"name\":\"comment_category\"\n      }]\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"I love the star war movies\",\n  \"comment_autocomplete\":{\n    \"input\":[\"star wars\"],\n    \"contexts\":{\n      \"comment_category\":\"movies\"\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"Where can I find a Starbucks\",\n  \"comment_autocomplete\":{\n    \"input\":[\"starbucks\"],\n    \"contexts\":{\n      \"comment_category\":\"coffee\"\n    }\n  }\n}\n\n\nPOST comments/_search\n{\n  \"suggest\": {\n    \"MY_SUGGESTION\": {\n      \"prefix\": \"sta\",\n      \"completion\":{\n        \"field\":\"comment_autocomplete\",\n        \"contexts\":{\n          \"comment_category\":\"coffee\"\n        }\n      }\n    }\n  }\n}\n```\n\n\n# 4.13-跨集群搜索.md\n\n# 跨集群搜索\n```\n//启动3个集群\n\nbin/elasticsearch -E node.name=cluster0node -E cluster.name=cluster0 -E path.data=cluster0_data -E discovery.type=single-node -E http.port=9200 -E transport.port=9300\nbin/elasticsearch -E node.name=cluster1node -E cluster.name=cluster1 -E path.data=cluster1_data -E discovery.type=single-node -E http.port=9201 -E transport.port=9301\nbin/elasticsearch -E node.name=cluster2node -E cluster.name=cluster2 -E path.data=cluster2_data -E discovery.type=single-node -E http.port=9202 -E transport.port=9302\n\n\n//在每个集群上设置动态的设置\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster\": {\n      \"remote\": {\n        \"cluster0\": {\n          \"seeds\": [\n            \"127.0.0.1:9300\"\n          ],\n          \"transport.ping_schedule\": \"30s\"\n        },\n        \"cluster1\": {\n          \"seeds\": [\n            \"127.0.0.1:9301\"\n          ],\n          \"transport.compress\": true,\n          \"skip_unavailable\": true\n        },\n        \"cluster2\": {\n          \"seeds\": [\n            \"127.0.0.1:9302\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#cURL\ncurl -XPUT \"http://localhost:9200/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9201/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9202/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\n\n#创建测试数据\ncurl -XPOST \"http://localhost:9200/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user1\",\"age\":10}'\n\ncurl -XPOST \"http://localhost:9201/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user2\",\"age\":20}'\n\ncurl -XPOST \"http://localhost:9202/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user3\",\"age\":30}'\n\n\n#查询\nGET /users,cluster1:users,cluster2:users/_search\n{\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20,\n        \"lte\": 40\n      }\n    }\n  }\n}\n\n```\n\n\n# 4.2-结构化搜索.md\n\n# 结构化搜索\n\n```\n\n#结构化搜索，精确匹配\nDELETE products\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\nGET products/_mapping\n\n\n\n#对布尔值 match 查询，有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"avaliable\": true\n    }\n  }\n}\n\n\n\n#对布尔值，通过constant score 转成 filtering，没有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": true\n        }\n      }\n    }\n  }\n}\n\n\n#数字类型 Term\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": 30\n    }\n  }\n}\n\n#数字类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"price\": [\n            \"20\",\n            \"30\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#数字 Range 查询\nGET products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"price\" : {\n                        \"gte\" : 20,\n                        \"lte\"  : 30\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n# 日期 range\nPOST products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"date\" : {\n                      \"gte\" : \"now-1y\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n#exists查询\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"exists\": {\n          \"field\": \"date\"\n        }\n      }\n    }\n  }\n}\n\n#处理多值字段\nPOST /movies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\"}\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"] }\n\n\n#处理多值字段，term 查询是包含，而不是等于\nPOST movies/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"genre.keyword\": \"Comedy\"\n        }\n      }\n    }\n  }\n}\n\n\n#字符类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"productID.keyword\": [\n            \"QQPX-R-3956-#aD8\",\n            \"JODL-X-1937-#pV7\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": 30\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n    }\n  }\n}\n\n#对布尔数值\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": \"false\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"avaliable\": {\n        \"value\": \"false\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": {\n        \"value\": \"20\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": \"20\"\n    }\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"bool\": {\n          \"must_not\": {\n            \"exists\": {\n              \"field\": \"date\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n```\n\n# 4.3-搜索的相关性算分.md\n\n# 搜索的相关性算分\n\n```\n\n\nPUT testscore\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n\n\nPUT testscore/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"we use Elasticsearch to power the search\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"we like elasticsearch\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"The scoring of documents is caculated by the scoring formula\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"content\":\"you know, for search\" }\n\n\n\nPOST /testscore/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"content\":\"you\"\n      //\"content\": \"elasticsearch\"\n      //\"content\":\"the\"\n      //\"content\": \"the elasticsearch\"\n    }\n  }\n}\n\nPOST testscore/_search\n{\n    \"query\": {\n        \"boosting\" : {\n            \"positive\" : {\n                \"term\" : {\n                    \"content\" : \"elasticsearch\"\n                }\n            },\n            \"negative\" : {\n                 \"term\" : {\n                     \"content\" : \"like\"\n                }\n            },\n            \"negative_boost\" : 0.2\n        }\n    }\n}\n\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"more_like_this\": {\n      \"fields\": [\n        \"title^10\",\"overview\"\n      ],\n      \"like\": [{\"_id\":\"14191\"}],\n      \"min_term_freq\": 1,\n      \"max_query_terms\": 12\n    }\n  }\n}\n\n\n\n```\n\n\n# 4.4-Query&Filtering实现多字符串多字段查询.md\n\n# Query & Filtering 与多字符串多字段查询\n\n```\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\n\n#基本语法\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :1\n    }\n  }\n}\n\n#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题\nPOST /newmovies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\",\"genre_count\":1 }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"],\"genre_count\":2 }\n\n#must，有算分\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n\n      ]\n    }\n  }\n}\n\n#Filter。不参与算分，结果的score是0\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n        ]\n\n    }\n  }\n}\n\n\n#Filtering Context\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      }\n    }\n  }\n}\n\n\n#Query Context\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"term\": {\n            \"productID.keyword\": {\n              \"value\": \"JODL-X-1937-#pV7\"}}\n        },\n        {\"term\": {\"avaliable\": {\"value\": true}}\n        }\n      ]\n    }\n  }\n}\n\n\n#嵌套，实现了 should not 逻辑\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"price\": \"30\"\n        }\n      },\n      \"should\": [\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": {\n                \"avaliable\": \"false\"\n              }\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n\n\n#Controll the Precision\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :2\n    }\n  }\n}\n\n\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"brown\" }},\n        { \"term\": { \"text\": \"red\" }},\n        { \"term\": { \"text\": \"quick\"   }},\n        { \"term\": { \"text\": \"dog\"   }}\n      ]\n    }\n  }\n}\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"quick\" }},\n        { \"term\": { \"text\": \"dog\"   }},\n        {\n          \"bool\":{\n            \"should\":[\n               { \"term\": { \"text\": \"brown\" }},\n                 { \"term\": { \"text\": \"brown\" }},\n            ]\n          }\n\n        }\n      ]\n    }\n  }\n}\n\n\nDELETE blogs\nPOST /blogs/_bulk\n{ \"index\": { \"_id\": 1 }}\n{\"title\":\"Apple iPad\", \"content\":\"Apple iPad,Apple iPad\" }\n{ \"index\": { \"_id\": 2 }}\n{\"title\":\"Apple iPad,Apple iPad\", \"content\":\"Apple iPad\" }\n\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\"match\": {\n          \"title\": {\n            \"query\": \"apple,ipad\",\n            \"boost\": 1.1\n          }\n        }},\n\n        {\"match\": {\n          \"content\": {\n            \"query\": \"apple,ipad\",\n            \"boost\":\n          }\n        }}\n      ]\n    }\n  }\n}\n\nDELETE news\nPOST /news/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"Apple Mac\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"Apple iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"Apple employee like Apple Pie and Apple Juice\" }\n\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      },\n      \"must_not\": {\n        \"match\":{\"content\":\"pie\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"match\": {\n          \"content\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"match\": {\n          \"content\": \"pie\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\n```\n\n# 4.5-单字符串多字段查询-DisMaxQuery.md\n\n# 单字符串多字段查询：Dis Max Query\n```\n\nPUT /blogs/_doc/1\n{\n    \"title\": \"Quick brown rabbits\",\n    \"body\":  \"Brown rabbits are commonly seen.\"\n}\n\nPUT /blogs/_doc/2\n{\n    \"title\": \"Keeping pets healthy\",\n    \"body\":  \"My quick brown fox eats rabbits on a regular basis.\"\n}\n\nPOST /blogs/_search\n{\n    \"query\": {\n        \"bool\": {\n            \"should\": [\n                { \"match\": { \"title\": \"Brown fox\" }},\n                { \"match\": { \"body\":  \"Brown fox\" }}\n            ]\n        }\n    }\n}\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ]\n        }\n    }\n}\n\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\n\n```\n\n# 4.6-单字符串多字段查询-Multi-Match.md\n\n# 单字符串多字段查询：Multi Match\n```\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\": \"best_fields\",\n      \"query\": \"Quick pets\",\n      \"fields\": [\"title\",\"body\"],\n      \"tie_breaker\": 0.2,\n      \"minimum_should_match\": \"20%\"\n    }\n  }\n}\n\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": \"*_title\"\n    }\n}\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": [ \"*_title\", \"chapter_title^2\" ]\n    }\n}\n\n\n\nDELETE /titles\nPUT /titles\n{\n    \"settings\": { \"number_of_shards\": 1 },\n    \"mappings\": {\n        \"my_type\": {\n            \"properties\": {\n                \"title\": {\n                    \"type\":     \"string\",\n                    \"analyzer\": \"english\",\n                    \"fields\": {\n                        \"std\":   {\n                            \"type\":     \"string\",\n                            \"analyzer\": \"standard\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\"\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\n\nGET titles/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"barking dogs\"\n    }\n  }\n}\n\nDELETE /titles\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\",\n        \"fields\": {\"std\": {\"type\": \"text\",\"analyzer\": \"standard\"}}\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title\", \"title.std\" ]\n        }\n    }\n}\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title^10\", \"title.std\" ]\n        }\n    }\n}\n\n```\n\n# 4.7-多语言及中文分词与检索.md\n\n# 多语言及中文分词与检索\n\n- 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”\n\n- 你也想犯范范玮琪犯过的错吗\n- 校长说衣服上除了校徽别别别的\n- 这几天天天天气不好\n- 我背有点驼，麻麻说“你的背得背背背背佳\n\n```\n#stop word\n\nDELETE my_index\nPUT /my_index/_doc/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/_doc/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\n\nPOST my_index/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"not happy fox\"\n    }\n  }\n}\n\n\n#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:\n\nDELETE my_index\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"analyzer\": \"english\"\n        }\n      }\n    }\n  }\n}\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"fields\": {\n            \"english\": {\n              \"type\":     \"string\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /my_index/blog/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/blog/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\nGET /_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\":     \"most_fields\",\n      \"query\":    \"not happy foxes\",\n      \"fields\": [ \"title\", \"title.english\" ]\n    }\n  }\n}\n\n\n#安装插件\n./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\n#安装插件\nbin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\n\n\n\n\n#ik_max_word\n#ik_smart\n#hanlp: hanlp默认分词\n#hanlp_standard: 标准分词\n#hanlp_index: 索引分词\n#hanlp_nlp: NLP分词\n#hanlp_n_short: N-最短路分词\n#hanlp_dijkstra: 最短路分词\n#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）\n#hanlp_speed: 极速词典分词\n\nPOST _analyze\n{\n  \"analyzer\": \"hanlp_standard\",\n  \"text\": [\"剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜\"]\n\n}     \n\n#Pinyin\nPUT /artists/\n{\n    \"settings\" : {\n        \"analysis\" : {\n            \"analyzer\" : {\n                \"user_name_analyzer\" : {\n                    \"tokenizer\" : \"whitespace\",\n                    \"filter\" : \"pinyin_first_letter_and_full_pinyin_filter\"\n                }\n            },\n            \"filter\" : {\n                \"pinyin_first_letter_and_full_pinyin_filter\" : {\n                    \"type\" : \"pinyin\",\n                    \"keep_first_letter\" : true,\n                    \"keep_full_pinyin\" : false,\n                    \"keep_none_chinese\" : true,\n                    \"keep_original\" : false,\n                    \"limit_first_letter_length\" : 16,\n                    \"lowercase\" : true,\n                    \"trim_whitespace\" : true,\n                    \"keep_none_chinese_in_first_letter\" : true\n                }\n            }\n        }\n    }\n}\n\n\nGET /artists/_analyze\n{\n  \"text\": [\"刘德华 张学友 郭富城 黎明 四大天王\"],\n  \"analyzer\": \"user_name_analyzer\"\n}\n\n\n```\n\n## 相关资源\n- Elasticsearch IK分词插件 https://github.com/medcl/elasticsearch-analysis-ik/releases\n- Elasticsearch hanlp 分词插件 https://github.com/KennFalcon/elasticsearch-analysis-hanlp\n\n- 分词算法综述 https://zhuanlan.zhihu.com/p/50444885\n\n### 一些分词工具，供参考：\n- 中科院计算所NLPIR http://ictclas.nlpir.org/nlpir/\n- ansj分词器 https://github.com/NLPchina/ansj_seg\n- 哈工大的LTP https://github.com/HIT-SCIR/ltp\n- 清华大学THULAC https://github.com/thunlp/THULAC\n- 斯坦福分词器 https://nlp.stanford.edu/software/segmenter.shtml\n- Hanlp分词器 https://github.com/hankcs/HanLP\n- 结巴分词 https://github.com/yanyiwu/cppjieba\n- KCWS分词器(字嵌入+Bi-LSTM+CRF) https://github.com/koth/kcws\n- ZPar https://github.com/frcchang/zpar/releases\n- IKAnalyzer https://github.com/wks/ik-analyzer\n\n\n# 4.8-SpaceJam一个全文搜索的实例.md\n\n# Space Jam，一次全文搜索的实例\n\n## 环境要求\n- Python 2.7.15\n- 可以使用pyenv管理多个python版本（可选）\n\n## 进入 tmdb-search目录\nRun\npip install -r requirements.txt\nRun python ./ingest_tmdb_from_file.py\n```\nPOST tmdb/_search\n{\n\"_source\": [\"title\",\"overview\"],\n \"query\": {\n   \"match_all\": {}\n }\n}\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"basketball with cartoon aliens\",\n      \"fields\": [\"title\",\"overview\"]\n    }\n  },\n  \"highlight\" : {\n        \"fields\" : {\n            \"overview\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] },\n            \"title\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] }\n\n        }\n    }\n}\n```\n\n## 相关\n- Windows 安装 pyenv https://github.com/pyenv-win/pyenv-win\n- Mac 安装pyenv https://segmentfault.com/a/1190000017403221\n- Linux 安装 pyenv https://blog.csdn.net/GX_1_11_real/article/details/80237064\n- Python.org https://www.python.org/\n\n\n# 4.9-使用SearchTemplate和IndexAlias进行查询.md\n\n# 使用 Search Template 和 Index Alias 查询\n\n```\nPOST _scripts/tmdb\n{\n  \"script\": {\n    \"lang\": \"mustache\",\n    \"source\": {\n      \"_source\": [\n        \"title\",\"overview\"\n      ],\n      \"size\": 20,\n      \"query\": {\n        \"multi_match\": {\n          \"query\": \"{{q}}\",\n          \"fields\": [\"title\",\"overview\"]\n        }\n      }\n    }\n  }\n}\nDELETE _scripts/tmdb\n\nGET _scripts/tmdb\n\nPOST tmdb/_search/template\n{\n    \"id\":\"tmdb\",\n    \"params\": {\n        \"q\": \"basketball with cartoon aliens\"\n    }\n}\n\n\nPUT movies-2019/_doc/1\n{\n  \"name\":\"the matrix\",\n  \"rating\":5\n}\n\nPUT movies-2019/_doc/2\n{\n  \"name\":\"Speed\",\n  \"rating\":3\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-latest\"\n      }\n    }\n  ]\n}\n\nPOST movies-latest/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-lastest-highrate\",\n        \"filter\": {\n          \"range\": {\n            \"rating\": {\n              \"gte\": 4\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n\nPOST movies-lastest-highrate/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\n\n```\n\n\n# 5.1-集群分布式模型及选主与脑裂问题.md\n\n# 集群分布式模型及选主与脑裂问题\n\n```\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data\nbin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.data=node3_data\n\n```\n# 5.2-分片与集群的故障转移.md\n\n# 分片与集群的故障转移\n\n\n# 5.3-文档分布式存储.md\n\n# 文档分布式存储\n\n\n# 5.4-分片及其生命周期.md\n\n# 分片及其生命周期\n\n\n# 5.5-剖析分布式查询及相关性评分.md\n\n# 剖析分布式查询及相关性评分\n```\nDELETE message\nPUT message\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  }\n}\n\nGET message\n\nPOST message/_doc?routing=1\n{\n  \"content\":\"good\"\n}\n\nPOST message/_doc?routing=2\n{\n  \"content\":\"good morning\"\n}\n\nPOST message/_doc?routing=3\n{\n  \"content\":\"good morning everyone\"\n}\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n\nPOST message/_search?search_type=dfs_query_then_fetch\n{\n\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 5.6-排序及DocValues&Fielddata.md\n\n# 排序及Doc Values & Fielddata\n```\n#单字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}}\n  ]\n}\n\n#多字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}},\n    {\"_doc\":{\"order\": \"asc\"}},\n    {\"_score\":{ \"order\": \"desc\"}}\n  ]\n}\n\nGET kibana_sample_data_ecommerce/_mapping\n\n#对 text 字段进行排序。默认会报错，需打开fielddata\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"customer_full_name\": {\"order\": \"desc\"}}\n  ]\n}\n\n#打开 text的 fielddata\nPUT kibana_sample_data_ecommerce/_mapping\n{\n  \"properties\": {\n    \"customer_full_name\" : {\n          \"type\" : \"text\",\n          \"fielddata\": true,\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n  }\n}\n\n#关闭 keyword的 doc values\nPUT test_keyword\nPUT test_keyword/_mapping\n{\n  \"properties\": {\n    \"user_name\":{\n      \"type\": \"keyword\",\n      \"doc_values\":false\n    }\n  }\n}\n\nDELETE test_keyword\n\nPUT test_text\nPUT test_text/_mapping\n{\n  \"properties\": {\n    \"intro\":{\n      \"type\": \"text\",\n      \"doc_values\":true\n    }\n  }\n}\n\nDELETE test_text\n\n\nDELETE temp_users\nPUT temp_users\nPUT temp_users/_mapping\n{\n  \"properties\": {\n    \"name\":{\"type\": \"text\",\"fielddata\": true},\n    \"desc\":{\"type\": \"text\",\"fielddata\": true}\n  }\n}\n\nPost temp_users/_doc\n{\"name\":\"Jack\",\"desc\":\"Jack is a good boy!\",\"age\":10}\n\n#打开fielddata 后，查看 docvalue_fields数据\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"name\",\"desc\"\n    ]\n}\n\n#查看整型字段的docvalues\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"age\"\n    ]\n}\n```\n\n\n# 5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI.md\n\n# 分页与遍历 - From, Size, Search_after & Scroll API\n```\n\nPOST tmdb/_search\n{\n  \"from\": 10000,\n  \"size\": 1,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  }\n}\n\n#Scroll API\nDELETE users\n\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":11}\n\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":12}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":13}\n\nPOST users/_count\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"search_after\":\n        [\n          10,\n          \"ZQ0vYGsBrR8X3IP75QqX\"],\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\n\n#Scroll API\nDELETE users\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":20}\n\nPOST users/_doc\n{\"name\":\"user3\",\"age\":30}\n\nPOST users/_doc\n{\"name\":\"user4\",\"age\":40}\n\nPOST /users/_search?scroll=5m\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\" : {\n        }\n    }\n}\n\n\nPOST users/_doc\n{\"name\":\"user5\",\"age\":50}\nPOST /_search/scroll\n{\n    \"scroll\" : \"1m\",\n    \"scroll_id\" : \"DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==\"\n}\n\n\n```\n\n\n# 5.8-处理并发读写.md\n\n# 处理并发读写操作\n```\n\nDELETE products\nPUT products\n\nPUT products/_doc/1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nGET products/_doc/1\n\nPUT products/_doc/1?if_seq_no=1&if_primary_term=1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nPUT products/_doc/1?version=30000&version_type=external\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\n```\n\n\n# 6.1-Bucket&Metric聚合分析及嵌套聚合.md\n\n# Bucket & Metric Aggregation\n## demos\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n# Metric 聚合，找到最低的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"min_salary\": {\n      \"min\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# Metric 聚合，找到最高的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# 多个 Metric 聚合，找到最低最高和平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"min_salary\": {\n      \"min\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"avg_salary\": {\n      \"avg\": {\n        \"field\": \"salary\"\n      }\n    }\n  }\n}\n\n# 一个聚合，输出多值\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"stats_salary\": {\n      \"stats\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n\n\n\n# 对keword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 聚合查询，失败\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\n# 对 Text 字段打开 fielddata，支持terms aggregation\nPUT employees/_mapping\n{\n  \"properties\" : {\n    \"job\":{\n       \"type\":     \"text\",\n       \"fielddata\": true\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 分词。分词后的terms\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"cardinate\": {\n      \"cardinality\": {\n        \"field\": \"job\"\n      }\n    }\n  }\n}\n\n\n# 对 性别的 keyword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"gender\": {\n      \"terms\": {\n        \"field\":\"gender\"\n      }\n    }\n  }\n}\n\n\n#指定 bucket 的 size\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ages_5\": {\n      \"terms\": {\n        \"field\":\"age\",\n        \"size\":3\n      }\n    }\n  }\n}\n\n\n\n# 指定size，不同工种中，年纪最大的3个员工的具体信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      },\n      \"aggs\":{\n        \"old_employee\":{\n          \"top_hits\":{\n            \"size\":3,\n            \"sort\":[\n              {\n                \"age\":{\n                  \"order\":\"desc\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n#Salary Ranges 分桶，可以自己定义 key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_range\": {\n      \"range\": {\n        \"field\":\"salary\",\n        \"ranges\":[\n          {\n            \"to\":10000\n          },\n          {\n            \"from\":10000,\n            \"to\":20000\n          },\n          {\n            \"key\":\">20000\",\n            \"from\":20000\n          }\n        ]\n      }\n    }\n  }\n}\n\n\n#Salary Histogram,工资0到10万，以 5000一个区间进行分桶\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_histrogram\": {\n      \"histogram\": {\n        \"field\":\"salary\",\n        \"interval\":5000,\n        \"extended_bounds\":{\n          \"min\":0,\n          \"max\":100000\n\n        }\n      }\n    }\n  }\n}\n\n\n# 嵌套聚合1，按照工作类型分桶，并统计工资信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_salary_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"salary\": {\n          \"stats\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_gender_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"gender_stats\": {\n          \"terms\": {\n            \"field\": \"gender\"\n          },\n          \"aggs\": {\n            \"salary_stats\": {\n              \"stats\": {\n                \"field\": \"salary\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n\n# 6.2-Pipeline聚合分析.md\n\n# Pipeline 聚合分析\n## 课程 demo\n```\nDELETE employees\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# 平均工资最低的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"min_salary_by_job\":{\n      \"min_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资最高的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"max_salary_by_job\":{\n      \"max_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"avg_salary_by_job\":{\n      \"avg_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的统计分析\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"stats_salary_by_job\":{\n      \"stats_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的百分位数\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"percentiles_salary_by_job\":{\n      \"percentiles_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n\n#按照年龄对平均工资求导\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"derivative_avg_salary\":{\n          \"derivative\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#Cumulative_sum\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"cumulative_salary\":{\n          \"cumulative_sum\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n#Moving Function\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"moving_avg_salary\":{\n          \"moving_fn\": {\n            \"buckets_path\": \"avg_salary\",\n            \"window\":10,\n            \"script\": \"MovingFunctions.min(values)\"\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n# 6.3-作用范围与排序.md\n\n# 作用范围与排序\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# Query\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n#Filter\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"older_person\": {\n      \"filter\":{\n        \"range\":{\n          \"age\":{\n            \"from\":35\n          }\n        }\n      },\n      \"aggs\":{\n         \"jobs\":{\n           \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n      }\n    }},\n    \"all_jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n\n#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果\nPOST employees/_search\n{\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      }\n    }\n  },\n  \"post_filter\": {\n    \"match\": {\n      \"job.keyword\": \"Dev Manager\"\n    }\n  }\n}\n\n\n#global\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 40\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    },\n    \n    \"all\":{\n      \"global\":{},\n      \"aggs\":{\n        \"salary_avg\":{\n          \"avg\":{\n            \"field\":\"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[\n          {\"_count\":\"asc\"},\n          {\"_key\":\"desc\"}\n          ]\n        \n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"avg_salary\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"avg_salary\": {\n        \"avg\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"stats_salary.min\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"stats_salary\": {\n        \"stats\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n```\n\n# 6.4-聚合分析的原理及精准度问题.md\n\n# 聚合分析的原理及精准度问题\n```\nDELETE my_flights\nPUT my_flights\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  },\n  \"mappings\" : {\n      \"properties\" : {\n        \"AvgTicketPrice\" : {\n          \"type\" : \"float\"\n        },\n        \"Cancelled\" : {\n          \"type\" : \"boolean\"\n        },\n        \"Carrier\" : {\n          \"type\" : \"keyword\"\n        },\n        \"Dest\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"DestRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DistanceKilometers\" : {\n          \"type\" : \"float\"\n        },\n        \"DistanceMiles\" : {\n          \"type\" : \"float\"\n        },\n        \"FlightDelay\" : {\n          \"type\" : \"boolean\"\n        },\n        \"FlightDelayMin\" : {\n          \"type\" : \"integer\"\n        },\n        \"FlightDelayType\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightNum\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeHour\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeMin\" : {\n          \"type\" : \"float\"\n        },\n        \"Origin\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"OriginRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"dayOfWeek\" : {\n          \"type\" : \"integer\"\n        },\n        \"timestamp\" : {\n          \"type\" : \"date\"\n        }\n      }\n    }\n}\n\n\nPOST _reindex\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_flights\"\n  },\n  \"dest\": {\n    \"index\": \"my_flights\"\n  }\n}\n\nGET kibana_sample_data_flights/_count\nGET my_flights/_count\n\nget kibana_sample_data_flights/_search\n\n\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":5,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n\nGET my_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":1,\n        \"shard_size\":1,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n```\n\n# 7.1-对象及 Nested 对象.md\n\n# 对象及Nested对象\n```\nDELETE blog\n# 设置blog的 Mapping\nPUT /blog\n{\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"time\": {\n        \"type\": \"date\"\n      },\n      \"user\": {\n        \"properties\": {\n          \"city\": {\n            \"type\": \"text\"\n          },\n          \"userid\": {\n            \"type\": \"long\"\n          },\n          \"username\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 插入一条 Blog 信息\nPUT blog/_doc/1\n{\n  \"content\":\"I like Elasticsearch\",\n  \"time\":\"2019-01-01T00:00:00\",\n  \"user\":{\n    \"userid\":1,\n    \"username\":\"Jack\",\n    \"city\":\"Shanghai\"\n  }\n}\n\n\n# 查询 Blog 信息\nPOST blog/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"content\": \"Elasticsearch\"}},\n        {\"match\": {\"user.username\": \"Jack\"}}\n      ]\n    }\n  }\n}\n\n\nDELETE my_movies\n\n# 电影的Mapping信息\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"keyword\"\n            },\n            \"last_name\" : {\n              \"type\" : \"keyword\"\n            }\n          }\n        },\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n      }\n    }\n}\n\n\n# 写入一条电影信息\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# 查询电影信息\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"actors.first_name\": \"Keanu\"}},\n        {\"match\": {\"actors.last_name\": \"Hopper\"}}\n      ]\n    }\n  }\n\n}\n\nDELETE my_movies\n# 创建 Nested 对象 Mapping\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"type\": \"nested\",\n          \"properties\" : {\n            \"first_name\" : {\"type\" : \"keyword\"},\n            \"last_name\" : {\"type\" : \"keyword\"}\n          }},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}\n        }\n      }\n    }\n}\n\n\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# Nested 查询\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"Speed\"}},\n        {\n          \"nested\": {\n            \"path\": \"actors\",\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\"match\": {\n                    \"actors.first_name\": \"Keanu\"\n                  }},\n\n                  {\"match\": {\n                    \"actors.last_name\": \"Hopper\"\n                  }}\n                ]\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\n\n# Nested Aggregation\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"actors\": {\n      \"nested\": {\n        \"path\": \"actors\"\n      },\n      \"aggs\": {\n        \"actor_name\": {\n          \"terms\": {\n            \"field\": \"actors.first_name\",\n            \"size\": 10\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 普通 aggregation不工作\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"NAME\": {\n      \"terms\": {\n        \"field\": \"actors.first_name\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n```\n\n# 7.2-文档的父子关系.md\n\n# 文档的父子关系\n```\nDELETE my_blogs\n\n# 设定 Parent/Child Mapping\nPUT my_blogs\n{\n  \"settings\": {\n    \"number_of_shards\": 2\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"blog_comments_relation\": {\n        \"type\": \"join\",\n        \"relations\": {\n          \"blog\": \"comment\"\n        }\n      },\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"title\": {\n        \"type\": \"keyword\"\n      }\n    }\n  }\n}\n\n\n#索引父文档\nPUT my_blogs/_doc/blog1\n{\n  \"title\":\"Learning Elasticsearch\",\n  \"content\":\"learning ELK @ geektime\",\n  \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n#索引父文档\nPUT my_blogs/_doc/blog2\n{\n  \"title\":\"Learning Hadoop\",\n  \"content\":\"learning Hadoop\",\n    \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n\n#索引子文档\nPUT my_blogs/_doc/comment1?routing=blog1\n{\n  \"comment\":\"I am learning ELK\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog1\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment2?routing=blog2\n{\n  \"comment\":\"I like Hadoop!!!!!\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n  \"comment\":\"Hello Hadoop\",\n  \"username\":\"Bob\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n# 查询所有文档\nPOST my_blogs/_search\n{\n\n}\n\n\n#根据父文档ID查看\nGET my_blogs/_doc/blog2\n\n# Parent Id 查询\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"parent_id\": {\n      \"type\": \"comment\",\n      \"id\": \"blog2\"\n    }\n  }\n}\n\n# Has Child 查询,返回父文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_child\": {\n      \"type\": \"comment\",\n      \"query\" : {\n                \"match\": {\n                    \"username\" : \"Jack\"\n                }\n            }\n    }\n  }\n}\n\n\n# Has Parent 查询，返回相关的子文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_parent\": {\n      \"parent_type\": \"blog\",\n      \"query\" : {\n                \"match\": {\n                    \"title\" : \"Learning Hadoop\"\n                }\n            }\n    }\n  }\n}\n\n\n\n#通过ID ，访问子文档\nGET my_blogs/_doc/comment3\n#通过ID和routing ，访问子文档\nGET my_blogs/_doc/comment3?routing=blog2\n\n#更新子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n    \"comment\": \"Hello Hadoop??\",\n    \"blog_comments_relation\": {\n      \"name\": \"comment\",\n      \"parent\": \"blog2\"\n    }\n}\n\n\n```\n\n# 7.5-Elasticsearch数据建模实例.md\n\n# Elasticsearch 数据建模实例\n```\n###### Data Modeling Example\n\n# Index 一本书的信息\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n\n\n#查询自动创建的Mapping\nGET books/_mapping\n\nDELETE books\n\n#优化字段类型\nPUT books\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\"},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false},\n        \"description\" : {\"type\" : \"text\"},\n        \"public_date\" : {\"type\" : \"date\"},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          }\n        }\n      }\n    }\n}\n\n#Cover URL index 设置成false，无法对该字段进行搜索\nPOST books/_search\n{\n  \"query\": {\n    \"term\": {\n      \"cover_url\": {\n        \"value\": \"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n      }\n    }\n  }\n}\n\n#Cover URL index 设置成false，依然支持聚合分析\nPOST books/_search\n{\n  \"aggs\": {\n    \"cover\": {\n      \"terms\": {\n        \"field\": \"cover_url\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n\nDELETE books\n#新增 Content字段。数据量很大。选择将Source 关闭\nPUT books\n{\n      \"mappings\" : {\n      \"_source\": {\"enabled\": false},\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\",\"store\": true},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false,\"store\": true},\n        \"description\" : {\"type\" : \"text\",\"store\": true},\n         \"content\" : {\"type\" : \"text\",\"store\": true},\n        \"public_date\" : {\"type\" : \"date\",\"store\": true},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          },\n          \"store\": true\n        }\n      }\n    }\n}\n\n\n# Index 一本书的信息,包含Content\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"content\":\"The content of the book......Indexing data, aggregation, searching.    something else. something in the way............\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n#查询结果中，Source不包含数据\nPOST books/_search\n{}\n\n#搜索，通过store 字段显示数据，同时高亮显示 conent的内容\nPOST books/_search\n{\n  \"stored_fields\": [\"title\",\"author\",\"public_date\"],\n  \"query\": {\n    \"match\": {\n      \"content\": \"searching\"\n    }\n  },\n\n  \"highlight\": {\n    \"fields\": {\n      \"content\":{}\n    }\n  }\n\n}\n\n```\n\n# 7.6-Elasticsearch 数据建模最佳实践.md\n\n# Elasticsearch 数据建模最佳实践\n\n\n```\n\n###### Cookie Service\n\n##索引数据，dynamic mapping 会不断加入新增字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":{\n   \"username\":\"tom\",\n   \"age\":32\n }\n}\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":{\n   \"login\":\"2019-01-01\",\n   \"email\":\"xyz@abc.com\"\n }\n}\n\n\nDELETE cookie_service\n#使用 Nested 对象，增加key/value\nPUT cookie_service\n{\n  \"mappings\": {\n    \"properties\": {\n      \"cookies\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"keyword\"\n          },\n          \"dateValue\": {\n            \"type\": \"date\"\n          },\n          \"keywordValue\": {\n            \"type\": \"keyword\"\n          },\n          \"IntValue\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"url\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"keyword\": {\n            \"type\": \"keyword\",\n            \"ignore_above\": 256\n          }\n        }\n      }\n    }\n  }\n}\n\n\n##写入数据，使用key和合适类型的value字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":[\n    {\n      \"name\":\"username\",\n      \"keywordValue\":\"tom\"\n    },\n    {\n       \"name\":\"age\",\n      \"intValue\":32\n\n    }\n\n   ]\n }\n\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":[\n    {\n      \"name\":\"login\",\n      \"dateValue\":\"2019-01-01\"\n    },\n    {\n       \"name\":\"email\",\n      \"IntValue\":32\n\n    }\n\n   ]\n }\n\n\n# Nested 查询，通过bool查询进行过滤\nPOST cookie_service/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"cookies\",\n      \"query\": {\n        \"bool\": {\n          \"filter\": [\n            {\n            \"term\": {\n              \"cookies.name\": \"age\"\n            }},\n            {\n              \"range\":{\n                \"cookies.intValue\":{\n                  \"gte\":30\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\n# 在Mapping中加入元信息，便于管理\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.0\"\n    }\n  }\n}\n\nGET softwares/_mapping\nPUT softwares/_doc/1\n{\n  \"software_version\":\"7.1.0\"\n}\n\nDELETE softwares\n# 优化,使用inner object\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.1\"\n    },\n    \"properties\": {\n      \"version\": {\n        \"properties\": {\n          \"display_name\": {\n            \"type\": \"keyword\"\n          },\n          \"hot_fix\": {\n            \"type\": \"byte\"\n          },\n          \"marjor\": {\n            \"type\": \"byte\"\n          },\n          \"minor\": {\n            \"type\": \"byte\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#通过 Inner Object 写入多个文档\nPUT softwares/_doc/1\n{\n  \"version\":{\n  \"display_name\":\"7.1.0\",\n  \"marjor\":7,\n  \"minor\":1,\n  \"hot_fix\":0  \n  }\n\n}\n\nPUT softwares/_doc/2\n{\n  \"version\":{\n  \"display_name\":\"7.2.0\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":0  \n  }\n}\n\nPUT softwares/_doc/3\n{\n  \"version\":{\n  \"display_name\":\"7.2.1\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":1  \n  }\n}\n\n\n# 通过 bool 查询，\nPOST softwares/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match\":{\n            \"version.marjor\":7\n          }\n        },\n        {\n          \"match\":{\n            \"version.minor\":2\n          }\n        }\n\n      ]\n    }\n  }\n}\n\n\n\n\n# Not Null 解决聚合的问题\nDELETE ratings\nPUT ratings\n{\n  \"mappings\": {\n      \"properties\": {\n        \"rating\": {\n          \"type\": \"float\",\n          \"null_value\": 1.0\n        }\n      }\n    }\n}\n\n\nPUT ratings/_doc/1\n{\n \"rating\":5\n}\nPUT ratings/_doc/2\n{\n \"rating\":null\n}\n\n\nPOST ratings/_search\nPOST ratings/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"avg\": {\n      \"avg\": {\n        \"field\": \"rating\"\n      }\n    }\n  }\n}\n\nPOST ratings/_search\n{\n  \"query\": {\n    \"term\": {\n      \"rating\": {\n        \"value\": 1\n      }\n    }\n  }\n}\n\n```\n\n\n# 7.7-第二部分总结与测验.md\n\n# 第二部分总结与测验\n```\nDELETE test\nPUT test/_doc/1\n{\n  \"content\":\"Hello World\"\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\n\n```\n\n\n# 8.1-集群身份认证与用户鉴权.md\n\n# 集群身份认证与用户鉴权\n- 如何为集群启用X-Pack Security\n- 如何为内置用户设置密码\n- 设置 Kibana与ElasticSearch通信鉴权\n- 使用安全API创建对特定索引具有有限访问权限的用户\n\nThis tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:\n\ndiscovery.type: single-node\n\n```\n#启动单节点\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true\n\n#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误\ncurl 'localhost:9200/_cat/nodes?pretty'\n\n#运行密码设定的命令，设置ES内置用户及其初始密码。\nbin/elasticsearch-setup-passwords interactive\n\ncurl -u elastic 'localhost:9200/_cat/nodes?pretty'\n\n\n# 修改 kibana.yml\nelasticsearch.username: \"kibana\"\nelasticsearch.password: \"changeme\"\n\n#启动。使用用户名，elastic，密码elastic\n./bin/kibana\n\n\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n#create a new role named read_only_orders, that satisfies the following criteria:\n#The role has no cluster privileges\n#The role only has access to indices that match the pattern sales_record\n#The index privileges are read, and view_index_metadata\n\n\n#create sales_user that satisfies the following criteria:\n# Use your own email address\n# Assign the user to two roles: read_only_orders and kibana_user\n\n\n#验证读权限,可以执行\nPOST orders/_search\n{}\n\n#验证写权限,报错\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n```\n\n\n# 8.2-集群内部安全通信.md\n\n#\n\n```\n# 生成证书\n# 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\nbin/elasticsearch-certutil ca\n\n#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：\nbin/elasticsearch-certutil cert --ca elastic-stack-ca.p12\n\n#将证书拷贝到 config/certs目录下\nelastic-certificates.p12\n\n\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E http.port=9201 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\n\n#不提供证书的节点，无法加入\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E http.port=9202 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate\n\n\n```\n\n\n```\n## elasticsearch.yml 配置\n\n#xpack.security.transport.ssl.enabled: true\n#xpack.security.transport.ssl.verification_mode: certificate\n\n#xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12\n#xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12\n\n\n```\n\n# 8.3-集群与外部间的安全通信.md\n\n\n\n```\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12\nxpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12\n\n```\n```\n\n\n# ES 启用 https\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.enabled=true -E xpack.security.http.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.path=certs/elastic-certificates.p12\n\n```\n\n```\n#Kibana 连接 ES https\n\n\n\n# 为kibana生成pem\nopenssl pkcs12 -in elastic-certificates.p12 -cacerts -nokeys -out elastic-ca.pem\n\n\nelasticsearch.hosts: [\"https://localhost:9200\"]\nelasticsearch.ssl.certificateAuthorities: [ \"/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem\" ]\nelasticsearch.ssl.verificationMode: certificate\n\n\n\n# 为 Kibna 配置 HTTPS\n# 生成后解压，包含了instance.crt 和 instance.key\nbin/elasticsearch-certutil ca --pem\n\nserver.ssl.enabled: true\nserver.ssl.certificate: config/certs/instance.crt\nserver.ssl.key: config/certs/instance.key\n\n\n```\n\n\n\n# 9.1-常见的集群部署方式.md\n\n# 常见的集群部署方式\n\n# 9.2-Hot&Warm架构与ShardFiltering.md\n\n# Hot & Warm 架构与 Shard Filtering\n## 课程代码\n```\n# 标记一个 Hot 节点\nbin/elasticsearch  -E node.name=hotnode -E cluster.name=geektime -E path.data=hot_data -E node.attr.my_node_type=hot\n\n# 标记一个 warm 节点\nbin/elasticsearch  -E node.name=warmnode -E cluster.name=geektime -E path.data=warm_data -E node.attr.my_node_type=warm\n\n# 查看节点\nGET /_cat/nodeattrs?v\n\n# 配置到 Hot节点\nPUT logs-2019-06-27\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.my_node_type\":\"hot\"\n  }\n}\n\n\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\nGET _cat/shards?v\n\n\n# 配置到 warm 节点\nPUT PUT logs-2019-06-27/_settings\n{  \n  \"index.routing.allocation.require.my_node_type\":\"warm\"\n}\n\n\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack2\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\"\n  }\n}\n\nPUT my_index1\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1\n  }\n}\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\nGET _cat/shards?v\nDELETE my_index1/_doc/1\n\n\n\n# Fore awareness\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack1\n\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\",\n    \"cluster.routing.allocation.awareness.force.my_rack_id.values\": \"rack1,rack2\"\n  }\n}\nGET _cluster/settings\n\n# 集群黄色\nGET _cluster/health\n\n# 副本无法分配\nGET _cat/shards?v\n\n\nGET _cluster/allocation/explain?pretty\n```\n","source":"_posts/elasticsearch/es高级命令.md","raw":"---\ntitle: es高级命令\ndate: 2025-02-27 16:05:47\ncategories: elasticsearch\ntag: 学习笔记\n---\n以下是优化过的笔记，已加入注释并调整格式，使其更符合Markdown标准：\n\n---\n\n# Elasticsearch 集群管理与优化笔记\n\n## 1. 移动分片到另一个节点\n```bash\nPOST _cluster/reroute\n{\n  \"commands\": [\n    {\n      \"move\": {\n        \"index\": \"index_name\",   # 索引名称\n        \"shard\": 0,               # 分片编号\n        \"from_node\": \"node_name_1\", # 源节点\n        \"to_node\": \"node_name_2\"   # 目标节点\n      }\n    }\n  ]\n}\n```\n\n## 2. 强制分配未分配的分片（带原因说明）\n```bash\nPOST _cluster/reroute?explain\n{\n  \"commands\": [\n    {\n      \"allocate\": {\n        \"index\": \"index_name\",   # 索引名称\n        \"shard\": 0,              # 分片编号\n        \"node\": \"nodename\"       # 目标节点\n      }\n    }\n  ]\n}\n```\n\n## 3. 从集群中移除节点\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.exclude._ip\": \"the_IP_of_your_node\"   # 要排除的节点IP\n  }\n}\n```\n\n## 4. 强制执行同步刷新\n```bash\nPOST _flush/synced\n```\n\n## 5. 调整集群平衡时移动的分片数量\n```bash\nPUT /_cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.cluster_concurrent_rebalance\": 2   # 同时平衡的分片数\n  }\n}\n```\n\n## 6. 调整每个节点同时恢复的分片数量\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.node_concurrent_recoveries\": 5   # 每个节点并行恢复的分片数\n  }\n}\n```\n\n## 7. 调整恢复速度\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"indices.recovery.max_bytes_per_sec\": \"80mb\"   # 恢复速率\n  }\n}\n```\n\n## 8. 调整单节点恢复时并发流数量\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"indices.recovery.concurrent_streams\": 6   # 单节点恢复时的并发流数\n  }\n}\n```\n\n## 9. 调整搜索队列大小\n```bash\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"threadpool.search.queue_size\": 2000   # 搜索队列大小\n  }\n}\n```\n\n## 10. 清除节点缓存\n```bash\nPOST _cache/clear\n```\n\n## 11. 调整断路器配置\n```bash\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.total.limit\": \"40%\"   # 设置内存断路器的总内存限制\n  }\n}\n```\n\n---\n\n# 监控 Elasticsearch 集群\n\n## 1. 节点统计\n```bash\nGET _nodes/stats\n```\n\n## 2. 集群统计\n```bash\nGET _cluster/stats\n```\n\n## 3. 索引统计\n```bash\nGET kibana_sample_data_ecommerce/_stats\n```\n\n## 4. 查看待处理的集群任务\n```bash\nGET _cluster/pending_tasks\n```\n\n## 5. 查看所有任务，支持取消任务\n```bash\nGET _tasks\n```\n\n## 6. 查看节点的线程池信息\n```bash\nGET _nodes/thread_pool\nGET _nodes/stats/thread_pool\nGET _cat/thread_pool?v\nGET _nodes/hot_threads\nGET _nodes/stats/thread_pool\n```\n\n## 7. 设置索引慢日志（Slowlog）\n- 设置索引慢日志阈值：\n```bash\nPUT my_index/_settings\n{\n  \"index.indexing.slowlog\": {\n    \"threshold.index\": {\n      \"warn\": \"10s\",    # 警告级别\n      \"info\": \"4s\",     # 信息级别\n      \"debug\": \"2s\",    # 调试级别\n      \"trace\": \"0s\"     # 跟踪级别\n    },\n    \"level\": \"trace\",\n    \"source\": 1000   # 日志源的最大字符数\n  }\n}\n```\n\n- 设置查询慢日志：\n```bash\nDELETE my_index\nPUT my_index/\n{\n  \"settings\": {\n    \"index.search.slowlog.threshold\": {\n      \"query.warn\": \"10s\",   # 查询慢日志警告级别\n      \"query.info\": \"3s\",    # 查询慢日志信息级别\n      \"query.debug\": \"2s\",   # 查询慢日志调试级别\n      \"query.trace\": \"0s\",   # 查询慢日志跟踪级别\n      \"fetch.warn\": \"1s\",    # 获取慢日志警告级别\n      \"fetch.info\": \"600ms\", # 获取慢日志信息级别\n      \"fetch.debug\": \"400ms\",# 获取慢日志调试级别\n      \"fetch.trace\": \"0s\"    # 获取慢日志跟踪级别\n    }\n  }\n}\n```\n\n---\n\n# 解决集群 Yellow 与 Red 状态问题\n\n## 1. 检查集群健康状态\n```bash\nGET /_cluster/health/\n```\n\n## 2. 查看索引级别健康状态，找出红色索引\n```bash\nGET /_cluster/health?level=indices\n```\n\n## 3. 查看分片级别健康状态\n```bash\nGET _cluster/health?level=shards\n```\n\n## 4. 解释索引分片无法分配的原因\n```bash\nGET /_cluster/allocation/explain\n```\n\n## 5. 删除并重新创建索引\n```bash\nDELETE mytest\nPUT mytest\n{\n  \"settings\": {\n    \"number_of_shards\": 3,    # 分片数\n    \"number_of_replicas\": 0,   # 副本数\n    \"index.routing.allocation.require.box_type\": \"hot\"   # 指定节点类型\n  }\n}\n```\n\n---\n\n# 提升集群写性能\n\n## 1. 设置优化写入性能的索引设置\n```bash\nDELETE myindex\nPUT myindex\n{\n  \"settings\": {\n    \"index\": {\n      \"refresh_interval\": \"30s\",     # 刷新间隔\n      \"number_of_shards\": \"2\"        # 分片数\n    },\n    \"routing\": {\n      \"allocation\": {\n        \"total_shards_per_node\": \"3\" # 每个节点的最大分片数\n      }\n    },\n    \"translog\": {\n      \"sync_interval\": \"30s\",         # 事务日志同步间隔\n      \"durability\": \"async\"           # 异步持久化\n    },\n    \"number_of_replicas\": 0          # 副本数\n  },\n  \"mappings\": {\n    \"dynamic\": false,                # 禁用动态映射\n    \"properties\": {}\n  }\n}\n```\n\n---\n\n# 提升集群读性能\n\n## 1. 示例：查询优化\n```bash\nPUT blogs/_doc/1\n{\n  \"title\": \"elasticsearch\"\n}\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": { \"title\": \"elasticsearch\" }}\n      ],\n      \"filter\": {\n        \"script\": {\n          \"script\": {\n            \"source\": \"doc['title.keyword'].value.length()>5\"\n          }\n        }\n      }\n    }\n  }\n}\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"elasticsearch\"}},\n        {\n          \"range\": {\n            \"publish_date\": {\n              \"gte\": 2017,\n              \"lte\": 2019\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n---\n\n# 集群压力测试\n\n## 1. 安装并配置 esrally\n```bash\npip3 install esrally\nesrally configure\n```\n\n## 2. 执行简单的压力测试\n```bash\nesrally --distribution-version=7.1.0 --test-mode\n```\n\n## 3. 执行完整数据测试\n```bash\nesrally --distribution-version=7.1.0\n```\n\n---\n\n# 使用缓存与 Breaker 限制内存使用\n\n## 1. 获取节点统计信息\n```bash\nGET _cat/nodes?v\nGET _nodes/stats/indices?pretty\nGET _cat/nodes?v&h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count\n```\n\n## 2. 设置内存限制\n```bash\nPUT /_cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.request.limit\": \"90%\"   # 设置请求断路器内存限制\n  }\n}\n```\n\n---\n\n# 使用 Shrink 与 Rollover API 管理索引\n\n## 1. Shrink 索引\n```bash\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n```\n\n## 2. Rollover 索引\n```bash\nPOST nginx_logs_write/_rollover\n{\n  \"conditions\": {\n    \"max_age\": \"1d\",\n    \"max_docs\": 5,\n    \"max_size\": \"5gb\"\n  }\n}\n```\n\n\n```\n# 11.2-索引全生命周期管理及工具介绍.md\n\n# 索引全生命周期管理及工具介绍\n```\n\n# 运行三个节点，分片 将box_type设置成 hot，warm和cold\n# 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\n\n\n\nDELETE *\n\n\n\n# 设置 1秒刷新1次，生产环境10分种刷新一次\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.lifecycle.poll_interval\":\"1s\"\n  }\n}\n\n# 设置 Policy\nPUT /_ilm/policy/log_ilm_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_docs\": 5\n          }\n        }\n      },\n      \"warm\": {\n        \"min_age\": \"10s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"warm\"\n            }\n          }\n        }\n      },\n      \"cold\": {\n        \"min_age\": \"15s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"cold\"\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"20s\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n\n\n\n# 设置索引模版\nPUT /_template/log_ilm_template\n{\n  \"index_patterns\" : [\n      \"ilm_index-*\"\n    ],\n    \"settings\" : {\n      \"index\" : {\n        \"lifecycle\" : {\n          \"name\" : \"log_ilm_policy\",\n          \"rollover_alias\" : \"ilm_alias\"\n        },\n        \"routing\" : {\n          \"allocation\" : {\n            \"include\" : {\n              \"box_type\" : \"hot\"\n            }\n          }\n        },\n        \"number_of_shards\" : \"1\",\n        \"number_of_replicas\" : \"0\"\n      }\n    },\n    \"mappings\" : { },\n    \"aliases\" : { }\n}\n\n\n\n#创建索引\nPUT ilm_index-000001\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 0,\n    \"index.lifecycle.name\": \"log_ilm_policy\",\n    \"index.lifecycle.rollover_alias\": \"ilm_alias\",\n    \"index.routing.allocation.include.box_type\":\"hot\"\n  },\n  \"aliases\": {\n    \"ilm_alias\": {\n      \"is_write_index\": true\n    }\n  }\n}\n\n# 对 Alias写入文档\nPOST  ilm_alias/_doc\n{\n  \"dfd\":\"dfdsf\"\n}\n\n```\n# 12.1-Logstash入门及架构介绍.md\n\n# Logstash 入门及架构介绍\n```\n\n\n# 一个 Demo， demo 运行\nsudo bin/logstash -f logstash-filter.conf\n\n# demo数据\n127.0.0.1 - - [11/Dec/2013:00:01:45 -0800] \"GET /xampp/status.php HTTP/1.1\" 200 3891 \"http://cadenza/xampp/navi.php\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n\n\n# codec demo\n\n\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>json}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> dots}}\"\n\n\nsudo bin/logstash -f multiline-exception.conf\n\n# 多行数据，异常\nException in thread \"main\" java.lang.NullPointerException\n        at com.example.myproject.Book.getTitle(Book.java:16)\n        at com.example.myproject.Author.getBookTitles(Author.java:25)\n        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)\n\n\n\n# 一个实例\nhttps://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\n\n```\n\n\n# 12.2-利用JDBC插件导入数据到Elasticsearch.md\n\n# Logstash插件及文档介绍\n```\nhttps://spring.io/guides/gs/accessing-data-mysql/\ncreate database db_example;\nuse db_example;\nshow tables;\ndrop table user;\nselect * from user;\n\n\n\n# 新增用户\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\n#查看所有的用户\ncurl 'localhost:8080/demo/all'\n\n# 更新用户\ncurl -X PUT localhost:8080/demo/update -d id=16 -d name=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ\n\n# 删除用户\ncurl -X DELETE localhost:8080/demo/delete -d id=15\n\n\n\nmysql-demo.conf\n\n# 创建 alias，只显示没有被标记 deleted的用户\nPOST /_aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"users\",\n        \"alias\": \"view_users\",\n         \"filter\" : { \"term\" : { \"is_deleted\" : false } }\n      }\n    }\n  ]\n}\n\n# 通过 Alias查询，查不到被标记成 deleted的用户\nPOST view_users/_search\n{\n\n}\n\n\nPOST view_users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 12.3-Beats介绍.md\n\n# Beats介绍\n```\n\n##\n# 查看 packetbeat 模块\n# 设置 packetbeat 的mysql 模块\n# 启动运行\n#\n./metricbeat modules list\n./metricbeat modules enable mysql\n./metricbeat setup --dashboards\n\n# 安装mysql\ncreate database db_example\nuse db_example;\nshow tables;\nselect * from user\n\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\ncurl 'localhost:8080/demo/all'\n\n\n# 配置 packetbeat\n# 启动\n修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控\n\nsudo chown root packetbeat.yml\nsudo ./packetbeat setup --dashboards\nsudo ./packetbeat\n\n\n# 查看所有 Filebeat 模块\n# 查看所有的modules\n./filebeat modules list\n\n#\n./filebeat modules enable mysql\n\n```\n\n\n# 13.1-使用IndexPattern配置数据.md\n\n\n```\n\nlocalhost:5601/status\n\n\n\n\nPUT /logstash-2015.05.18\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\nPUT /logstash-2015.05.19\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /logstash-2015.05.20\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl\n\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\n\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"logs.jsonl\"\n\n\n\nGET /_cat/indices?v\n\n```\n\n\n# 13.2-使用KibanaDiscover探索数据.md\n\n# 使用Kibana Discovery 探索数据\n```\n\n设置时间过滤器\n搜索你的数据\n根据字段进行过滤\n查看文档数据\n查看文档上下文\n暂时字段数据统计\nSave Query\n\n\n```\n\n\n# 13.3-基本可视化组件介绍.md\n\n# 基本可视化组件介绍\n```\n\nPUT /shakespeare\n{\n  \"mappings\": {\n    \"properties\": {\n    \"speaker\": {\"type\": \"keyword\"},\n    \"play_name\": {\"type\": \"keyword\"},\n    \"line_id\": {\"type\": \"integer\"},\n    \"speech_number\": {\"type\": \"integer\"}\n    }\n  }\n}\n\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/bank/account/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"accounts.json\"\nInvoke-RestMethod \"http://localhost:9200/shakespeare/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"shakespeare.json\"\n\n\n```\n\n\n# 13.4-构建Dashboard.md\n\n# 构建Dashboard\n```\n- 创建仪表潘\n- 加载仪表盘\n- 共享仪表盘\n\n```\n\n\n# 14.3用机器学习实现时序数据的异常检测-上.md\n\nmkdir server_metrics\ncd server_metrics\nwget https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\ntar -xvf server_metrics.tar.gz\n\n\n# 14.5-用ELK进行日志管理.md\n\n# 用 ELK 来做日志管理\n```\n./filebeat modules list\n./filebeat modules enable system\n./filebeat modules enable elasticsearch\n\n\n## 进 modules.d 编辑相应的文件，修改log路径\n\n./filebeat setup –dashboards\n\n./filebeat export template | more\n\n./filebeat -e\n\n```\n\n# 14.6-用Canvas做数据演示.md\n\nPOST elasticoffee/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"by\": {\n      \"terms\": {\n        \"field\": \"beverage.keyword\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n# 4.1-基于词项和基于全文的搜索.md\n\n# 基于词项和基于全文的搜索\n\n\n```\nDELETE products\nPUT products\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  }\n}\n\n\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"productID\" : \"XHDK-A-1293-#fJ3\",\"desc\":\"iPhone\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"productID\" : \"KDKE-B-9947-#kL5\",\"desc\":\"iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"productID\" : \"JODL-X-1937-#pV7\",\"desc\":\"MBP\" }\n\nGET /products\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n        //\"value\": \"iPhone\"\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        //\"value\": \"iPhone\"\n        //\"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"productID\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\n\n\n\nPOST /products/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n\n    }\n  }\n}\n\n\n#设置 position_increment_gap\nDELETE groups\nPUT groups\n{\n  \"mappings\": {\n    \"properties\": {\n      \"names\":{\n        \"type\": \"text\",\n        \"position_increment_gap\": 0\n      }\n    }\n  }\n}\n\nGET groups/_mapping\n\nPOST groups/_doc\n{\n  \"names\": [ \"John Water\", \"Water Smith\"]\n}\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": {\n        \"query\": \"Water Water\",\n        \"slop\": 100\n      }\n    }\n  }\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": \"Water Smith\"\n    }\n  }\n}\n```\n\n# 4.10-综合排序：Function Score Query 优化算分.md\n\n# 综合排序：Function Score Query 优化算分\n```\nDELETE blogs\nPUT /blogs/_doc/1\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   0\n}\n\nPUT /blogs/_doc/2\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   100\n}\n\nPUT /blogs/_doc/3\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   1000000\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\"\n      }\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\"\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      },\n      \"boost_mode\": \"sum\",\n      \"max_boost\": 3\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"random_score\": {\n        \"seed\": 911119\n      }\n    }\n  }\n}\n```\n# 4.12-自动补全与基于上下文的提示.md\n\n# 自动补全与基于上下文的提示\n```\nDELETE articles\nPUT articles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title_completion\":{\n        \"type\": \"completion\"\n      }\n    }\n  }\n}\n\nPOST articles/_bulk\n{ \"index\" : { } }\n{ \"title_completion\": \"lucene is very cool\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch builds on top of lucene\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch rocks\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"elastic is the company behind ELK stack\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elk stack rocks\"}\n{ \"index\" : {} }\n\n\nPOST articles/_search?pretty\n{\n  \"size\": 0,\n  \"suggest\": {\n    \"article-suggester\": {\n      \"prefix\": \"elk \",\n      \"completion\": {\n        \"field\": \"title_completion\"\n      }\n    }\n  }\n}\n\n\nDELETE comments\nPUT comments\nPUT comments/_mapping\n{\n  \"properties\": {\n    \"comment_autocomplete\":{\n      \"type\": \"completion\",\n      \"contexts\":[{\n        \"type\":\"category\",\n        \"name\":\"comment_category\"\n      }]\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"I love the star war movies\",\n  \"comment_autocomplete\":{\n    \"input\":[\"star wars\"],\n    \"contexts\":{\n      \"comment_category\":\"movies\"\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"Where can I find a Starbucks\",\n  \"comment_autocomplete\":{\n    \"input\":[\"starbucks\"],\n    \"contexts\":{\n      \"comment_category\":\"coffee\"\n    }\n  }\n}\n\n\nPOST comments/_search\n{\n  \"suggest\": {\n    \"MY_SUGGESTION\": {\n      \"prefix\": \"sta\",\n      \"completion\":{\n        \"field\":\"comment_autocomplete\",\n        \"contexts\":{\n          \"comment_category\":\"coffee\"\n        }\n      }\n    }\n  }\n}\n```\n\n\n# 4.13-跨集群搜索.md\n\n# 跨集群搜索\n```\n//启动3个集群\n\nbin/elasticsearch -E node.name=cluster0node -E cluster.name=cluster0 -E path.data=cluster0_data -E discovery.type=single-node -E http.port=9200 -E transport.port=9300\nbin/elasticsearch -E node.name=cluster1node -E cluster.name=cluster1 -E path.data=cluster1_data -E discovery.type=single-node -E http.port=9201 -E transport.port=9301\nbin/elasticsearch -E node.name=cluster2node -E cluster.name=cluster2 -E path.data=cluster2_data -E discovery.type=single-node -E http.port=9202 -E transport.port=9302\n\n\n//在每个集群上设置动态的设置\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster\": {\n      \"remote\": {\n        \"cluster0\": {\n          \"seeds\": [\n            \"127.0.0.1:9300\"\n          ],\n          \"transport.ping_schedule\": \"30s\"\n        },\n        \"cluster1\": {\n          \"seeds\": [\n            \"127.0.0.1:9301\"\n          ],\n          \"transport.compress\": true,\n          \"skip_unavailable\": true\n        },\n        \"cluster2\": {\n          \"seeds\": [\n            \"127.0.0.1:9302\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#cURL\ncurl -XPUT \"http://localhost:9200/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9201/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9202/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\n\n#创建测试数据\ncurl -XPOST \"http://localhost:9200/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user1\",\"age\":10}'\n\ncurl -XPOST \"http://localhost:9201/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user2\",\"age\":20}'\n\ncurl -XPOST \"http://localhost:9202/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user3\",\"age\":30}'\n\n\n#查询\nGET /users,cluster1:users,cluster2:users/_search\n{\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20,\n        \"lte\": 40\n      }\n    }\n  }\n}\n\n```\n\n\n# 4.2-结构化搜索.md\n\n# 结构化搜索\n\n```\n\n#结构化搜索，精确匹配\nDELETE products\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\nGET products/_mapping\n\n\n\n#对布尔值 match 查询，有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"avaliable\": true\n    }\n  }\n}\n\n\n\n#对布尔值，通过constant score 转成 filtering，没有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": true\n        }\n      }\n    }\n  }\n}\n\n\n#数字类型 Term\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": 30\n    }\n  }\n}\n\n#数字类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"price\": [\n            \"20\",\n            \"30\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#数字 Range 查询\nGET products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"price\" : {\n                        \"gte\" : 20,\n                        \"lte\"  : 30\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n# 日期 range\nPOST products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"date\" : {\n                      \"gte\" : \"now-1y\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n#exists查询\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"exists\": {\n          \"field\": \"date\"\n        }\n      }\n    }\n  }\n}\n\n#处理多值字段\nPOST /movies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\"}\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"] }\n\n\n#处理多值字段，term 查询是包含，而不是等于\nPOST movies/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"genre.keyword\": \"Comedy\"\n        }\n      }\n    }\n  }\n}\n\n\n#字符类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"productID.keyword\": [\n            \"QQPX-R-3956-#aD8\",\n            \"JODL-X-1937-#pV7\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": 30\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n    }\n  }\n}\n\n#对布尔数值\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": \"false\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"avaliable\": {\n        \"value\": \"false\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": {\n        \"value\": \"20\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": \"20\"\n    }\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"bool\": {\n          \"must_not\": {\n            \"exists\": {\n              \"field\": \"date\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n```\n# 4.3-搜索的相关性算分.md\n\n# 搜索的相关性算分\n\n```\n\n\nPUT testscore\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n\n\nPUT testscore/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"we use Elasticsearch to power the search\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"we like elasticsearch\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"The scoring of documents is caculated by the scoring formula\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"content\":\"you know, for search\" }\n\n\n\nPOST /testscore/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"content\":\"you\"\n      //\"content\": \"elasticsearch\"\n      //\"content\":\"the\"\n      //\"content\": \"the elasticsearch\"\n    }\n  }\n}\n\nPOST testscore/_search\n{\n    \"query\": {\n        \"boosting\" : {\n            \"positive\" : {\n                \"term\" : {\n                    \"content\" : \"elasticsearch\"\n                }\n            },\n            \"negative\" : {\n                 \"term\" : {\n                     \"content\" : \"like\"\n                }\n            },\n            \"negative_boost\" : 0.2\n        }\n    }\n}\n\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"more_like_this\": {\n      \"fields\": [\n        \"title^10\",\"overview\"\n      ],\n      \"like\": [{\"_id\":\"14191\"}],\n      \"min_term_freq\": 1,\n      \"max_query_terms\": 12\n    }\n  }\n}\n\n\n\n```\n\n\n# 4.4-Query&Filtering实现多字符串多字段查询.md\n\n# Query & Filtering 与多字符串多字段查询\n\n```\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\n\n#基本语法\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :1\n    }\n  }\n}\n\n#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题\nPOST /newmovies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\",\"genre_count\":1 }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"],\"genre_count\":2 }\n\n#must，有算分\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n\n      ]\n    }\n  }\n}\n\n#Filter。不参与算分，结果的score是0\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n        ]\n\n    }\n  }\n}\n\n\n#Filtering Context\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      }\n    }\n  }\n}\n\n\n#Query Context\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"term\": {\n            \"productID.keyword\": {\n              \"value\": \"JODL-X-1937-#pV7\"}}\n        },\n        {\"term\": {\"avaliable\": {\"value\": true}}\n        }\n      ]\n    }\n  }\n}\n\n\n#嵌套，实现了 should not 逻辑\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"price\": \"30\"\n        }\n      },\n      \"should\": [\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": {\n                \"avaliable\": \"false\"\n              }\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n\n\n#Controll the Precision\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :2\n    }\n  }\n}\n\n\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"brown\" }},\n        { \"term\": { \"text\": \"red\" }},\n        { \"term\": { \"text\": \"quick\"   }},\n        { \"term\": { \"text\": \"dog\"   }}\n      ]\n    }\n  }\n}\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"quick\" }},\n        { \"term\": { \"text\": \"dog\"   }},\n        {\n          \"bool\":{\n            \"should\":[\n               { \"term\": { \"text\": \"brown\" }},\n                 { \"term\": { \"text\": \"brown\" }},\n            ]\n          }\n\n        }\n      ]\n    }\n  }\n}\n\n\nDELETE blogs\nPOST /blogs/_bulk\n{ \"index\": { \"_id\": 1 }}\n{\"title\":\"Apple iPad\", \"content\":\"Apple iPad,Apple iPad\" }\n{ \"index\": { \"_id\": 2 }}\n{\"title\":\"Apple iPad,Apple iPad\", \"content\":\"Apple iPad\" }\n\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\"match\": {\n          \"title\": {\n            \"query\": \"apple,ipad\",\n            \"boost\": 1.1\n          }\n        }},\n\n        {\"match\": {\n          \"content\": {\n            \"query\": \"apple,ipad\",\n            \"boost\":\n          }\n        }}\n      ]\n    }\n  }\n}\n\nDELETE news\nPOST /news/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"Apple Mac\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"Apple iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"Apple employee like Apple Pie and Apple Juice\" }\n\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      },\n      \"must_not\": {\n        \"match\":{\"content\":\"pie\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"match\": {\n          \"content\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"match\": {\n          \"content\": \"pie\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\n```\n\n# 4.5-单字符串多字段查询-DisMaxQuery.md\n\n# 单字符串多字段查询：Dis Max Query\n```\n\nPUT /blogs/_doc/1\n{\n    \"title\": \"Quick brown rabbits\",\n    \"body\":  \"Brown rabbits are commonly seen.\"\n}\n\nPUT /blogs/_doc/2\n{\n    \"title\": \"Keeping pets healthy\",\n    \"body\":  \"My quick brown fox eats rabbits on a regular basis.\"\n}\n\nPOST /blogs/_search\n{\n    \"query\": {\n        \"bool\": {\n            \"should\": [\n                { \"match\": { \"title\": \"Brown fox\" }},\n                { \"match\": { \"body\":  \"Brown fox\" }}\n            ]\n        }\n    }\n}\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ]\n        }\n    }\n}\n\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\n\n```\n# 4.6-单字符串多字段查询-Multi-Match.md\n\n# 单字符串多字段查询：Multi Match\n```\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\": \"best_fields\",\n      \"query\": \"Quick pets\",\n      \"fields\": [\"title\",\"body\"],\n      \"tie_breaker\": 0.2,\n      \"minimum_should_match\": \"20%\"\n    }\n  }\n}\n\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": \"*_title\"\n    }\n}\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": [ \"*_title\", \"chapter_title^2\" ]\n    }\n}\n\n\n\nDELETE /titles\nPUT /titles\n{\n    \"settings\": { \"number_of_shards\": 1 },\n    \"mappings\": {\n        \"my_type\": {\n            \"properties\": {\n                \"title\": {\n                    \"type\":     \"string\",\n                    \"analyzer\": \"english\",\n                    \"fields\": {\n                        \"std\":   {\n                            \"type\":     \"string\",\n                            \"analyzer\": \"standard\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\"\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\n\nGET titles/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"barking dogs\"\n    }\n  }\n}\n\nDELETE /titles\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\",\n        \"fields\": {\"std\": {\"type\": \"text\",\"analyzer\": \"standard\"}}\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title\", \"title.std\" ]\n        }\n    }\n}\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title^10\", \"title.std\" ]\n        }\n    }\n}\n\n```\n\n# 4.7-多语言及中文分词与检索.md\n\n# 多语言及中文分词与检索\n\n- 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”\n\n- 你也想犯范范玮琪犯过的错吗\n- 校长说衣服上除了校徽别别别的\n- 这几天天天天气不好\n- 我背有点驼，麻麻说“你的背得背背背背佳\n\n```\n#stop word\n\nDELETE my_index\nPUT /my_index/_doc/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/_doc/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\n\nPOST my_index/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"not happy fox\"\n    }\n  }\n}\n\n\n#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:\n\nDELETE my_index\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"analyzer\": \"english\"\n        }\n      }\n    }\n  }\n}\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"fields\": {\n            \"english\": {\n              \"type\":     \"string\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /my_index/blog/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/blog/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\nGET /_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\":     \"most_fields\",\n      \"query\":    \"not happy foxes\",\n      \"fields\": [ \"title\", \"title.english\" ]\n    }\n  }\n}\n\n\n#安装插件\n./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\n#安装插件\nbin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\n\n\n\n\n#ik_max_word\n#ik_smart\n#hanlp: hanlp默认分词\n#hanlp_standard: 标准分词\n#hanlp_index: 索引分词\n#hanlp_nlp: NLP分词\n#hanlp_n_short: N-最短路分词\n#hanlp_dijkstra: 最短路分词\n#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）\n#hanlp_speed: 极速词典分词\n\nPOST _analyze\n{\n  \"analyzer\": \"hanlp_standard\",\n  \"text\": [\"剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜\"]\n\n}     \n\n#Pinyin\nPUT /artists/\n{\n    \"settings\" : {\n        \"analysis\" : {\n            \"analyzer\" : {\n                \"user_name_analyzer\" : {\n                    \"tokenizer\" : \"whitespace\",\n                    \"filter\" : \"pinyin_first_letter_and_full_pinyin_filter\"\n                }\n            },\n            \"filter\" : {\n                \"pinyin_first_letter_and_full_pinyin_filter\" : {\n                    \"type\" : \"pinyin\",\n                    \"keep_first_letter\" : true,\n                    \"keep_full_pinyin\" : false,\n                    \"keep_none_chinese\" : true,\n                    \"keep_original\" : false,\n                    \"limit_first_letter_length\" : 16,\n                    \"lowercase\" : true,\n                    \"trim_whitespace\" : true,\n                    \"keep_none_chinese_in_first_letter\" : true\n                }\n            }\n        }\n    }\n}\n\n\nGET /artists/_analyze\n{\n  \"text\": [\"刘德华 张学友 郭富城 黎明 四大天王\"],\n  \"analyzer\": \"user_name_analyzer\"\n}\n\n\n```\n\n## 相关资源\n- Elasticsearch IK分词插件 https://github.com/medcl/elasticsearch-analysis-ik/releases\n- Elasticsearch hanlp 分词插件 https://github.com/KennFalcon/elasticsearch-analysis-hanlp\n\n- 分词算法综述 https://zhuanlan.zhihu.com/p/50444885\n\n### 一些分词工具，供参考：\n- 中科院计算所NLPIR http://ictclas.nlpir.org/nlpir/\n- ansj分词器 https://github.com/NLPchina/ansj_seg\n- 哈工大的LTP https://github.com/HIT-SCIR/ltp\n- 清华大学THULAC https://github.com/thunlp/THULAC\n- 斯坦福分词器 https://nlp.stanford.edu/software/segmenter.shtml\n- Hanlp分词器 https://github.com/hankcs/HanLP\n- 结巴分词 https://github.com/yanyiwu/cppjieba\n- KCWS分词器(字嵌入+Bi-LSTM+CRF) https://github.com/koth/kcws\n- ZPar https://github.com/frcchang/zpar/releases\n- IKAnalyzer https://github.com/wks/ik-analyzer\n\n\n# 4.8-SpaceJam一个全文搜索的实例.md\n\n# Space Jam，一次全文搜索的实例\n\n## 环境要求\n- Python 2.7.15\n- 可以使用pyenv管理多个python版本（可选）\n\n## 进入 tmdb-search目录\nRun\npip install -r requirements.txt\nRun python ./ingest_tmdb_from_file.py\n```\nPOST tmdb/_search\n{\n\"_source\": [\"title\",\"overview\"],\n \"query\": {\n   \"match_all\": {}\n }\n}\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"basketball with cartoon aliens\",\n      \"fields\": [\"title\",\"overview\"]\n    }\n  },\n  \"highlight\" : {\n        \"fields\" : {\n            \"overview\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] },\n            \"title\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] }\n\n        }\n    }\n}\n```\n\n## 相关\n- Windows 安装 pyenv https://github.com/pyenv-win/pyenv-win\n- Mac 安装pyenv https://segmentfault.com/a/1190000017403221\n- Linux 安装 pyenv https://blog.csdn.net/GX_1_11_real/article/details/80237064\n- Python.org https://www.python.org/\n\n\n# 4.9-使用SearchTemplate和IndexAlias进行查询.md\n\n# 使用 Search Template 和 Index Alias 查询\n\n```\nPOST _scripts/tmdb\n{\n  \"script\": {\n    \"lang\": \"mustache\",\n    \"source\": {\n      \"_source\": [\n        \"title\",\"overview\"\n      ],\n      \"size\": 20,\n      \"query\": {\n        \"multi_match\": {\n          \"query\": \"{{q}}\",\n          \"fields\": [\"title\",\"overview\"]\n        }\n      }\n    }\n  }\n}\nDELETE _scripts/tmdb\n\nGET _scripts/tmdb\n\nPOST tmdb/_search/template\n{\n    \"id\":\"tmdb\",\n    \"params\": {\n        \"q\": \"basketball with cartoon aliens\"\n    }\n}\n\n\nPUT movies-2019/_doc/1\n{\n  \"name\":\"the matrix\",\n  \"rating\":5\n}\n\nPUT movies-2019/_doc/2\n{\n  \"name\":\"Speed\",\n  \"rating\":3\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-latest\"\n      }\n    }\n  ]\n}\n\nPOST movies-latest/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-lastest-highrate\",\n        \"filter\": {\n          \"range\": {\n            \"rating\": {\n              \"gte\": 4\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n\nPOST movies-lastest-highrate/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\n\n```\n\n\n# 5.1-集群分布式模型及选主与脑裂问题.md\n\n# 集群分布式模型及选主与脑裂问题\n\n```\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data\nbin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.data=node3_data\n\n```\n# 5.2-分片与集群的故障转移.md\n\n# 分片与集群的故障转移\n\n\n# 5.3-文档分布式存储.md\n\n# 文档分布式存储\n\n\n# 5.4-分片及其生命周期.md\n\n# 分片及其生命周期\n\n\n# 5.5-剖析分布式查询及相关性评分.md\n\n# 剖析分布式查询及相关性评分\n```\nDELETE message\nPUT message\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  }\n}\n\nGET message\n\nPOST message/_doc?routing=1\n{\n  \"content\":\"good\"\n}\n\nPOST message/_doc?routing=2\n{\n  \"content\":\"good morning\"\n}\n\nPOST message/_doc?routing=3\n{\n  \"content\":\"good morning everyone\"\n}\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n\nPOST message/_search?search_type=dfs_query_then_fetch\n{\n\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 5.6-排序及DocValues&Fielddata.md\n\n# 排序及Doc Values & Fielddata\n```\n#单字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}}\n  ]\n}\n\n#多字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}},\n    {\"_doc\":{\"order\": \"asc\"}},\n    {\"_score\":{ \"order\": \"desc\"}}\n  ]\n}\n\nGET kibana_sample_data_ecommerce/_mapping\n\n#对 text 字段进行排序。默认会报错，需打开fielddata\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"customer_full_name\": {\"order\": \"desc\"}}\n  ]\n}\n\n#打开 text的 fielddata\nPUT kibana_sample_data_ecommerce/_mapping\n{\n  \"properties\": {\n    \"customer_full_name\" : {\n          \"type\" : \"text\",\n          \"fielddata\": true,\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n  }\n}\n\n#关闭 keyword的 doc values\nPUT test_keyword\nPUT test_keyword/_mapping\n{\n  \"properties\": {\n    \"user_name\":{\n      \"type\": \"keyword\",\n      \"doc_values\":false\n    }\n  }\n}\n\nDELETE test_keyword\n\nPUT test_text\nPUT test_text/_mapping\n{\n  \"properties\": {\n    \"intro\":{\n      \"type\": \"text\",\n      \"doc_values\":true\n    }\n  }\n}\n\nDELETE test_text\n\n\nDELETE temp_users\nPUT temp_users\nPUT temp_users/_mapping\n{\n  \"properties\": {\n    \"name\":{\"type\": \"text\",\"fielddata\": true},\n    \"desc\":{\"type\": \"text\",\"fielddata\": true}\n  }\n}\n\nPost temp_users/_doc\n{\"name\":\"Jack\",\"desc\":\"Jack is a good boy!\",\"age\":10}\n\n#打开fielddata 后，查看 docvalue_fields数据\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"name\",\"desc\"\n    ]\n}\n\n#查看整型字段的docvalues\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"age\"\n    ]\n}\n```\n\n\n# 5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI.md\n\n# 分页与遍历 - From, Size, Search_after & Scroll API\n```\n\nPOST tmdb/_search\n{\n  \"from\": 10000,\n  \"size\": 1,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  }\n}\n\n#Scroll API\nDELETE users\n\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":11}\n\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":12}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":13}\n\nPOST users/_count\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"search_after\":\n        [\n          10,\n          \"ZQ0vYGsBrR8X3IP75QqX\"],\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\n\n#Scroll API\nDELETE users\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":20}\n\nPOST users/_doc\n{\"name\":\"user3\",\"age\":30}\n\nPOST users/_doc\n{\"name\":\"user4\",\"age\":40}\n\nPOST /users/_search?scroll=5m\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\" : {\n        }\n    }\n}\n\n\nPOST users/_doc\n{\"name\":\"user5\",\"age\":50}\nPOST /_search/scroll\n{\n    \"scroll\" : \"1m\",\n    \"scroll_id\" : \"DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==\"\n}\n\n\n```\n\n\n# 5.8-处理并发读写.md\n\n# 处理并发读写操作\n```\n\nDELETE products\nPUT products\n\nPUT products/_doc/1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nGET products/_doc/1\n\nPUT products/_doc/1?if_seq_no=1&if_primary_term=1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nPUT products/_doc/1?version=30000&version_type=external\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\n```\n\n\n# 6.1-Bucket&Metric聚合分析及嵌套聚合.md\n\n# Bucket & Metric Aggregation\n## demos\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n# Metric 聚合，找到最低的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"min_salary\": {\n      \"min\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# Metric 聚合，找到最高的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# 多个 Metric 聚合，找到最低最高和平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"min_salary\": {\n      \"min\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"avg_salary\": {\n      \"avg\": {\n        \"field\": \"salary\"\n      }\n    }\n  }\n}\n\n# 一个聚合，输出多值\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"stats_salary\": {\n      \"stats\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n\n\n\n# 对keword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 聚合查询，失败\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\n# 对 Text 字段打开 fielddata，支持terms aggregation\nPUT employees/_mapping\n{\n  \"properties\" : {\n    \"job\":{\n       \"type\":     \"text\",\n       \"fielddata\": true\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 分词。分词后的terms\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"cardinate\": {\n      \"cardinality\": {\n        \"field\": \"job\"\n      }\n    }\n  }\n}\n\n\n# 对 性别的 keyword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"gender\": {\n      \"terms\": {\n        \"field\":\"gender\"\n      }\n    }\n  }\n}\n\n\n#指定 bucket 的 size\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ages_5\": {\n      \"terms\": {\n        \"field\":\"age\",\n        \"size\":3\n      }\n    }\n  }\n}\n\n\n\n# 指定size，不同工种中，年纪最大的3个员工的具体信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      },\n      \"aggs\":{\n        \"old_employee\":{\n          \"top_hits\":{\n            \"size\":3,\n            \"sort\":[\n              {\n                \"age\":{\n                  \"order\":\"desc\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n#Salary Ranges 分桶，可以自己定义 key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_range\": {\n      \"range\": {\n        \"field\":\"salary\",\n        \"ranges\":[\n          {\n            \"to\":10000\n          },\n          {\n            \"from\":10000,\n            \"to\":20000\n          },\n          {\n            \"key\":\">20000\",\n            \"from\":20000\n          }\n        ]\n      }\n    }\n  }\n}\n\n\n#Salary Histogram,工资0到10万，以 5000一个区间进行分桶\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_histrogram\": {\n      \"histogram\": {\n        \"field\":\"salary\",\n        \"interval\":5000,\n        \"extended_bounds\":{\n          \"min\":0,\n          \"max\":100000\n\n        }\n      }\n    }\n  }\n}\n\n\n# 嵌套聚合1，按照工作类型分桶，并统计工资信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_salary_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"salary\": {\n          \"stats\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_gender_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"gender_stats\": {\n          \"terms\": {\n            \"field\": \"gender\"\n          },\n          \"aggs\": {\n            \"salary_stats\": {\n              \"stats\": {\n                \"field\": \"salary\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n\n# 6.2-Pipeline聚合分析.md\n\n# Pipeline 聚合分析\n## 课程 demo\n```\nDELETE employees\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# 平均工资最低的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"min_salary_by_job\":{\n      \"min_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资最高的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"max_salary_by_job\":{\n      \"max_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"avg_salary_by_job\":{\n      \"avg_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的统计分析\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"stats_salary_by_job\":{\n      \"stats_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的百分位数\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"percentiles_salary_by_job\":{\n      \"percentiles_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n\n#按照年龄对平均工资求导\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"derivative_avg_salary\":{\n          \"derivative\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#Cumulative_sum\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"cumulative_salary\":{\n          \"cumulative_sum\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n#Moving Function\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"moving_avg_salary\":{\n          \"moving_fn\": {\n            \"buckets_path\": \"avg_salary\",\n            \"window\":10,\n            \"script\": \"MovingFunctions.min(values)\"\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n# 6.3-作用范围与排序.md\n\n# 作用范围与排序\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# Query\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n#Filter\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"older_person\": {\n      \"filter\":{\n        \"range\":{\n          \"age\":{\n            \"from\":35\n          }\n        }\n      },\n      \"aggs\":{\n         \"jobs\":{\n           \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n      }\n    }},\n    \"all_jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n\n#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果\nPOST employees/_search\n{\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      }\n    }\n  },\n  \"post_filter\": {\n    \"match\": {\n      \"job.keyword\": \"Dev Manager\"\n    }\n  }\n}\n\n\n#global\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 40\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    },\n    \n    \"all\":{\n      \"global\":{},\n      \"aggs\":{\n        \"salary_avg\":{\n          \"avg\":{\n            \"field\":\"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[\n          {\"_count\":\"asc\"},\n          {\"_key\":\"desc\"}\n          ]\n        \n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"avg_salary\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"avg_salary\": {\n        \"avg\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"stats_salary.min\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"stats_salary\": {\n        \"stats\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n```\n\n# 6.4-聚合分析的原理及精准度问题.md\n\n# 聚合分析的原理及精准度问题\n```\nDELETE my_flights\nPUT my_flights\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  },\n  \"mappings\" : {\n      \"properties\" : {\n        \"AvgTicketPrice\" : {\n          \"type\" : \"float\"\n        },\n        \"Cancelled\" : {\n          \"type\" : \"boolean\"\n        },\n        \"Carrier\" : {\n          \"type\" : \"keyword\"\n        },\n        \"Dest\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"DestRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DistanceKilometers\" : {\n          \"type\" : \"float\"\n        },\n        \"DistanceMiles\" : {\n          \"type\" : \"float\"\n        },\n        \"FlightDelay\" : {\n          \"type\" : \"boolean\"\n        },\n        \"FlightDelayMin\" : {\n          \"type\" : \"integer\"\n        },\n        \"FlightDelayType\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightNum\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeHour\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeMin\" : {\n          \"type\" : \"float\"\n        },\n        \"Origin\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"OriginRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"dayOfWeek\" : {\n          \"type\" : \"integer\"\n        },\n        \"timestamp\" : {\n          \"type\" : \"date\"\n        }\n      }\n    }\n}\n\n\nPOST _reindex\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_flights\"\n  },\n  \"dest\": {\n    \"index\": \"my_flights\"\n  }\n}\n\nGET kibana_sample_data_flights/_count\nGET my_flights/_count\n\nget kibana_sample_data_flights/_search\n\n\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":5,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n\nGET my_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":1,\n        \"shard_size\":1,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n```\n# 7.1-对象及 Nested 对象.md\n\n# 对象及Nested对象\n```\nDELETE blog\n# 设置blog的 Mapping\nPUT /blog\n{\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"time\": {\n        \"type\": \"date\"\n      },\n      \"user\": {\n        \"properties\": {\n          \"city\": {\n            \"type\": \"text\"\n          },\n          \"userid\": {\n            \"type\": \"long\"\n          },\n          \"username\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 插入一条 Blog 信息\nPUT blog/_doc/1\n{\n  \"content\":\"I like Elasticsearch\",\n  \"time\":\"2019-01-01T00:00:00\",\n  \"user\":{\n    \"userid\":1,\n    \"username\":\"Jack\",\n    \"city\":\"Shanghai\"\n  }\n}\n\n\n# 查询 Blog 信息\nPOST blog/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"content\": \"Elasticsearch\"}},\n        {\"match\": {\"user.username\": \"Jack\"}}\n      ]\n    }\n  }\n}\n\n\nDELETE my_movies\n\n# 电影的Mapping信息\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"keyword\"\n            },\n            \"last_name\" : {\n              \"type\" : \"keyword\"\n            }\n          }\n        },\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n      }\n    }\n}\n\n\n# 写入一条电影信息\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# 查询电影信息\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"actors.first_name\": \"Keanu\"}},\n        {\"match\": {\"actors.last_name\": \"Hopper\"}}\n      ]\n    }\n  }\n\n}\n\nDELETE my_movies\n# 创建 Nested 对象 Mapping\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"type\": \"nested\",\n          \"properties\" : {\n            \"first_name\" : {\"type\" : \"keyword\"},\n            \"last_name\" : {\"type\" : \"keyword\"}\n          }},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}\n        }\n      }\n    }\n}\n\n\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# Nested 查询\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"Speed\"}},\n        {\n          \"nested\": {\n            \"path\": \"actors\",\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\"match\": {\n                    \"actors.first_name\": \"Keanu\"\n                  }},\n\n                  {\"match\": {\n                    \"actors.last_name\": \"Hopper\"\n                  }}\n                ]\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\n\n# Nested Aggregation\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"actors\": {\n      \"nested\": {\n        \"path\": \"actors\"\n      },\n      \"aggs\": {\n        \"actor_name\": {\n          \"terms\": {\n            \"field\": \"actors.first_name\",\n            \"size\": 10\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 普通 aggregation不工作\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"NAME\": {\n      \"terms\": {\n        \"field\": \"actors.first_name\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n```\n\n# 7.2-文档的父子关系.md\n\n# 文档的父子关系\n```\nDELETE my_blogs\n\n# 设定 Parent/Child Mapping\nPUT my_blogs\n{\n  \"settings\": {\n    \"number_of_shards\": 2\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"blog_comments_relation\": {\n        \"type\": \"join\",\n        \"relations\": {\n          \"blog\": \"comment\"\n        }\n      },\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"title\": {\n        \"type\": \"keyword\"\n      }\n    }\n  }\n}\n\n\n#索引父文档\nPUT my_blogs/_doc/blog1\n{\n  \"title\":\"Learning Elasticsearch\",\n  \"content\":\"learning ELK @ geektime\",\n  \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n#索引父文档\nPUT my_blogs/_doc/blog2\n{\n  \"title\":\"Learning Hadoop\",\n  \"content\":\"learning Hadoop\",\n    \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n\n#索引子文档\nPUT my_blogs/_doc/comment1?routing=blog1\n{\n  \"comment\":\"I am learning ELK\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog1\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment2?routing=blog2\n{\n  \"comment\":\"I like Hadoop!!!!!\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n  \"comment\":\"Hello Hadoop\",\n  \"username\":\"Bob\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n# 查询所有文档\nPOST my_blogs/_search\n{\n\n}\n\n\n#根据父文档ID查看\nGET my_blogs/_doc/blog2\n\n# Parent Id 查询\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"parent_id\": {\n      \"type\": \"comment\",\n      \"id\": \"blog2\"\n    }\n  }\n}\n\n# Has Child 查询,返回父文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_child\": {\n      \"type\": \"comment\",\n      \"query\" : {\n                \"match\": {\n                    \"username\" : \"Jack\"\n                }\n            }\n    }\n  }\n}\n\n\n# Has Parent 查询，返回相关的子文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_parent\": {\n      \"parent_type\": \"blog\",\n      \"query\" : {\n                \"match\": {\n                    \"title\" : \"Learning Hadoop\"\n                }\n            }\n    }\n  }\n}\n\n\n\n#通过ID ，访问子文档\nGET my_blogs/_doc/comment3\n#通过ID和routing ，访问子文档\nGET my_blogs/_doc/comment3?routing=blog2\n\n#更新子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n    \"comment\": \"Hello Hadoop??\",\n    \"blog_comments_relation\": {\n      \"name\": \"comment\",\n      \"parent\": \"blog2\"\n    }\n}\n\n\n```\n\n# 7.5-Elasticsearch数据建模实例.md\n\n# Elasticsearch 数据建模实例\n```\n###### Data Modeling Example\n\n# Index 一本书的信息\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n\n\n#查询自动创建的Mapping\nGET books/_mapping\n\nDELETE books\n\n#优化字段类型\nPUT books\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\"},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false},\n        \"description\" : {\"type\" : \"text\"},\n        \"public_date\" : {\"type\" : \"date\"},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          }\n        }\n      }\n    }\n}\n\n#Cover URL index 设置成false，无法对该字段进行搜索\nPOST books/_search\n{\n  \"query\": {\n    \"term\": {\n      \"cover_url\": {\n        \"value\": \"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n      }\n    }\n  }\n}\n\n#Cover URL index 设置成false，依然支持聚合分析\nPOST books/_search\n{\n  \"aggs\": {\n    \"cover\": {\n      \"terms\": {\n        \"field\": \"cover_url\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n\nDELETE books\n#新增 Content字段。数据量很大。选择将Source 关闭\nPUT books\n{\n      \"mappings\" : {\n      \"_source\": {\"enabled\": false},\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\",\"store\": true},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false,\"store\": true},\n        \"description\" : {\"type\" : \"text\",\"store\": true},\n         \"content\" : {\"type\" : \"text\",\"store\": true},\n        \"public_date\" : {\"type\" : \"date\",\"store\": true},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          },\n          \"store\": true\n        }\n      }\n    }\n}\n\n\n# Index 一本书的信息,包含Content\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"content\":\"The content of the book......Indexing data, aggregation, searching.    something else. something in the way............\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n#查询结果中，Source不包含数据\nPOST books/_search\n{}\n\n#搜索，通过store 字段显示数据，同时高亮显示 conent的内容\nPOST books/_search\n{\n  \"stored_fields\": [\"title\",\"author\",\"public_date\"],\n  \"query\": {\n    \"match\": {\n      \"content\": \"searching\"\n    }\n  },\n\n  \"highlight\": {\n    \"fields\": {\n      \"content\":{}\n    }\n  }\n\n}\n\n```\n# 7.6-Elasticsearch 数据建模最佳实践.md\n\n# Elasticsearch 数据建模最佳实践\n\n\n```\n\n###### Cookie Service\n\n##索引数据，dynamic mapping 会不断加入新增字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":{\n   \"username\":\"tom\",\n   \"age\":32\n }\n}\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":{\n   \"login\":\"2019-01-01\",\n   \"email\":\"xyz@abc.com\"\n }\n}\n\n\nDELETE cookie_service\n#使用 Nested 对象，增加key/value\nPUT cookie_service\n{\n  \"mappings\": {\n    \"properties\": {\n      \"cookies\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"keyword\"\n          },\n          \"dateValue\": {\n            \"type\": \"date\"\n          },\n          \"keywordValue\": {\n            \"type\": \"keyword\"\n          },\n          \"IntValue\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"url\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"keyword\": {\n            \"type\": \"keyword\",\n            \"ignore_above\": 256\n          }\n        }\n      }\n    }\n  }\n}\n\n\n##写入数据，使用key和合适类型的value字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":[\n    {\n      \"name\":\"username\",\n      \"keywordValue\":\"tom\"\n    },\n    {\n       \"name\":\"age\",\n      \"intValue\":32\n\n    }\n\n   ]\n }\n\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":[\n    {\n      \"name\":\"login\",\n      \"dateValue\":\"2019-01-01\"\n    },\n    {\n       \"name\":\"email\",\n      \"IntValue\":32\n\n    }\n\n   ]\n }\n\n\n# Nested 查询，通过bool查询进行过滤\nPOST cookie_service/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"cookies\",\n      \"query\": {\n        \"bool\": {\n          \"filter\": [\n            {\n            \"term\": {\n              \"cookies.name\": \"age\"\n            }},\n            {\n              \"range\":{\n                \"cookies.intValue\":{\n                  \"gte\":30\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\n# 在Mapping中加入元信息，便于管理\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.0\"\n    }\n  }\n}\n\nGET softwares/_mapping\nPUT softwares/_doc/1\n{\n  \"software_version\":\"7.1.0\"\n}\n\nDELETE softwares\n# 优化,使用inner object\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.1\"\n    },\n    \"properties\": {\n      \"version\": {\n        \"properties\": {\n          \"display_name\": {\n            \"type\": \"keyword\"\n          },\n          \"hot_fix\": {\n            \"type\": \"byte\"\n          },\n          \"marjor\": {\n            \"type\": \"byte\"\n          },\n          \"minor\": {\n            \"type\": \"byte\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#通过 Inner Object 写入多个文档\nPUT softwares/_doc/1\n{\n  \"version\":{\n  \"display_name\":\"7.1.0\",\n  \"marjor\":7,\n  \"minor\":1,\n  \"hot_fix\":0  \n  }\n\n}\n\nPUT softwares/_doc/2\n{\n  \"version\":{\n  \"display_name\":\"7.2.0\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":0  \n  }\n}\n\nPUT softwares/_doc/3\n{\n  \"version\":{\n  \"display_name\":\"7.2.1\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":1  \n  }\n}\n\n\n# 通过 bool 查询，\nPOST softwares/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match\":{\n            \"version.marjor\":7\n          }\n        },\n        {\n          \"match\":{\n            \"version.minor\":2\n          }\n        }\n\n      ]\n    }\n  }\n}\n\n\n\n\n# Not Null 解决聚合的问题\nDELETE ratings\nPUT ratings\n{\n  \"mappings\": {\n      \"properties\": {\n        \"rating\": {\n          \"type\": \"float\",\n          \"null_value\": 1.0\n        }\n      }\n    }\n}\n\n\nPUT ratings/_doc/1\n{\n \"rating\":5\n}\nPUT ratings/_doc/2\n{\n \"rating\":null\n}\n\n\nPOST ratings/_search\nPOST ratings/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"avg\": {\n      \"avg\": {\n        \"field\": \"rating\"\n      }\n    }\n  }\n}\n\nPOST ratings/_search\n{\n  \"query\": {\n    \"term\": {\n      \"rating\": {\n        \"value\": 1\n      }\n    }\n  }\n}\n\n```\n\n\n\n# 7.7-第二部分总结与测验.md\n\n# 第二部分总结与测验\n```\nDELETE test\nPUT test/_doc/1\n{\n  \"content\":\"Hello World\"\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\n\n```\n\n\n# 8.1-集群身份认证与用户鉴权.md\n\n# 集群身份认证与用户鉴权\n- 如何为集群启用X-Pack Security\n- 如何为内置用户设置密码\n- 设置 Kibana与ElasticSearch通信鉴权\n- 使用安全API创建对特定索引具有有限访问权限的用户\n\nThis tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:\n\ndiscovery.type: single-node\n\n```\n#启动单节点\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true\n\n#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误\ncurl 'localhost:9200/_cat/nodes?pretty'\n\n#运行密码设定的命令，设置ES内置用户及其初始密码。\nbin/elasticsearch-setup-passwords interactive\n\ncurl -u elastic 'localhost:9200/_cat/nodes?pretty'\n\n\n# 修改 kibana.yml\nelasticsearch.username: \"kibana\"\nelasticsearch.password: \"changeme\"\n\n#启动。使用用户名，elastic，密码elastic\n./bin/kibana\n\n\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n#create a new role named read_only_orders, that satisfies the following criteria:\n#The role has no cluster privileges\n#The role only has access to indices that match the pattern sales_record\n#The index privileges are read, and view_index_metadata\n\n\n#create sales_user that satisfies the following criteria:\n# Use your own email address\n# Assign the user to two roles: read_only_orders and kibana_user\n\n\n#验证读权限,可以执行\nPOST orders/_search\n{}\n\n#验证写权限,报错\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n```\n\n# 8.2-集群内部安全通信.md\n\n#\n\n```\n# 生成证书\n# 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\nbin/elasticsearch-certutil ca\n\n#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：\nbin/elasticsearch-certutil cert --ca elastic-stack-ca.p12\n\n#将证书拷贝到 config/certs目录下\nelastic-certificates.p12\n\n\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E http.port=9201 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\n\n#不提供证书的节点，无法加入\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E http.port=9202 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate\n\n\n```\n\n\n```\n## elasticsearch.yml 配置\n\n#xpack.security.transport.ssl.enabled: true\n#xpack.security.transport.ssl.verification_mode: certificate\n\n#xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12\n#xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12\n\n\n```\n\n# 8.3-集群与外部间的安全通信.md\n\n\n\n```\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12\nxpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12\n\n```\n```\n\n\n# ES 启用 https\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.enabled=true -E xpack.security.http.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.path=certs/elastic-certificates.p12\n\n```\n\n```\n#Kibana 连接 ES https\n\n\n\n# 为kibana生成pem\nopenssl pkcs12 -in elastic-certificates.p12 -cacerts -nokeys -out elastic-ca.pem\n\n\nelasticsearch.hosts: [\"https://localhost:9200\"]\nelasticsearch.ssl.certificateAuthorities: [ \"/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem\" ]\nelasticsearch.ssl.verificationMode: certificate\n\n\n\n# 为 Kibna 配置 HTTPS\n# 生成后解压，包含了instance.crt 和 instance.key\nbin/elasticsearch-certutil ca --pem\n\nserver.ssl.enabled: true\nserver.ssl.certificate: config/certs/instance.crt\nserver.ssl.key: config/certs/instance.key\n\n\n```\n\n\n\n# 9.1-常见的集群部署方式.md\n\n# 常见的集群部署方式\n\n\n# 9.2-Hot&Warm架构与ShardFiltering.md\n\n# Hot & Warm 架构与 Shard Filtering\n## 课程代码\n```\n# 标记一个 Hot 节点\nbin/elasticsearch  -E node.name=hotnode -E cluster.name=geektime -E path.data=hot_data -E node.attr.my_node_type=hot\n\n# 标记一个 warm 节点\nbin/elasticsearch  -E node.name=warmnode -E cluster.name=geektime -E path.data=warm_data -E node.attr.my_node_type=warm\n\n# 查看节点\nGET /_cat/nodeattrs?v\n\n# 配置到 Hot节点\nPUT logs-2019-06-27\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.my_node_type\":\"hot\"\n  }\n}\n\n\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\nGET _cat/shards?v\n\n\n# 配置到 warm 节点\nPUT PUT logs-2019-06-27/_settings\n{  \n  \"index.routing.allocation.require.my_node_type\":\"warm\"\n}\n\n\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack2\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\"\n  }\n}\n\nPUT my_index1\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1\n  }\n}\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\nGET _cat/shards?v\nDELETE my_index1/_doc/1\n\n\n\n# Fore awareness\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack1\n\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\",\n    \"cluster.routing.allocation.awareness.force.my_rack_id.values\": \"rack1,rack2\"\n  }\n}\nGET _cluster/settings\n\n# 集群黄色\nGET _cluster/health\n\n# 副本无法分配\nGET _cat/shards?v\n\n\nGET _cluster/allocation/explain?pretty\n```\n# 9.3-如何对集群进行容量规划.md\n\n# 如何对集群进行容量规划\n## 代码Demo\n\n```\nPUT logs_2019-06-27\nPUT logs_2019-06-26\n\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"logs_2019-06-27\",\n        \"alias\": \"logs_write\"\n      }\n    },\n    {\n      \"remove\": {\n        \"index\": \"logs_2019-06-26\",\n        \"alias\": \"logs_write\"\n      }\n    }\n  ]\n}\n\n\n# POST /<logs-{now/d}/_search\nPOST /%3Clogs-%7Bnow%2Fd%7D%3E/_search\n\n# POST /<logs-{now/w}/_search\nPOST /%3Clogs-%7Bnow%2Fw%7D%3E/_search\n\n```\n\n# 9.4-分片设计及管理.md\n\n# 分片设计及管理\n\n# 9.5-在私有云上管理与部署Elasticsearch集群.md\n\n# 在私有云上管理与部署 Elasticsearch 集群\n\n# 9.6-在公有云上管理与部署Elasticsearch集群.md\n\n# 在公有云上管理与部署 Elasticsearch 集群\n\n# result.md\n\n# 10.1-生产环境常用配置与上线清单.md\n\n# 生产环境查用配置与线上清单\n\n# 10.10-一些运维相关的建议.md\n\n# 一些运维相关的建议\n```\n# 移动一个分片从一个节点到另外一个节点\n\nPOST _cluster/reroute\n{\n  \"commands\": [\n    {\n      \"move\": {\n        \"index\": \"index_name\",\n        \"shard\": 0,\n        \"from_node\": \"node_name_1\",\n        \"to_node\": \"node_name_2\"\n      }\n    }\n  ]\n}\n\n\n# Fore the allocation of an unassinged shard with a reason\n\nPOST _cluster/reroute?explain\n{\n  \"commands\": [\n    {\n      \"allocate\": {\n        \"index\": \"index_name\",\n        \"shard\": 0,\n        \"node\": \"nodename\"\n      }\n    }\n  ]\n}\n\n\n# remove the nodes from cluster \nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.routing.allocation.exclude._ip\":\"the_IP_of_your_node\"\n  }\n}\n\n# Force a synced flush\nPOST _flush/synced\n\n\n# change the number of moving shards to balance the cluster\nPUT /_cluster/settings\n{\n  \"transient\": {\"cluster.routing.allocation.cluster_concurrent_rebalance\":2}\n}\n\n# change the number of shards being recovered simultanceously per node\nPUT _cluster/settings\n{\n  \"transient\": {\"cluster.routing.allocation.node_concurrent_recoveries\":5}\n}\n\n# Change the recovery speed\nPUT /_cluster/settings\n{\n  \"transient\": {\"indices.recovery.max_bytes_per_sec\": \"80mb\"}\n}\n\n# Change the number of concurrent streams for a recovery on a single node\nPUT _cluster/settings\n{\n  \"transient\": {\"indices.recovery.concurrent_streams\":6}\n}\n\n\n# Change the sinze of the search queue\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"threadpool.search.queue_size\":2000\n  }\n}\n\n# Clear the cache on a node\nPOST _cache/clear\n\n\n#Adjust the circuit breakers\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.breaker.total.limit\":\"40%\"\n  }\n}\n\n\n```\n\n# 10.2-监控Elasticsearch集群.md\n\n# 监控 Elasticsearch 集群\n```\n# Node Stats：\nGET _nodes/stats\n\n#Cluster Stats:\nGET _cluster/stats\n\n#Index Stats:\nGET kibana_sample_data_ecommerce/_stats\n\n#Pending Cluster Tasks API:\nGET _cluster/pending_tasks\n\n# 查看所有的 tasks，也支持 cancel task\nGET _tasks\n\n\nGET _nodes/thread_pool\nGET _nodes/stats/thread_pool\nGET _cat/thread_pool?v\nGET _nodes/hot_threads\nGET _nodes/stats/thread_pool\n\n\n# 设置 Index Slowlogs\n# the first 1000 characters of the doc's source will be logged\nPUT my_index/_settings\n{\n  \"index.indexing.slowlog\":{\n    \"threshold.index\":{\n      \"warn\":\"10s\",\n      \"info\": \"4s\",\n      \"debug\":\"2s\",\n      \"trace\":\"0s\"\n    },\n    \"level\":\"trace\",\n    \"source\":1000  \n  }\n}\n\n# 设置查询\nDELETE my_index\n//\"0\" logs all queries\nPUT my_index/\n{\n  \"settings\": {\n    \"index.search.slowlog.threshold\": {\n      \"query.warn\": \"10s\",\n      \"query.info\": \"3s\",\n      \"query.debug\": \"2s\",\n      \"query.trace\": \"0s\",\n      \"fetch.warn\": \"1s\",\n      \"fetch.info\": \"600ms\",\n      \"fetch.debug\": \"400ms\",\n      \"fetch.trace\": \"0s\"\n    }\n  }\n}\n\nGET my_index\n\n\n```\n\n# 10.3-诊断集群的潜在问题.md\n\n# 诊断集群的潜在问题\n# 10.4-解决集群Yellow与Red的问题.md\n\n# 集群健康与问题排查\n```\n#案例1\nDELETE mytest\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":3,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.box_type\":\"hott\"\n  }\n}\n\n\n\n\n\n# 检查集群状态，查看是否有节点丢失，有多少分片无法分配\nGET /_cluster/health/\n\n# 查看索引级别,找到红色的索引\nGET /_cluster/health?level=indices\n\n\n#查看索引的分片\nGET _cluster/health?level=shards\n\n# Explain 变红的原因\nGET /_cluster/allocation/explain\n\nGET /_cat/shards/mytest\nGET _cat/nodeattrs\n\nDELETE mytest\nGET /_cluster/health/\n\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":3,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.box_type\":\"hot\"\n  }\n}\n\nGET /_cluster/health/\n\n#案例2, Explain 看 hot 上的 explain\nDELETE mytest\nPUT mytest\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1,\n    \"index.routing.allocation.require.box_type\":\"hot\"\n  }\n}\n\nGET _cluster/health\nGET _cat/shards/mytest\nGET /_cluster/allocation/explain\n\nPUT mytest/_settings\n{\n    \"number_of_replicas\": 0\n}\n\n```\n\n# 10.5-提升集群写性能.md\n\n# 提升集群写性能\n```\nDELETE myindex\nPUT myindex\n{\n  \"settings\": {\n    \"index\": {\n      \"refresh_interval\": \"30s\",\n      \"number_of_shards\": \"2\"\n    },\n    \"routing\": {\n      \"allocation\": {\n        \"total_shards_per_node\": \"3\"\n      }\n    },\n    \"translog\": {\n      \"sync_interval\": \"30s\",\n      \"durability\": \"async\"\n    },\n    \"number_of_replicas\": 0\n  },\n  \"mappings\": {\n    \"dynamic\": false,\n    \"properties\": {}\n  }\n}\n```\n\n# 10.6-提升集群读性能.md\n\n# 提升集群读性能\n```\nPUT blogs/_doc/1\n{\n  \"title\":\"elasticsearch\"\n}\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\n          \"title\": \"elasticsearch\"\n        }}\n      ],\n      \n      \"filter\": {\n        \"script\": {\n          \"script\": {\n            \"source\": \"doc['title.keyword'].value.length()>5\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nGET blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"elasticsearch\"}},\n        {\n          \"range\": {\n            \"publish_date\": {\n              \"gte\": 2017,\n              \"lte\": 2019\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```\n\n# 10.7-集群压力测试.md\n\n# 集群压力测试\n```\npip3 install esrally\n\nesrally configure\n\n# 只测试 1000条数据\nesrally --distribution-version=7.1.0 --test-mode\n\n# 测试完整数据\nesrally --distribution-version=7.1.0\n\n```\n- https://github.com/elastic/rally-tracks\n- https://logz.io/blog/rally/\n\n\n# 10.9-缓存及使用Breaker限制内存使用.md\n\n# 缓存及使用Circuit Breaker限制内存使用\n```\nGET _cat/nodes?v\n\nGET _nodes/stats/indices?pretty\n\nGET _cat/nodes?v&h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count\n\nGET _cat/nodes?h=name,port,segments.memory,segments.index_writer_memory,fielddata.memory_size,query_cache.memory_size,request_cache.memory_size&v\n\n\nPUT /_cluster/settings\n{\n    \"persistent\" : {\n       \"indices.breaker.request.limit\" : \"90%\"\n    }\n}\n\n```\n## 补充阅读\n- https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker\n\n\n# 11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md\n\n# 使用 shrink与rolloverAPI有效的管理索引\n```\n\n\n# 打开关闭索引\nDELETE test\n#查看索引是否存在\nHEAD test\n\nPUT test/_doc/1\n{\n  \"key\":\"value\"\n}\n\n#关闭索引\nPOST /test/_close\n#索引存在\nHEAD test\n# 无法查询\nPOST test/_count\n\n#打开索引\nPOST /test/_open\nPOST test/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\nPOST test/_count\n\n\n# 在一个 hot-warm-cold的集群上进行测试\nGET _cat/nodes\nGET _cat/nodeattrs\n\nDELETE my_source_index\nDELETE my_target_index\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n# 分片数3，会失败\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 3,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n\n\n# 报错，因为没有置成 readonly\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n#将 my_source_index 设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n# 报错，必须都在一个节点\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\nDELETE my_source_index\n## 确保分片都在 hot\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0,\n   \"index.routing.allocation.include.box_type\":\"hot\"\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n#设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n\nPOST my_source_index/_shrink/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_replicas\": 0,\n    \"index.number_of_shards\": 2,\n    \"index.codec\": \"best_compression\"\n  },\n  \"aliases\": {\n    \"my_search_indices\": {}\n  }\n}\n\n\nGET _cat/shards/my_target_index\n\n# My target_index状态为也只读\nPUT my_target_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\n# Split Index\nDELETE my_source_index\nDELETE my_target_index\n\nPUT my_source_index\n{\n \"settings\": {\n   \"number_of_shards\": 4,\n   \"number_of_replicas\": 0\n }\n}\n\nPUT my_source_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\nGET _cat/shards/my_source_index\n\n# 必须是倍数\nPOST my_source_index/_split/my_target\n{\n  \"settings\": {\n    \"index.number_of_shards\": 10\n  }\n}\n\n# 必须是只读\nPOST my_source_index/_split/my_target\n{\n  \"settings\": {\n    \"index.number_of_shards\": 8\n  }\n}\n\n\n#设置为只读\nPUT /my_source_index/_settings\n{\n  \"settings\": {\n    \"index.blocks.write\": true\n  }\n}\n\n\nPOST my_source_index/_split/my_target_index\n{\n  \"settings\": {\n    \"index.number_of_shards\": 8,\n    \"index.number_of_replicas\":0\n  }\n}\n\nGET _cat/shards/my_target_index\n\n\n\n# write block\nPUT my_target_index/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\n#Rollover API\nDELETE nginx-logs*\n# 不设定 is_write_true\n# 名字符合命名规范\nPUT /nginx-logs-000001\n{\n  \"aliases\": {\n    \"nginx_logs_write\": {}\n  }\n}\n\n# 多次写入文档\nPOST nginx_logs_write/_doc\n{\n  \"log\":\"something\"\n}\n\n\nPOST /nginx_logs_write/_rollover\n{\n  \"conditions\": {\n    \"max_age\":   \"1d\",\n    \"max_docs\":  5,\n    \"max_size\":  \"5gb\"\n  }\n}\n\nGET /nginx_logs_write/_count\n# 查看 Alias信息\nGET /nginx_logs_write\n\n\nDELETE apache-logs*\n\n\n# 设置 is_write_index\nPUT apache-logs1\n{\n  \"aliases\": {\n    \"apache_logs\": {\n      \"is_write_index\":true\n    }\n  }\n}\nPOST apache_logs/_count\n\nPOST apache_logs/_doc\n{\n  \"key\":\"value\"\n}\n\n# 需要指定 target 的名字\nPOST /apache_logs/_rollover/apache-logs8xxxx\n{\n  \"conditions\": {\n    \"max_age\":   \"1d\",\n    \"max_docs\":  1,\n    \"max_size\":  \"5gb\"\n  }\n}\n\n\n# 查看 Alias信息\nGET /apache_logs\n\n\n```\n\n# 11.2-索引全生命周期管理及工具介绍.md\n\n# 索引全生命周期管理及工具介绍\n```\n\n# 运行三个节点，分片 将box_type设置成 hot，warm和cold\n# 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\n\n\n\nDELETE *\n\n\n\n# 设置 1秒刷新1次，生产环境10分种刷新一次\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"indices.lifecycle.poll_interval\":\"1s\"\n  }\n}\n\n# 设置 Policy\nPUT /_ilm/policy/log_ilm_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_docs\": 5\n          }\n        }\n      },\n      \"warm\": {\n        \"min_age\": \"10s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"warm\"\n            }\n          }\n        }\n      },\n      \"cold\": {\n        \"min_age\": \"15s\",\n        \"actions\": {\n          \"allocate\": {\n            \"include\": {\n              \"box_type\": \"cold\"\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"20s\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n\n\n\n# 设置索引模版\nPUT /_template/log_ilm_template\n{\n  \"index_patterns\" : [\n      \"ilm_index-*\"\n    ],\n    \"settings\" : {\n      \"index\" : {\n        \"lifecycle\" : {\n          \"name\" : \"log_ilm_policy\",\n          \"rollover_alias\" : \"ilm_alias\"\n        },\n        \"routing\" : {\n          \"allocation\" : {\n            \"include\" : {\n              \"box_type\" : \"hot\"\n            }\n          }\n        },\n        \"number_of_shards\" : \"1\",\n        \"number_of_replicas\" : \"0\"\n      }\n    },\n    \"mappings\" : { },\n    \"aliases\" : { }\n}\n\n\n\n#创建索引\nPUT ilm_index-000001\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 0,\n    \"index.lifecycle.name\": \"log_ilm_policy\",\n    \"index.lifecycle.rollover_alias\": \"ilm_alias\",\n    \"index.routing.allocation.include.box_type\":\"hot\"\n  },\n  \"aliases\": {\n    \"ilm_alias\": {\n      \"is_write_index\": true\n    }\n  }\n}\n\n# 对 Alias写入文档\nPOST  ilm_alias/_doc\n{\n  \"dfd\":\"dfdsf\"\n}\n\n```\n\n# 12.1-Logstash入门及架构介绍.md\n\n# Logstash 入门及架构介绍\n```\n\n\n# 一个 Demo， demo 运行\nsudo bin/logstash -f logstash-filter.conf\n\n# demo数据\n127.0.0.1 - - [11/Dec/2013:00:01:45 -0800] \"GET /xampp/status.php HTTP/1.1\" 200 3891 \"http://cadenza/xampp/navi.php\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n\n\n# codec demo\n\n\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>json}}output{stdout{codec=> rubydebug}}\"\nsudo bin/logstash -e \"input{stdin{codec=>line}}output{stdout{codec=> dots}}\"\n\n\nsudo bin/logstash -f multiline-exception.conf\n\n# 多行数据，异常\nException in thread \"main\" java.lang.NullPointerException\n        at com.example.myproject.Book.getTitle(Book.java:16)\n        at com.example.myproject.Author.getBookTitles(Author.java:25)\n        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)\n\n\n\n# 一个实例\nhttps://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\n\n```\n\n\n# 12.2-利用JDBC插件导入数据到Elasticsearch.md\n\n# Logstash插件及文档介绍\n```\nhttps://spring.io/guides/gs/accessing-data-mysql/\ncreate database db_example;\nuse db_example;\nshow tables;\ndrop table user;\nselect * from user;\n\n\n\n# 新增用户\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\n#查看所有的用户\ncurl 'localhost:8080/demo/all'\n\n# 更新用户\ncurl -X PUT localhost:8080/demo/update -d id=16 -d name=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ\n\n# 删除用户\ncurl -X DELETE localhost:8080/demo/delete -d id=15\n\n\n\nmysql-demo.conf\n\n# 创建 alias，只显示没有被标记 deleted的用户\nPOST /_aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"users\",\n        \"alias\": \"view_users\",\n         \"filter\" : { \"term\" : { \"is_deleted\" : false } }\n      }\n    }\n  ]\n}\n\n# 通过 Alias查询，查不到被标记成 deleted的用户\nPOST view_users/_search\n{\n\n}\n\n\nPOST view_users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\nPOST users/_search\n{\n  \"query\": {\n    \"term\": {\n      \"name.keyword\": {\n        \"value\": \"Jack\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 12.3-Beats介绍.md\n\n# Beats介绍\n```\n\n##\n# 查看 packetbeat 模块\n# 设置 packetbeat 的mysql 模块\n# 启动运行\n#\n./metricbeat modules list\n./metricbeat modules enable mysql\n./metricbeat setup --dashboards\n\n# 安装mysql\ncreate database db_example\nuse db_example;\nshow tables;\nselect * from user\n\ncurl localhost:8080/demo/add -d name=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ\ncurl localhost:8080/demo/add -d name=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ\ncurl localhost:8080/demo/add -d name=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ\n\ncurl 'localhost:8080/demo/all'\n\n\n# 配置 packetbeat\n# 启动\n修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控\n\nsudo chown root packetbeat.yml\nsudo ./packetbeat setup --dashboards\nsudo ./packetbeat\n\n\n# 查看所有 Filebeat 模块\n# 查看所有的modules\n./filebeat modules list\n\n#\n./filebeat modules enable mysql\n\n```\n\n\n# 13.1-使用IndexPattern配置数据.md\n\n\n```\n\nlocalhost:5601/status\n\n\n\n\nPUT /logstash-2015.05.18\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\nPUT /logstash-2015.05.19\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /logstash-2015.05.20\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geo\": {\n        \"properties\": {\n          \"coordinates\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl\n\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\n\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"logs.jsonl\"\n\n\n\nGET /_cat/indices?v\n\n```\n\n\n# 13.2-使用KibanaDiscover探索数据.md\n\n# 使用Kibana Discovery 探索数据\n```\n\n设置时间过滤器\n搜索你的数据\n根据字段进行过滤\n查看文档数据\n查看文档上下文\n暂时字段数据统计\nSave Query\n\n\n```\n\n\n# 13.3-基本可视化组件介绍.md\n\n# 基本可视化组件介绍\n```\n\nPUT /shakespeare\n{\n  \"mappings\": {\n    \"properties\": {\n    \"speaker\": {\"type\": \"keyword\"},\n    \"play_name\": {\"type\": \"keyword\"},\n    \"line_id\": {\"type\": \"integer\"},\n    \"speech_number\": {\"type\": \"integer\"}\n    }\n  }\n}\n\n\n# For Mac & Windows\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json\ncurl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json\n\n#For Windows\nInvoke-RestMethod \"http://localhost:9200/bank/account/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"accounts.json\"\nInvoke-RestMethod \"http://localhost:9200/shakespeare/_bulk?pretty\" -Method Post -ContentType 'application/x-ndjson' -InFile \"shakespeare.json\"\n\n\n```\n\n\n# 13.4-构建Dashboard.md\n\n# 构建Dashboard\n```\n- 创建仪表潘\n- 加载仪表盘\n- 共享仪表盘\n\n```\n\n\n# 14.3用机器学习实现时序数据的异常检测-上.md\n\nmkdir server_metrics\ncd server_metrics\nwget https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\ntar -xvf server_metrics.tar.gz\n\n\n# 14.5-用ELK进行日志管理.md\n\n# 用 ELK 来做日志管理\n```\n./filebeat modules list\n./filebeat modules enable system\n./filebeat modules enable elasticsearch\n\n\n## 进 modules.d 编辑相应的文件，修改log路径\n\n./filebeat setup –dashboards\n\n./filebeat export template | more\n\n./filebeat -e\n\n```\n\n# 14.6-用Canvas做数据演示.md\n\nPOST elasticoffee/_search\n{\n  \"size\": 0, \n  \"aggs\": {\n    \"by\": {\n      \"terms\": {\n        \"field\": \"beverage.keyword\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n# 4.1-基于词项和基于全文的搜索.md\n\n# 基于词项和基于全文的搜索\n\n\n```\nDELETE products\nPUT products\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  }\n}\n\n\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"productID\" : \"XHDK-A-1293-#fJ3\",\"desc\":\"iPhone\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"productID\" : \"KDKE-B-9947-#kL5\",\"desc\":\"iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"productID\" : \"JODL-X-1937-#pV7\",\"desc\":\"MBP\" }\n\nGET /products\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n        //\"value\": \"iPhone\"\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        //\"value\": \"iPhone\"\n        //\"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"productID\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\nPOST /products/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": {\n        \"value\": \"XHDK-A-1293-#fJ3\"\n      }\n    }\n  }\n}\n\n\n\n\nPOST /products/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n\n    }\n  }\n}\n\n\n#设置 position_increment_gap\nDELETE groups\nPUT groups\n{\n  \"mappings\": {\n    \"properties\": {\n      \"names\":{\n        \"type\": \"text\",\n        \"position_increment_gap\": 0\n      }\n    }\n  }\n}\n\nGET groups/_mapping\n\nPOST groups/_doc\n{\n  \"names\": [ \"John Water\", \"Water Smith\"]\n}\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": {\n        \"query\": \"Water Water\",\n        \"slop\": 100\n      }\n    }\n  }\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": \"Water Smith\"\n    }\n  }\n}\n```\n\n# 4.10-综合排序：Function Score Query 优化算分.md\n\n# 综合排序：Function Score Query 优化算分\n```\nDELETE blogs\nPUT /blogs/_doc/1\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   0\n}\n\nPUT /blogs/_doc/2\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   100\n}\n\nPUT /blogs/_doc/3\n{\n  \"title\":   \"About popularity\",\n  \"content\": \"In this post we will talk about...\",\n  \"votes\":   1000000\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\"\n      }\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\"\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      }\n    }\n  }\n}\n\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"query\": {\n        \"multi_match\": {\n          \"query\":    \"popularity\",\n          \"fields\": [ \"title\", \"content\" ]\n        }\n      },\n      \"field_value_factor\": {\n        \"field\": \"votes\",\n        \"modifier\": \"log1p\" ,\n        \"factor\": 0.1\n      },\n      \"boost_mode\": \"sum\",\n      \"max_boost\": 3\n    }\n  }\n}\n\nPOST /blogs/_search\n{\n  \"query\": {\n    \"function_score\": {\n      \"random_score\": {\n        \"seed\": 911119\n      }\n    }\n  }\n}\n```\n\n# 4.12-自动补全与基于上下文的提示.md\n\n# 自动补全与基于上下文的提示\n```\nDELETE articles\nPUT articles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title_completion\":{\n        \"type\": \"completion\"\n      }\n    }\n  }\n}\n\nPOST articles/_bulk\n{ \"index\" : { } }\n{ \"title_completion\": \"lucene is very cool\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch builds on top of lucene\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elasticsearch rocks\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"elastic is the company behind ELK stack\"}\n{ \"index\" : { } }\n{ \"title_completion\": \"Elk stack rocks\"}\n{ \"index\" : {} }\n\n\nPOST articles/_search?pretty\n{\n  \"size\": 0,\n  \"suggest\": {\n    \"article-suggester\": {\n      \"prefix\": \"elk \",\n      \"completion\": {\n        \"field\": \"title_completion\"\n      }\n    }\n  }\n}\n\n\nDELETE comments\nPUT comments\nPUT comments/_mapping\n{\n  \"properties\": {\n    \"comment_autocomplete\":{\n      \"type\": \"completion\",\n      \"contexts\":[{\n        \"type\":\"category\",\n        \"name\":\"comment_category\"\n      }]\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"I love the star war movies\",\n  \"comment_autocomplete\":{\n    \"input\":[\"star wars\"],\n    \"contexts\":{\n      \"comment_category\":\"movies\"\n    }\n  }\n}\n\nPOST comments/_doc\n{\n  \"comment\":\"Where can I find a Starbucks\",\n  \"comment_autocomplete\":{\n    \"input\":[\"starbucks\"],\n    \"contexts\":{\n      \"comment_category\":\"coffee\"\n    }\n  }\n}\n\n\nPOST comments/_search\n{\n  \"suggest\": {\n    \"MY_SUGGESTION\": {\n      \"prefix\": \"sta\",\n      \"completion\":{\n        \"field\":\"comment_autocomplete\",\n        \"contexts\":{\n          \"comment_category\":\"coffee\"\n        }\n      }\n    }\n  }\n}\n```\n\n\n# 4.13-跨集群搜索.md\n\n# 跨集群搜索\n```\n//启动3个集群\n\nbin/elasticsearch -E node.name=cluster0node -E cluster.name=cluster0 -E path.data=cluster0_data -E discovery.type=single-node -E http.port=9200 -E transport.port=9300\nbin/elasticsearch -E node.name=cluster1node -E cluster.name=cluster1 -E path.data=cluster1_data -E discovery.type=single-node -E http.port=9201 -E transport.port=9301\nbin/elasticsearch -E node.name=cluster2node -E cluster.name=cluster2 -E path.data=cluster2_data -E discovery.type=single-node -E http.port=9202 -E transport.port=9302\n\n\n//在每个集群上设置动态的设置\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster\": {\n      \"remote\": {\n        \"cluster0\": {\n          \"seeds\": [\n            \"127.0.0.1:9300\"\n          ],\n          \"transport.ping_schedule\": \"30s\"\n        },\n        \"cluster1\": {\n          \"seeds\": [\n            \"127.0.0.1:9301\"\n          ],\n          \"transport.compress\": true,\n          \"skip_unavailable\": true\n        },\n        \"cluster2\": {\n          \"seeds\": [\n            \"127.0.0.1:9302\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#cURL\ncurl -XPUT \"http://localhost:9200/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9201/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\ncurl -XPUT \"http://localhost:9202/_cluster/settings\" -H 'Content-Type: application/json' -d'\n{\"persistent\":{\"cluster\":{\"remote\":{\"cluster0\":{\"seeds\":[\"127.0.0.1:9300\"],\"transport.ping_schedule\":\"30s\"},\"cluster1\":{\"seeds\":[\"127.0.0.1:9301\"],\"transport.compress\":true,\"skip_unavailable\":true},\"cluster2\":{\"seeds\":[\"127.0.0.1:9302\"]}}}}}'\n\n\n#创建测试数据\ncurl -XPOST \"http://localhost:9200/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user1\",\"age\":10}'\n\ncurl -XPOST \"http://localhost:9201/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user2\",\"age\":20}'\n\ncurl -XPOST \"http://localhost:9202/users/_doc\" -H 'Content-Type: application/json' -d'\n{\"name\":\"user3\",\"age\":30}'\n\n\n#查询\nGET /users,cluster1:users,cluster2:users/_search\n{\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20,\n        \"lte\": 40\n      }\n    }\n  }\n}\n\n```\n\n\n# 4.2-结构化搜索.md\n\n# 结构化搜索\n\n```\n\n#结构化搜索，精确匹配\nDELETE products\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\nGET products/_mapping\n\n\n\n#对布尔值 match 查询，有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"avaliable\": true\n    }\n  }\n}\n\n\n\n#对布尔值，通过constant score 转成 filtering，没有算分\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": true\n        }\n      }\n    }\n  }\n}\n\n\n#数字类型 Term\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": 30\n    }\n  }\n}\n\n#数字类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"price\": [\n            \"20\",\n            \"30\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n#数字 Range 查询\nGET products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"price\" : {\n                        \"gte\" : 20,\n                        \"lte\"  : 30\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n# 日期 range\nPOST products/_search\n{\n    \"query\" : {\n        \"constant_score\" : {\n            \"filter\" : {\n                \"range\" : {\n                    \"date\" : {\n                      \"gte\" : \"now-1y\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n#exists查询\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"exists\": {\n          \"field\": \"date\"\n        }\n      }\n    }\n  }\n}\n\n#处理多值字段\nPOST /movies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\"}\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"] }\n\n\n#处理多值字段，term 查询是包含，而不是等于\nPOST movies/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"genre.keyword\": \"Comedy\"\n        }\n      }\n    }\n  }\n}\n\n\n#字符类型 terms\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"terms\": {\n          \"productID.keyword\": [\n            \"QQPX-R-3956-#aD8\",\n            \"JODL-X-1937-#pV7\"\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": 30\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"date\": \"2019-01-01\"\n    }\n  }\n}\n\n\n\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"productID.keyword\": \"XHDK-A-1293-#fJ3\"\n    }\n  }\n}\n\n#对布尔数值\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"term\": {\n          \"avaliable\": \"false\"\n        }\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"avaliable\": {\n        \"value\": \"false\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"price\": {\n        \"value\": \"20\"\n      }\n    }\n  }\n}\n\nPOST products/_search\n{\n  \"profile\": \"true\",\n  \"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"price\": \"20\"\n    }\n    }\n  }\n}\n\n\nPOST products/_search\n{\n  \"query\": {\n    \"constant_score\": {\n      \"filter\": {\n        \"bool\": {\n          \"must_not\": {\n            \"exists\": {\n              \"field\": \"date\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n```\n\n# 4.3-搜索的相关性算分.md\n\n# 搜索的相关性算分\n\n```\n\n\nPUT testscore\n{\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n\n\nPUT testscore/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"we use Elasticsearch to power the search\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"we like elasticsearch\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"The scoring of documents is caculated by the scoring formula\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"content\":\"you know, for search\" }\n\n\n\nPOST /testscore/_search\n{\n  //\"explain\": true,\n  \"query\": {\n    \"match\": {\n      \"content\":\"you\"\n      //\"content\": \"elasticsearch\"\n      //\"content\":\"the\"\n      //\"content\": \"the elasticsearch\"\n    }\n  }\n}\n\nPOST testscore/_search\n{\n    \"query\": {\n        \"boosting\" : {\n            \"positive\" : {\n                \"term\" : {\n                    \"content\" : \"elasticsearch\"\n                }\n            },\n            \"negative\" : {\n                 \"term\" : {\n                     \"content\" : \"like\"\n                }\n            },\n            \"negative_boost\" : 0.2\n        }\n    }\n}\n\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"more_like_this\": {\n      \"fields\": [\n        \"title^10\",\"overview\"\n      ],\n      \"like\": [{\"_id\":\"14191\"}],\n      \"min_term_freq\": 1,\n      \"max_query_terms\": 12\n    }\n  }\n}\n\n\n\n```\n\n\n# 4.4-Query&Filtering实现多字符串多字段查询.md\n\n# Query & Filtering 与多字符串多字段查询\n\n```\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\n\n#基本语法\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :1\n    }\n  }\n}\n\n#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题\nPOST /newmovies/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\" : \"Father of the Bridge Part II\",\"year\":1995, \"genre\":\"Comedy\",\"genre_count\":1 }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\" : \"Dave\",\"year\":1993,\"genre\":[\"Comedy\",\"Romance\"],\"genre_count\":2 }\n\n#must，有算分\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n\n      ]\n    }\n  }\n}\n\n#Filter。不参与算分，结果的score是0\nPOST /newmovies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\"term\": {\"genre.keyword\": {\"value\": \"Comedy\"}}},\n        {\"term\": {\"genre_count\": {\"value\": 1}}}\n        ]\n\n    }\n  }\n}\n\n\n#Filtering Context\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      }\n    }\n  }\n}\n\n\n#Query Context\nPOST /products/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"price\" : 10,\"avaliable\":true,\"date\":\"2018-01-01\", \"productID\" : \"XHDK-A-1293-#fJ3\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"price\" : 20,\"avaliable\":true,\"date\":\"2019-01-01\", \"productID\" : \"KDKE-B-9947-#kL5\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"price\" : 30,\"avaliable\":true, \"productID\" : \"JODL-X-1937-#pV7\" }\n{ \"index\": { \"_id\": 4 }}\n{ \"price\" : 30,\"avaliable\":false, \"productID\" : \"QQPX-R-3956-#aD8\" }\n\n\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"term\": {\n            \"productID.keyword\": {\n              \"value\": \"JODL-X-1937-#pV7\"}}\n        },\n        {\"term\": {\"avaliable\": {\"value\": true}}\n        }\n      ]\n    }\n  }\n}\n\n\n#嵌套，实现了 should not 逻辑\nPOST /products/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"price\": \"30\"\n        }\n      },\n      \"should\": [\n        {\n          \"bool\": {\n            \"must_not\": {\n              \"term\": {\n                \"avaliable\": \"false\"\n              }\n            }\n          }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  }\n}\n\n\n#Controll the Precision\nPOST _search\n{\n  \"query\": {\n    \"bool\" : {\n      \"must\" : {\n        \"term\" : { \"price\" : \"30\" }\n      },\n      \"filter\": {\n        \"term\" : { \"avaliable\" : \"true\" }\n      },\n      \"must_not\" : {\n        \"range\" : {\n          \"price\" : { \"lte\" : 10 }\n        }\n      },\n      \"should\" : [\n        { \"term\" : { \"productID.keyword\" : \"JODL-X-1937-#pV7\" } },\n        { \"term\" : { \"productID.keyword\" : \"XHDK-A-1293-#fJ3\" } }\n      ],\n      \"minimum_should_match\" :2\n    }\n  }\n}\n\n\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"brown\" }},\n        { \"term\": { \"text\": \"red\" }},\n        { \"term\": { \"text\": \"quick\"   }},\n        { \"term\": { \"text\": \"dog\"   }}\n      ]\n    }\n  }\n}\n\nPOST /animals/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        { \"term\": { \"text\": \"quick\" }},\n        { \"term\": { \"text\": \"dog\"   }},\n        {\n          \"bool\":{\n            \"should\":[\n               { \"term\": { \"text\": \"brown\" }},\n                 { \"term\": { \"text\": \"brown\" }},\n            ]\n          }\n\n        }\n      ]\n    }\n  }\n}\n\n\nDELETE blogs\nPOST /blogs/_bulk\n{ \"index\": { \"_id\": 1 }}\n{\"title\":\"Apple iPad\", \"content\":\"Apple iPad,Apple iPad\" }\n{ \"index\": { \"_id\": 2 }}\n{\"title\":\"Apple iPad,Apple iPad\", \"content\":\"Apple iPad\" }\n\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\"match\": {\n          \"title\": {\n            \"query\": \"apple,ipad\",\n            \"boost\": 1.1\n          }\n        }},\n\n        {\"match\": {\n          \"content\": {\n            \"query\": \"apple,ipad\",\n            \"boost\":\n          }\n        }}\n      ]\n    }\n  }\n}\n\nDELETE news\nPOST /news/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"content\":\"Apple Mac\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"content\":\"Apple iPad\" }\n{ \"index\": { \"_id\": 3 }}\n{ \"content\":\"Apple employee like Apple Pie and Apple Juice\" }\n\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match\":{\"content\":\"apple\"}\n      },\n      \"must_not\": {\n        \"match\":{\"content\":\"pie\"}\n      }\n    }\n  }\n}\n\nPOST news/_search\n{\n  \"query\": {\n    \"boosting\": {\n      \"positive\": {\n        \"match\": {\n          \"content\": \"apple\"\n        }\n      },\n      \"negative\": {\n        \"match\": {\n          \"content\": \"pie\"\n        }\n      },\n      \"negative_boost\": 0.5\n    }\n  }\n}\n\n```\n\n# 4.5-单字符串多字段查询-DisMaxQuery.md\n\n# 单字符串多字段查询：Dis Max Query\n```\n\nPUT /blogs/_doc/1\n{\n    \"title\": \"Quick brown rabbits\",\n    \"body\":  \"Brown rabbits are commonly seen.\"\n}\n\nPUT /blogs/_doc/2\n{\n    \"title\": \"Keeping pets healthy\",\n    \"body\":  \"My quick brown fox eats rabbits on a regular basis.\"\n}\n\nPOST /blogs/_search\n{\n    \"query\": {\n        \"bool\": {\n            \"should\": [\n                { \"match\": { \"title\": \"Brown fox\" }},\n                { \"match\": { \"body\":  \"Brown fox\" }}\n            ]\n        }\n    }\n}\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ]\n        }\n    }\n}\n\n\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\n\n```\n\n# 4.6-单字符串多字段查询-Multi-Match.md\n\n# 单字符串多字段查询：Multi Match\n```\nPOST blogs/_search\n{\n    \"query\": {\n        \"dis_max\": {\n            \"queries\": [\n                { \"match\": { \"title\": \"Quick pets\" }},\n                { \"match\": { \"body\":  \"Quick pets\" }}\n            ],\n            \"tie_breaker\": 0.2\n        }\n    }\n}\n\nPOST blogs/_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\": \"best_fields\",\n      \"query\": \"Quick pets\",\n      \"fields\": [\"title\",\"body\"],\n      \"tie_breaker\": 0.2,\n      \"minimum_should_match\": \"20%\"\n    }\n  }\n}\n\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": \"*_title\"\n    }\n}\n\n\nPOST books/_search\n{\n    \"multi_match\": {\n        \"query\":  \"Quick brown fox\",\n        \"fields\": [ \"*_title\", \"chapter_title^2\" ]\n    }\n}\n\n\n\nDELETE /titles\nPUT /titles\n{\n    \"settings\": { \"number_of_shards\": 1 },\n    \"mappings\": {\n        \"my_type\": {\n            \"properties\": {\n                \"title\": {\n                    \"type\":     \"string\",\n                    \"analyzer\": \"english\",\n                    \"fields\": {\n                        \"std\":   {\n                            \"type\":     \"string\",\n                            \"analyzer\": \"standard\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\"\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\n\nGET titles/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"barking dogs\"\n    }\n  }\n}\n\nDELETE /titles\nPUT /titles\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"english\",\n        \"fields\": {\"std\": {\"type\": \"text\",\"analyzer\": \"standard\"}}\n      }\n    }\n  }\n}\n\nPOST titles/_bulk\n{ \"index\": { \"_id\": 1 }}\n{ \"title\": \"My dog barks\" }\n{ \"index\": { \"_id\": 2 }}\n{ \"title\": \"I see a lot of barking dogs on the road \" }\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title\", \"title.std\" ]\n        }\n    }\n}\n\nGET /titles/_search\n{\n   \"query\": {\n        \"multi_match\": {\n            \"query\":  \"barking dogs\",\n            \"type\":   \"most_fields\",\n            \"fields\": [ \"title^10\", \"title.std\" ]\n        }\n    }\n}\n\n```\n\n# 4.7-多语言及中文分词与检索.md\n\n# 多语言及中文分词与检索\n\n- 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”\n\n- 你也想犯范范玮琪犯过的错吗\n- 校长说衣服上除了校徽别别别的\n- 这几天天天天气不好\n- 我背有点驼，麻麻说“你的背得背背背背佳\n\n```\n#stop word\n\nDELETE my_index\nPUT /my_index/_doc/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/_doc/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\n\nPOST my_index/_search\n{\n  \"query\": {\n    \"match\": {\n      \"title\": \"not happy fox\"\n    }\n  }\n}\n\n\n#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:\n\nDELETE my_index\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"analyzer\": \"english\"\n        }\n      }\n    }\n  }\n}\n\nPUT /my_index\n{\n  \"mappings\": {\n    \"blog\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"fields\": {\n            \"english\": {\n              \"type\":     \"string\",\n              \"analyzer\": \"english\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\nPUT /my_index/blog/1\n{ \"title\": \"I'm happy for this fox\" }\n\nPUT /my_index/blog/2\n{ \"title\": \"I'm not happy about my fox problem\" }\n\nGET /_search\n{\n  \"query\": {\n    \"multi_match\": {\n      \"type\":     \"most_fields\",\n      \"query\":    \"not happy foxes\",\n      \"fields\": [ \"title\", \"title.english\" ]\n    }\n  }\n}\n\n\n#安装插件\n./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\n#安装插件\nbin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\n\n\n\n\n#ik_max_word\n#ik_smart\n#hanlp: hanlp默认分词\n#hanlp_standard: 标准分词\n#hanlp_index: 索引分词\n#hanlp_nlp: NLP分词\n#hanlp_n_short: N-最短路分词\n#hanlp_dijkstra: 最短路分词\n#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）\n#hanlp_speed: 极速词典分词\n\nPOST _analyze\n{\n  \"analyzer\": \"hanlp_standard\",\n  \"text\": [\"剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜\"]\n\n}     \n\n#Pinyin\nPUT /artists/\n{\n    \"settings\" : {\n        \"analysis\" : {\n            \"analyzer\" : {\n                \"user_name_analyzer\" : {\n                    \"tokenizer\" : \"whitespace\",\n                    \"filter\" : \"pinyin_first_letter_and_full_pinyin_filter\"\n                }\n            },\n            \"filter\" : {\n                \"pinyin_first_letter_and_full_pinyin_filter\" : {\n                    \"type\" : \"pinyin\",\n                    \"keep_first_letter\" : true,\n                    \"keep_full_pinyin\" : false,\n                    \"keep_none_chinese\" : true,\n                    \"keep_original\" : false,\n                    \"limit_first_letter_length\" : 16,\n                    \"lowercase\" : true,\n                    \"trim_whitespace\" : true,\n                    \"keep_none_chinese_in_first_letter\" : true\n                }\n            }\n        }\n    }\n}\n\n\nGET /artists/_analyze\n{\n  \"text\": [\"刘德华 张学友 郭富城 黎明 四大天王\"],\n  \"analyzer\": \"user_name_analyzer\"\n}\n\n\n```\n\n## 相关资源\n- Elasticsearch IK分词插件 https://github.com/medcl/elasticsearch-analysis-ik/releases\n- Elasticsearch hanlp 分词插件 https://github.com/KennFalcon/elasticsearch-analysis-hanlp\n\n- 分词算法综述 https://zhuanlan.zhihu.com/p/50444885\n\n### 一些分词工具，供参考：\n- 中科院计算所NLPIR http://ictclas.nlpir.org/nlpir/\n- ansj分词器 https://github.com/NLPchina/ansj_seg\n- 哈工大的LTP https://github.com/HIT-SCIR/ltp\n- 清华大学THULAC https://github.com/thunlp/THULAC\n- 斯坦福分词器 https://nlp.stanford.edu/software/segmenter.shtml\n- Hanlp分词器 https://github.com/hankcs/HanLP\n- 结巴分词 https://github.com/yanyiwu/cppjieba\n- KCWS分词器(字嵌入+Bi-LSTM+CRF) https://github.com/koth/kcws\n- ZPar https://github.com/frcchang/zpar/releases\n- IKAnalyzer https://github.com/wks/ik-analyzer\n\n\n# 4.8-SpaceJam一个全文搜索的实例.md\n\n# Space Jam，一次全文搜索的实例\n\n## 环境要求\n- Python 2.7.15\n- 可以使用pyenv管理多个python版本（可选）\n\n## 进入 tmdb-search目录\nRun\npip install -r requirements.txt\nRun python ./ingest_tmdb_from_file.py\n```\nPOST tmdb/_search\n{\n\"_source\": [\"title\",\"overview\"],\n \"query\": {\n   \"match_all\": {}\n }\n}\n\nPOST tmdb/_search\n{\n  \"_source\": [\"title\",\"overview\"],\n  \"query\": {\n    \"multi_match\": {\n      \"query\": \"basketball with cartoon aliens\",\n      \"fields\": [\"title\",\"overview\"]\n    }\n  },\n  \"highlight\" : {\n        \"fields\" : {\n            \"overview\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] },\n            \"title\" : { \"pre_tags\" : [\"\\\\033[0;32;40m\"], \"post_tags\" : [\"\\\\033[0m\"] }\n\n        }\n    }\n}\n```\n\n## 相关\n- Windows 安装 pyenv https://github.com/pyenv-win/pyenv-win\n- Mac 安装pyenv https://segmentfault.com/a/1190000017403221\n- Linux 安装 pyenv https://blog.csdn.net/GX_1_11_real/article/details/80237064\n- Python.org https://www.python.org/\n\n\n# 4.9-使用SearchTemplate和IndexAlias进行查询.md\n\n# 使用 Search Template 和 Index Alias 查询\n\n```\nPOST _scripts/tmdb\n{\n  \"script\": {\n    \"lang\": \"mustache\",\n    \"source\": {\n      \"_source\": [\n        \"title\",\"overview\"\n      ],\n      \"size\": 20,\n      \"query\": {\n        \"multi_match\": {\n          \"query\": \"{{q}}\",\n          \"fields\": [\"title\",\"overview\"]\n        }\n      }\n    }\n  }\n}\nDELETE _scripts/tmdb\n\nGET _scripts/tmdb\n\nPOST tmdb/_search/template\n{\n    \"id\":\"tmdb\",\n    \"params\": {\n        \"q\": \"basketball with cartoon aliens\"\n    }\n}\n\n\nPUT movies-2019/_doc/1\n{\n  \"name\":\"the matrix\",\n  \"rating\":5\n}\n\nPUT movies-2019/_doc/2\n{\n  \"name\":\"Speed\",\n  \"rating\":3\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-latest\"\n      }\n    }\n  ]\n}\n\nPOST movies-latest/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\nPOST _aliases\n{\n  \"actions\": [\n    {\n      \"add\": {\n        \"index\": \"movies-2019\",\n        \"alias\": \"movies-lastest-highrate\",\n        \"filter\": {\n          \"range\": {\n            \"rating\": {\n              \"gte\": 4\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n\nPOST movies-lastest-highrate/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\n\n```\n\n\n# 5.1-集群分布式模型及选主与脑裂问题.md\n\n# 集群分布式模型及选主与脑裂问题\n\n```\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data\nbin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.data=node3_data\n\n```\n# 5.2-分片与集群的故障转移.md\n\n# 分片与集群的故障转移\n\n\n# 5.3-文档分布式存储.md\n\n# 文档分布式存储\n\n\n# 5.4-分片及其生命周期.md\n\n# 分片及其生命周期\n\n\n# 5.5-剖析分布式查询及相关性评分.md\n\n# 剖析分布式查询及相关性评分\n```\nDELETE message\nPUT message\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  }\n}\n\nGET message\n\nPOST message/_doc?routing=1\n{\n  \"content\":\"good\"\n}\n\nPOST message/_doc?routing=2\n{\n  \"content\":\"good morning\"\n}\n\nPOST message/_doc?routing=3\n{\n  \"content\":\"good morning everyone\"\n}\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n\n\nPOST message/_search\n{\n  \"explain\": true,\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n\nPOST message/_search?search_type=dfs_query_then_fetch\n{\n\n  \"query\": {\n    \"term\": {\n      \"content\": {\n        \"value\": \"good\"\n      }\n    }\n  }\n}\n\n```\n\n\n# 5.6-排序及DocValues&Fielddata.md\n\n# 排序及Doc Values & Fielddata\n```\n#单字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}}\n  ]\n}\n\n#多字段排序\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"order_date\": {\"order\": \"desc\"}},\n    {\"_doc\":{\"order\": \"asc\"}},\n    {\"_score\":{ \"order\": \"desc\"}}\n  ]\n}\n\nGET kibana_sample_data_ecommerce/_mapping\n\n#对 text 字段进行排序。默认会报错，需打开fielddata\nPOST /kibana_sample_data_ecommerce/_search\n{\n  \"size\": 5,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  },\n  \"sort\": [\n    {\"customer_full_name\": {\"order\": \"desc\"}}\n  ]\n}\n\n#打开 text的 fielddata\nPUT kibana_sample_data_ecommerce/_mapping\n{\n  \"properties\": {\n    \"customer_full_name\" : {\n          \"type\" : \"text\",\n          \"fielddata\": true,\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n  }\n}\n\n#关闭 keyword的 doc values\nPUT test_keyword\nPUT test_keyword/_mapping\n{\n  \"properties\": {\n    \"user_name\":{\n      \"type\": \"keyword\",\n      \"doc_values\":false\n    }\n  }\n}\n\nDELETE test_keyword\n\nPUT test_text\nPUT test_text/_mapping\n{\n  \"properties\": {\n    \"intro\":{\n      \"type\": \"text\",\n      \"doc_values\":true\n    }\n  }\n}\n\nDELETE test_text\n\n\nDELETE temp_users\nPUT temp_users\nPUT temp_users/_mapping\n{\n  \"properties\": {\n    \"name\":{\"type\": \"text\",\"fielddata\": true},\n    \"desc\":{\"type\": \"text\",\"fielddata\": true}\n  }\n}\n\nPost temp_users/_doc\n{\"name\":\"Jack\",\"desc\":\"Jack is a good boy!\",\"age\":10}\n\n#打开fielddata 后，查看 docvalue_fields数据\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"name\",\"desc\"\n    ]\n}\n\n#查看整型字段的docvalues\nPOST  temp_users/_search\n{\n  \"docvalue_fields\": [\n    \"age\"\n    ]\n}\n```\n\n\n# 5.7-分页与遍历-FromSize&SearchAfter&ScrollAPI.md\n\n# 分页与遍历 - From, Size, Search_after & Scroll API\n```\n\nPOST tmdb/_search\n{\n  \"from\": 10000,\n  \"size\": 1,\n  \"query\": {\n    \"match_all\": {\n\n    }\n  }\n}\n\n#Scroll API\nDELETE users\n\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":11}\n\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":12}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":13}\n\nPOST users/_count\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\nPOST users/_search\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"search_after\":\n        [\n          10,\n          \"ZQ0vYGsBrR8X3IP75QqX\"],\n    \"sort\": [\n        {\"age\": \"desc\"} ,\n        {\"_id\": \"asc\"}    \n    ]\n}\n\n\n#Scroll API\nDELETE users\nPOST users/_doc\n{\"name\":\"user1\",\"age\":10}\n\nPOST users/_doc\n{\"name\":\"user2\",\"age\":20}\n\nPOST users/_doc\n{\"name\":\"user3\",\"age\":30}\n\nPOST users/_doc\n{\"name\":\"user4\",\"age\":40}\n\nPOST /users/_search?scroll=5m\n{\n    \"size\": 1,\n    \"query\": {\n        \"match_all\" : {\n        }\n    }\n}\n\n\nPOST users/_doc\n{\"name\":\"user5\",\"age\":50}\nPOST /_search/scroll\n{\n    \"scroll\" : \"1m\",\n    \"scroll_id\" : \"DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==\"\n}\n\n\n```\n\n\n# 5.8-处理并发读写.md\n\n# 处理并发读写操作\n```\n\nDELETE products\nPUT products\n\nPUT products/_doc/1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nGET products/_doc/1\n\nPUT products/_doc/1?if_seq_no=1&if_primary_term=1\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\nPUT products/_doc/1?version=30000&version_type=external\n{\n  \"title\":\"iphone\",\n  \"count\":100\n}\n\n\n\n```\n\n\n# 6.1-Bucket&Metric聚合分析及嵌套聚合.md\n\n# Bucket & Metric Aggregation\n## demos\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n# Metric 聚合，找到最低的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"min_salary\": {\n      \"min\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# Metric 聚合，找到最高的工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n# 多个 Metric 聚合，找到最低最高和平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"max_salary\": {\n      \"max\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"min_salary\": {\n      \"min\": {\n        \"field\": \"salary\"\n      }\n    },\n    \"avg_salary\": {\n      \"avg\": {\n        \"field\": \"salary\"\n      }\n    }\n  }\n}\n\n# 一个聚合，输出多值\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"stats_salary\": {\n      \"stats\": {\n        \"field\":\"salary\"\n      }\n    }\n  }\n}\n\n\n\n\n# 对keword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 聚合查询，失败\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\n# 对 Text 字段打开 fielddata，支持terms aggregation\nPUT employees/_mapping\n{\n  \"properties\" : {\n    \"job\":{\n       \"type\":     \"text\",\n       \"fielddata\": true\n    }\n  }\n}\n\n\n# 对 Text 字段进行 terms 分词。分词后的terms\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job\"\n      }\n    }\n  }\n}\n\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n    }\n  }\n}\n\n\n# 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"cardinate\": {\n      \"cardinality\": {\n        \"field\": \"job\"\n      }\n    }\n  }\n}\n\n\n# 对 性别的 keyword 进行聚合\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"gender\": {\n      \"terms\": {\n        \"field\":\"gender\"\n      }\n    }\n  }\n}\n\n\n#指定 bucket 的 size\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ages_5\": {\n      \"terms\": {\n        \"field\":\"age\",\n        \"size\":3\n      }\n    }\n  }\n}\n\n\n\n# 指定size，不同工种中，年纪最大的3个员工的具体信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n      },\n      \"aggs\":{\n        \"old_employee\":{\n          \"top_hits\":{\n            \"size\":3,\n            \"sort\":[\n              {\n                \"age\":{\n                  \"order\":\"desc\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n#Salary Ranges 分桶，可以自己定义 key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_range\": {\n      \"range\": {\n        \"field\":\"salary\",\n        \"ranges\":[\n          {\n            \"to\":10000\n          },\n          {\n            \"from\":10000,\n            \"to\":20000\n          },\n          {\n            \"key\":\">20000\",\n            \"from\":20000\n          }\n        ]\n      }\n    }\n  }\n}\n\n\n#Salary Histogram,工资0到10万，以 5000一个区间进行分桶\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"salary_histrogram\": {\n      \"histogram\": {\n        \"field\":\"salary\",\n        \"interval\":5000,\n        \"extended_bounds\":{\n          \"min\":0,\n          \"max\":100000\n\n        }\n      }\n    }\n  }\n}\n\n\n# 嵌套聚合1，按照工作类型分桶，并统计工资信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_salary_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"salary\": {\n          \"stats\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n# 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"Job_gender_stats\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      },\n      \"aggs\": {\n        \"gender_stats\": {\n          \"terms\": {\n            \"field\": \"gender\"\n          },\n          \"aggs\": {\n            \"salary_stats\": {\n              \"stats\": {\n                \"field\": \"salary\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n\n# 6.2-Pipeline聚合分析.md\n\n# Pipeline 聚合分析\n## 课程 demo\n```\nDELETE employees\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# 平均工资最低的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"min_salary_by_job\":{\n      \"min_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资最高的工作类型\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"max_salary_by_job\":{\n      \"max_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的平均工资\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"avg_salary_by_job\":{\n      \"avg_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的统计分析\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"stats_salary_by_job\":{\n      \"stats_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n# 平均工资的百分位数\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        }\n      }\n    },\n    \"percentiles_salary_by_job\":{\n      \"percentiles_bucket\": {\n        \"buckets_path\": \"jobs>avg_salary\"\n      }\n    }\n  }\n}\n\n\n\n#按照年龄对平均工资求导\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"derivative_avg_salary\":{\n          \"derivative\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#Cumulative_sum\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"cumulative_salary\":{\n          \"cumulative_sum\": {\n            \"buckets_path\": \"avg_salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n#Moving Function\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"age\": {\n      \"histogram\": {\n        \"field\": \"age\",\n        \"min_doc_count\": 1,\n        \"interval\": 1\n      },\n      \"aggs\": {\n        \"avg_salary\": {\n          \"avg\": {\n            \"field\": \"salary\"\n          }\n        },\n        \"moving_avg_salary\":{\n          \"moving_fn\": {\n            \"buckets_path\": \"avg_salary\",\n            \"window\":10,\n            \"script\": \"MovingFunctions.min(values)\"\n          }\n        }\n      }\n    }\n  }\n}\n\n```\n\n# 6.3-作用范围与排序.md\n\n# 作用范围与排序\n```\nDELETE /employees\nPUT /employees/\n{\n  \"mappings\" : {\n      \"properties\" : {\n        \"age\" : {\n          \"type\" : \"integer\"\n        },\n        \"gender\" : {\n          \"type\" : \"keyword\"\n        },\n        \"job\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 50\n            }\n          }\n        },\n        \"name\" : {\n          \"type\" : \"keyword\"\n        },\n        \"salary\" : {\n          \"type\" : \"integer\"\n        }\n      }\n    }\n}\n\nPUT /employees/_bulk\n{ \"index\" : {  \"_id\" : \"1\" } }\n{ \"name\" : \"Emma\",\"age\":32,\"job\":\"Product Manager\",\"gender\":\"female\",\"salary\":35000 }\n{ \"index\" : {  \"_id\" : \"2\" } }\n{ \"name\" : \"Underwood\",\"age\":41,\"job\":\"Dev Manager\",\"gender\":\"male\",\"salary\": 50000}\n{ \"index\" : {  \"_id\" : \"3\" } }\n{ \"name\" : \"Tran\",\"age\":25,\"job\":\"Web Designer\",\"gender\":\"male\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"4\" } }\n{ \"name\" : \"Rivera\",\"age\":26,\"job\":\"Web Designer\",\"gender\":\"female\",\"salary\": 22000}\n{ \"index\" : {  \"_id\" : \"5\" } }\n{ \"name\" : \"Rose\",\"age\":25,\"job\":\"QA\",\"gender\":\"female\",\"salary\":18000 }\n{ \"index\" : {  \"_id\" : \"6\" } }\n{ \"name\" : \"Lucy\",\"age\":31,\"job\":\"QA\",\"gender\":\"female\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"7\" } }\n{ \"name\" : \"Byrd\",\"age\":27,\"job\":\"QA\",\"gender\":\"male\",\"salary\":20000 }\n{ \"index\" : {  \"_id\" : \"8\" } }\n{ \"name\" : \"Foster\",\"age\":27,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"9\" } }\n{ \"name\" : \"Gregory\",\"age\":32,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":22000 }\n{ \"index\" : {  \"_id\" : \"10\" } }\n{ \"name\" : \"Bryant\",\"age\":20,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 9000}\n{ \"index\" : {  \"_id\" : \"11\" } }\n{ \"name\" : \"Jenny\",\"age\":36,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":38000 }\n{ \"index\" : {  \"_id\" : \"12\" } }\n{ \"name\" : \"Mcdonald\",\"age\":31,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\": 32000}\n{ \"index\" : {  \"_id\" : \"13\" } }\n{ \"name\" : \"Jonthna\",\"age\":30,\"job\":\"Java Programmer\",\"gender\":\"female\",\"salary\":30000 }\n{ \"index\" : {  \"_id\" : \"14\" } }\n{ \"name\" : \"Marshall\",\"age\":32,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 25000}\n{ \"index\" : {  \"_id\" : \"15\" } }\n{ \"name\" : \"King\",\"age\":33,\"job\":\"Java Programmer\",\"gender\":\"male\",\"salary\":28000 }\n{ \"index\" : {  \"_id\" : \"16\" } }\n{ \"name\" : \"Mccarthy\",\"age\":21,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"17\" } }\n{ \"name\" : \"Goodwin\",\"age\":25,\"job\":\"Javascript Programmer\",\"gender\":\"male\",\"salary\": 16000}\n{ \"index\" : {  \"_id\" : \"18\" } }\n{ \"name\" : \"Catherine\",\"age\":29,\"job\":\"Javascript Programmer\",\"gender\":\"female\",\"salary\": 20000}\n{ \"index\" : {  \"_id\" : \"19\" } }\n{ \"name\" : \"Boone\",\"age\":30,\"job\":\"DBA\",\"gender\":\"male\",\"salary\": 30000}\n{ \"index\" : {  \"_id\" : \"20\" } }\n{ \"name\" : \"Kathy\",\"age\":29,\"job\":\"DBA\",\"gender\":\"female\",\"salary\": 20000}\n\n\n\n# Query\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n#Filter\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"older_person\": {\n      \"filter\":{\n        \"range\":{\n          \"age\":{\n            \"from\":35\n          }\n        }\n      },\n      \"aggs\":{\n         \"jobs\":{\n           \"terms\": {\n        \"field\":\"job.keyword\"\n      }\n      }\n    }},\n    \"all_jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    }\n  }\n}\n\n\n\n#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果\nPOST employees/_search\n{\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\": \"job.keyword\"\n      }\n    }\n  },\n  \"post_filter\": {\n    \"match\": {\n      \"job.keyword\": \"Dev Manager\"\n    }\n  }\n}\n\n\n#global\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 40\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\"\n        \n      }\n    },\n    \n    \"all\":{\n      \"global\":{},\n      \"aggs\":{\n        \"salary_avg\":{\n          \"avg\":{\n            \"field\":\"salary\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"range\": {\n      \"age\": {\n        \"gte\": 20\n      }\n    }\n  },\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[\n          {\"_count\":\"asc\"},\n          {\"_key\":\"desc\"}\n          ]\n        \n      }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"avg_salary\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"avg_salary\": {\n        \"avg\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n\n\n#排序 order\n#count and key\nPOST employees/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"jobs\": {\n      \"terms\": {\n        \"field\":\"job.keyword\",\n        \"order\":[  {\n            \"stats_salary.min\":\"desc\"\n          }]\n        \n        \n      },\n    \"aggs\": {\n      \"stats_salary\": {\n        \"stats\": {\n          \"field\":\"salary\"\n        }\n      }\n    }\n    }\n  }\n}\n```\n\n# 6.4-聚合分析的原理及精准度问题.md\n\n# 聚合分析的原理及精准度问题\n```\nDELETE my_flights\nPUT my_flights\n{\n  \"settings\": {\n    \"number_of_shards\": 20\n  },\n  \"mappings\" : {\n      \"properties\" : {\n        \"AvgTicketPrice\" : {\n          \"type\" : \"float\"\n        },\n        \"Cancelled\" : {\n          \"type\" : \"boolean\"\n        },\n        \"Carrier\" : {\n          \"type\" : \"keyword\"\n        },\n        \"Dest\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"DestRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DestWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"DistanceKilometers\" : {\n          \"type\" : \"float\"\n        },\n        \"DistanceMiles\" : {\n          \"type\" : \"float\"\n        },\n        \"FlightDelay\" : {\n          \"type\" : \"boolean\"\n        },\n        \"FlightDelayMin\" : {\n          \"type\" : \"integer\"\n        },\n        \"FlightDelayType\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightNum\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeHour\" : {\n          \"type\" : \"keyword\"\n        },\n        \"FlightTimeMin\" : {\n          \"type\" : \"float\"\n        },\n        \"Origin\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginAirportID\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCityName\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginCountry\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginLocation\" : {\n          \"type\" : \"geo_point\"\n        },\n        \"OriginRegion\" : {\n          \"type\" : \"keyword\"\n        },\n        \"OriginWeather\" : {\n          \"type\" : \"keyword\"\n        },\n        \"dayOfWeek\" : {\n          \"type\" : \"integer\"\n        },\n        \"timestamp\" : {\n          \"type\" : \"date\"\n        }\n      }\n    }\n}\n\n\nPOST _reindex\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_flights\"\n  },\n  \"dest\": {\n    \"index\": \"my_flights\"\n  }\n}\n\nGET kibana_sample_data_flights/_count\nGET my_flights/_count\n\nget kibana_sample_data_flights/_search\n\n\nGET kibana_sample_data_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":5,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n\nGET my_flights/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"weather\": {\n      \"terms\": {\n        \"field\":\"OriginWeather\",\n        \"size\":1,\n        \"shard_size\":1,\n        \"show_term_doc_count_error\":true\n      }\n    }\n  }\n}\n\n```\n\n# 7.1-对象及 Nested 对象.md\n\n# 对象及Nested对象\n```\nDELETE blog\n# 设置blog的 Mapping\nPUT /blog\n{\n  \"mappings\": {\n    \"properties\": {\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"time\": {\n        \"type\": \"date\"\n      },\n      \"user\": {\n        \"properties\": {\n          \"city\": {\n            \"type\": \"text\"\n          },\n          \"userid\": {\n            \"type\": \"long\"\n          },\n          \"username\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 插入一条 Blog 信息\nPUT blog/_doc/1\n{\n  \"content\":\"I like Elasticsearch\",\n  \"time\":\"2019-01-01T00:00:00\",\n  \"user\":{\n    \"userid\":1,\n    \"username\":\"Jack\",\n    \"city\":\"Shanghai\"\n  }\n}\n\n\n# 查询 Blog 信息\nPOST blog/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"content\": \"Elasticsearch\"}},\n        {\"match\": {\"user.username\": \"Jack\"}}\n      ]\n    }\n  }\n}\n\n\nDELETE my_movies\n\n# 电影的Mapping信息\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"keyword\"\n            },\n            \"last_name\" : {\n              \"type\" : \"keyword\"\n            }\n          }\n        },\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 256\n            }\n          }\n        }\n      }\n    }\n}\n\n\n# 写入一条电影信息\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# 查询电影信息\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"actors.first_name\": \"Keanu\"}},\n        {\"match\": {\"actors.last_name\": \"Hopper\"}}\n      ]\n    }\n  }\n\n}\n\nDELETE my_movies\n# 创建 Nested 对象 Mapping\nPUT my_movies\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"actors\" : {\n          \"type\": \"nested\",\n          \"properties\" : {\n            \"first_name\" : {\"type\" : \"keyword\"},\n            \"last_name\" : {\"type\" : \"keyword\"}\n          }},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\"keyword\":{\"type\":\"keyword\",\"ignore_above\":256}}\n        }\n      }\n    }\n}\n\n\nPOST my_movies/_doc/1\n{\n  \"title\":\"Speed\",\n  \"actors\":[\n    {\n      \"first_name\":\"Keanu\",\n      \"last_name\":\"Reeves\"\n    },\n\n    {\n      \"first_name\":\"Dennis\",\n      \"last_name\":\"Hopper\"\n    }\n\n  ]\n}\n\n# Nested 查询\nPOST my_movies/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\"match\": {\"title\": \"Speed\"}},\n        {\n          \"nested\": {\n            \"path\": \"actors\",\n            \"query\": {\n              \"bool\": {\n                \"must\": [\n                  {\"match\": {\n                    \"actors.first_name\": \"Keanu\"\n                  }},\n\n                  {\"match\": {\n                    \"actors.last_name\": \"Hopper\"\n                  }}\n                ]\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\n\n# Nested Aggregation\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"actors\": {\n      \"nested\": {\n        \"path\": \"actors\"\n      },\n      \"aggs\": {\n        \"actor_name\": {\n          \"terms\": {\n            \"field\": \"actors.first_name\",\n            \"size\": 10\n          }\n        }\n      }\n    }\n  }\n}\n\n\n# 普通 aggregation不工作\nPOST my_movies/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"NAME\": {\n      \"terms\": {\n        \"field\": \"actors.first_name\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n```\n\n# 7.2-文档的父子关系.md\n\n# 文档的父子关系\n```\nDELETE my_blogs\n\n# 设定 Parent/Child Mapping\nPUT my_blogs\n{\n  \"settings\": {\n    \"number_of_shards\": 2\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"blog_comments_relation\": {\n        \"type\": \"join\",\n        \"relations\": {\n          \"blog\": \"comment\"\n        }\n      },\n      \"content\": {\n        \"type\": \"text\"\n      },\n      \"title\": {\n        \"type\": \"keyword\"\n      }\n    }\n  }\n}\n\n\n#索引父文档\nPUT my_blogs/_doc/blog1\n{\n  \"title\":\"Learning Elasticsearch\",\n  \"content\":\"learning ELK @ geektime\",\n  \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n#索引父文档\nPUT my_blogs/_doc/blog2\n{\n  \"title\":\"Learning Hadoop\",\n  \"content\":\"learning Hadoop\",\n    \"blog_comments_relation\":{\n    \"name\":\"blog\"\n  }\n}\n\n\n#索引子文档\nPUT my_blogs/_doc/comment1?routing=blog1\n{\n  \"comment\":\"I am learning ELK\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog1\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment2?routing=blog2\n{\n  \"comment\":\"I like Hadoop!!!!!\",\n  \"username\":\"Jack\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n#索引子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n  \"comment\":\"Hello Hadoop\",\n  \"username\":\"Bob\",\n  \"blog_comments_relation\":{\n    \"name\":\"comment\",\n    \"parent\":\"blog2\"\n  }\n}\n\n# 查询所有文档\nPOST my_blogs/_search\n{\n\n}\n\n\n#根据父文档ID查看\nGET my_blogs/_doc/blog2\n\n# Parent Id 查询\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"parent_id\": {\n      \"type\": \"comment\",\n      \"id\": \"blog2\"\n    }\n  }\n}\n\n# Has Child 查询,返回父文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_child\": {\n      \"type\": \"comment\",\n      \"query\" : {\n                \"match\": {\n                    \"username\" : \"Jack\"\n                }\n            }\n    }\n  }\n}\n\n\n# Has Parent 查询，返回相关的子文档\nPOST my_blogs/_search\n{\n  \"query\": {\n    \"has_parent\": {\n      \"parent_type\": \"blog\",\n      \"query\" : {\n                \"match\": {\n                    \"title\" : \"Learning Hadoop\"\n                }\n            }\n    }\n  }\n}\n\n\n\n#通过ID ，访问子文档\nGET my_blogs/_doc/comment3\n#通过ID和routing ，访问子文档\nGET my_blogs/_doc/comment3?routing=blog2\n\n#更新子文档\nPUT my_blogs/_doc/comment3?routing=blog2\n{\n    \"comment\": \"Hello Hadoop??\",\n    \"blog_comments_relation\": {\n      \"name\": \"comment\",\n      \"parent\": \"blog2\"\n    }\n}\n\n\n```\n\n# 7.5-Elasticsearch数据建模实例.md\n\n# Elasticsearch 数据建模实例\n```\n###### Data Modeling Example\n\n# Index 一本书的信息\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n\n\n#查询自动创建的Mapping\nGET books/_mapping\n\nDELETE books\n\n#优化字段类型\nPUT books\n{\n      \"mappings\" : {\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\"},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false},\n        \"description\" : {\"type\" : \"text\"},\n        \"public_date\" : {\"type\" : \"date\"},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          }\n        }\n      }\n    }\n}\n\n#Cover URL index 设置成false，无法对该字段进行搜索\nPOST books/_search\n{\n  \"query\": {\n    \"term\": {\n      \"cover_url\": {\n        \"value\": \"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n      }\n    }\n  }\n}\n\n#Cover URL index 设置成false，依然支持聚合分析\nPOST books/_search\n{\n  \"aggs\": {\n    \"cover\": {\n      \"terms\": {\n        \"field\": \"cover_url\",\n        \"size\": 10\n      }\n    }\n  }\n}\n\n\nDELETE books\n#新增 Content字段。数据量很大。选择将Source 关闭\nPUT books\n{\n      \"mappings\" : {\n      \"_source\": {\"enabled\": false},\n      \"properties\" : {\n        \"author\" : {\"type\" : \"keyword\",\"store\": true},\n        \"cover_url\" : {\"type\" : \"keyword\",\"index\": false,\"store\": true},\n        \"description\" : {\"type\" : \"text\",\"store\": true},\n         \"content\" : {\"type\" : \"text\",\"store\": true},\n        \"public_date\" : {\"type\" : \"date\",\"store\": true},\n        \"title\" : {\n          \"type\" : \"text\",\n          \"fields\" : {\n            \"keyword\" : {\n              \"type\" : \"keyword\",\n              \"ignore_above\" : 100\n            }\n          },\n          \"store\": true\n        }\n      }\n    }\n}\n\n\n# Index 一本书的信息,包含Content\nPUT books/_doc/1\n{\n  \"title\":\"Mastering ElasticSearch 5.0\",\n  \"description\":\"Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins\",\n  \"content\":\"The content of the book......Indexing data, aggregation, searching.    something else. something in the way............\",\n  \"author\":\"Bharvi Dixit\",\n  \"public_date\":\"2017\",\n  \"cover_url\":\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\"\n}\n\n#查询结果中，Source不包含数据\nPOST books/_search\n{}\n\n#搜索，通过store 字段显示数据，同时高亮显示 conent的内容\nPOST books/_search\n{\n  \"stored_fields\": [\"title\",\"author\",\"public_date\"],\n  \"query\": {\n    \"match\": {\n      \"content\": \"searching\"\n    }\n  },\n\n  \"highlight\": {\n    \"fields\": {\n      \"content\":{}\n    }\n  }\n\n}\n\n```\n\n# 7.6-Elasticsearch 数据建模最佳实践.md\n\n# Elasticsearch 数据建模最佳实践\n\n\n```\n\n###### Cookie Service\n\n##索引数据，dynamic mapping 会不断加入新增字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":{\n   \"username\":\"tom\",\n   \"age\":32\n }\n}\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":{\n   \"login\":\"2019-01-01\",\n   \"email\":\"xyz@abc.com\"\n }\n}\n\n\nDELETE cookie_service\n#使用 Nested 对象，增加key/value\nPUT cookie_service\n{\n  \"mappings\": {\n    \"properties\": {\n      \"cookies\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"keyword\"\n          },\n          \"dateValue\": {\n            \"type\": \"date\"\n          },\n          \"keywordValue\": {\n            \"type\": \"keyword\"\n          },\n          \"IntValue\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"url\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"keyword\": {\n            \"type\": \"keyword\",\n            \"ignore_above\": 256\n          }\n        }\n      }\n    }\n  }\n}\n\n\n##写入数据，使用key和合适类型的value字段\nPUT cookie_service/_doc/1\n{\n \"url\":\"www.google.com\",\n \"cookies\":[\n    {\n      \"name\":\"username\",\n      \"keywordValue\":\"tom\"\n    },\n    {\n       \"name\":\"age\",\n      \"intValue\":32\n\n    }\n\n   ]\n }\n\n\nPUT cookie_service/_doc/2\n{\n \"url\":\"www.amazon.com\",\n \"cookies\":[\n    {\n      \"name\":\"login\",\n      \"dateValue\":\"2019-01-01\"\n    },\n    {\n       \"name\":\"email\",\n      \"IntValue\":32\n\n    }\n\n   ]\n }\n\n\n# Nested 查询，通过bool查询进行过滤\nPOST cookie_service/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"cookies\",\n      \"query\": {\n        \"bool\": {\n          \"filter\": [\n            {\n            \"term\": {\n              \"cookies.name\": \"age\"\n            }},\n            {\n              \"range\":{\n                \"cookies.intValue\":{\n                  \"gte\":30\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n\n\n\n# 在Mapping中加入元信息，便于管理\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.0\"\n    }\n  }\n}\n\nGET softwares/_mapping\nPUT softwares/_doc/1\n{\n  \"software_version\":\"7.1.0\"\n}\n\nDELETE softwares\n# 优化,使用inner object\nPUT softwares/\n{\n  \"mappings\": {\n    \"_meta\": {\n      \"software_version_mapping\": \"1.1\"\n    },\n    \"properties\": {\n      \"version\": {\n        \"properties\": {\n          \"display_name\": {\n            \"type\": \"keyword\"\n          },\n          \"hot_fix\": {\n            \"type\": \"byte\"\n          },\n          \"marjor\": {\n            \"type\": \"byte\"\n          },\n          \"minor\": {\n            \"type\": \"byte\"\n          }\n        }\n      }\n    }\n  }\n}\n\n\n#通过 Inner Object 写入多个文档\nPUT softwares/_doc/1\n{\n  \"version\":{\n  \"display_name\":\"7.1.0\",\n  \"marjor\":7,\n  \"minor\":1,\n  \"hot_fix\":0  \n  }\n\n}\n\nPUT softwares/_doc/2\n{\n  \"version\":{\n  \"display_name\":\"7.2.0\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":0  \n  }\n}\n\nPUT softwares/_doc/3\n{\n  \"version\":{\n  \"display_name\":\"7.2.1\",\n  \"marjor\":7,\n  \"minor\":2,\n  \"hot_fix\":1  \n  }\n}\n\n\n# 通过 bool 查询，\nPOST softwares/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match\":{\n            \"version.marjor\":7\n          }\n        },\n        {\n          \"match\":{\n            \"version.minor\":2\n          }\n        }\n\n      ]\n    }\n  }\n}\n\n\n\n\n# Not Null 解决聚合的问题\nDELETE ratings\nPUT ratings\n{\n  \"mappings\": {\n      \"properties\": {\n        \"rating\": {\n          \"type\": \"float\",\n          \"null_value\": 1.0\n        }\n      }\n    }\n}\n\n\nPUT ratings/_doc/1\n{\n \"rating\":5\n}\nPUT ratings/_doc/2\n{\n \"rating\":null\n}\n\n\nPOST ratings/_search\nPOST ratings/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"avg\": {\n      \"avg\": {\n        \"field\": \"rating\"\n      }\n    }\n  }\n}\n\nPOST ratings/_search\n{\n  \"query\": {\n    \"term\": {\n      \"rating\": {\n        \"value\": 1\n      }\n    }\n  }\n}\n\n```\n\n\n# 7.7-第二部分总结与测验.md\n\n# 第二部分总结与测验\n```\nDELETE test\nPUT test/_doc/1\n{\n  \"content\":\"Hello World\"\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"match\": {\n      \"content.keyword\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"Hello World\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content\": \"hello world\"\n    }\n  }\n}\n\nPOST test/_search\n{\n  \"profile\": \"true\",\n  \"query\": {\n    \"term\": {\n      \"content.keyword\": \"Hello World\"\n    }\n  }\n}\n\n\n```\n\n\n# 8.1-集群身份认证与用户鉴权.md\n\n# 集群身份认证与用户鉴权\n- 如何为集群启用X-Pack Security\n- 如何为内置用户设置密码\n- 设置 Kibana与ElasticSearch通信鉴权\n- 使用安全API创建对特定索引具有有限访问权限的用户\n\nThis tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:\n\ndiscovery.type: single-node\n\n```\n#启动单节点\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true\n\n#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误\ncurl 'localhost:9200/_cat/nodes?pretty'\n\n#运行密码设定的命令，设置ES内置用户及其初始密码。\nbin/elasticsearch-setup-passwords interactive\n\ncurl -u elastic 'localhost:9200/_cat/nodes?pretty'\n\n\n# 修改 kibana.yml\nelasticsearch.username: \"kibana\"\nelasticsearch.password: \"changeme\"\n\n#启动。使用用户名，elastic，密码elastic\n./bin/kibana\n\n\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n#create a new role named read_only_orders, that satisfies the following criteria:\n#The role has no cluster privileges\n#The role only has access to indices that match the pattern sales_record\n#The index privileges are read, and view_index_metadata\n\n\n#create sales_user that satisfies the following criteria:\n# Use your own email address\n# Assign the user to two roles: read_only_orders and kibana_user\n\n\n#验证读权限,可以执行\nPOST orders/_search\n{}\n\n#验证写权限,报错\nPOST orders/_bulk\n{\"index\":{}}\n{\"product\" : \"1\",\"price\" : 18,\"payment\" : \"master\",\"card\" : \"9876543210123456\",\"name\" : \"jack\"}\n{\"index\":{}}\n{\"product\" : \"2\",\"price\" : 99,\"payment\" : \"visa\",\"card\" : \"1234567890123456\",\"name\" : \"bob\"}\n\n\n```\n\n\n# 8.2-集群内部安全通信.md\n\n#\n\n```\n# 生成证书\n# 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\nbin/elasticsearch-certutil ca\n\n#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：\nbin/elasticsearch-certutil cert --ca elastic-stack-ca.p12\n\n#将证书拷贝到 config/certs目录下\nelastic-certificates.p12\n\n\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\nbin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E http.port=9201 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path=certs/elastic-certificates.p12\n\n\n#不提供证书的节点，无法加入\nbin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E http.port=9202 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate\n\n\n```\n\n\n```\n## elasticsearch.yml 配置\n\n#xpack.security.transport.ssl.enabled: true\n#xpack.security.transport.ssl.verification_mode: certificate\n\n#xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12\n#xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12\n\n\n```\n\n# 8.3-集群与外部间的安全通信.md\n\n\n\n```\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.keystore.path: certs/elastic-certificates.p12\nxpack.security.http.ssl.truststore.path: certs/elastic-certificates.p12\n\n```\n```\n\n\n# ES 启用 https\nbin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data -E http.port=9200 -E xpack.security.enabled=true -E xpack.security.transport.ssl.enabled=true -E xpack.security.transport.ssl.verification_mode=certificate -E xpack.security.transport.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.enabled=true -E xpack.security.http.ssl.keystore.path=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.path=certs/elastic-certificates.p12\n\n```\n\n```\n#Kibana 连接 ES https\n\n\n\n# 为kibana生成pem\nopenssl pkcs12 -in elastic-certificates.p12 -cacerts -nokeys -out elastic-ca.pem\n\n\nelasticsearch.hosts: [\"https://localhost:9200\"]\nelasticsearch.ssl.certificateAuthorities: [ \"/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem\" ]\nelasticsearch.ssl.verificationMode: certificate\n\n\n\n# 为 Kibna 配置 HTTPS\n# 生成后解压，包含了instance.crt 和 instance.key\nbin/elasticsearch-certutil ca --pem\n\nserver.ssl.enabled: true\nserver.ssl.certificate: config/certs/instance.crt\nserver.ssl.key: config/certs/instance.key\n\n\n```\n\n\n\n# 9.1-常见的集群部署方式.md\n\n# 常见的集群部署方式\n\n# 9.2-Hot&Warm架构与ShardFiltering.md\n\n# Hot & Warm 架构与 Shard Filtering\n## 课程代码\n```\n# 标记一个 Hot 节点\nbin/elasticsearch  -E node.name=hotnode -E cluster.name=geektime -E path.data=hot_data -E node.attr.my_node_type=hot\n\n# 标记一个 warm 节点\nbin/elasticsearch  -E node.name=warmnode -E cluster.name=geektime -E path.data=warm_data -E node.attr.my_node_type=warm\n\n# 查看节点\nGET /_cat/nodeattrs?v\n\n# 配置到 Hot节点\nPUT logs-2019-06-27\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":0,\n    \"index.routing.allocation.require.my_node_type\":\"hot\"\n  }\n}\n\n\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\n\nGET _cat/shards?v\n\n\n# 配置到 warm 节点\nPUT PUT logs-2019-06-27/_settings\n{  \n  \"index.routing.allocation.require.my_node_type\":\"warm\"\n}\n\n\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack2\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\"\n  }\n}\n\nPUT my_index1\n{\n  \"settings\":{\n    \"number_of_shards\":2,\n    \"number_of_replicas\":1\n  }\n}\n\nPUT my_index1/_doc/1\n{\n  \"key\":\"value\"\n}\n\n\nGET _cat/shards?v\nDELETE my_index1/_doc/1\n\n\n\n# Fore awareness\n# 标记一个 rack 1\nbin/elasticsearch  -E node.name=node1 -E cluster.name=geektime -E path.data=node1_data -E node.attr.my_rack_id=rack1\n\n# 标记一个 rack 2\nbin/elasticsearch  -E node.name=node2 -E cluster.name=geektime -E path.data=node2_data -E node.attr.my_rack_id=rack1\n\n\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.routing.allocation.awareness.attributes\": \"my_rack_id\",\n    \"cluster.routing.allocation.awareness.force.my_rack_id.values\": \"rack1,rack2\"\n  }\n}\nGET _cluster/settings\n\n# 集群黄色\nGET _cluster/health\n\n# 副本无法分配\nGET _cat/shards?v\n\n\nGET _cluster/allocation/explain?pretty\n```\n","slug":"elasticsearch/es高级命令","published":1,"updated":"2025-02-27T08:40:57.367Z","_id":"cm7n2ijnu0001ccjd9eao6n60","comments":1,"layout":"post","photos":[],"content":"<p>以下是优化过的笔记，已加入注释并调整格式，使其更符合Markdown标准：</p>\n<hr>\n<h1 id=\"Elasticsearch-集群管理与优化笔记\"><a href=\"#Elasticsearch-集群管理与优化笔记\" class=\"headerlink\" title=\"Elasticsearch 集群管理与优化笔记\"></a>Elasticsearch 集群管理与优化笔记</h1><h2 id=\"1-移动分片到另一个节点\"><a href=\"#1-移动分片到另一个节点\" class=\"headerlink\" title=\"1. 移动分片到另一个节点\"></a>1. 移动分片到另一个节点</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cluster/reroute<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;move&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,   <span class=\"hljs-comment\"># 索引名称</span><br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,               <span class=\"hljs-comment\"># 分片编号</span><br>        <span class=\"hljs-string\">&quot;from_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_1&quot;</span>, <span class=\"hljs-comment\"># 源节点</span><br>        <span class=\"hljs-string\">&quot;to_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_2&quot;</span>   <span class=\"hljs-comment\"># 目标节点</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-强制分配未分配的分片（带原因说明）\"><a href=\"#2-强制分配未分配的分片（带原因说明）\" class=\"headerlink\" title=\"2. 强制分配未分配的分片（带原因说明）\"></a>2. 强制分配未分配的分片（带原因说明）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cluster/reroute?explain<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,   <span class=\"hljs-comment\"># 索引名称</span><br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,              <span class=\"hljs-comment\"># 分片编号</span><br>        <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-string\">&quot;nodename&quot;</span>       <span class=\"hljs-comment\"># 目标节点</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-从集群中移除节点\"><a href=\"#3-从集群中移除节点\" class=\"headerlink\" title=\"3. 从集群中移除节点\"></a>3. 从集群中移除节点</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.exclude._ip&quot;</span>: <span class=\"hljs-string\">&quot;the_IP_of_your_node&quot;</span>   <span class=\"hljs-comment\"># 要排除的节点IP</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-强制执行同步刷新\"><a href=\"#4-强制执行同步刷新\" class=\"headerlink\" title=\"4. 强制执行同步刷新\"></a>4. 强制执行同步刷新</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _flush/synced<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-调整集群平衡时移动的分片数量\"><a href=\"#5-调整集群平衡时移动的分片数量\" class=\"headerlink\" title=\"5. 调整集群平衡时移动的分片数量\"></a>5. 调整集群平衡时移动的分片数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.cluster_concurrent_rebalance&quot;</span>: 2   <span class=\"hljs-comment\"># 同时平衡的分片数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"6-调整每个节点同时恢复的分片数量\"><a href=\"#6-调整每个节点同时恢复的分片数量\" class=\"headerlink\" title=\"6. 调整每个节点同时恢复的分片数量\"></a>6. 调整每个节点同时恢复的分片数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.node_concurrent_recoveries&quot;</span>: 5   <span class=\"hljs-comment\"># 每个节点并行恢复的分片数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"7-调整恢复速度\"><a href=\"#7-调整恢复速度\" class=\"headerlink\" title=\"7. 调整恢复速度\"></a>7. 调整恢复速度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.recovery.max_bytes_per_sec&quot;</span>: <span class=\"hljs-string\">&quot;80mb&quot;</span>   <span class=\"hljs-comment\"># 恢复速率</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"8-调整单节点恢复时并发流数量\"><a href=\"#8-调整单节点恢复时并发流数量\" class=\"headerlink\" title=\"8. 调整单节点恢复时并发流数量\"></a>8. 调整单节点恢复时并发流数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.recovery.concurrent_streams&quot;</span>: 6   <span class=\"hljs-comment\"># 单节点恢复时的并发流数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"9-调整搜索队列大小\"><a href=\"#9-调整搜索队列大小\" class=\"headerlink\" title=\"9. 调整搜索队列大小\"></a>9. 调整搜索队列大小</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threadpool.search.queue_size&quot;</span>: 2000   <span class=\"hljs-comment\"># 搜索队列大小</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"10-清除节点缓存\"><a href=\"#10-清除节点缓存\" class=\"headerlink\" title=\"10. 清除节点缓存\"></a>10. 清除节点缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cache/clear<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"11-调整断路器配置\"><a href=\"#11-调整断路器配置\" class=\"headerlink\" title=\"11. 调整断路器配置\"></a>11. 调整断路器配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.total.limit&quot;</span>: <span class=\"hljs-string\">&quot;40%&quot;</span>   <span class=\"hljs-comment\"># 设置内存断路器的总内存限制</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"监控-Elasticsearch-集群\"><a href=\"#监控-Elasticsearch-集群\" class=\"headerlink\" title=\"监控 Elasticsearch 集群\"></a>监控 Elasticsearch 集群</h1><h2 id=\"1-节点统计\"><a href=\"#1-节点统计\" class=\"headerlink\" title=\"1. 节点统计\"></a>1. 节点统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _nodes/stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-集群统计\"><a href=\"#2-集群统计\" class=\"headerlink\" title=\"2. 集群统计\"></a>2. 集群统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-索引统计\"><a href=\"#3-索引统计\" class=\"headerlink\" title=\"3. 索引统计\"></a>3. 索引统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-查看待处理的集群任务\"><a href=\"#4-查看待处理的集群任务\" class=\"headerlink\" title=\"4. 查看待处理的集群任务\"></a>4. 查看待处理的集群任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/pending_tasks<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-查看所有任务，支持取消任务\"><a href=\"#5-查看所有任务，支持取消任务\" class=\"headerlink\" title=\"5. 查看所有任务，支持取消任务\"></a>5. 查看所有任务，支持取消任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _tasks<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看节点的线程池信息\"><a href=\"#6-查看节点的线程池信息\" class=\"headerlink\" title=\"6. 查看节点的线程池信息\"></a>6. 查看节点的线程池信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _nodes/thread_pool<br>GET _nodes/stats/thread_pool<br>GET _cat/thread_pool?v<br>GET _nodes/hot_threads<br>GET _nodes/stats/thread_pool<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"7-设置索引慢日志（Slowlog）\"><a href=\"#7-设置索引慢日志（Slowlog）\" class=\"headerlink\" title=\"7. 设置索引慢日志（Slowlog）\"></a>7. 设置索引慢日志（Slowlog）</h2><ul>\n<li><p>设置索引慢日志阈值：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;index.indexing.slowlog&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threshold.index&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,    <span class=\"hljs-comment\"># 警告级别</span><br>      <span class=\"hljs-string\">&quot;info&quot;</span>: <span class=\"hljs-string\">&quot;4s&quot;</span>,     <span class=\"hljs-comment\"># 信息级别</span><br>      <span class=\"hljs-string\">&quot;debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,    <span class=\"hljs-comment\"># 调试级别</span><br>      <span class=\"hljs-string\">&quot;trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>     <span class=\"hljs-comment\"># 跟踪级别</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;level&quot;</span>: <span class=\"hljs-string\">&quot;trace&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>: 1000   <span class=\"hljs-comment\"># 日志源的最大字符数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>设置查询慢日志：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE my_index<br>PUT my_index/<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.search.slowlog.threshold&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query.warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志警告级别</span><br>      <span class=\"hljs-string\">&quot;query.info&quot;</span>: <span class=\"hljs-string\">&quot;3s&quot;</span>,    <span class=\"hljs-comment\"># 查询慢日志信息级别</span><br>      <span class=\"hljs-string\">&quot;query.debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志调试级别</span><br>      <span class=\"hljs-string\">&quot;query.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志跟踪级别</span><br>      <span class=\"hljs-string\">&quot;fetch.warn&quot;</span>: <span class=\"hljs-string\">&quot;1s&quot;</span>,    <span class=\"hljs-comment\"># 获取慢日志警告级别</span><br>      <span class=\"hljs-string\">&quot;fetch.info&quot;</span>: <span class=\"hljs-string\">&quot;600ms&quot;</span>, <span class=\"hljs-comment\"># 获取慢日志信息级别</span><br>      <span class=\"hljs-string\">&quot;fetch.debug&quot;</span>: <span class=\"hljs-string\">&quot;400ms&quot;</span>,<span class=\"hljs-comment\"># 获取慢日志调试级别</span><br>      <span class=\"hljs-string\">&quot;fetch.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>    <span class=\"hljs-comment\"># 获取慢日志跟踪级别</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h1 id=\"解决集群-Yellow-与-Red-状态问题\"><a href=\"#解决集群-Yellow-与-Red-状态问题\" class=\"headerlink\" title=\"解决集群 Yellow 与 Red 状态问题\"></a>解决集群 Yellow 与 Red 状态问题</h1><h2 id=\"1-检查集群健康状态\"><a href=\"#1-检查集群健康状态\" class=\"headerlink\" title=\"1. 检查集群健康状态\"></a>1. 检查集群健康状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-查看索引级别健康状态，找出红色索引\"><a href=\"#2-查看索引级别健康状态，找出红色索引\" class=\"headerlink\" title=\"2. 查看索引级别健康状态，找出红色索引\"></a>2. 查看索引级别健康状态，找出红色索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health?level=indices<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-查看分片级别健康状态\"><a href=\"#3-查看分片级别健康状态\" class=\"headerlink\" title=\"3. 查看分片级别健康状态\"></a>3. 查看分片级别健康状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health?level=shards<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-解释索引分片无法分配的原因\"><a href=\"#4-解释索引分片无法分配的原因\" class=\"headerlink\" title=\"4. 解释索引分片无法分配的原因\"></a>4. 解释索引分片无法分配的原因</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/allocation/explain<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-删除并重新创建索引\"><a href=\"#5-删除并重新创建索引\" class=\"headerlink\" title=\"5. 删除并重新创建索引\"></a>5. 删除并重新创建索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 3,    <span class=\"hljs-comment\"># 分片数</span><br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,   <span class=\"hljs-comment\"># 副本数</span><br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>: <span class=\"hljs-string\">&quot;hot&quot;</span>   <span class=\"hljs-comment\"># 指定节点类型</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"提升集群写性能\"><a href=\"#提升集群写性能\" class=\"headerlink\" title=\"提升集群写性能\"></a>提升集群写性能</h1><h2 id=\"1-设置优化写入性能的索引设置\"><a href=\"#1-设置优化写入性能的索引设置\" class=\"headerlink\" title=\"1. 设置优化写入性能的索引设置\"></a>1. 设置优化写入性能的索引设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE myindex<br>PUT myindex<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;refresh_interval&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span>,     <span class=\"hljs-comment\"># 刷新间隔</span><br>      <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: <span class=\"hljs-string\">&quot;2&quot;</span>        <span class=\"hljs-comment\"># 分片数</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;routing&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;allocation&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;total_shards_per_node&quot;</span>: <span class=\"hljs-string\">&quot;3&quot;</span> <span class=\"hljs-comment\"># 每个节点的最大分片数</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;translog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;sync_interval&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span>,         <span class=\"hljs-comment\"># 事务日志同步间隔</span><br>      <span class=\"hljs-string\">&quot;durability&quot;</span>: <span class=\"hljs-string\">&quot;async&quot;</span>           <span class=\"hljs-comment\"># 异步持久化</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0          <span class=\"hljs-comment\"># 副本数</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-literal\">false</span>,                <span class=\"hljs-comment\"># 禁用动态映射</span><br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"提升集群读性能\"><a href=\"#提升集群读性能\" class=\"headerlink\" title=\"提升集群读性能\"></a>提升集群读性能</h1><h2 id=\"1-示例：查询优化\"><a href=\"#1-示例：查询优化\" class=\"headerlink\" title=\"1. 示例：查询优化\"></a>1. 示例：查询优化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT blogs/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>&#125;<br><br>GET blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span> &#125;&#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;title.keyword&#x27;].value.length()&gt;5&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>GET blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;publish_date&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: 2017,<br>              <span class=\"hljs-string\">&quot;lte&quot;</span>: 2019<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"集群压力测试\"><a href=\"#集群压力测试\" class=\"headerlink\" title=\"集群压力测试\"></a>集群压力测试</h1><h2 id=\"1-安装并配置-esrally\"><a href=\"#1-安装并配置-esrally\" class=\"headerlink\" title=\"1. 安装并配置 esrally\"></a>1. 安装并配置 esrally</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip3 install esrally<br>esrally configure<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-执行简单的压力测试\"><a href=\"#2-执行简单的压力测试\" class=\"headerlink\" title=\"2. 执行简单的压力测试\"></a>2. 执行简单的压力测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">esrally --distribution-version=7.1.0 --test-mode<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-执行完整数据测试\"><a href=\"#3-执行完整数据测试\" class=\"headerlink\" title=\"3. 执行完整数据测试\"></a>3. 执行完整数据测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">esrally --distribution-version=7.1.0<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"使用缓存与-Breaker-限制内存使用\"><a href=\"#使用缓存与-Breaker-限制内存使用\" class=\"headerlink\" title=\"使用缓存与 Breaker 限制内存使用\"></a>使用缓存与 Breaker 限制内存使用</h1><h2 id=\"1-获取节点统计信息\"><a href=\"#1-获取节点统计信息\" class=\"headerlink\" title=\"1. 获取节点统计信息\"></a>1. 获取节点统计信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cat/nodes?v<br>GET _nodes/stats/indices?pretty<br>GET _cat/nodes?v&amp;h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-设置内存限制\"><a href=\"#2-设置内存限制\" class=\"headerlink\" title=\"2. 设置内存限制\"></a>2. 设置内存限制</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.request.limit&quot;</span>: <span class=\"hljs-string\">&quot;90%&quot;</span>   <span class=\"hljs-comment\"># 设置请求断路器内存限制</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"使用-Shrink-与-Rollover-API-管理索引\"><a href=\"#使用-Shrink-与-Rollover-API-管理索引\" class=\"headerlink\" title=\"使用 Shrink 与 Rollover API 管理索引\"></a>使用 Shrink 与 Rollover API 管理索引</h1><h2 id=\"1-Shrink-索引\"><a href=\"#1-Shrink-索引\" class=\"headerlink\" title=\"1. Shrink 索引\"></a>1. Shrink 索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-Rollover-索引\"><a href=\"#2-Rollover-索引\" class=\"headerlink\" title=\"2. Rollover 索引\"></a>2. Rollover 索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST nginx_logs_write/_rollover<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>: <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>: 5,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>: <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 11.2-索引全生命周期管理及工具介绍.md</span><br><br><span class=\"hljs-meta\"># 索引全生命周期管理及工具介绍</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"运行三个节点，分片-将box-type设置成-hot，warm和cold\"><a href=\"#运行三个节点，分片-将box-type设置成-hot，warm和cold\" class=\"headerlink\" title=\"运行三个节点，分片 将box_type设置成 hot，warm和cold\"></a>运行三个节点，分片 将box_type设置成 hot，warm和cold</h1><h1 id=\"具体参考-github下，docker-hot-warm-cold-下的docker-compose-文件\"><a href=\"#具体参考-github下，docker-hot-warm-cold-下的docker-compose-文件\" class=\"headerlink\" title=\"具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\"></a>具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件</h1><p>DELETE *</p>\n<h1 id=\"设置-1秒刷新1次，生产环境10分种刷新一次\"><a href=\"#设置-1秒刷新1次，生产环境10分种刷新一次\" class=\"headerlink\" title=\"设置 1秒刷新1次，生产环境10分种刷新一次\"></a>设置 1秒刷新1次，生产环境10分种刷新一次</h1><p>PUT _cluster&#x2F;settings<br>{<br>  “persistent”: {<br>    “indices.lifecycle.poll_interval”:”1s”<br>  }<br>}</p>\n<h1 id=\"设置-Policy\"><a href=\"#设置-Policy\" class=\"headerlink\" title=\"设置 Policy\"></a>设置 Policy</h1><p>PUT &#x2F;_ilm&#x2F;policy&#x2F;log_ilm_policy<br>{<br>  “policy”: {<br>    “phases”: {<br>      “hot”: {<br>        “actions”: {<br>          “rollover”: {<br>            “max_docs”: 5<br>          }<br>        }<br>      },<br>      “warm”: {<br>        “min_age”: “10s”,<br>        “actions”: {<br>          “allocate”: {<br>            “include”: {<br>              “box_type”: “warm”<br>            }<br>          }<br>        }<br>      },<br>      “cold”: {<br>        “min_age”: “15s”,<br>        “actions”: {<br>          “allocate”: {<br>            “include”: {<br>              “box_type”: “cold”<br>            }<br>          }<br>        }<br>      },<br>      “delete”: {<br>        “min_age”: “20s”,<br>        “actions”: {<br>          “delete”: {}<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"设置索引模版\"><a href=\"#设置索引模版\" class=\"headerlink\" title=\"设置索引模版\"></a>设置索引模版</h1><p>PUT &#x2F;_template&#x2F;log_ilm_template<br>{<br>  “index_patterns” : [<br>      “ilm_index-*”<br>    ],<br>    “settings” : {<br>      “index” : {<br>        “lifecycle” : {<br>          “name” : “log_ilm_policy”,<br>          “rollover_alias” : “ilm_alias”<br>        },<br>        “routing” : {<br>          “allocation” : {<br>            “include” : {<br>              “box_type” : “hot”<br>            }<br>          }<br>        },<br>        “number_of_shards” : “1”,<br>        “number_of_replicas” : “0”<br>      }<br>    },<br>    “mappings” : { },<br>    “aliases” : { }<br>}</p>\n<p>#创建索引<br>PUT ilm_index-000001<br>{<br>  “settings”: {<br>    “number_of_shards”: 1,<br>    “number_of_replicas”: 0,<br>    “index.lifecycle.name”: “log_ilm_policy”,<br>    “index.lifecycle.rollover_alias”: “ilm_alias”,<br>    “index.routing.allocation.include.box_type”:”hot”<br>  },<br>  “aliases”: {<br>    “ilm_alias”: {<br>      “is_write_index”: true<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Alias写入文档\"><a href=\"#对-Alias写入文档\" class=\"headerlink\" title=\"对 Alias写入文档\"></a>对 Alias写入文档</h1><p>POST  ilm_alias&#x2F;_doc<br>{<br>  “dfd”:”dfdsf”<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 12.1-Logstash入门及架构介绍.md</span><br><br><span class=\"hljs-meta\"># Logstash 入门及架构介绍</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"一个-Demo，-demo-运行\"><a href=\"#一个-Demo，-demo-运行\" class=\"headerlink\" title=\"一个 Demo， demo 运行\"></a>一个 Demo， demo 运行</h1><p>sudo bin&#x2F;logstash -f logstash-filter.conf</p>\n<h1 id=\"demo数据\"><a href=\"#demo数据\" class=\"headerlink\" title=\"demo数据\"></a>demo数据</h1><p>127.0.0.1 - - [11&#x2F;Dec&#x2F;2013:00:01:45 -0800] “GET &#x2F;xampp&#x2F;status.php HTTP&#x2F;1.1” 200 3891 “<a href=\"http://cadenza/xampp/navi.php\">http://cadenza/xampp/navi.php</a>“ “Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko&#x2F;20100101 Firefox&#x2F;25.0”</p>\n<h1 id=\"codec-demo\"><a href=\"#codec-demo\" class=\"headerlink\" title=\"codec demo\"></a>codec demo</h1><p>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;line}}output{stdout{codec&#x3D;&gt; rubydebug}}”<br>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;json}}output{stdout{codec&#x3D;&gt; rubydebug}}”<br>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;line}}output{stdout{codec&#x3D;&gt; dots}}”</p>\n<p>sudo bin&#x2F;logstash -f multiline-exception.conf</p>\n<h1 id=\"多行数据，异常\"><a href=\"#多行数据，异常\" class=\"headerlink\" title=\"多行数据，异常\"></a>多行数据，异常</h1><p>Exception in thread “main” java.lang.NullPointerException<br>        at com.example.myproject.Book.getTitle(Book.java:16)<br>        at com.example.myproject.Author.getBookTitles(Author.java:25)<br>        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)</p>\n<h1 id=\"一个实例\"><a href=\"#一个实例\" class=\"headerlink\" title=\"一个实例\"></a>一个实例</h1><p><a href=\"https://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\">https://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf</a></p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 12.2-利用JDBC插件导入数据到Elasticsearch.md</span><br><br><span class=\"hljs-meta\"># Logstash插件及文档介绍</span><br></code></pre></td></tr></table></figure>\n<p><a href=\"https://spring.io/guides/gs/accessing-data-mysql/\">https://spring.io/guides/gs/accessing-data-mysql/</a><br>create database db_example;<br>use db_example;<br>show tables;<br>drop table user;<br>select * from user;</p>\n<h1 id=\"新增用户\"><a href=\"#新增用户\" class=\"headerlink\" title=\"新增用户\"></a>新增用户</h1><p>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Mike -d email&#x3D;<a href=\"mailto:&#x6d;&#x69;&#x6b;&#x65;&#x40;&#x78;&#x79;&#x7a;&#46;&#99;&#111;&#109;\">&#x6d;&#x69;&#x6b;&#x65;&#x40;&#x78;&#x79;&#x7a;&#46;&#99;&#111;&#109;</a> -d tags&#x3D;Elasticsearch,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Jack -d email&#x3D;<a href=\"mailto:&#106;&#97;&#99;&#x6b;&#x40;&#120;&#121;&#x7a;&#46;&#x63;&#x6f;&#109;\">&#106;&#97;&#99;&#x6b;&#x40;&#120;&#121;&#x7a;&#46;&#x63;&#x6f;&#109;</a> -d tags&#x3D;Mysql,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Bob -d email&#x3D;<a href=\"mailto:&#x62;&#111;&#98;&#64;&#x78;&#121;&#x7a;&#46;&#99;&#x6f;&#109;\">&#x62;&#111;&#98;&#64;&#x78;&#121;&#x7a;&#46;&#99;&#x6f;&#109;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<p>#查看所有的用户<br>curl ‘localhost:8080&#x2F;demo&#x2F;all’</p>\n<h1 id=\"更新用户\"><a href=\"#更新用户\" class=\"headerlink\" title=\"更新用户\"></a>更新用户</h1><p>curl -X PUT localhost:8080&#x2F;demo&#x2F;update -d id&#x3D;16 -d name&#x3D;Bob2 -d email&#x3D;<a href=\"mailto:&#98;&#111;&#x62;&#x32;&#x40;&#120;&#x79;&#122;&#x2e;&#99;&#111;&#x6d;\">&#98;&#111;&#x62;&#x32;&#x40;&#120;&#x79;&#122;&#x2e;&#99;&#111;&#x6d;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<h1 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h1><p>curl -X DELETE localhost:8080&#x2F;demo&#x2F;delete -d id&#x3D;15</p>\n<p>mysql-demo.conf</p>\n<h1 id=\"创建-alias，只显示没有被标记-deleted的用户\"><a href=\"#创建-alias，只显示没有被标记-deleted的用户\" class=\"headerlink\" title=\"创建 alias，只显示没有被标记 deleted的用户\"></a>创建 alias，只显示没有被标记 deleted的用户</h1><p>POST &#x2F;_aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “users”,<br>        “alias”: “view_users”,<br>         “filter” : { “term” : { “is_deleted” : false } }<br>      }<br>    }<br>  ]<br>}</p>\n<h1 id=\"通过-Alias查询，查不到被标记成-deleted的用户\"><a href=\"#通过-Alias查询，查不到被标记成-deleted的用户\" class=\"headerlink\" title=\"通过 Alias查询，查不到被标记成 deleted的用户\"></a>通过 Alias查询，查不到被标记成 deleted的用户</h1><p>POST view_users&#x2F;_search<br>{</p>\n<p>}</p>\n<p>POST view_users&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “name.keyword”: {<br>        “value”: “Jack”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST users&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “name.keyword”: {<br>        “value”: “Jack”<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 12.3-Beats介绍.md</span><br><br><span class=\"hljs-meta\"># Beats介绍</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"查看-packetbeat-模块\"><a href=\"#查看-packetbeat-模块\" class=\"headerlink\" title=\"查看 packetbeat 模块\"></a>查看 packetbeat 模块</h1><h1 id=\"设置-packetbeat-的mysql-模块\"><a href=\"#设置-packetbeat-的mysql-模块\" class=\"headerlink\" title=\"设置 packetbeat 的mysql 模块\"></a>设置 packetbeat 的mysql 模块</h1><h1 id=\"启动运行\"><a href=\"#启动运行\" class=\"headerlink\" title=\"启动运行\"></a>启动运行</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h1><p>.&#x2F;metricbeat modules list<br>.&#x2F;metricbeat modules enable mysql<br>.&#x2F;metricbeat setup –dashboards</p>\n<h1 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h1><p>create database db_example<br>use db_example;<br>show tables;<br>select * from user</p>\n<p>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Mike -d email&#x3D;<a href=\"mailto:&#109;&#105;&#x6b;&#x65;&#64;&#x78;&#121;&#x7a;&#46;&#x63;&#x6f;&#x6d;\">&#109;&#105;&#x6b;&#x65;&#64;&#x78;&#121;&#x7a;&#46;&#x63;&#x6f;&#x6d;</a> -d tags&#x3D;Elasticsearch,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Jack -d email&#x3D;<a href=\"mailto:&#106;&#97;&#x63;&#x6b;&#64;&#x78;&#x79;&#122;&#46;&#x63;&#x6f;&#x6d;\">&#106;&#97;&#x63;&#x6b;&#64;&#x78;&#x79;&#122;&#46;&#x63;&#x6f;&#x6d;</a> -d tags&#x3D;Mysql,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Bob -d email&#x3D;<a href=\"mailto:&#98;&#111;&#x62;&#64;&#120;&#121;&#122;&#46;&#99;&#111;&#109;\">&#98;&#111;&#x62;&#64;&#120;&#121;&#122;&#46;&#99;&#111;&#109;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<p>curl ‘localhost:8080&#x2F;demo&#x2F;all’</p>\n<h1 id=\"配置-packetbeat\"><a href=\"#配置-packetbeat\" class=\"headerlink\" title=\"配置 packetbeat\"></a>配置 packetbeat</h1><h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控</p>\n<p>sudo chown root packetbeat.yml<br>sudo .&#x2F;packetbeat setup –dashboards<br>sudo .&#x2F;packetbeat</p>\n<h1 id=\"查看所有-Filebeat-模块\"><a href=\"#查看所有-Filebeat-模块\" class=\"headerlink\" title=\"查看所有 Filebeat 模块\"></a>查看所有 Filebeat 模块</h1><h1 id=\"查看所有的modules\"><a href=\"#查看所有的modules\" class=\"headerlink\" title=\"查看所有的modules\"></a>查看所有的modules</h1><p>.&#x2F;filebeat modules list</p>\n<h1 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h1><p>.&#x2F;filebeat modules enable mysql</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.1-使用IndexPattern配置数据.md</span><br><br><br></code></pre></td></tr></table></figure>\n\n<p>localhost:5601&#x2F;status</p>\n<p>PUT &#x2F;logstash-2015.05.18<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;logstash-2015.05.19<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;logstash-2015.05.20<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"For-Mac-Windows\"><a href=\"#For-Mac-Windows\" class=\"headerlink\" title=\"For Mac &amp; Windows\"></a>For Mac &amp; Windows</h1><p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;_bulk?pretty’ –data-binary @logs.jsonl</p>\n<p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;bank&#x2F;account&#x2F;_bulk?pretty’ –data-binary @accounts.json</p>\n<p>#For Windows<br>Invoke-RestMethod “<a href=\"http://localhost:9200/_bulk?pretty\">http://localhost:9200/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “logs.jsonl”</p>\n<p>GET &#x2F;_cat&#x2F;indices?v</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.2-使用KibanaDiscover探索数据.md</span><br><br><span class=\"hljs-meta\"># 使用Kibana Discovery 探索数据</span><br></code></pre></td></tr></table></figure>\n\n<p>设置时间过滤器<br>搜索你的数据<br>根据字段进行过滤<br>查看文档数据<br>查看文档上下文<br>暂时字段数据统计<br>Save Query</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.3-基本可视化组件介绍.md</span><br><br><span class=\"hljs-meta\"># 基本可视化组件介绍</span><br></code></pre></td></tr></table></figure>\n\n<p>PUT &#x2F;shakespeare<br>{<br>  “mappings”: {<br>    “properties”: {<br>    “speaker”: {“type”: “keyword”},<br>    “play_name”: {“type”: “keyword”},<br>    “line_id”: {“type”: “integer”},<br>    “speech_number”: {“type”: “integer”}<br>    }<br>  }<br>}</p>\n<h1 id=\"For-Mac-Windows-1\"><a href=\"#For-Mac-Windows-1\" class=\"headerlink\" title=\"For Mac &amp; Windows\"></a>For Mac &amp; Windows</h1><p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;bank&#x2F;account&#x2F;_bulk?pretty’ –data-binary @accounts.json<br>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;shakespeare&#x2F;_bulk?pretty’ –data-binary @shakespeare.json</p>\n<p>#For Windows<br>Invoke-RestMethod “<a href=\"http://localhost:9200/bank/account/_bulk?pretty\">http://localhost:9200/bank/account/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “accounts.json”<br>Invoke-RestMethod “<a href=\"http://localhost:9200/shakespeare/_bulk?pretty\">http://localhost:9200/shakespeare/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “shakespeare.json”</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.4-构建Dashboard.md</span><br><br><span class=\"hljs-meta\"># 构建Dashboard</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>创建仪表潘</li>\n<li>加载仪表盘</li>\n<li>共享仪表盘</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><br><span class=\"hljs-comment\"># 14.3用机器学习实现时序数据的异常检测-上.md</span><br><br>mkdir server_metrics<br>cd server_metrics<br>wget https:<span class=\"hljs-regexp\">//</span>download.elasticsearch.org<span class=\"hljs-regexp\">/demos/m</span>achine_learning<span class=\"hljs-regexp\">/gettingstarted/</span>server_metrics.tar.gz<br>tar -xvf server_metrics.tar.gz<br><br><br><span class=\"hljs-comment\"># 14.5-用ELK进行日志管理.md</span><br><br><span class=\"hljs-comment\"># 用 ELK 来做日志管理</span><br></code></pre></td></tr></table></figure>\n<p>.&#x2F;filebeat modules list<br>.&#x2F;filebeat modules enable system<br>.&#x2F;filebeat modules enable elasticsearch</p>\n<h2 id=\"进-modules-d-编辑相应的文件，修改log路径\"><a href=\"#进-modules-d-编辑相应的文件，修改log路径\" class=\"headerlink\" title=\"进 modules.d 编辑相应的文件，修改log路径\"></a>进 modules.d 编辑相应的文件，修改log路径</h2><p>.&#x2F;filebeat setup –dashboards</p>\n<p>.&#x2F;filebeat export template | more</p>\n<p>.&#x2F;filebeat -e</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\"># 14.6-用Canvas做数据演示.md</span><br><br>POST elasticoffee/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0, <br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;by&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;beverage.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 4.1-基于词项和基于全文的搜索.md</span><br><br><span class=\"hljs-comment\"># 基于词项和基于全文的搜索</span><br><br><br></code></pre></td></tr></table></figure>\n<p>DELETE products<br>PUT products<br>{<br>  “settings”: {<br>    “number_of_shards”: 1<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “productID” : “XHDK-A-1293-#fJ3”,”desc”:”iPhone” }<br>{ “index”: { “_id”: 2 }}<br>{ “productID” : “KDKE-B-9947-#kL5”,”desc”:”iPad” }<br>{ “index”: { “_id”: 3 }}<br>{ “productID” : “JODL-X-1937-#pV7”,”desc”:”MBP” }</p>\n<p>GET &#x2F;products</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “desc”: {<br>        &#x2F;&#x2F;“value”: “iPhone”<br>        “value”:”iphone”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “desc.keyword”: {<br>        &#x2F;&#x2F;“value”: “iPhone”<br>        &#x2F;&#x2F;“value”:”iphone”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “productID”: {<br>        “value”: “XHDK-A-1293-#fJ3”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  &#x2F;&#x2F;“explain”: true,<br>  “query”: {<br>    “term”: {<br>      “productID.keyword”: {<br>        “value”: “XHDK-A-1293-#fJ3”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “productID.keyword”: “XHDK-A-1293-#fJ3”<br>        }<br>      }</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#设置 position_increment_gap<br>DELETE groups<br>PUT groups<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “names”:{<br>        “type”: “text”,<br>        “position_increment_gap”: 0<br>      }<br>    }<br>  }<br>}</p>\n<p>GET groups&#x2F;_mapping</p>\n<p>POST groups&#x2F;_doc<br>{<br>  “names”: [ “John Water”, “Water Smith”]<br>}</p>\n<p>POST groups&#x2F;_search<br>{<br>  “query”: {<br>    “match_phrase”: {<br>      “names”: {<br>        “query”: “Water Water”,<br>        “slop”: 100<br>      }<br>    }<br>  }<br>}</p>\n<p>POST groups&#x2F;_search<br>{<br>  “query”: {<br>    “match_phrase”: {<br>      “names”: “Water Smith”<br>    }<br>  }<br>}</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\"><br># <span class=\"hljs-number\">4.10</span>-综合排序：<span class=\"hljs-keyword\">Function</span> <span class=\"hljs-title\">Score</span> Query 优化算分.md<br><br># 综合排序：<span class=\"hljs-keyword\">Function</span> <span class=\"hljs-title\">Score</span> Query 优化算分<br></code></pre></td></tr></table></figure>\n<p>DELETE blogs<br>PUT &#x2F;blogs&#x2F;_doc&#x2F;1<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   0<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;2<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   100<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;3<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   1000000<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p” ,<br>        “factor”: 0.1<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p” ,<br>        “factor”: 0.1<br>      },<br>      “boost_mode”: “sum”,<br>      “max_boost”: 3<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “random_score”: {<br>        “seed”: 911119<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.12-自动补全与基于上下文的提示.md</span><br><br><span class=\"hljs-meta\"># 自动补全与基于上下文的提示</span><br></code></pre></td></tr></table></figure>\n<p>DELETE articles<br>PUT articles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title_completion”:{<br>        “type”: “completion”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST articles&#x2F;_bulk<br>{ “index” : { } }<br>{ “title_completion”: “lucene is very cool”}<br>{ “index” : { } }<br>{ “title_completion”: “Elasticsearch builds on top of lucene”}<br>{ “index” : { } }<br>{ “title_completion”: “Elasticsearch rocks”}<br>{ “index” : { } }<br>{ “title_completion”: “elastic is the company behind ELK stack”}<br>{ “index” : { } }<br>{ “title_completion”: “Elk stack rocks”}<br>{ “index” : {} }</p>\n<p>POST articles&#x2F;_search?pretty<br>{<br>  “size”: 0,<br>  “suggest”: {<br>    “article-suggester”: {<br>      “prefix”: “elk “,<br>      “completion”: {<br>        “field”: “title_completion”<br>      }<br>    }<br>  }<br>}</p>\n<p>DELETE comments<br>PUT comments<br>PUT comments&#x2F;_mapping<br>{<br>  “properties”: {<br>    “comment_autocomplete”:{<br>      “type”: “completion”,<br>      “contexts”:[{<br>        “type”:”category”,<br>        “name”:”comment_category”<br>      }]<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_doc<br>{<br>  “comment”:”I love the star war movies”,<br>  “comment_autocomplete”:{<br>    “input”:[“star wars”],<br>    “contexts”:{<br>      “comment_category”:”movies”<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_doc<br>{<br>  “comment”:”Where can I find a Starbucks”,<br>  “comment_autocomplete”:{<br>    “input”:[“starbucks”],<br>    “contexts”:{<br>      “comment_category”:”coffee”<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_search<br>{<br>  “suggest”: {<br>    “MY_SUGGESTION”: {<br>      “prefix”: “sta”,<br>      “completion”:{<br>        “field”:”comment_autocomplete”,<br>        “contexts”:{<br>          “comment_category”:”coffee”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.13-跨集群搜索.md</span><br><br><span class=\"hljs-meta\"># 跨集群搜索</span><br></code></pre></td></tr></table></figure>\n<p>&#x2F;&#x2F;启动3个集群</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;cluster0node -E cluster.name&#x3D;cluster0 -E path.data&#x3D;cluster0_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9200 -E transport.port&#x3D;9300<br>bin&#x2F;elasticsearch -E node.name&#x3D;cluster1node -E cluster.name&#x3D;cluster1 -E path.data&#x3D;cluster1_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9201 -E transport.port&#x3D;9301<br>bin&#x2F;elasticsearch -E node.name&#x3D;cluster2node -E cluster.name&#x3D;cluster2 -E path.data&#x3D;cluster2_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9202 -E transport.port&#x3D;9302</p>\n<p>&#x2F;&#x2F;在每个集群上设置动态的设置<br>PUT _cluster&#x2F;settings<br>{<br>  “persistent”: {<br>    “cluster”: {<br>      “remote”: {<br>        “cluster0”: {<br>          “seeds”: [<br>            “127.0.0.1:9300”<br>          ],<br>          “transport.ping_schedule”: “30s”<br>        },<br>        “cluster1”: {<br>          “seeds”: [<br>            “127.0.0.1:9301”<br>          ],<br>          “transport.compress”: true,<br>          “skip_unavailable”: true<br>        },<br>        “cluster2”: {<br>          “seeds”: [<br>            “127.0.0.1:9302”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#cURL<br>curl -XPUT “<a href=\"http://localhost:9200/_cluster/settings\">http://localhost:9200/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>curl -XPUT “<a href=\"http://localhost:9201/_cluster/settings\">http://localhost:9201/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>curl -XPUT “<a href=\"http://localhost:9202/_cluster/settings\">http://localhost:9202/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>#创建测试数据<br>curl -XPOST “<a href=\"http://localhost:9200/users/_doc\">http://localhost:9200/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user1”,”age”:10}’</p>\n<p>curl -XPOST “<a href=\"http://localhost:9201/users/_doc\">http://localhost:9201/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user2”,”age”:20}’</p>\n<p>curl -XPOST “<a href=\"http://localhost:9202/users/_doc\">http://localhost:9202/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user3”,”age”:30}’</p>\n<p>#查询<br>GET &#x2F;users,cluster1:users,cluster2:users&#x2F;_search<br>{<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20,<br>        “lte”: 40<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.2-结构化搜索.md</span><br><br><span class=\"hljs-meta\"># 结构化搜索</span><br><br></code></pre></td></tr></table></figure>\n\n<p>#结构化搜索，精确匹配<br>DELETE products<br>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>GET products&#x2F;_mapping</p>\n<p>#对布尔值 match 查询，有算分<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “avaliable”: true<br>    }<br>  }<br>}</p>\n<p>#对布尔值，通过constant score 转成 filtering，没有算分<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “avaliable”: true<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#数字类型 Term<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “price”: 30<br>    }<br>  }<br>}</p>\n<p>#数字类型 terms<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “terms”: {<br>          “price”: [<br>            “20”,<br>            “30”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#数字 Range 查询<br>GET products&#x2F;_search<br>{<br>    “query” : {<br>        “constant_score” : {<br>            “filter” : {<br>                “range” : {<br>                    “price” : {<br>                        “gte” : 20,<br>                        “lte”  : 30<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<h1 id=\"日期-range\"><a href=\"#日期-range\" class=\"headerlink\" title=\"日期 range\"></a>日期 range</h1><p>POST products&#x2F;_search<br>{<br>    “query” : {<br>        “constant_score” : {<br>            “filter” : {<br>                “range” : {<br>                    “date” : {<br>                      “gte” : “now-1y”<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>#exists查询<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “exists”: {<br>          “field”: “date”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#处理多值字段<br>POST &#x2F;movies&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title” : “Father of the Bridge Part II”,”year”:1995, “genre”:”Comedy”}<br>{ “index”: { “_id”: 2 }}<br>{ “title” : “Dave”,”year”:1993,”genre”:[“Comedy”,”Romance”] }</p>\n<p>#处理多值字段，term 查询是包含，而不是等于<br>POST movies&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “genre.keyword”: “Comedy”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#字符类型 terms<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “terms”: {<br>          “productID.keyword”: [<br>            “QQPX-R-3956-#aD8”,<br>            “JODL-X-1937-#pV7”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “price”: 30<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “date”: “2019-01-01”<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “date”: “2019-01-01”<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “productID.keyword”: “XHDK-A-1293-#fJ3”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “productID.keyword”: “XHDK-A-1293-#fJ3”<br>    }<br>  }<br>}</p>\n<p>#对布尔数值<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “avaliable”: “false”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “avaliable”: {<br>        “value”: “false”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “price”: {<br>        “value”: “20”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “price”: “20”<br>    }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “bool”: {<br>          “must_not”: {<br>            “exists”: {<br>              “field”: “date”<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.3-搜索的相关性算分.md</span><br><br><span class=\"hljs-meta\"># 搜索的相关性算分</span><br><br></code></pre></td></tr></table></figure>\n\n\n<p>PUT testscore<br>{<br>  “settings”: {<br>    “number_of_shards”: 1<br>  },<br>  “mappings”: {<br>    “properties”: {<br>      “content”: {<br>        “type”: “text”<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT testscore&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “content”:”we use Elasticsearch to power the search” }<br>{ “index”: { “_id”: 2 }}<br>{ “content”:”we like elasticsearch” }<br>{ “index”: { “_id”: 3 }}<br>{ “content”:”The scoring of documents is caculated by the scoring formula” }<br>{ “index”: { “_id”: 4 }}<br>{ “content”:”you know, for search” }</p>\n<p>POST &#x2F;testscore&#x2F;_search<br>{<br>  &#x2F;&#x2F;“explain”: true,<br>  “query”: {<br>    “match”: {<br>      “content”:”you”<br>      &#x2F;&#x2F;“content”: “elasticsearch”<br>      &#x2F;&#x2F;“content”:”the”<br>      &#x2F;&#x2F;“content”: “the elasticsearch”<br>    }<br>  }<br>}</p>\n<p>POST testscore&#x2F;_search<br>{<br>    “query”: {<br>        “boosting” : {<br>            “positive” : {<br>                “term” : {<br>                    “content” : “elasticsearch”<br>                }<br>            },<br>            “negative” : {<br>                 “term” : {<br>                     “content” : “like”<br>                }<br>            },<br>            “negative_boost” : 0.2<br>        }<br>    }<br>}</p>\n<p>POST tmdb&#x2F;_search<br>{<br>  “_source”: [“title”,”overview”],<br>  “query”: {<br>    “more_like_this”: {<br>      “fields”: [<br>        “title^10”,”overview”<br>      ],<br>      “like”: [{“_id”:”14191”}],<br>      “min_term_freq”: 1,<br>      “max_query_terms”: 12<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.4-Query&amp;Filtering实现多字符串多字段查询.md</span><br><br><span class=\"hljs-meta\"># Query &amp; Filtering 与多字符串多字段查询</span><br><br></code></pre></td></tr></table></figure>\n<p>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>#基本语法<br>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool” : {<br>      “must” : {<br>        “term” : { “price” : “30” }<br>      },<br>      “filter”: {<br>        “term” : { “avaliable” : “true” }<br>      },<br>      “must_not” : {<br>        “range” : {<br>          “price” : { “lte” : 10 }<br>        }<br>      },<br>      “should” : [<br>        { “term” : { “productID.keyword” : “JODL-X-1937-#pV7” } },<br>        { “term” : { “productID.keyword” : “XHDK-A-1293-#fJ3” } }<br>      ],<br>      “minimum_should_match” :1<br>    }<br>  }<br>}</p>\n<p>#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题<br>POST &#x2F;newmovies&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title” : “Father of the Bridge Part II”,”year”:1995, “genre”:”Comedy”,”genre_count”:1 }<br>{ “index”: { “_id”: 2 }}<br>{ “title” : “Dave”,”year”:1993,”genre”:[“Comedy”,”Romance”],”genre_count”:2 }</p>\n<p>#must，有算分<br>POST &#x2F;newmovies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“term”: {“genre.keyword”: {“value”: “Comedy”}}},<br>        {“term”: {“genre_count”: {“value”: 1}}}</p>\n<pre><code class=\"hljs\">  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filter。不参与算分，结果的score是0<br>POST &#x2F;newmovies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “filter”: [<br>        {“term”: {“genre.keyword”: {“value”: “Comedy”}}},<br>        {“term”: {“genre_count”: {“value”: 1}}}<br>        ]</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filtering Context<br>POST _search<br>{<br>  “query”: {<br>    “bool” : {</p>\n<pre><code class=\"hljs\">  &quot;filter&quot;: &#123;\n    &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;\n  &#125;,\n  &quot;must_not&quot; : &#123;\n    &quot;range&quot; : &#123;\n      &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Query Context<br>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        {<br>          “term”: {<br>            “productID.keyword”: {<br>              “value”: “JODL-X-1937-#pV7”}}<br>        },<br>        {“term”: {“avaliable”: {“value”: true}}<br>        }<br>      ]<br>    }<br>  }<br>}</p>\n<p>#嵌套，实现了 should not 逻辑<br>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “term”: {<br>          “price”: “30”<br>        }<br>      },<br>      “should”: [<br>        {<br>          “bool”: {<br>            “must_not”: {<br>              “term”: {<br>                “avaliable”: “false”<br>              }<br>            }<br>          }<br>        }<br>      ],<br>      “minimum_should_match”: 1<br>    }<br>  }<br>}</p>\n<p>#Controll the Precision<br>POST _search<br>{<br>  “query”: {<br>    “bool” : {<br>      “must” : {<br>        “term” : { “price” : “30” }<br>      },<br>      “filter”: {<br>        “term” : { “avaliable” : “true” }<br>      },<br>      “must_not” : {<br>        “range” : {<br>          “price” : { “lte” : 10 }<br>        }<br>      },<br>      “should” : [<br>        { “term” : { “productID.keyword” : “JODL-X-1937-#pV7” } },<br>        { “term” : { “productID.keyword” : “XHDK-A-1293-#fJ3” } }<br>      ],<br>      “minimum_should_match” :2<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;animals&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        { “term”: { “text”: “brown” }},<br>        { “term”: { “text”: “red” }},<br>        { “term”: { “text”: “quick”   }},<br>        { “term”: { “text”: “dog”   }}<br>      ]<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;animals&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        { “term”: { “text”: “quick” }},<br>        { “term”: { “text”: “dog”   }},<br>        {<br>          “bool”:{<br>            “should”:[<br>               { “term”: { “text”: “brown” }},<br>                 { “term”: { “text”: “brown” }},<br>            ]<br>          }</p>\n<pre><code class=\"hljs\">    &#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>DELETE blogs<br>POST &#x2F;blogs&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{“title”:”Apple iPad”, “content”:”Apple iPad,Apple iPad” }<br>{ “index”: { “_id”: 2 }}<br>{“title”:”Apple iPad,Apple iPad”, “content”:”Apple iPad” }</p>\n<p>POST blogs&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        {“match”: {<br>          “title”: {<br>            “query”: “apple,ipad”,<br>            “boost”: 1.1<br>          }<br>        }},</p>\n<pre><code class=\"hljs\">    &#123;&quot;match&quot;: &#123;\n      &quot;content&quot;: &#123;\n        &quot;query&quot;: &quot;apple,ipad&quot;,\n        &quot;boost&quot;:\n      &#125;\n    &#125;&#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>DELETE news<br>POST &#x2F;news&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “content”:”Apple Mac” }<br>{ “index”: { “_id”: 2 }}<br>{ “content”:”Apple iPad” }<br>{ “index”: { “_id”: 3 }}<br>{ “content”:”Apple employee like Apple Pie and Apple Juice” }</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “match”:{“content”:”apple”}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “match”:{“content”:”apple”}<br>      },<br>      “must_not”: {<br>        “match”:{“content”:”pie”}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “boosting”: {<br>      “positive”: {<br>        “match”: {<br>          “content”: “apple”<br>        }<br>      },<br>      “negative”: {<br>        “match”: {<br>          “content”: “pie”<br>        }<br>      },<br>      “negative_boost”: 0.5<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 4.5-单字符串多字段查询-DisMaxQuery.md</span><br><br><span class=\"hljs-meta\"># 单字符串多字段查询：Dis Max Query</span><br></code></pre></td></tr></table></figure>\n\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;1<br>{<br>    “title”: “Quick brown rabbits”,<br>    “body”:  “Brown rabbits are commonly seen.”<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;2<br>{<br>    “title”: “Keeping pets healthy”,<br>    “body”:  “My quick brown fox eats rabbits on a regular basis.”<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>    “query”: {<br>        “bool”: {<br>            “should”: [<br>                { “match”: { “title”: “Brown fox” }},<br>                { “match”: { “body”:  “Brown fox” }}<br>            ]<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ]<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ],<br>            “tie_breaker”: 0.2<br>        }<br>    }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.6-单字符串多字段查询-Multi-Match.md</span><br><br><span class=\"hljs-meta\"># 单字符串多字段查询：Multi Match</span><br></code></pre></td></tr></table></figure>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ],<br>            “tie_breaker”: 0.2<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>  “query”: {<br>    “multi_match”: {<br>      “type”: “best_fields”,<br>      “query”: “Quick pets”,<br>      “fields”: [“title”,”body”],<br>      “tie_breaker”: 0.2,<br>      “minimum_should_match”: “20%”<br>    }<br>  }<br>}</p>\n<p>POST books&#x2F;_search<br>{<br>    “multi_match”: {<br>        “query”:  “Quick brown fox”,<br>        “fields”: “*_title”<br>    }<br>}</p>\n<p>POST books&#x2F;_search<br>{<br>    “multi_match”: {<br>        “query”:  “Quick brown fox”,<br>        “fields”: [ “*_title”, “chapter_title^2” ]<br>    }<br>}</p>\n<p>DELETE &#x2F;titles<br>PUT &#x2F;titles<br>{<br>    “settings”: { “number_of_shards”: 1 },<br>    “mappings”: {<br>        “my_type”: {<br>            “properties”: {<br>                “title”: {<br>                    “type”:     “string”,<br>                    “analyzer”: “english”,<br>                    “fields”: {<br>                        “std”:   {<br>                            “type”:     “string”,<br>                            “analyzer”: “standard”<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>PUT &#x2F;titles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title”: {<br>        “type”: “text”,<br>        “analyzer”: “english”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST titles&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title”: “My dog barks” }<br>{ “index”: { “_id”: 2 }}<br>{ “title”: “I see a lot of barking dogs on the road “ }</p>\n<p>GET titles&#x2F;_search<br>{<br>  “query”: {<br>    “match”: {<br>      “title”: “barking dogs”<br>    }<br>  }<br>}</p>\n<p>DELETE &#x2F;titles<br>PUT &#x2F;titles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title”: {<br>        “type”: “text”,<br>        “analyzer”: “english”,<br>        “fields”: {“std”: {“type”: “text”,”analyzer”: “standard”}}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST titles&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title”: “My dog barks” }<br>{ “index”: { “_id”: 2 }}<br>{ “title”: “I see a lot of barking dogs on the road “ }</p>\n<p>GET &#x2F;titles&#x2F;_search<br>{<br>   “query”: {<br>        “multi_match”: {<br>            “query”:  “barking dogs”,<br>            “type”:   “most_fields”,<br>            “fields”: [ “title”, “title.std” ]<br>        }<br>    }<br>}</p>\n<p>GET &#x2F;titles&#x2F;_search<br>{<br>   “query”: {<br>        “multi_match”: {<br>            “query”:  “barking dogs”,<br>            “type”:   “most_fields”,<br>            “fields”: [ “title^10”, “title.std” ]<br>        }<br>    }<br>}</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><br><span class=\"hljs-section\"># 4.7-多语言及中文分词与检索.md</span><br><br><span class=\"hljs-section\"># 多语言及中文分词与检索</span><br><br><span class=\"hljs-bullet\">-</span> 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”<br><br><span class=\"hljs-bullet\">-</span> 你也想犯范范玮琪犯过的错吗<br><span class=\"hljs-bullet\">-</span> 校长说衣服上除了校徽别别别的<br><span class=\"hljs-bullet\">-</span> 这几天天天天气不好<br><span class=\"hljs-bullet\">-</span> 我背有点驼，麻麻说“你的背得背背背背佳<br><br></code></pre></td></tr></table></figure>\n<p>#stop word</p>\n<p>DELETE my_index<br>PUT &#x2F;my_index&#x2F;_doc&#x2F;1<br>{ “title”: “I’m happy for this fox” }</p>\n<p>PUT &#x2F;my_index&#x2F;_doc&#x2F;2<br>{ “title”: “I’m not happy about my fox problem” }</p>\n<p>POST my_index&#x2F;_search<br>{<br>  “query”: {<br>    “match”: {<br>      “title”: “not happy fox”<br>    }<br>  }<br>}</p>\n<p>#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 <code>english</code>（英语）分析器，另一次使用 <code>standard</code>（标准）分析器:</p>\n<p>DELETE my_index</p>\n<p>PUT &#x2F;my_index<br>{<br>  “mappings”: {<br>    “blog”: {<br>      “properties”: {<br>        “title”: {<br>          “type”: “string”,<br>          “analyzer”: “english”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;my_index<br>{<br>  “mappings”: {<br>    “blog”: {<br>      “properties”: {<br>        “title”: {<br>          “type”: “string”,<br>          “fields”: {<br>            “english”: {<br>              “type”:     “string”,<br>              “analyzer”: “english”<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;my_index&#x2F;blog&#x2F;1<br>{ “title”: “I’m happy for this fox” }</p>\n<p>PUT &#x2F;my_index&#x2F;blog&#x2F;2<br>{ “title”: “I’m not happy about my fox problem” }</p>\n<p>GET &#x2F;_search<br>{<br>  “query”: {<br>    “multi_match”: {<br>      “type”:     “most_fields”,<br>      “query”:    “not happy foxes”,<br>      “fields”: [ “title”, “title.english” ]<br>    }<br>  }<br>}</p>\n<p>#安装插件<br>.&#x2F;elasticsearch-plugin install <a href=\"https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip</a><br>#安装插件<br>bin&#x2F;elasticsearch install <a href=\"https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\">https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip</a></p>\n<p>#ik_max_word<br>#ik_smart<br>#hanlp: hanlp默认分词<br>#hanlp_standard: 标准分词<br>#hanlp_index: 索引分词<br>#hanlp_nlp: NLP分词<br>#hanlp_n_short: N-最短路分词<br>#hanlp_dijkstra: 最短路分词<br>#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）<br>#hanlp_speed: 极速词典分词</p>\n<p>POST _analyze<br>{<br>  “analyzer”: “hanlp_standard”,<br>  “text”: [“剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜”]</p>\n<p>}     </p>\n<p>#Pinyin<br>PUT &#x2F;artists&#x2F;<br>{<br>    “settings” : {<br>        “analysis” : {<br>            “analyzer” : {<br>                “user_name_analyzer” : {<br>                    “tokenizer” : “whitespace”,<br>                    “filter” : “pinyin_first_letter_and_full_pinyin_filter”<br>                }<br>            },<br>            “filter” : {<br>                “pinyin_first_letter_and_full_pinyin_filter” : {<br>                    “type” : “pinyin”,<br>                    “keep_first_letter” : true,<br>                    “keep_full_pinyin” : false,<br>                    “keep_none_chinese” : true,<br>                    “keep_original” : false,<br>                    “limit_first_letter_length” : 16,<br>                    “lowercase” : true,<br>                    “trim_whitespace” : true,<br>                    “keep_none_chinese_in_first_letter” : true<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>GET &#x2F;artists&#x2F;_analyze<br>{<br>  “text”: [“刘德华 张学友 郭富城 黎明 四大天王”],<br>  “analyzer”: “user_name_analyzer”<br>}</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">## 相关资源</span><br>- Elasticsearch IK分词插件 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/medcl/</span>elasticsearch-analysis-ik/releases<br>- Elasticsearch hanlp 分词插件 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/KennFalcon/</span>elasticsearch-analysis-hanlp<br><br>- 分词算法综述 https:<span class=\"hljs-regexp\">//</span>zhuanlan.zhihu.com<span class=\"hljs-regexp\">/p/</span><span class=\"hljs-number\">50444885</span><br><br><span class=\"hljs-comment\">### 一些分词工具，供参考：</span><br>- 中科院计算所NLPIR http:<span class=\"hljs-regexp\">//i</span>ctclas.nlpir.org<span class=\"hljs-regexp\">/nlpir/</span><br>- ansj分词器 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/NLPchina/</span>ansj_seg<br>- 哈工大的LTP https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/HIT-SCIR/</span>ltp<br>- 清华大学THULAC https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/thunlp/</span>THULAC<br>- 斯坦福分词器 https:<span class=\"hljs-regexp\">//</span>nlp.stanford.edu<span class=\"hljs-regexp\">/software/</span>segmenter.shtml<br>- Hanlp分词器 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/hankcs/</span>HanLP<br>- 结巴分词 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/yanyiwu/</span>cppjieba<br>- KCWS分词器(字嵌入+Bi-LSTM+CRF) https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/koth/</span>kcws<br>- ZPar https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/frcchang/</span>zpar/releases<br>- IKAnalyzer https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/wks/i</span>k-analyzer<br><br><br><span class=\"hljs-comment\"># 4.8-SpaceJam一个全文搜索的实例.md</span><br><br><span class=\"hljs-comment\"># Space Jam，一次全文搜索的实例</span><br><br><span class=\"hljs-comment\">## 环境要求</span><br>- Python <span class=\"hljs-number\">2.7</span>.<span class=\"hljs-number\">15</span><br>- 可以使用pyenv管理多个python版本（可选）<br><br><span class=\"hljs-comment\">## 进入 tmdb-search目录</span><br>Run<br>pip install -r requirements.txt<br>Run python ./ingest_tmdb_from_file.py<br></code></pre></td></tr></table></figure>\n<p>POST tmdb&#x2F;_search<br>{<br>“_source”: [“title”,”overview”],<br> “query”: {<br>   “match_all”: {}<br> }<br>}</p>\n<p>POST tmdb&#x2F;_search<br>{<br>  “_source”: [“title”,”overview”],<br>  “query”: {<br>    “multi_match”: {<br>      “query”: “basketball with cartoon aliens”,<br>      “fields”: [“title”,”overview”]<br>    }<br>  },<br>  “highlight” : {<br>        “fields” : {<br>            “overview” : { “pre_tags” : [“\\033[0;32;40m”], “post_tags” : [“\\033[0m”] },<br>            “title” : { “pre_tags” : [“\\033[0;32;40m”], “post_tags” : [“\\033[0m”] }</p>\n<pre><code class=\"hljs\">    &#125;\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">## 相关</span><br>- Windows 安装 pyenv https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/pyenv-win/</span>pyenv-win<br>- Mac 安装pyenv https:<span class=\"hljs-regexp\">//</span>segmentfault.com<span class=\"hljs-regexp\">/a/</span><span class=\"hljs-number\">1190000017403221</span><br>- Linux 安装 pyenv https:<span class=\"hljs-regexp\">//</span>blog.csdn.net<span class=\"hljs-regexp\">/GX_1_11_real/</span>article<span class=\"hljs-regexp\">/details/</span><span class=\"hljs-number\">80237064</span><br>- Python.org https:<span class=\"hljs-regexp\">//</span>www.python.org/<br><br><br><span class=\"hljs-comment\"># 4.9-使用SearchTemplate和IndexAlias进行查询.md</span><br><br><span class=\"hljs-comment\"># 使用 Search Template 和 Index Alias 查询</span><br><br></code></pre></td></tr></table></figure>\n<p>POST _scripts&#x2F;tmdb<br>{<br>  “script”: {<br>    “lang”: “mustache”,<br>    “source”: {<br>      “_source”: [<br>        “title”,”overview”<br>      ],<br>      “size”: 20,<br>      “query”: {<br>        “multi_match”: {<br>          “query”: ““,<br>          “fields”: [“title”,”overview”]<br>        }<br>      }<br>    }<br>  }<br>}<br>DELETE _scripts&#x2F;tmdb</p>\n<p>GET _scripts&#x2F;tmdb</p>\n<p>POST tmdb&#x2F;_search&#x2F;template<br>{<br>    “id”:”tmdb”,<br>    “params”: {<br>        “q”: “basketball with cartoon aliens”<br>    }<br>}</p>\n<p>PUT movies-2019&#x2F;_doc&#x2F;1<br>{<br>  “name”:”the matrix”,<br>  “rating”:5<br>}</p>\n<p>PUT movies-2019&#x2F;_doc&#x2F;2<br>{<br>  “name”:”Speed”,<br>  “rating”:3<br>}</p>\n<p>POST _aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “movies-2019”,<br>        “alias”: “movies-latest”<br>      }<br>    }<br>  ]<br>}</p>\n<p>POST movies-latest&#x2F;_search<br>{<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<p>POST _aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “movies-2019”,<br>        “alias”: “movies-lastest-highrate”,<br>        “filter”: {<br>          “range”: {<br>            “rating”: {<br>              “gte”: 4<br>            }<br>          }<br>        }<br>      }<br>    }<br>  ]<br>}</p>\n<p>POST movies-lastest-highrate&#x2F;_search<br>{<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.1-集群分布式模型及选主与脑裂问题.md</span><br><br><span class=\"hljs-meta\"># 集群分布式模型及选主与脑裂问题</span><br><br></code></pre></td></tr></table></figure>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.data&#x3D;node1_data<br>bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.data&#x3D;node2_data<br>bin&#x2F;elasticsearch -E node.name&#x3D;node3 -E cluster.name&#x3D;geektime -E path.data&#x3D;node3_data</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 5.2-分片与集群的故障转移.md</span><br><br><span class=\"hljs-meta\"># 分片与集群的故障转移</span><br><br><br><span class=\"hljs-meta\"># 5.3-文档分布式存储.md</span><br><br><span class=\"hljs-meta\"># 文档分布式存储</span><br><br><br><span class=\"hljs-meta\"># 5.4-分片及其生命周期.md</span><br><br><span class=\"hljs-meta\"># 分片及其生命周期</span><br><br><br><span class=\"hljs-meta\"># 5.5-剖析分布式查询及相关性评分.md</span><br><br><span class=\"hljs-meta\"># 剖析分布式查询及相关性评分</span><br></code></pre></td></tr></table></figure>\n<p>DELETE message<br>PUT message<br>{<br>  “settings”: {<br>    “number_of_shards”: 20<br>  }<br>}</p>\n<p>GET message</p>\n<p>POST message&#x2F;_doc?routing&#x3D;1<br>{<br>  “content”:”good”<br>}</p>\n<p>POST message&#x2F;_doc?routing&#x3D;2<br>{<br>  “content”:”good morning”<br>}</p>\n<p>POST message&#x2F;_doc?routing&#x3D;3<br>{<br>  “content”:”good morning everyone”<br>}</p>\n<p>POST message&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<p>POST message&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “content”: {<br>        “value”: “good”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST message&#x2F;_search?search_type&#x3D;dfs_query_then_fetch<br>{</p>\n<p>  “query”: {<br>    “term”: {<br>      “content”: {<br>        “value”: “good”<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.6-排序及DocValues&amp;Fielddata.md</span><br><br><span class=\"hljs-meta\"># 排序及Doc Values &amp; Fielddata</span><br></code></pre></td></tr></table></figure>\n<p>#单字段排序<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“order_date”: {“order”: “desc”}}<br>  ]<br>}</p>\n<p>#多字段排序<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“order_date”: {“order”: “desc”}},<br>    {“_doc”:{“order”: “asc”}},<br>    {“_score”:{ “order”: “desc”}}<br>  ]<br>}</p>\n<p>GET kibana_sample_data_ecommerce&#x2F;_mapping</p>\n<p>#对 text 字段进行排序。默认会报错，需打开fielddata<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“customer_full_name”: {“order”: “desc”}}<br>  ]<br>}</p>\n<p>#打开 text的 fielddata<br>PUT kibana_sample_data_ecommerce&#x2F;_mapping<br>{<br>  “properties”: {<br>    “customer_full_name” : {<br>          “type” : “text”,<br>          “fielddata”: true,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 256<br>            }<br>          }<br>        }<br>  }<br>}</p>\n<p>#关闭 keyword的 doc values<br>PUT test_keyword<br>PUT test_keyword&#x2F;_mapping<br>{<br>  “properties”: {<br>    “user_name”:{<br>      “type”: “keyword”,<br>      “doc_values”:false<br>    }<br>  }<br>}</p>\n<p>DELETE test_keyword</p>\n<p>PUT test_text<br>PUT test_text&#x2F;_mapping<br>{<br>  “properties”: {<br>    “intro”:{<br>      “type”: “text”,<br>      “doc_values”:true<br>    }<br>  }<br>}</p>\n<p>DELETE test_text</p>\n<p>DELETE temp_users<br>PUT temp_users<br>PUT temp_users&#x2F;_mapping<br>{<br>  “properties”: {<br>    “name”:{“type”: “text”,”fielddata”: true},<br>    “desc”:{“type”: “text”,”fielddata”: true}<br>  }<br>}</p>\n<p>Post temp_users&#x2F;_doc<br>{“name”:”Jack”,”desc”:”Jack is a good boy!”,”age”:10}</p>\n<p>#打开fielddata 后，查看 docvalue_fields数据<br>POST  temp_users&#x2F;_search<br>{<br>  “docvalue_fields”: [<br>    “name”,”desc”<br>    ]<br>}</p>\n<p>#查看整型字段的docvalues<br>POST  temp_users&#x2F;_search<br>{<br>  “docvalue_fields”: [<br>    “age”<br>    ]<br>}</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"><br><br># 5.7-分页与遍历-FromSize<span class=\"hljs-variable\">&amp;SearchAfter</span><span class=\"hljs-variable\">&amp;ScrollAPI.</span>md<br><br># 分页与遍历 - <span class=\"hljs-keyword\">From</span>, Size, Search_after &amp; Scroll API<br></code></pre></td></tr></table></figure>\n\n<p>POST tmdb&#x2F;_search<br>{<br>  “from”: 10000,<br>  “size”: 1,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Scroll API<br>DELETE users</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user1”,”age”:10}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:11}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:12}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:13}</p>\n<p>POST users&#x2F;_count</p>\n<p>POST users&#x2F;_search<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all”: {}<br>    },<br>    “sort”: [<br>        {“age”: “desc”} ,<br>        {“_id”: “asc”}<br>    ]<br>}</p>\n<p>POST users&#x2F;_search<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all”: {}<br>    },<br>    “search_after”:<br>        [<br>          10,<br>          “ZQ0vYGsBrR8X3IP75QqX”],<br>    “sort”: [<br>        {“age”: “desc”} ,<br>        {“_id”: “asc”}<br>    ]<br>}</p>\n<p>#Scroll API<br>DELETE users<br>POST users&#x2F;_doc<br>{“name”:”user1”,”age”:10}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:20}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user3”,”age”:30}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user4”,”age”:40}</p>\n<p>POST &#x2F;users&#x2F;_search?scroll&#x3D;5m<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all” : {<br>        }<br>    }<br>}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user5”,”age”:50}<br>POST &#x2F;_search&#x2F;scroll<br>{<br>    “scroll” : “1m”,<br>    “scroll_id” : “DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ&#x3D;&#x3D;”<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.8-处理并发读写.md</span><br><br><span class=\"hljs-meta\"># 处理并发读写操作</span><br></code></pre></td></tr></table></figure>\n\n<p>DELETE products<br>PUT products</p>\n<p>PUT products&#x2F;_doc&#x2F;1<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<p>GET products&#x2F;_doc&#x2F;1</p>\n<p>PUT products&#x2F;_doc&#x2F;1?if_seq_no&#x3D;1&amp;if_primary_term&#x3D;1<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<p>PUT products&#x2F;_doc&#x2F;1?version&#x3D;30000&amp;version_type&#x3D;external<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br><br># <span class=\"hljs-number\">6.1</span>-Bucket&amp;Metric聚合分析及嵌套聚合.md<br><br># Bucket &amp; Metric Aggregation<br>## demos<br></code></pre></td></tr></table></figure>\n<p>DELETE &#x2F;employees<br>PUT &#x2F;employees&#x2F;<br>{<br>  “mappings” : {<br>      “properties” : {<br>        “age” : {<br>          “type” : “integer”<br>        },<br>        “gender” : {<br>          “type” : “keyword”<br>        },<br>        “job” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 50<br>            }<br>          }<br>        },<br>        “name” : {<br>          “type” : “keyword”<br>        },<br>        “salary” : {<br>          “type” : “integer”<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"Metric-聚合，找到最低的工资\"><a href=\"#Metric-聚合，找到最低的工资\" class=\"headerlink\" title=\"Metric 聚合，找到最低的工资\"></a>Metric 聚合，找到最低的工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “min_salary”: {<br>      “min”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"Metric-聚合，找到最高的工资\"><a href=\"#Metric-聚合，找到最高的工资\" class=\"headerlink\" title=\"Metric 聚合，找到最高的工资\"></a>Metric 聚合，找到最高的工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “max_salary”: {<br>      “max”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"多个-Metric-聚合，找到最低最高和平均工资\"><a href=\"#多个-Metric-聚合，找到最低最高和平均工资\" class=\"headerlink\" title=\"多个 Metric 聚合，找到最低最高和平均工资\"></a>多个 Metric 聚合，找到最低最高和平均工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “max_salary”: {<br>      “max”: {<br>        “field”: “salary”<br>      }<br>    },<br>    “min_salary”: {<br>      “min”: {<br>        “field”: “salary”<br>      }<br>    },<br>    “avg_salary”: {<br>      “avg”: {<br>        “field”: “salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"一个聚合，输出多值\"><a href=\"#一个聚合，输出多值\" class=\"headerlink\" title=\"一个聚合，输出多值\"></a>一个聚合，输出多值</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “stats_salary”: {<br>      “stats”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对keword-进行聚合\"><a href=\"#对keword-进行聚合\" class=\"headerlink\" title=\"对keword 进行聚合\"></a>对keword 进行聚合</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段进行-terms-聚合查询，失败\"><a href=\"#对-Text-字段进行-terms-聚合查询，失败\" class=\"headerlink\" title=\"对 Text 字段进行 terms 聚合查询，失败\"></a>对 Text 字段进行 terms 聚合查询，失败</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段打开-fielddata，支持terms-aggregation\"><a href=\"#对-Text-字段打开-fielddata，支持terms-aggregation\" class=\"headerlink\" title=\"对 Text 字段打开 fielddata，支持terms aggregation\"></a>对 Text 字段打开 fielddata，支持terms aggregation</h1><p>PUT employees&#x2F;_mapping<br>{<br>  “properties” : {<br>    “job”:{<br>       “type”:     “text”,<br>       “fielddata”: true<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段进行-terms-分词。分词后的terms\"><a href=\"#对-Text-字段进行-terms-分词。分词后的terms\" class=\"headerlink\" title=\"对 Text 字段进行 terms 分词。分词后的terms\"></a>对 Text 字段进行 terms 分词。分词后的terms</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对job-keyword-和-job-进行-terms-聚合，分桶的总数并不一样\"><a href=\"#对job-keyword-和-job-进行-terms-聚合，分桶的总数并不一样\" class=\"headerlink\" title=\"对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\"></a>对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “cardinate”: {<br>      “cardinality”: {<br>        “field”: “job”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-性别的-keyword-进行聚合\"><a href=\"#对-性别的-keyword-进行聚合\" class=\"headerlink\" title=\"对 性别的 keyword 进行聚合\"></a>对 性别的 keyword 进行聚合</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “gender”: {<br>      “terms”: {<br>        “field”:”gender”<br>      }<br>    }<br>  }<br>}</p>\n<p>#指定 bucket 的 size<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “ages_5”: {<br>      “terms”: {<br>        “field”:”age”,<br>        “size”:3<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"指定size，不同工种中，年纪最大的3个员工的具体信息\"><a href=\"#指定size，不同工种中，年纪最大的3个员工的具体信息\" class=\"headerlink\" title=\"指定size，不同工种中，年纪最大的3个员工的具体信息\"></a>指定size，不同工种中，年纪最大的3个员工的具体信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      },<br>      “aggs”:{<br>        “old_employee”:{<br>          “top_hits”:{<br>            “size”:3,<br>            “sort”:[<br>              {<br>                “age”:{<br>                  “order”:”desc”<br>                }<br>              }<br>            ]<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Salary Ranges 分桶，可以自己定义 key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “salary_range”: {<br>      “range”: {<br>        “field”:”salary”,<br>        “ranges”:[<br>          {<br>            “to”:10000<br>          },<br>          {<br>            “from”:10000,<br>            “to”:20000<br>          },<br>          {<br>            “key”:”&gt;20000”,<br>            “from”:20000<br>          }<br>        ]<br>      }<br>    }<br>  }<br>}</p>\n<p>#Salary Histogram,工资0到10万，以 5000一个区间进行分桶<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “salary_histrogram”: {<br>      “histogram”: {<br>        “field”:”salary”,<br>        “interval”:5000,<br>        “extended_bounds”:{<br>          “min”:0,<br>          “max”:100000</p>\n<pre><code class=\"hljs\">    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"嵌套聚合1，按照工作类型分桶，并统计工资信息\"><a href=\"#嵌套聚合1，按照工作类型分桶，并统计工资信息\" class=\"headerlink\" title=\"嵌套聚合1，按照工作类型分桶，并统计工资信息\"></a>嵌套聚合1，按照工作类型分桶，并统计工资信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “Job_salary_stats”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      },<br>      “aggs”: {<br>        “salary”: {<br>          “stats”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\"><a href=\"#多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\" class=\"headerlink\" title=\"多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\"></a>多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “Job_gender_stats”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      },<br>      “aggs”: {<br>        “gender_stats”: {<br>          “terms”: {<br>            “field”: “gender”<br>          },<br>          “aggs”: {<br>            “salary_stats”: {<br>              “stats”: {<br>                “field”: “salary”<br>              }<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br><br># <span class=\"hljs-number\">6.2</span>-Pipeline聚合分析.md<br><br># Pipeline 聚合分析<br>## 课程 demo<br></code></pre></td></tr></table></figure>\n<p>DELETE employees<br>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"平均工资最低的工作类型\"><a href=\"#平均工资最低的工作类型\" class=\"headerlink\" title=\"平均工资最低的工作类型\"></a>平均工资最低的工作类型</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “min_salary_by_job”:{<br>      “min_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资最高的工作类型\"><a href=\"#平均工资最高的工作类型\" class=\"headerlink\" title=\"平均工资最高的工作类型\"></a>平均工资最高的工作类型</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “max_salary_by_job”:{<br>      “max_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的平均工资\"><a href=\"#平均工资的平均工资\" class=\"headerlink\" title=\"平均工资的平均工资\"></a>平均工资的平均工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “avg_salary_by_job”:{<br>      “avg_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的统计分析\"><a href=\"#平均工资的统计分析\" class=\"headerlink\" title=\"平均工资的统计分析\"></a>平均工资的统计分析</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “stats_salary_by_job”:{<br>      “stats_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的百分位数\"><a href=\"#平均工资的百分位数\" class=\"headerlink\" title=\"平均工资的百分位数\"></a>平均工资的百分位数</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “percentiles_salary_by_job”:{<br>      “percentiles_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<p>#按照年龄对平均工资求导<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “derivative_avg_salary”:{<br>          “derivative”: {<br>            “buckets_path”: “avg_salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Cumulative_sum<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “cumulative_salary”:{<br>          “cumulative_sum”: {<br>            “buckets_path”: “avg_salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Moving Function<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “moving_avg_salary”:{<br>          “moving_fn”: {<br>            “buckets_path”: “avg_salary”,<br>            “window”:10,<br>            “script”: “MovingFunctions.min(values)”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 6.3-作用范围与排序.md</span><br><br><span class=\"hljs-meta\"># 作用范围与排序</span><br></code></pre></td></tr></table></figure>\n<p>DELETE &#x2F;employees<br>PUT &#x2F;employees&#x2F;<br>{<br>  “mappings” : {<br>      “properties” : {<br>        “age” : {<br>          “type” : “integer”<br>        },<br>        “gender” : {<br>          “type” : “keyword”<br>        },<br>        “job” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 50<br>            }<br>          }<br>        },<br>        “name” : {<br>          “type” : “keyword”<br>        },<br>        “salary” : {<br>          “type” : “integer”<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code class=\"hljs\">  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filter<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “older_person”: {<br>      “filter”:{<br>        “range”:{<br>          “age”:{<br>            “from”:35<br>          }<br>        }<br>      },<br>      “aggs”:{<br>         “jobs”:{<br>           “terms”: {<br>        “field”:”job.keyword”<br>      }<br>      }<br>    }},<br>    “all_jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code class=\"hljs\">  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果<br>POST employees&#x2F;_search<br>{<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      }<br>    }<br>  },<br>  “post_filter”: {<br>    “match”: {<br>      “job.keyword”: “Dev Manager”<br>    }<br>  }<br>}</p>\n<p>#global<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 40<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code class=\"hljs\">  &#125;\n&#125;,\n\n&quot;all&quot;:&#123;\n  &quot;global&quot;:&#123;&#125;,\n  &quot;aggs&quot;:&#123;\n    &quot;salary_avg&quot;:&#123;\n      &quot;avg&quot;:&#123;\n        &quot;field&quot;:&quot;salary&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[<br>          {“_count”:”asc”},<br>          {“_key”:”desc”}<br>          ]</p>\n<pre><code class=\"hljs\">  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[  {<br>            “avg_salary”:”desc”<br>          }]</p>\n<pre><code class=\"hljs\">  &#125;,\n&quot;aggs&quot;: &#123;\n  &quot;avg_salary&quot;: &#123;\n    &quot;avg&quot;: &#123;\n      &quot;field&quot;:&quot;salary&quot;\n    &#125;\n  &#125;\n&#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[  {<br>            “stats_salary.min”:”desc”<br>          }]</p>\n<pre><code class=\"hljs\">  &#125;,\n&quot;aggs&quot;: &#123;\n  &quot;stats_salary&quot;: &#123;\n    &quot;stats&quot;: &#123;\n      &quot;field&quot;:&quot;salary&quot;\n    &#125;\n  &#125;\n&#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 6.4-聚合分析的原理及精准度问题.md</span><br><br><span class=\"hljs-meta\"># 聚合分析的原理及精准度问题</span><br></code></pre></td></tr></table></figure>\n<p>DELETE my_flights<br>PUT my_flights<br>{<br>  “settings”: {<br>    “number_of_shards”: 20<br>  },<br>  “mappings” : {<br>      “properties” : {<br>        “AvgTicketPrice” : {<br>          “type” : “float”<br>        },<br>        “Cancelled” : {<br>          “type” : “boolean”<br>        },<br>        “Carrier” : {<br>          “type” : “keyword”<br>        },<br>        “Dest” : {<br>          “type” : “keyword”<br>        },<br>        “DestAirportID” : {<br>          “type” : “keyword”<br>        },<br>        “DestCityName” : {<br>          “type” : “keyword”<br>        },<br>        “DestCountry” : {<br>          “type” : “keyword”<br>        },<br>        “DestLocation” : {<br>          “type” : “geo_point”<br>        },<br>        “DestRegion” : {<br>          “type” : “keyword”<br>        },<br>        “DestWeather” : {<br>          “type” : “keyword”<br>        },<br>        “DistanceKilometers” : {<br>          “type” : “float”<br>        },<br>        “DistanceMiles” : {<br>          “type” : “float”<br>        },<br>        “FlightDelay” : {<br>          “type” : “boolean”<br>        },<br>        “FlightDelayMin” : {<br>          “type” : “integer”<br>        },<br>        “FlightDelayType” : {<br>          “type” : “keyword”<br>        },<br>        “FlightNum” : {<br>          “type” : “keyword”<br>        },<br>        “FlightTimeHour” : {<br>          “type” : “keyword”<br>        },<br>        “FlightTimeMin” : {<br>          “type” : “float”<br>        },<br>        “Origin” : {<br>          “type” : “keyword”<br>        },<br>        “OriginAirportID” : {<br>          “type” : “keyword”<br>        },<br>        “OriginCityName” : {<br>          “type” : “keyword”<br>        },<br>        “OriginCountry” : {<br>          “type” : “keyword”<br>        },<br>        “OriginLocation” : {<br>          “type” : “geo_point”<br>        },<br>        “OriginRegion” : {<br>          “type” : “keyword”<br>        },<br>        “OriginWeather” : {<br>          “type” : “keyword”<br>        },<br>        “dayOfWeek” : {<br>          “type” : “integer”<br>        },<br>        “timestamp” : {<br>          “type” : “date”<br>        }<br>      }<br>    }<br>}</p>\n<p>POST _reindex<br>{<br>  “source”: {<br>    “index”: “kibana_sample_data_flights”<br>  },<br>  “dest”: {<br>    “index”: “my_flights”<br>  }<br>}</p>\n<p>GET kibana_sample_data_flights&#x2F;_count<br>GET my_flights&#x2F;_count</p>\n<p>get kibana_sample_data_flights&#x2F;_search</p>\n<p>GET kibana_sample_data_flights&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “weather”: {<br>      “terms”: {<br>        “field”:”OriginWeather”,<br>        “size”:5,<br>        “show_term_doc_count_error”:true<br>      }<br>    }<br>  }<br>}</p>\n<p>GET my_flights&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “weather”: {<br>      “terms”: {<br>        “field”:”OriginWeather”,<br>        “size”:1,<br>        “shard_size”:1,<br>        “show_term_doc_count_error”:true<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 7.1-对象及 Nested 对象.md</span><br><br><span class=\"hljs-meta\"># 对象及Nested对象</span><br></code></pre></td></tr></table></figure>\n<p>DELETE blog</p>\n<h1 id=\"设置blog的-Mapping\"><a href=\"#设置blog的-Mapping\" class=\"headerlink\" title=\"设置blog的 Mapping\"></a>设置blog的 Mapping</h1><p>PUT &#x2F;blog<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “content”: {<br>        “type”: “text”<br>      },<br>      “time”: {<br>        “type”: “date”<br>      },<br>      “user”: {<br>        “properties”: {<br>          “city”: {<br>            “type”: “text”<br>          },<br>          “userid”: {<br>            “type”: “long”<br>          },<br>          “username”: {<br>            “type”: “keyword”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"插入一条-Blog-信息\"><a href=\"#插入一条-Blog-信息\" class=\"headerlink\" title=\"插入一条 Blog 信息\"></a>插入一条 Blog 信息</h1><p>PUT blog&#x2F;_doc&#x2F;1<br>{<br>  “content”:”I like Elasticsearch”,<br>  “time”:”2019-01-01T00:00:00”,<br>  “user”:{<br>    “userid”:1,<br>    “username”:”Jack”,<br>    “city”:”Shanghai”<br>  }<br>}</p>\n<h1 id=\"查询-Blog-信息\"><a href=\"#查询-Blog-信息\" class=\"headerlink\" title=\"查询 Blog 信息\"></a>查询 Blog 信息</h1><p>POST blog&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“content”: “Elasticsearch”}},<br>        {“match”: {“user.username”: “Jack”}}<br>      ]<br>    }<br>  }<br>}</p>\n<p>DELETE my_movies</p>\n<h1 id=\"电影的Mapping信息\"><a href=\"#电影的Mapping信息\" class=\"headerlink\" title=\"电影的Mapping信息\"></a>电影的Mapping信息</h1><p>PUT my_movies<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “actors” : {<br>          “properties” : {<br>            “first_name” : {<br>              “type” : “keyword”<br>            },<br>            “last_name” : {<br>              “type” : “keyword”<br>            }<br>          }<br>        },<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 256<br>            }<br>          }<br>        }<br>      }<br>    }<br>}</p>\n<h1 id=\"写入一条电影信息\"><a href=\"#写入一条电影信息\" class=\"headerlink\" title=\"写入一条电影信息\"></a>写入一条电影信息</h1><p>POST my_movies&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Speed”,<br>  “actors”:[<br>    {<br>      “first_name”:”Keanu”,<br>      “last_name”:”Reeves”<br>    },</p>\n<pre><code class=\"hljs\">&#123;\n  &quot;first_name&quot;:&quot;Dennis&quot;,\n  &quot;last_name&quot;:&quot;Hopper&quot;\n&#125;\n</code></pre>\n<p>  ]<br>}</p>\n<h1 id=\"查询电影信息\"><a href=\"#查询电影信息\" class=\"headerlink\" title=\"查询电影信息\"></a>查询电影信息</h1><p>POST my_movies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“actors.first_name”: “Keanu”}},<br>        {“match”: {“actors.last_name”: “Hopper”}}<br>      ]<br>    }<br>  }</p>\n<p>}</p>\n<p>DELETE my_movies</p>\n<h1 id=\"创建-Nested-对象-Mapping\"><a href=\"#创建-Nested-对象-Mapping\" class=\"headerlink\" title=\"创建 Nested 对象 Mapping\"></a>创建 Nested 对象 Mapping</h1><p>PUT my_movies<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “actors” : {<br>          “type”: “nested”,<br>          “properties” : {<br>            “first_name” : {“type” : “keyword”},<br>            “last_name” : {“type” : “keyword”}<br>          }},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {“keyword”:{“type”:”keyword”,”ignore_above”:256}}<br>        }<br>      }<br>    }<br>}</p>\n<p>POST my_movies&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Speed”,<br>  “actors”:[<br>    {<br>      “first_name”:”Keanu”,<br>      “last_name”:”Reeves”<br>    },</p>\n<pre><code class=\"hljs\">&#123;\n  &quot;first_name&quot;:&quot;Dennis&quot;,\n  &quot;last_name&quot;:&quot;Hopper&quot;\n&#125;\n</code></pre>\n<p>  ]<br>}</p>\n<h1 id=\"Nested-查询\"><a href=\"#Nested-查询\" class=\"headerlink\" title=\"Nested 查询\"></a>Nested 查询</h1><p>POST my_movies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“title”: “Speed”}},<br>        {<br>          “nested”: {<br>            “path”: “actors”,<br>            “query”: {<br>              “bool”: {<br>                “must”: [<br>                  {“match”: {<br>                    “actors.first_name”: “Keanu”<br>                  }},</p>\n<pre><code class=\"hljs\">              &#123;&quot;match&quot;: &#123;\n                &quot;actors.last_name&quot;: &quot;Hopper&quot;\n              &#125;&#125;\n            ]\n          &#125;\n        &#125;\n      &#125;\n    &#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"Nested-Aggregation\"><a href=\"#Nested-Aggregation\" class=\"headerlink\" title=\"Nested Aggregation\"></a>Nested Aggregation</h1><p>POST my_movies&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “actors”: {<br>      “nested”: {<br>        “path”: “actors”<br>      },<br>      “aggs”: {<br>        “actor_name”: {<br>          “terms”: {<br>            “field”: “actors.first_name”,<br>            “size”: 10<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"普通-aggregation不工作\"><a href=\"#普通-aggregation不工作\" class=\"headerlink\" title=\"普通 aggregation不工作\"></a>普通 aggregation不工作</h1><p>POST my_movies&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “NAME”: {<br>      “terms”: {<br>        “field”: “actors.first_name”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 7.2-文档的父子关系.md</span><br><br><span class=\"hljs-meta\"># 文档的父子关系</span><br></code></pre></td></tr></table></figure>\n<p>DELETE my_blogs</p>\n<h1 id=\"设定-Parent-Child-Mapping\"><a href=\"#设定-Parent-Child-Mapping\" class=\"headerlink\" title=\"设定 Parent&#x2F;Child Mapping\"></a>设定 Parent&#x2F;Child Mapping</h1><p>PUT my_blogs<br>{<br>  “settings”: {<br>    “number_of_shards”: 2<br>  },<br>  “mappings”: {<br>    “properties”: {<br>      “blog_comments_relation”: {<br>        “type”: “join”,<br>        “relations”: {<br>          “blog”: “comment”<br>        }<br>      },<br>      “content”: {<br>        “type”: “text”<br>      },<br>      “title”: {<br>        “type”: “keyword”<br>      }<br>    }<br>  }<br>}</p>\n<p>#索引父文档<br>PUT my_blogs&#x2F;_doc&#x2F;blog1<br>{<br>  “title”:”Learning Elasticsearch”,<br>  “content”:”learning ELK @ geektime”,<br>  “blog_comments_relation”:{<br>    “name”:”blog”<br>  }<br>}</p>\n<p>#索引父文档<br>PUT my_blogs&#x2F;_doc&#x2F;blog2<br>{<br>  “title”:”Learning Hadoop”,<br>  “content”:”learning Hadoop”,<br>    “blog_comments_relation”:{<br>    “name”:”blog”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment1?routing&#x3D;blog1<br>{<br>  “comment”:”I am learning ELK”,<br>  “username”:”Jack”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog1”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment2?routing&#x3D;blog2<br>{<br>  “comment”:”I like Hadoop!!!!!”,<br>  “username”:”Jack”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog2”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2<br>{<br>  “comment”:”Hello Hadoop”,<br>  “username”:”Bob”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog2”<br>  }<br>}</p>\n<h1 id=\"查询所有文档\"><a href=\"#查询所有文档\" class=\"headerlink\" title=\"查询所有文档\"></a>查询所有文档</h1><p>POST my_blogs&#x2F;_search<br>{</p>\n<p>}</p>\n<p>#根据父文档ID查看<br>GET my_blogs&#x2F;_doc&#x2F;blog2</p>\n<h1 id=\"Parent-Id-查询\"><a href=\"#Parent-Id-查询\" class=\"headerlink\" title=\"Parent Id 查询\"></a>Parent Id 查询</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “parent_id”: {<br>      “type”: “comment”,<br>      “id”: “blog2”<br>    }<br>  }<br>}</p>\n<h1 id=\"Has-Child-查询-返回父文档\"><a href=\"#Has-Child-查询-返回父文档\" class=\"headerlink\" title=\"Has Child 查询,返回父文档\"></a>Has Child 查询,返回父文档</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “has_child”: {<br>      “type”: “comment”,<br>      “query” : {<br>                “match”: {<br>                    “username” : “Jack”<br>                }<br>            }<br>    }<br>  }<br>}</p>\n<h1 id=\"Has-Parent-查询，返回相关的子文档\"><a href=\"#Has-Parent-查询，返回相关的子文档\" class=\"headerlink\" title=\"Has Parent 查询，返回相关的子文档\"></a>Has Parent 查询，返回相关的子文档</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “has_parent”: {<br>      “parent_type”: “blog”,<br>      “query” : {<br>                “match”: {<br>                    “title” : “Learning Hadoop”<br>                }<br>            }<br>    }<br>  }<br>}</p>\n<p>#通过ID ，访问子文档<br>GET my_blogs&#x2F;_doc&#x2F;comment3<br>#通过ID和routing ，访问子文档<br>GET my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2</p>\n<p>#更新子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2<br>{<br>    “comment”: “Hello Hadoop??”,<br>    “blog_comments_relation”: {<br>      “name”: “comment”,<br>      “parent”: “blog2”<br>    }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 7.5-Elasticsearch数据建模实例.md</span><br><br><span class=\"hljs-meta\"># Elasticsearch 数据建模实例</span><br></code></pre></td></tr></table></figure>\n<h6 id=\"Data-Modeling-Example\"><a href=\"#Data-Modeling-Example\" class=\"headerlink\" title=\"Data Modeling Example\"></a>Data Modeling Example</h6><h1 id=\"Index-一本书的信息\"><a href=\"#Index-一本书的信息\" class=\"headerlink\" title=\"Index 一本书的信息\"></a>Index 一本书的信息</h1><p>PUT books&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Mastering ElasticSearch 5.0”,<br>  “description”:”Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins”,<br>  “author”:”Bharvi Dixit”,<br>  “public_date”:”2017”,<br>  “cover_url”:”<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>}</p>\n<p>#查询自动创建的Mapping<br>GET books&#x2F;_mapping</p>\n<p>DELETE books</p>\n<p>#优化字段类型<br>PUT books<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “author” : {“type” : “keyword”},<br>        “cover_url” : {“type” : “keyword”,”index”: false},<br>        “description” : {“type” : “text”},<br>        “public_date” : {“type” : “date”},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 100<br>            }<br>          }<br>        }<br>      }<br>    }<br>}</p>\n<p>#Cover URL index 设置成false，无法对该字段进行搜索<br>POST books&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “cover_url”: {<br>        “value”: “<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>      }<br>    }<br>  }<br>}</p>\n<p>#Cover URL index 设置成false，依然支持聚合分析<br>POST books&#x2F;_search<br>{<br>  “aggs”: {<br>    “cover”: {<br>      “terms”: {<br>        “field”: “cover_url”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<p>DELETE books<br>#新增 Content字段。数据量很大。选择将Source 关闭<br>PUT books<br>{<br>      “mappings” : {<br>      “_source”: {“enabled”: false},<br>      “properties” : {<br>        “author” : {“type” : “keyword”,”store”: true},<br>        “cover_url” : {“type” : “keyword”,”index”: false,”store”: true},<br>        “description” : {“type” : “text”,”store”: true},<br>         “content” : {“type” : “text”,”store”: true},<br>        “public_date” : {“type” : “date”,”store”: true},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 100<br>            }<br>          },<br>          “store”: true<br>        }<br>      }<br>    }<br>}</p>\n<h1 id=\"Index-一本书的信息-包含Content\"><a href=\"#Index-一本书的信息-包含Content\" class=\"headerlink\" title=\"Index 一本书的信息,包含Content\"></a>Index 一本书的信息,包含Content</h1><p>PUT books&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Mastering ElasticSearch 5.0”,<br>  “description”:”Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins”,<br>  “content”:”The content of the book……Indexing data, aggregation, searching.    something else. something in the way…………”,<br>  “author”:”Bharvi Dixit”,<br>  “public_date”:”2017”,<br>  “cover_url”:”<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>}</p>\n<p>#查询结果中，Source不包含数据<br>POST books&#x2F;_search<br>{}</p>\n<p>#搜索，通过store 字段显示数据，同时高亮显示 conent的内容<br>POST books&#x2F;_search<br>{<br>  “stored_fields”: [“title”,”author”,”public_date”],<br>  “query”: {<br>    “match”: {<br>      “content”: “searching”<br>    }<br>  },</p>\n<p>  “highlight”: {<br>    “fields”: {<br>      “content”:{}<br>    }<br>  }</p>\n<p>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 7.6-Elasticsearch 数据建模最佳实践.md</span><br><br><span class=\"hljs-meta\"># Elasticsearch 数据建模最佳实践</span><br><br><br></code></pre></td></tr></table></figure>\n\n<h6 id=\"Cookie-Service\"><a href=\"#Cookie-Service\" class=\"headerlink\" title=\"Cookie Service\"></a>Cookie Service</h6><p>##索引数据，dynamic mapping 会不断加入新增字段<br>PUT cookie_service&#x2F;_doc&#x2F;1<br>{<br> “url”:”<a href=\"http://www.google.com/\">www.google.com</a>“,<br> “cookies”:{<br>   “username”:”tom”,<br>   “age”:32<br> }<br>}</p>\n<p>PUT cookie_service&#x2F;_doc&#x2F;2<br>{<br> “url”:”<a href=\"http://www.amazon.com/\">www.amazon.com</a>“,<br> “cookies”:{<br>   “login”:”2019-01-01”,<br>   “email”:”<a href=\"mailto:&#x78;&#x79;&#x7a;&#64;&#x61;&#x62;&#x63;&#46;&#x63;&#x6f;&#x6d;\">&#x78;&#x79;&#x7a;&#64;&#x61;&#x62;&#x63;&#46;&#x63;&#x6f;&#x6d;</a>“<br> }<br>}</p>\n<p>DELETE cookie_service<br>#使用 Nested 对象，增加key&#x2F;value<br>PUT cookie_service<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “cookies”: {<br>        “type”: “nested”,<br>        “properties”: {<br>          “name”: {<br>            “type”: “keyword”<br>          },<br>          “dateValue”: {<br>            “type”: “date”<br>          },<br>          “keywordValue”: {<br>            “type”: “keyword”<br>          },<br>          “IntValue”: {<br>            “type”: “integer”<br>          }<br>        }<br>      },<br>      “url”: {<br>        “type”: “text”,<br>        “fields”: {<br>          “keyword”: {<br>            “type”: “keyword”,<br>            “ignore_above”: 256<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>##写入数据，使用key和合适类型的value字段<br>PUT cookie_service&#x2F;_doc&#x2F;1<br>{<br> “url”:”<a href=\"http://www.google.com/\">www.google.com</a>“,<br> “cookies”:[<br>    {<br>      “name”:”username”,<br>      “keywordValue”:”tom”<br>    },<br>    {<br>       “name”:”age”,<br>      “intValue”:32</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>   ]<br> }</p>\n<p>PUT cookie_service&#x2F;_doc&#x2F;2<br>{<br> “url”:”<a href=\"http://www.amazon.com/\">www.amazon.com</a>“,<br> “cookies”:[<br>    {<br>      “name”:”login”,<br>      “dateValue”:”2019-01-01”<br>    },<br>    {<br>       “name”:”email”,<br>      “IntValue”:32</p>\n<pre><code class=\"hljs\">&#125;\n</code></pre>\n<p>   ]<br> }</p>\n<h1 id=\"Nested-查询，通过bool查询进行过滤\"><a href=\"#Nested-查询，通过bool查询进行过滤\" class=\"headerlink\" title=\"Nested 查询，通过bool查询进行过滤\"></a>Nested 查询，通过bool查询进行过滤</h1><p>POST cookie_service&#x2F;_search<br>{<br>  “query”: {<br>    “nested”: {<br>      “path”: “cookies”,<br>      “query”: {<br>        “bool”: {<br>          “filter”: [<br>            {<br>            “term”: {<br>              “cookies.name”: “age”<br>            }},<br>            {<br>              “range”:{<br>                “cookies.intValue”:{<br>                  “gte”:30<br>                }<br>              }<br>            }<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"在Mapping中加入元信息，便于管理\"><a href=\"#在Mapping中加入元信息，便于管理\" class=\"headerlink\" title=\"在Mapping中加入元信息，便于管理\"></a>在Mapping中加入元信息，便于管理</h1><p>PUT softwares&#x2F;<br>{<br>  “mappings”: {<br>    “_meta”: {<br>      “software_version_mapping”: “1.0”<br>    }<br>  }<br>}</p>\n<p>GET softwares&#x2F;_mapping<br>PUT softwares&#x2F;_doc&#x2F;1<br>{<br>  “software_version”:”7.1.0”<br>}</p>\n<p>DELETE softwares</p>\n<h1 id=\"优化-使用inner-object\"><a href=\"#优化-使用inner-object\" class=\"headerlink\" title=\"优化,使用inner object\"></a>优化,使用inner object</h1><p>PUT softwares&#x2F;<br>{<br>  “mappings”: {<br>    “_meta”: {<br>      “software_version_mapping”: “1.1”<br>    },<br>    “properties”: {<br>      “version”: {<br>        “properties”: {<br>          “display_name”: {<br>            “type”: “keyword”<br>          },<br>          “hot_fix”: {<br>            “type”: “byte”<br>          },<br>          “marjor”: {<br>            “type”: “byte”<br>          },<br>          “minor”: {<br>            “type”: “byte”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#通过 Inner Object 写入多个文档<br>PUT softwares&#x2F;_doc&#x2F;1<br>{<br>  “version”:{<br>  “display_name”:”7.1.0”,<br>  “marjor”:7,<br>  “minor”:1,<br>  “hot_fix”:0<br>  }</p>\n<p>}</p>\n<p>PUT softwares&#x2F;_doc&#x2F;2<br>{<br>  “version”:{<br>  “display_name”:”7.2.0”,<br>  “marjor”:7,<br>  “minor”:2,<br>  “hot_fix”:0<br>  }<br>}</p>\n<p>PUT softwares&#x2F;_doc&#x2F;3<br>{<br>  “version”:{<br>  “display_name”:”7.2.1”,<br>  “marjor”:7,<br>  “minor”:2,<br>  “hot_fix”:1<br>  }<br>}</p>\n<h1 id=\"通过-bool-查询，\"><a href=\"#通过-bool-查询，\" class=\"headerlink\" title=\"通过 bool 查询，\"></a>通过 bool 查询，</h1><p>POST softwares&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “filter”: [<br>        {<br>          “match”:{<br>            “version.marjor”:7<br>          }<br>        },<br>        {<br>          “match”:{<br>            “version.minor”:2<br>          }<br>        }</p>\n<pre><code class=\"hljs\">  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"Not-Null-解决聚合的问题\"><a href=\"#Not-Null-解决聚合的问题\" class=\"headerlink\" title=\"Not Null 解决聚合的问题\"></a>Not Null 解决聚合的问题</h1><p>DELETE ratings<br>PUT ratings<br>{<br>  “mappings”: {<br>      “properties”: {<br>        “rating”: {<br>          “type”: “float”,<br>          “null_value”: 1.0<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT ratings&#x2F;_doc&#x2F;1<br>{<br> “rating”:5<br>}<br>PUT ratings&#x2F;_doc&#x2F;2<br>{<br> “rating”:null<br>}</p>\n<p>POST ratings&#x2F;_search<br>POST ratings&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “avg”: {<br>      “avg”: {<br>        “field”: “rating”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST ratings&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “rating”: {<br>        “value”: 1<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><br><span class=\"hljs-meta\"># 7.7-第二部分总结与测验.md</span><br><br><span class=\"hljs-meta\"># 第二部分总结与测验</span><br></code></pre></td></tr></table></figure>\n<p>DELETE test<br>PUT test&#x2F;_doc&#x2F;1<br>{<br>  “content”:”Hello World”<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content.keyword”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content.keyword”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content.keyword”: “Hello World”<br>    }<br>  }<br>}</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\"><br><br><span class=\"hljs-comment\"># 8.1-集群身份认证与用户鉴权.md</span><br><br><span class=\"hljs-comment\"># 集群身份认证与用户鉴权</span><br>- 如何为集群启用X-Pack Security<br>- 如何为内置用户设置密码<br>- 设置 Kibana与ElasticSearch通信鉴权<br>- 使用安全API创建对特定索引具有有限访问权限的用户<br><br>This tutorial involves a single <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">cluster</span>, but if you had multiple nodes, you would enable Elasticsearch security features on every <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">in</span> the cluster <span class=\"hljs-keyword\">and</span> configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">discovery</span>, we are postponing the configuration of TLS. For example, add the following setting:<br><br>discovery.<span class=\"hljs-keyword\">type</span>: single-<span class=\"hljs-keyword\">node</span><br><span class=\"hljs-title\"></span><br></code></pre></td></tr></table></figure>\n<p>#启动单节点<br>bin&#x2F;elasticsearch -E node.name&#x3D;node0 -E cluster.name&#x3D;geektime -E path.data&#x3D;node0_data -E http.port&#x3D;9200 -E xpack.security.enabled&#x3D;true</p>\n<p>#使用Curl访问ES，或者浏览器访问 “localhost:9200&#x2F;_cat&#x2F;nodes?pretty”。返回401错误<br>curl ‘localhost:9200&#x2F;_cat&#x2F;nodes?pretty’</p>\n<p>#运行密码设定的命令，设置ES内置用户及其初始密码。<br>bin&#x2F;elasticsearch-setup-passwords interactive</p>\n<p>curl -u elastic ‘localhost:9200&#x2F;_cat&#x2F;nodes?pretty’</p>\n<h1 id=\"修改-kibana-yml\"><a href=\"#修改-kibana-yml\" class=\"headerlink\" title=\"修改 kibana.yml\"></a>修改 kibana.yml</h1><p>elasticsearch.username: “kibana”<br>elasticsearch.password: “changeme”</p>\n<p>#启动。使用用户名，elastic，密码elastic<br>.&#x2F;bin&#x2F;kibana</p>\n<p>POST orders&#x2F;_bulk<br>{“index”:{}}<br>{“product” : “1”,”price” : 18,”payment” : “master”,”card” : “9876543210123456”,”name” : “jack”}<br>{“index”:{}}<br>{“product” : “2”,”price” : 99,”payment” : “visa”,”card” : “1234567890123456”,”name” : “bob”}</p>\n<p>#create a new role named read_only_orders, that satisfies the following criteria:<br>#The role has no cluster privileges<br>#The role only has access to indices that match the pattern sales_record<br>#The index privileges are read, and view_index_metadata</p>\n<p>#create sales_user that satisfies the following criteria:</p>\n<h1 id=\"Use-your-own-email-address\"><a href=\"#Use-your-own-email-address\" class=\"headerlink\" title=\"Use your own email address\"></a>Use your own email address</h1><h1 id=\"Assign-the-user-to-two-roles-read-only-orders-and-kibana-user\"><a href=\"#Assign-the-user-to-two-roles-read-only-orders-and-kibana-user\" class=\"headerlink\" title=\"Assign the user to two roles: read_only_orders and kibana_user\"></a>Assign the user to two roles: read_only_orders and kibana_user</h1><p>#验证读权限,可以执行<br>POST orders&#x2F;_search<br>{}</p>\n<p>#验证写权限,报错<br>POST orders&#x2F;_bulk<br>{“index”:{}}<br>{“product” : “1”,”price” : 18,”payment” : “master”,”card” : “9876543210123456”,”name” : “jack”}<br>{“index”:{}}<br>{“product” : “2”,”price” : 99,”payment” : “visa”,”card” : “1234567890123456”,”name” : “bob”}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 8.2-集群内部安全通信.md</span><br><br><span class=\"hljs-meta\">#</span><br><br></code></pre></td></tr></table></figure>\n<h1 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h1><h1 id=\"为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil-ca命令：\"><a href=\"#为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil-ca命令：\" class=\"headerlink\" title=\"为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\"></a>为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：</h1><p>bin&#x2F;elasticsearch-certutil ca</p>\n<p>#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：<br>bin&#x2F;elasticsearch-certutil cert –ca elastic-stack-ca.p12</p>\n<p>#将证书拷贝到 config&#x2F;certs目录下<br>elastic-certificates.p12</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node0 -E cluster.name&#x3D;geektime -E path.data&#x3D;node0_data -E http.port&#x3D;9200 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate -E xpack.security.transport.ssl.keystore.path&#x3D;certs&#x2F;elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path&#x3D;certs&#x2F;elastic-certificates.p12</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.data&#x3D;node1_data -E http.port&#x3D;9201 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate -E xpack.security.transport.ssl.keystore.path&#x3D;certs&#x2F;elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path&#x3D;certs&#x2F;elastic-certificates.p12</p>\n<p>#不提供证书的节点，无法加入<br>bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.data&#x3D;node2_data -E http.port&#x3D;9202 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\"><br><br></code></pre></td></tr></table></figure>\n<h2 id=\"elasticsearch-yml-配置\"><a href=\"#elasticsearch-yml-配置\" class=\"headerlink\" title=\"elasticsearch.yml 配置\"></a>elasticsearch.yml 配置</h2><p>#xpack.security.transport.ssl.enabled: true<br>#xpack.security.transport.ssl.verification_mode: certificate</p>\n<p>#xpack.security.transport.ssl.keystore.path: certs&#x2F;elastic-certificates.p12<br>#xpack.security.transport.ssl.truststore.path: certs&#x2F;elastic-certificates.p12</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 8.3-集群与外部间的安全通信.md</span><br><br><br><br></code></pre></td></tr></table></figure>\n<p>xpack.security.http.ssl.enabled: true<br>xpack.security.http.ssl.keystore.path: certs&#x2F;elastic-certificates.p12<br>xpack.security.http.ssl.truststore.path: certs&#x2F;elastic-certificates.p12</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">```<br><br><br><span class=\"hljs-comment\"># ES 启用 https</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.http.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-meta\">#Kibana 连接 ES https</span><br><br><br><br><span class=\"hljs-meta\"># 为kibana生成pem</span><br>openssl pkcs12 -<span class=\"hljs-keyword\">in</span> elastic-certificates.p12 -cacerts -nokeys -<span class=\"hljs-keyword\">out</span> elastic-ca.pem<br><br><br><span class=\"hljs-symbol\">elasticsearch.hosts:</span> [<span class=\"hljs-string\">&quot;https://localhost:9200&quot;</span>]<br><span class=\"hljs-symbol\">elasticsearch.ssl.certificateAuthorities:</span> [ <span class=\"hljs-string\">&quot;/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem&quot;</span> ]<br><span class=\"hljs-symbol\">elasticsearch.ssl.verificationMode:</span> certificate<br><br><br><br><span class=\"hljs-meta\"># 为 Kibna 配置 HTTPS</span><br><span class=\"hljs-meta\"># 生成后解压，包含了instance.crt 和 instance.key</span><br>bin/elasticsearch-certutil ca --pem<br><br><span class=\"hljs-symbol\">server.ssl.enabled:</span> true<br><span class=\"hljs-symbol\">server.ssl.certificate:</span> config/certs/instance.crt<br><span class=\"hljs-symbol\">server.ssl.key:</span> config/certs/instance.key<br><br><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"9-1-常见的集群部署方式-md\"><a href=\"#9-1-常见的集群部署方式-md\" class=\"headerlink\" title=\"9.1-常见的集群部署方式.md\"></a>9.1-常见的集群部署方式.md</h1><h1 id=\"常见的集群部署方式\"><a href=\"#常见的集群部署方式\" class=\"headerlink\" title=\"常见的集群部署方式\"></a>常见的集群部署方式</h1><h1 id=\"9-2-Hot-Warm架构与ShardFiltering-md\"><a href=\"#9-2-Hot-Warm架构与ShardFiltering-md\" class=\"headerlink\" title=\"9.2-Hot&amp;Warm架构与ShardFiltering.md\"></a>9.2-Hot&amp;Warm架构与ShardFiltering.md</h1><h1 id=\"Hot-Warm-架构与-Shard-Filtering\"><a href=\"#Hot-Warm-架构与-Shard-Filtering\" class=\"headerlink\" title=\"Hot &amp; Warm 架构与 Shard Filtering\"></a>Hot &amp; Warm 架构与 Shard Filtering</h1><h2 id=\"课程代码\"><a href=\"#课程代码\" class=\"headerlink\" title=\"课程代码\"></a>课程代码</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 标记一个 Hot 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=hotnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=hot_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=hot<br><br><span class=\"hljs-comment\"># 标记一个 warm 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=warmnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=warm_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=warm<br><br><span class=\"hljs-comment\"># 查看节点</span><br><span class=\"hljs-built_in\">GET</span> /_cat/nodeattrs?v<br><br><span class=\"hljs-comment\"># 配置到 Hot节点</span><br>PUT logs-2019-06-27<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-comment\"># 配置到 warm 节点</span><br>PUT PUT logs-2019-06-27/_settings<br>&#123;  <br>  <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;warm&quot;</span><br>&#125;<br><br><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack2<br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span><br>  &#125;<br>&#125;<br><br>PUT my_index1<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1<br>  &#125;<br>&#125;<br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br>DELETE my_index1/_doc/1<br><br><br><br><span class=\"hljs-comment\"># Fore awareness</span><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span>,<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.force.my_rack_id.values&quot;</span>: <span class=\"hljs-string\">&quot;rack1,rack2&quot;</span><br>  &#125;<br>&#125;<br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 集群黄色</span><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 副本无法分配</span><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-built_in\">GET</span> _cluster/allocation/explain?pretty<br></code></pre></td></tr></table></figure>\n<h1 id=\"9-3-如何对集群进行容量规划-md\"><a href=\"#9-3-如何对集群进行容量规划-md\" class=\"headerlink\" title=\"9.3-如何对集群进行容量规划.md\"></a>9.3-如何对集群进行容量规划.md</h1><h1 id=\"如何对集群进行容量规划\"><a href=\"#如何对集群进行容量规划\" class=\"headerlink\" title=\"如何对集群进行容量规划\"></a>如何对集群进行容量规划</h1><h2 id=\"代码Demo\"><a href=\"#代码Demo\" class=\"headerlink\" title=\"代码Demo\"></a>代码Demo</h2><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">PUT logs_<span class=\"hljs-number\">2019</span><span class=\"hljs-number\">-06</span><span class=\"hljs-number\">-27</span><br>PUT logs_<span class=\"hljs-number\">2019</span><span class=\"hljs-number\">-06</span><span class=\"hljs-number\">-26</span><br><br><br>POST _aliases<br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;logs_2019-06-27&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;logs_write&quot;</span><br>      &#125;<br>    &#125;<span class=\"hljs-punctuation\">,</span><br>    &#123;<br>      <span class=\"hljs-string\">&quot;remove&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;logs_2019-06-26&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;logs_write&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br># POST /&lt;logs-&#123;now/d&#125;/_search<br>POST /<span class=\"hljs-variable\">%3</span>Clogs-<span class=\"hljs-variable\">%7</span>Bnow<span class=\"hljs-variable\">%2</span>Fd<span class=\"hljs-variable\">%7</span>D<span class=\"hljs-variable\">%3</span>E/_search<br><br># POST /&lt;logs-&#123;now/w&#125;/_search<br>POST /<span class=\"hljs-variable\">%3</span>Clogs-<span class=\"hljs-variable\">%7</span>Bnow<span class=\"hljs-variable\">%2</span>Fw<span class=\"hljs-variable\">%7</span>D<span class=\"hljs-variable\">%3</span>E/_search<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"9-4-分片设计及管理-md\"><a href=\"#9-4-分片设计及管理-md\" class=\"headerlink\" title=\"9.4-分片设计及管理.md\"></a>9.4-分片设计及管理.md</h1><h1 id=\"分片设计及管理\"><a href=\"#分片设计及管理\" class=\"headerlink\" title=\"分片设计及管理\"></a>分片设计及管理</h1><h1 id=\"9-5-在私有云上管理与部署Elasticsearch集群-md\"><a href=\"#9-5-在私有云上管理与部署Elasticsearch集群-md\" class=\"headerlink\" title=\"9.5-在私有云上管理与部署Elasticsearch集群.md\"></a>9.5-在私有云上管理与部署Elasticsearch集群.md</h1><h1 id=\"在私有云上管理与部署-Elasticsearch-集群\"><a href=\"#在私有云上管理与部署-Elasticsearch-集群\" class=\"headerlink\" title=\"在私有云上管理与部署 Elasticsearch 集群\"></a>在私有云上管理与部署 Elasticsearch 集群</h1><h1 id=\"9-6-在公有云上管理与部署Elasticsearch集群-md\"><a href=\"#9-6-在公有云上管理与部署Elasticsearch集群-md\" class=\"headerlink\" title=\"9.6-在公有云上管理与部署Elasticsearch集群.md\"></a>9.6-在公有云上管理与部署Elasticsearch集群.md</h1><h1 id=\"在公有云上管理与部署-Elasticsearch-集群\"><a href=\"#在公有云上管理与部署-Elasticsearch-集群\" class=\"headerlink\" title=\"在公有云上管理与部署 Elasticsearch 集群\"></a>在公有云上管理与部署 Elasticsearch 集群</h1><h1 id=\"result-md\"><a href=\"#result-md\" class=\"headerlink\" title=\"result.md\"></a>result.md</h1><h1 id=\"10-1-生产环境常用配置与上线清单-md\"><a href=\"#10-1-生产环境常用配置与上线清单-md\" class=\"headerlink\" title=\"10.1-生产环境常用配置与上线清单.md\"></a>10.1-生产环境常用配置与上线清单.md</h1><h1 id=\"生产环境查用配置与线上清单\"><a href=\"#生产环境查用配置与线上清单\" class=\"headerlink\" title=\"生产环境查用配置与线上清单\"></a>生产环境查用配置与线上清单</h1><h1 id=\"10-10-一些运维相关的建议-md\"><a href=\"#10-10-一些运维相关的建议-md\" class=\"headerlink\" title=\"10.10-一些运维相关的建议.md\"></a>10.10-一些运维相关的建议.md</h1><h1 id=\"一些运维相关的建议\"><a href=\"#一些运维相关的建议\" class=\"headerlink\" title=\"一些运维相关的建议\"></a>一些运维相关的建议</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 移动一个分片从一个节点到另外一个节点</span><br><br>POST _cluster/reroute<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;move&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,<br>        <span class=\"hljs-string\">&quot;from_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_1&quot;</span>,<br>        <span class=\"hljs-string\">&quot;to_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_2&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br><span class=\"hljs-comment\"># Fore the allocation of an unassinged shard with a reason</span><br><br>POST _cluster/reroute?explain<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,<br>        <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-string\">&quot;nodename&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br><span class=\"hljs-comment\"># remove the nodes from cluster </span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.exclude._ip&quot;</span>:<span class=\"hljs-string\">&quot;the_IP_of_your_node&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Force a synced flush</span><br>POST _flush/synced<br><br><br><span class=\"hljs-comment\"># change the number of moving shards to balance the cluster</span><br>PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;cluster.routing.allocation.cluster_concurrent_rebalance&quot;</span>:2&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># change the number of shards being recovered simultanceously per node</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;cluster.routing.allocation.node_concurrent_recoveries&quot;</span>:5&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Change the recovery speed</span><br>PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;indices.recovery.max_bytes_per_sec&quot;</span>: <span class=\"hljs-string\">&quot;80mb&quot;</span>&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Change the number of concurrent streams for a recovery on a single node</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;indices.recovery.concurrent_streams&quot;</span>:6&#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Change the sinze of the search queue</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threadpool.search.queue_size&quot;</span>:2000<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Clear the cache on a node</span><br>POST _cache/clear<br><br><br><span class=\"hljs-comment\">#Adjust the circuit breakers</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.total.limit&quot;</span>:<span class=\"hljs-string\">&quot;40%&quot;</span><br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-2-监控Elasticsearch集群-md\"><a href=\"#10-2-监控Elasticsearch集群-md\" class=\"headerlink\" title=\"10.2-监控Elasticsearch集群.md\"></a>10.2-监控Elasticsearch集群.md</h1><h1 id=\"监控-Elasticsearch-集群-1\"><a href=\"#监控-Elasticsearch-集群-1\" class=\"headerlink\" title=\"监控 Elasticsearch 集群\"></a>监控 Elasticsearch 集群</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Node Stats：</span><br>GET _nodes/stats<br><br><span class=\"hljs-comment\">#Cluster Stats:</span><br>GET _cluster/stats<br><br><span class=\"hljs-comment\">#Index Stats:</span><br>GET kibana_sample_data_ecommerce/_stats<br><br><span class=\"hljs-comment\">#Pending Cluster Tasks API:</span><br>GET _cluster/pending_tasks<br><br><span class=\"hljs-comment\"># 查看所有的 tasks，也支持 cancel task</span><br>GET _tasks<br><br><br>GET _nodes/thread_pool<br>GET _nodes/stats/thread_pool<br>GET _cat/thread_pool?v<br>GET _nodes/hot_threads<br>GET _nodes/stats/thread_pool<br><br><br><span class=\"hljs-comment\"># 设置 Index Slowlogs</span><br><span class=\"hljs-comment\"># the first 1000 characters of the doc&#x27;s source will be logged</span><br>PUT my_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;index.indexing.slowlog&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;threshold.index&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;warn&quot;</span>:<span class=\"hljs-string\">&quot;10s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;info&quot;</span>: <span class=\"hljs-string\">&quot;4s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;debug&quot;</span>:<span class=\"hljs-string\">&quot;2s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;trace&quot;</span>:<span class=\"hljs-string\">&quot;0s&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;level&quot;</span>:<span class=\"hljs-string\">&quot;trace&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>:1000  <br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 设置查询</span><br>DELETE my_index<br>//<span class=\"hljs-string\">&quot;0&quot;</span> logs all queries<br>PUT my_index/<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.search.slowlog.threshold&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query.warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.info&quot;</span>: <span class=\"hljs-string\">&quot;3s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.warn&quot;</span>: <span class=\"hljs-string\">&quot;1s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.info&quot;</span>: <span class=\"hljs-string\">&quot;600ms&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.debug&quot;</span>: <span class=\"hljs-string\">&quot;400ms&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>GET my_index<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-3-诊断集群的潜在问题-md\"><a href=\"#10-3-诊断集群的潜在问题-md\" class=\"headerlink\" title=\"10.3-诊断集群的潜在问题.md\"></a>10.3-诊断集群的潜在问题.md</h1><h1 id=\"诊断集群的潜在问题\"><a href=\"#诊断集群的潜在问题\" class=\"headerlink\" title=\"诊断集群的潜在问题\"></a>诊断集群的潜在问题</h1><h1 id=\"10-4-解决集群Yellow与Red的问题-md\"><a href=\"#10-4-解决集群Yellow与Red的问题-md\" class=\"headerlink\" title=\"10.4-解决集群Yellow与Red的问题.md\"></a>10.4-解决集群Yellow与Red的问题.md</h1><h1 id=\"集群健康与问题排查\"><a href=\"#集群健康与问题排查\" class=\"headerlink\" title=\"集群健康与问题排查\"></a>集群健康与问题排查</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#案例1</span><br>DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:3,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hott&quot;</span><br>  &#125;<br>&#125;<br><br><br><br><br><br><span class=\"hljs-comment\"># 检查集群状态，查看是否有节点丢失，有多少分片无法分配</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br><span class=\"hljs-comment\"># 查看索引级别,找到红色的索引</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/health?<span class=\"hljs-attribute\">level</span>=indices<br><br><br><span class=\"hljs-comment\">#查看索引的分片</span><br><span class=\"hljs-built_in\">GET</span> _cluster/health?<span class=\"hljs-attribute\">level</span>=shards<br><br><span class=\"hljs-comment\"># Explain 变红的原因</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/allocation/explain<br><br><span class=\"hljs-built_in\">GET</span> /_cat/shards/mytest<br><span class=\"hljs-built_in\">GET</span> _cat/nodeattrs<br><br>DELETE mytest<br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:3,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br><span class=\"hljs-comment\">#案例2, Explain 看 hot 上的 explain</span><br>DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><span class=\"hljs-built_in\">GET</span> _cat/shards/mytest<br><span class=\"hljs-built_in\">GET</span> /_cluster/allocation/explain<br><br>PUT mytest/_settings<br>&#123;<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-5-提升集群写性能-md\"><a href=\"#10-5-提升集群写性能-md\" class=\"headerlink\" title=\"10.5-提升集群写性能.md\"></a>10.5-提升集群写性能.md</h1><h1 id=\"提升集群写性能-1\"><a href=\"#提升集群写性能-1\" class=\"headerlink\" title=\"提升集群写性能\"></a>提升集群写性能</h1><figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fsharp\">DELETE myindex<br>PUT <span class=\"hljs-keyword\">myindex</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;refresh_interval&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;30s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;number_of_shards&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;2&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;routing&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;allocation&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>        <span class=\"hljs-string\">&quot;total_shards_per_node&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;3&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;translog&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;sync_interval&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;30s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;durability&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;async&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span><span class=\"hljs-operator\">:</span> 0<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;dynamic&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-literal\">false</span>,<br>    <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-6-提升集群读性能-md\"><a href=\"#10-6-提升集群读性能-md\" class=\"headerlink\" title=\"10.6-提升集群读性能.md\"></a>10.6-提升集群读性能.md</h1><h1 id=\"提升集群读性能-1\"><a href=\"#提升集群读性能-1\" class=\"headerlink\" title=\"提升集群读性能\"></a>提升集群读性能</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">PUT blogs/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">1</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>&#125;<br><span class=\"hljs-built_in\">GET</span> blogs/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>        &#125;&#125;<br>      ],<br>      <br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;title.keyword&#x27;].value.length()&gt;5&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> blogs/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;publish_date&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">2017</span>,<br>              <span class=\"hljs-string\">&quot;lte&quot;</span>: <span class=\"hljs-number\">2019</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-7-集群压力测试-md\"><a href=\"#10-7-集群压力测试-md\" class=\"headerlink\" title=\"10.7-集群压力测试.md\"></a>10.7-集群压力测试.md</h1><h1 id=\"集群压力测试-1\"><a href=\"#集群压力测试-1\" class=\"headerlink\" title=\"集群压力测试\"></a>集群压力测试</h1><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">pip3</span> install esrally<br><br><span class=\"hljs-attribute\">esrally</span> configure<br><br><span class=\"hljs-comment\"># 只测试 1000条数据</span><br><span class=\"hljs-attribute\">esrally</span> --distribution-version=<span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> --test-mode<br><br><span class=\"hljs-comment\"># 测试完整数据</span><br><span class=\"hljs-attribute\">esrally</span> --distribution-version=<span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span><br><br></code></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://github.com/elastic/rally-tracks\">https://github.com/elastic/rally-tracks</a></li>\n<li><a href=\"https://logz.io/blog/rally/\">https://logz.io/blog/rally/</a></li>\n</ul>\n<h1 id=\"10-9-缓存及使用Breaker限制内存使用-md\"><a href=\"#10-9-缓存及使用Breaker限制内存使用-md\" class=\"headerlink\" title=\"10.9-缓存及使用Breaker限制内存使用.md\"></a>10.9-缓存及使用Breaker限制内存使用.md</h1><h1 id=\"缓存及使用Circuit-Breaker限制内存使用\"><a href=\"#缓存及使用Circuit-Breaker限制内存使用\" class=\"headerlink\" title=\"缓存及使用Circuit Breaker限制内存使用\"></a>缓存及使用Circuit Breaker限制内存使用</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cat/nodes?v<br><br><span class=\"hljs-built_in\">GET</span> _nodes/stats/indices?pretty<br><br><span class=\"hljs-built_in\">GET</span> _cat/nodes?v&amp;<span class=\"hljs-attribute\">h</span>=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count<br><br><span class=\"hljs-built_in\">GET</span> _cat/nodes?<span class=\"hljs-attribute\">h</span>=name,port,segments.memory,segments.index_writer_memory,fielddata.memory_size,query_cache.memory_size,request_cache.memory_size&amp;v<br><br><br>PUT /_cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>    <span class=\"hljs-string\">&quot;persistent&quot;</span> : &#123;<br>       <span class=\"hljs-string\">&quot;indices.breaker.request.limit&quot;</span> : <span class=\"hljs-string\">&quot;90%&quot;</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"补充阅读\"><a href=\"#补充阅读\" class=\"headerlink\" title=\"补充阅读\"></a>补充阅读</h2><ul>\n<li><a href=\"https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker\">https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker</a></li>\n</ul>\n<h1 id=\"11-1-使用Shrink与RolloverAPI有效管理时间序列索引-md\"><a href=\"#11-1-使用Shrink与RolloverAPI有效管理时间序列索引-md\" class=\"headerlink\" title=\"11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md\"></a>11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md</h1><h1 id=\"使用-shrink与rolloverAPI有效的管理索引\"><a href=\"#使用-shrink与rolloverAPI有效的管理索引\" class=\"headerlink\" title=\"使用 shrink与rolloverAPI有效的管理索引\"></a>使用 shrink与rolloverAPI有效的管理索引</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><br><span class=\"hljs-comment\"># 打开关闭索引</span><br>DELETE <span class=\"hljs-built_in\">test</span><br><span class=\"hljs-comment\">#查看索引是否存在</span><br>HEAD <span class=\"hljs-built_in\">test</span><br><br>PUT <span class=\"hljs-built_in\">test</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\">#关闭索引</span><br>POST /test/_close<br><span class=\"hljs-comment\">#索引存在</span><br>HEAD <span class=\"hljs-built_in\">test</span><br><span class=\"hljs-comment\"># 无法查询</span><br>POST <span class=\"hljs-built_in\">test</span>/_count<br><br><span class=\"hljs-comment\">#打开索引</span><br>POST /test/_open<br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br>POST <span class=\"hljs-built_in\">test</span>/_count<br><br><br><span class=\"hljs-comment\"># 在一个 hot-warm-cold的集群上进行测试</span><br>GET _cat/nodes<br>GET _cat/nodeattrs<br><br>DELETE my_source_index<br>DELETE my_target_index<br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\"># 分片数3，会失败</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 3,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 报错，因为没有置成 readonly</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#将 my_source_index 设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 报错，必须都在一个节点</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>DELETE my_source_index<br><span class=\"hljs-comment\">## 确保分片都在 hot</span><br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,<br>   <span class=\"hljs-string\">&quot;index.routing.allocation.include.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\">#设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br>GET _cat/shards/my_target_index<br><br><span class=\"hljs-comment\"># My target_index状态为也只读</span><br>PUT my_target_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\"># Split Index</span><br>DELETE my_source_index<br>DELETE my_target_index<br><br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\"># 必须是倍数</span><br>POST my_source_index/_split/my_target<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 10<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 必须是只读</span><br>POST my_source_index/_split/my_target<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 8<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><br>POST my_source_index/_split/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 8,<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>:0<br>  &#125;<br>&#125;<br><br>GET _cat/shards/my_target_index<br><br><br><br><span class=\"hljs-comment\"># write block</span><br>PUT my_target_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Rollover API</span><br>DELETE nginx-logs*<br><span class=\"hljs-comment\"># 不设定 is_write_true</span><br><span class=\"hljs-comment\"># 名字符合命名规范</span><br>PUT /nginx-logs-000001<br>&#123;<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;nginx_logs_write&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多次写入文档</span><br>POST nginx_logs_write/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;log&quot;</span>:<span class=\"hljs-string\">&quot;something&quot;</span><br>&#125;<br><br><br>POST /nginx_logs_write/_rollover<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>:   <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>:  5,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>:  <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br><br>GET /nginx_logs_write/_count<br><span class=\"hljs-comment\"># 查看 Alias信息</span><br>GET /nginx_logs_write<br><br><br>DELETE apache-logs*<br><br><br><span class=\"hljs-comment\"># 设置 is_write_index</span><br>PUT apache-logs1<br>&#123;<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;apache_logs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;is_write_index&quot;</span>:<span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br>POST apache_logs/_count<br><br>POST apache_logs/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\"># 需要指定 target 的名字</span><br>POST /apache_logs/_rollover/apache-logs8xxxx<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>:   <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>:  1,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>:  <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 查看 Alias信息</span><br>GET /apache_logs<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"11-2-索引全生命周期管理及工具介绍-md\"><a href=\"#11-2-索引全生命周期管理及工具介绍-md\" class=\"headerlink\" title=\"11.2-索引全生命周期管理及工具介绍.md\"></a>11.2-索引全生命周期管理及工具介绍.md</h1><h1 id=\"索引全生命周期管理及工具介绍\"><a href=\"#索引全生命周期管理及工具介绍\" class=\"headerlink\" title=\"索引全生命周期管理及工具介绍\"></a>索引全生命周期管理及工具介绍</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\"># 运行三个节点，分片 将box_type设置成 hot，warm和cold</span><br><span class=\"hljs-comment\"># 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件</span><br><br><br><br>DELETE *<br><br><br><br><span class=\"hljs-comment\"># 设置 1秒刷新1次，生产环境10分种刷新一次</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.lifecycle.poll_interval&quot;</span>:<span class=\"hljs-string\">&quot;1s&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 设置 Policy</span><br>PUT /_ilm/policy/log_ilm_policy<br>&#123;<br>  <span class=\"hljs-string\">&quot;policy&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;phases&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;hot&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;rollover&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;max_docs&quot;</span>: 5<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;warm&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span>: <span class=\"hljs-string\">&quot;warm&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;cold&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;15s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span>: <span class=\"hljs-string\">&quot;cold&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;delete&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;20s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;delete&quot;</span>: &#123;&#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 设置索引模版</span><br>PUT /_template/log_ilm_template<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span> : [<br>      <span class=\"hljs-string\">&quot;ilm_index-*&quot;</span><br>    ],<br>    <span class=\"hljs-string\">&quot;settings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;lifecycle&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;log_ilm_policy&quot;</span>,<br>          <span class=\"hljs-string\">&quot;rollover_alias&quot;</span> : <span class=\"hljs-string\">&quot;ilm_alias&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;routing&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;allocation&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span> : <span class=\"hljs-string\">&quot;hot&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;number_of_shards&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<br>        <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span> : <span class=\"hljs-string\">&quot;0&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123; &#125;,<br>    <span class=\"hljs-string\">&quot;aliases&quot;</span> : &#123; &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#创建索引</span><br>PUT ilm_index-000001<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.lifecycle.name&quot;</span>: <span class=\"hljs-string\">&quot;log_ilm_policy&quot;</span>,<br>    <span class=\"hljs-string\">&quot;index.lifecycle.rollover_alias&quot;</span>: <span class=\"hljs-string\">&quot;ilm_alias&quot;</span>,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.include.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;ilm_alias&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;is_write_index&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 对 Alias写入文档</span><br>POST  ilm_alias/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;dfd&quot;</span>:<span class=\"hljs-string\">&quot;dfdsf&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"12-1-Logstash入门及架构介绍-md\"><a href=\"#12-1-Logstash入门及架构介绍-md\" class=\"headerlink\" title=\"12.1-Logstash入门及架构介绍.md\"></a>12.1-Logstash入门及架构介绍.md</h1><h1 id=\"Logstash-入门及架构介绍\"><a href=\"#Logstash-入门及架构介绍\" class=\"headerlink\" title=\"Logstash 入门及架构介绍\"></a>Logstash 入门及架构介绍</h1><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\"><br><br># 一个 Demo， demo 运行<br>sudo bin/logstash -f logstash-<span class=\"hljs-keyword\">filter</span>.conf<br><br># demo数据<br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> - - [<span class=\"hljs-number\">11</span>/Dec/<span class=\"hljs-number\">2013</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">01</span>:<span class=\"hljs-number\">45</span> <span class=\"hljs-number\">-0800</span>] <span class=\"hljs-string\">&quot;GET /xampp/status.php HTTP/1.1&quot;</span> <span class=\"hljs-number\">200</span> <span class=\"hljs-number\">3891</span> <span class=\"hljs-string\">&quot;http://cadenza/xampp/navi.php&quot;</span> <span class=\"hljs-string\">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0&quot;</span><br><br><br># codec demo<br><br><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;line&#125;&#125;output&#123;stdout&#123;codec=&gt; rubydebug&#125;&#125;&quot;</span><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;json&#125;&#125;output&#123;stdout&#123;codec=&gt; rubydebug&#125;&#125;&quot;</span><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;line&#125;&#125;output&#123;stdout&#123;codec=&gt; dots&#125;&#125;&quot;</span><br><br><br>sudo bin/logstash -f multiline-exception.conf<br><br># 多行数据，异常<br>Exception in thread <span class=\"hljs-string\">&quot;main&quot;</span> java.lang.NullPointerException<br>        at com.example.myproject.Book.getTitle(Book.java:<span class=\"hljs-number\">16</span>)<br>        at com.example.myproject.Author.getBookTitles(Author.java:<span class=\"hljs-number\">25</span>)<br>        at com.example.myproject.Bootstrap.main(Bootstrap.java:<span class=\"hljs-number\">14</span>)<br><br><br><br># 一个实例<br><span class=\"hljs-symbol\">https:</span>//github.com/onebirdrocks/geektime-ELK/blob/master/part<span class=\"hljs-number\">-1</span>/<span class=\"hljs-number\">2.4</span>-Logstash<span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%AE</span><span class=\"hljs-variable\">%89</span><span class=\"hljs-variable\">%E8</span><span class=\"hljs-variable\">%A3</span><span class=\"hljs-variable\">%85</span><span class=\"hljs-variable\">%E4</span><span class=\"hljs-variable\">%B8</span><span class=\"hljs-variable\">%8</span>E<span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%AF</span><span class=\"hljs-variable\">%BC</span><span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%85</span><span class=\"hljs-variable\">%A5</span><span class=\"hljs-variable\">%E6</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%B0</span><span class=\"hljs-variable\">%E6</span><span class=\"hljs-variable\">%8</span>D<span class=\"hljs-variable\">%AE</span>/movielens/logstash.conf<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"12-2-利用JDBC插件导入数据到Elasticsearch-md\"><a href=\"#12-2-利用JDBC插件导入数据到Elasticsearch-md\" class=\"headerlink\" title=\"12.2-利用JDBC插件导入数据到Elasticsearch.md\"></a>12.2-利用JDBC插件导入数据到Elasticsearch.md</h1><h1 id=\"Logstash插件及文档介绍\"><a href=\"#Logstash插件及文档介绍\" class=\"headerlink\" title=\"Logstash插件及文档介绍\"></a>Logstash插件及文档介绍</h1><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">https://spring.io/guides/gs/accessing-data-mysql/<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> db_example;<br>use db_example;<br><span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">tables</span>;<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">user</span>;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span>;<br><br><br><br># 新增用户<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ<br><br>#查看所有的用户<br>curl <span class=\"hljs-string\">&#x27;localhost:8080/demo/all&#x27;</span><br><br># 更新用户<br>curl -X PUT localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">update</span> -d id=<span class=\"hljs-number\">16</span> -d <span class=\"hljs-type\">name</span>=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ<br><br># 删除用户<br>curl -X <span class=\"hljs-keyword\">DELETE</span> localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">delete</span> -d id=<span class=\"hljs-number\">15</span><br><br><br><br>mysql-demo.conf<br><br># 创建 <span class=\"hljs-keyword\">alias</span>，只显示没有被标记 deleted的用户<br>POST /_aliases<br>&#123;<br>  &quot;actions&quot;: [<br>    &#123;<br>      &quot;add&quot;: &#123;<br>        &quot;index&quot;: &quot;users&quot;,<br>        &quot;alias&quot;: &quot;view_users&quot;,<br>         &quot;filter&quot; : &#123; &quot;term&quot; : &#123; &quot;is_deleted&quot; : <span class=\"hljs-keyword\">false</span> &#125; &#125;<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br># 通过 <span class=\"hljs-keyword\">Alias</span>查询，查不到被标记成 deleted的用户<br>POST view_users/_search<br>&#123;<br><br>&#125;<br><br><br>POST view_users/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;name.keyword&quot;: &#123;<br>        &quot;value&quot;: &quot;Jack&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST users/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;name.keyword&quot;: &#123;<br>        &quot;value&quot;: &quot;Jack&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"12-3-Beats介绍-md\"><a href=\"#12-3-Beats介绍-md\" class=\"headerlink\" title=\"12.3-Beats介绍.md\"></a>12.3-Beats介绍.md</h1><h1 id=\"Beats介绍\"><a href=\"#Beats介绍\" class=\"headerlink\" title=\"Beats介绍\"></a>Beats介绍</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><br><span class=\"hljs-comment\">##</span><br><span class=\"hljs-comment\"># 查看 packetbeat 模块</span><br><span class=\"hljs-comment\"># 设置 packetbeat 的mysql 模块</span><br><span class=\"hljs-comment\"># 启动运行</span><br><span class=\"hljs-comment\">#</span><br>./metricbeat modules list<br>./metricbeat modules <span class=\"hljs-built_in\">enable</span> mysql<br>./metricbeat setup --dashboards<br><br><span class=\"hljs-comment\"># 安装mysql</span><br>create database db_example<br>use db_example;<br>show tables;<br>select * <span class=\"hljs-keyword\">from</span><span class=\"hljs-built_in\"> user</span><br><span class=\"hljs-built_in\"></span><br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Mike -d <span class=\"hljs-attribute\">email</span>=mike@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Elasticsearch,IntelliJ<br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Jack -d <span class=\"hljs-attribute\">email</span>=jack@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Mysql,IntelliJ<br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Bob -d <span class=\"hljs-attribute\">email</span>=bob@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Mysql,IntelliJ<br><br>curl <span class=\"hljs-string\">&#x27;localhost:8080/demo/all&#x27;</span><br><br><br><span class=\"hljs-comment\"># 配置 packetbeat</span><br><span class=\"hljs-comment\"># 启动</span><br>修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控<br><br>sudo chown root packetbeat.yml<br>sudo ./packetbeat setup --dashboards<br>sudo ./packetbeat<br><br><br><span class=\"hljs-comment\"># 查看所有 Filebeat 模块</span><br><span class=\"hljs-comment\"># 查看所有的modules</span><br>./filebeat modules list<br><br><span class=\"hljs-comment\">#</span><br>./filebeat modules <span class=\"hljs-built_in\">enable</span> mysql<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-1-使用IndexPattern配置数据-md\"><a href=\"#13-1-使用IndexPattern配置数据-md\" class=\"headerlink\" title=\"13.1-使用IndexPattern配置数据.md\"></a>13.1-使用IndexPattern配置数据.md</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>localhost:5601/status<br><br><br><br><br>PUT /logstash-2015.05.18<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>PUT /logstash-2015.05.19<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT /logstash-2015.05.20<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># For Mac &amp; Windows</span><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/_bulk?pretty&#x27;</span> --data-binary @logs.jsonl<br><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/bank/account/_bulk?pretty&#x27;</span> --data-binary @accounts.json<br><br><br><span class=\"hljs-comment\">#For Windows</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;logs.jsonl&quot;</span><br><br><br><br>GET /_cat/indices?v<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-2-使用KibanaDiscover探索数据-md\"><a href=\"#13-2-使用KibanaDiscover探索数据-md\" class=\"headerlink\" title=\"13.2-使用KibanaDiscover探索数据.md\"></a>13.2-使用KibanaDiscover探索数据.md</h1><h1 id=\"使用Kibana-Discovery-探索数据\"><a href=\"#使用Kibana-Discovery-探索数据\" class=\"headerlink\" title=\"使用Kibana Discovery 探索数据\"></a>使用Kibana Discovery 探索数据</h1><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><br>设置时间过滤器<br>搜索你的数据<br>根据字段进行过滤<br>查看文档数据<br>查看文档上下文<br>暂时字段数据统计<br><span class=\"hljs-built_in\">Save</span> <span class=\"hljs-built_in\">Query</span><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-3-基本可视化组件介绍-md\"><a href=\"#13-3-基本可视化组件介绍-md\" class=\"headerlink\" title=\"13.3-基本可视化组件介绍.md\"></a>13.3-基本可视化组件介绍.md</h1><h1 id=\"基本可视化组件介绍\"><a href=\"#基本可视化组件介绍\" class=\"headerlink\" title=\"基本可视化组件介绍\"></a>基本可视化组件介绍</h1><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\"><br>PUT /shakespeare<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;speaker&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;play_name&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;line_id&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;speech_number&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span>&#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-meta\"># For Mac &amp; Windows</span><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/bank/account/_bulk?pretty&#x27;</span> --data-<span class=\"hljs-built_in\">binary</span> <span class=\"hljs-symbol\">@accounts</span>.json<br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/shakespeare/_bulk?pretty&#x27;</span> --data-<span class=\"hljs-built_in\">binary</span> <span class=\"hljs-symbol\">@shakespeare</span>.json<br><br><span class=\"hljs-meta\">#For Windows</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/bank/account/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;accounts.json&quot;</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/shakespeare/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;shakespeare.json&quot;</span><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-4-构建Dashboard-md\"><a href=\"#13-4-构建Dashboard-md\" class=\"headerlink\" title=\"13.4-构建Dashboard.md\"></a>13.4-构建Dashboard.md</h1><h1 id=\"构建Dashboard\"><a href=\"#构建Dashboard\" class=\"headerlink\" title=\"构建Dashboard\"></a>构建Dashboard</h1><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\"><span class=\"hljs-bullet\">- </span>创建仪表潘<br><span class=\"hljs-bullet\">- </span>加载仪表盘<br><span class=\"hljs-bullet\">- </span>共享仪表盘<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"14-3用机器学习实现时序数据的异常检测-上-md\"><a href=\"#14-3用机器学习实现时序数据的异常检测-上-md\" class=\"headerlink\" title=\"14.3用机器学习实现时序数据的异常检测-上.md\"></a>14.3用机器学习实现时序数据的异常检测-上.md</h1><p>mkdir server_metrics<br>cd server_metrics<br>wget <a href=\"https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\">https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz</a><br>tar -xvf server_metrics.tar.gz</p>\n<h1 id=\"14-5-用ELK进行日志管理-md\"><a href=\"#14-5-用ELK进行日志管理-md\" class=\"headerlink\" title=\"14.5-用ELK进行日志管理.md\"></a>14.5-用ELK进行日志管理.md</h1><h1 id=\"用-ELK-来做日志管理\"><a href=\"#用-ELK-来做日志管理\" class=\"headerlink\" title=\"用 ELK 来做日志管理\"></a>用 ELK 来做日志管理</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./filebeat modules list<br>./filebeat modules <span class=\"hljs-built_in\">enable</span> system<br>./filebeat modules <span class=\"hljs-built_in\">enable</span> elasticsearch<br><br><br><span class=\"hljs-comment\">## 进 modules.d 编辑相应的文件，修改log路径</span><br><br>./filebeat setup –dashboards<br><br>./filebeat <span class=\"hljs-built_in\">export</span> template | more<br><br>./filebeat -e<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"14-6-用Canvas做数据演示-md\"><a href=\"#14-6-用Canvas做数据演示-md\" class=\"headerlink\" title=\"14.6-用Canvas做数据演示.md\"></a>14.6-用Canvas做数据演示.md</h1><p>POST elasticoffee&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “by”: {<br>      “terms”: {<br>        “field”: “beverage.keyword”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"4-1-基于词项和基于全文的搜索-md\"><a href=\"#4-1-基于词项和基于全文的搜索-md\" class=\"headerlink\" title=\"4.1-基于词项和基于全文的搜索.md\"></a>4.1-基于词项和基于全文的搜索.md</h1><h1 id=\"基于词项和基于全文的搜索\"><a href=\"#基于词项和基于全文的搜索\" class=\"headerlink\" title=\"基于词项和基于全文的搜索\"></a>基于词项和基于全文的搜索</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE products<br>PUT products<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1<br>  &#125;<br>&#125;<br><br><br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;iPhone&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;MBP&quot;</span> &#125;<br><br>GET /products<br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;desc&quot;</span>: &#123;<br>        //<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;iPhone&quot;</span><br>        <span class=\"hljs-string\">&quot;value&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;desc.keyword&quot;</span>: &#123;<br>        //<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;iPhone&quot;</span><br>        //<span class=\"hljs-string\">&quot;value&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /products/_search<br>&#123;<br>  //<span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>        &#125;<br>      &#125;<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#设置 position_increment_gap</span><br>DELETE <span class=\"hljs-built_in\">groups</span><br>PUT <span class=\"hljs-built_in\">groups</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;position_increment_gap&quot;</span>: 0<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>GET <span class=\"hljs-built_in\">groups</span>/_mapping<br><br>POST <span class=\"hljs-built_in\">groups</span>/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;names&quot;</span>: [ <span class=\"hljs-string\">&quot;John Water&quot;</span>, <span class=\"hljs-string\">&quot;Water Smith&quot;</span>]<br>&#125;<br><br>POST <span class=\"hljs-built_in\">groups</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Water Water&quot;</span>,<br>        <span class=\"hljs-string\">&quot;slop&quot;</span>: 100<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-built_in\">groups</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>: <span class=\"hljs-string\">&quot;Water Smith&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-10-综合排序：Function-Score-Query-优化算分-md\"><a href=\"#4-10-综合排序：Function-Score-Query-优化算分-md\" class=\"headerlink\" title=\"4.10-综合排序：Function Score Query 优化算分.md\"></a>4.10-综合排序：Function Score Query 优化算分.md</h1><h1 id=\"综合排序：Function-Score-Query-优化算分\"><a href=\"#综合排序：Function-Score-Query-优化算分\" class=\"headerlink\" title=\"综合排序：Function Score Query 优化算分\"></a>综合排序：Function Score Query 优化算分</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\">DELETE blogs<br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">1</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">0</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">2</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">100</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">3</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">1000000</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span> ,<br>        <span class=\"hljs-string\">&quot;factor&quot;</span>: <span class=\"hljs-number\">0.1</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span> ,<br>        <span class=\"hljs-string\">&quot;factor&quot;</span>: <span class=\"hljs-number\">0.1</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;boost_mode&quot;</span>: <span class=\"hljs-string\">&quot;sum&quot;</span>,<br>      <span class=\"hljs-string\">&quot;max_boost&quot;</span>: <span class=\"hljs-number\">3</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;random_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;seed&quot;</span>: <span class=\"hljs-number\">911119</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-12-自动补全与基于上下文的提示-md\"><a href=\"#4-12-自动补全与基于上下文的提示-md\" class=\"headerlink\" title=\"4.12-自动补全与基于上下文的提示.md\"></a>4.12-自动补全与基于上下文的提示.md</h1><h1 id=\"自动补全与基于上下文的提示\"><a href=\"#自动补全与基于上下文的提示\" class=\"headerlink\" title=\"自动补全与基于上下文的提示\"></a>自动补全与基于上下文的提示</h1><figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fsharp\">DELETE articles<br>PUT <span class=\"hljs-keyword\">articles</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;completion&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST articles<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_bulk</span><br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;lucene is very cool&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elasticsearch builds on top of lucene&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elasticsearch rocks&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;elastic is the company behind ELK stack&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elk stack rocks&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123;&#125; &#125;<br><br><br>POST articles<span class=\"hljs-operator\">/</span>_search<span class=\"hljs-operator\">?</span><span class=\"hljs-keyword\">pretty</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span><span class=\"hljs-operator\">:</span> 0,<br>  <span class=\"hljs-string\">&quot;suggest&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;article-suggester&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;prefix&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;elk &quot;</span>,<br>      <span class=\"hljs-string\">&quot;completion&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;title_completion&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE comments<br>PUT comments<br>PUT comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_mapping</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;completion&quot;</span>,<br>      <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>[&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;category&quot;</span>,<br>        <span class=\"hljs-string\">&quot;name&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;comment_category&quot;</span><br>      &#125;]<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_doc</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;I love the star war movies&quot;</span>,<br>  <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>    <span class=\"hljs-string\">&quot;input&quot;</span><span class=\"hljs-operator\">:</span>[<span class=\"hljs-string\">&quot;star wars&quot;</span>],<br>    <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;movies&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_doc</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;Where can I find a Starbucks&quot;</span>,<br>  <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>    <span class=\"hljs-string\">&quot;input&quot;</span><span class=\"hljs-operator\">:</span>[<span class=\"hljs-string\">&quot;starbucks&quot;</span>],<br>    <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;coffee&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;suggest&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;MY_SUGGESTION&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;prefix&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;sta&quot;</span>,<br>      <span class=\"hljs-string\">&quot;completion&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span>,<br>        <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>          <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;coffee&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-13-跨集群搜索-md\"><a href=\"#4-13-跨集群搜索-md\" class=\"headerlink\" title=\"4.13-跨集群搜索.md\"></a>4.13-跨集群搜索.md</h1><h1 id=\"跨集群搜索\"><a href=\"#跨集群搜索\" class=\"headerlink\" title=\"跨集群搜索\"></a>跨集群搜索</h1><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">//启动<span class=\"hljs-number\">3</span>个集群<br><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster0node -E cluster.<span class=\"hljs-attr\">name=</span>cluster0 -E path.<span class=\"hljs-attr\">data=</span>cluster0_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9200</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9300</span><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster1node -E cluster.<span class=\"hljs-attr\">name=</span>cluster1 -E path.<span class=\"hljs-attr\">data=</span>cluster1_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9201</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9301</span><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster2node -E cluster.<span class=\"hljs-attr\">name=</span>cluster2 -E path.<span class=\"hljs-attr\">data=</span>cluster2_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9202</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9302</span><br><br><br>//在每个集群上设置动态的设置<br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;remote&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;cluster0&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span><br>          ],<br>          <span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cluster1&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span><br>          ],<br>          <span class=\"hljs-string\">&quot;transport.compress&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cluster2&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#cURL</span><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9200/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9201/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9202/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br><br><span class=\"hljs-comment\">#创建测试数据</span><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9200/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">10</span>&#125;&#x27;<br><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9201/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">20</span>&#125;&#x27;<br><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9202/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user3&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">30</span>&#125;&#x27;<br><br><br><span class=\"hljs-comment\">#查询</span><br>GET /users,cluster1:users,cluster2:users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">20</span>,<br>        <span class=\"hljs-string\">&quot;lte&quot;</span>: <span class=\"hljs-number\">40</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-2-结构化搜索-md\"><a href=\"#4-2-结构化搜索-md\" class=\"headerlink\" title=\"4.2-结构化搜索.md\"></a>4.2-结构化搜索.md</h1><h1 id=\"结构化搜索\"><a href=\"#结构化搜索\" class=\"headerlink\" title=\"结构化搜索\"></a>结构化搜索</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\">#结构化搜索，精确匹配</span><br>DELETE products<br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br>GET products/_mapping<br><br><br><br><span class=\"hljs-comment\">#对布尔值 match 查询，有算分</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#对布尔值，通过constant score 转成 filtering，没有算分</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#数字类型 Term</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: 30<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#数字类型 terms</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;20&quot;</span>,<br>            <span class=\"hljs-string\">&quot;30&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#数字 Range 查询</span><br>GET products/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;constant_score&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;price&quot;</span> : &#123;<br>                        <span class=\"hljs-string\">&quot;gte&quot;</span> : 20,<br>                        <span class=\"hljs-string\">&quot;lte&quot;</span>  : 30<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 日期 range</span><br>POST products/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;constant_score&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;date&quot;</span> : &#123;<br>                      <span class=\"hljs-string\">&quot;gte&quot;</span> : <span class=\"hljs-string\">&quot;now-1y&quot;</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#exists查询</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;exists&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#处理多值字段</span><br>POST /movies/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Father of the Bridge Part II&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1995, <span class=\"hljs-string\">&quot;genre&quot;</span>:<span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Dave&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1993,<span class=\"hljs-string\">&quot;genre&quot;</span>:[<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;Romance&quot;</span>] &#125;<br><br><br><span class=\"hljs-comment\">#处理多值字段，term 查询是包含，而不是等于</span><br>POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#字符类型 terms</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span>,<br>            <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: 30<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;date&quot;</span>: <span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;date&quot;</span>: <span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#对布尔数值</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avaliable&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;20&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: <span class=\"hljs-string\">&quot;20&quot;</span><br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;exists&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-3-搜索的相关性算分-md\"><a href=\"#4-3-搜索的相关性算分-md\" class=\"headerlink\" title=\"4.3-搜索的相关性算分.md\"></a>4.3-搜索的相关性算分.md</h1><h1 id=\"搜索的相关性算分\"><a href=\"#搜索的相关性算分\" class=\"headerlink\" title=\"搜索的相关性算分\"></a>搜索的相关性算分</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><br><br>PUT testscore<br>&#123;<br>  &quot;settings&quot;: &#123;<br>    &quot;number_of_shards&quot;: <span class=\"hljs-number\">1</span><br>  &#125;,<br>  &quot;mappings&quot;: &#123;<br>    &quot;properties&quot;: &#123;<br>      &quot;<span class=\"hljs-attribute\">content</span>&quot;: &#123;<br>        &quot;type&quot;: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT testscore/_bulk<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">1</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;we use Elasticsearch to power the search&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">2</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;we like elasticsearch&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">3</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;The scoring of documents is caculated by the scoring formula&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">4</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;you know, for search&quot;</span> &#125;<br><br><br><br>POST /testscore/_search<br>&#123;<br>  //&quot;explain&quot;: true,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    &quot;match&quot;: &#123;<br>      &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;you&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;the&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;the elasticsearch&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST testscore/_search<br>&#123;<br>    &quot;query&quot;: &#123;<br>        &quot;boosting&quot; : &#123;<br>            &quot;positive&quot; : &#123;<br>                &quot;term&quot; : &#123;<br>                    &quot;<span class=\"hljs-attribute\">content</span>&quot; : <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>                &#125;<br>            &#125;,<br>            &quot;negative&quot; : &#123;<br>                 &quot;term&quot; : &#123;<br>                     &quot;<span class=\"hljs-attribute\">content</span>&quot; : <span class=\"hljs-string\">&quot;like&quot;</span><br>                &#125;<br>            &#125;,<br>            &quot;negative_boost&quot; : <span class=\"hljs-number\">0.2</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST tmdb/_search<br>&#123;<br>  &quot;_source&quot;: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    &quot;more_like_this&quot;: &#123;<br>      &quot;fields&quot;: [<br>        <span class=\"hljs-string\">&quot;title^10&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span><br>      ],<br>      <span class=\"hljs-string\">&quot;like&quot;</span>: [&#123;&quot;_id&quot;:<span class=\"hljs-string\">&quot;14191&quot;</span>&#125;],<br>      &quot;min_term_freq&quot;: <span class=\"hljs-number\">1</span>,<br>      <span class=\"hljs-string\">&quot;max_query_terms&quot;</span>: <span class=\"hljs-number\">12</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-4-Query-Filtering实现多字符串多字段查询-md\"><a href=\"#4-4-Query-Filtering实现多字符串多字段查询-md\" class=\"headerlink\" title=\"4.4-Query&amp;Filtering实现多字符串多字段查询.md\"></a>4.4-Query&amp;Filtering实现多字符串多字段查询.md</h1><h1 id=\"Query-Filtering-与多字符串多字段查询\"><a href=\"#Query-Filtering-与多字符串多字段查询\" class=\"headerlink\" title=\"Query &amp; Filtering 与多字符串多字段查询\"></a>Query &amp; Filtering 与多字符串多字段查询</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br><br><br><span class=\"hljs-comment\">#基本语法</span><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;price&quot;</span> : <span class=\"hljs-string\">&quot;30&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span> : [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125; &#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125; &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span> :1<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题</span><br>POST /newmovies/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Father of the Bridge Part II&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1995, <span class=\"hljs-string\">&quot;genre&quot;</span>:<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;genre_count&quot;</span>:1 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Dave&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1993,<span class=\"hljs-string\">&quot;genre&quot;</span>:[<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;Romance&quot;</span>],<span class=\"hljs-string\">&quot;genre_count&quot;</span>:2 &#125;<br><br><span class=\"hljs-comment\">#must，有算分</span><br>POST /newmovies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre_count&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: 1&#125;&#125;&#125;<br><br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Filter。不参与算分，结果的score是0</span><br>POST /newmovies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre_count&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: 1&#125;&#125;&#125;<br>        ]<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Filtering Context</span><br>POST _search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br><br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Query Context</span><br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span>&#125;&#125;<br>        &#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;avaliable&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;&#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#嵌套，实现了 should not 逻辑</span><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span>: <span class=\"hljs-string\">&quot;30&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span>: 1<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Controll the Precision</span><br>POST _search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;price&quot;</span> : <span class=\"hljs-string\">&quot;30&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span> : [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125; &#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125; &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span> :2<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST /animals/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;red&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;quick&quot;</span>   &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;dog&quot;</span>   &#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /animals/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;quick&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;dog&quot;</span>   &#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;bool&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;should&quot;</span>:[<br>               &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>                 &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>            ]<br>          &#125;<br><br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE blogs<br>POST /blogs/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad,Apple iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad,Apple iPad&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span> &#125;<br><br><br>POST blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;apple,ipad&quot;</span>,<br>            <span class=\"hljs-string\">&quot;boost&quot;</span>: 1.1<br>          &#125;<br>        &#125;&#125;,<br><br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;apple,ipad&quot;</span>,<br>            <span class=\"hljs-string\">&quot;boost&quot;</span>:<br>          &#125;<br>        &#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE news<br>POST /news/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple Mac&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple employee like Apple Pie and Apple Juice&quot;</span> &#125;<br><br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;apple&quot;</span>&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;apple&quot;</span>&#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;pie&quot;</span>&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;boosting&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;positive&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;apple&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;negative&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;pie&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;negative_boost&quot;</span>: 0.5<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-5-单字符串多字段查询-DisMaxQuery-md\"><a href=\"#4-5-单字符串多字段查询-DisMaxQuery-md\" class=\"headerlink\" title=\"4.5-单字符串多字段查询-DisMaxQuery.md\"></a>4.5-单字符串多字段查询-DisMaxQuery.md</h1><h1 id=\"单字符串多字段查询：Dis-Max-Query\"><a href=\"#单字符串多字段查询：Dis-Max-Query\" class=\"headerlink\" title=\"单字符串多字段查询：Dis Max Query\"></a>单字符串多字段查询：Dis Max Query</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>PUT /blogs/_doc/1<br>&#123;<br>    <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick brown rabbits&quot;</span>,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Brown rabbits are commonly seen.&quot;</span><br>&#125;<br><br>PUT /blogs/_doc/2<br>&#123;<br>    <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Keeping pets healthy&quot;</span>,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span><br>&#125;<br><br>POST /blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Brown fox&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Brown fox&quot;</span> &#125;&#125;<br>            ]<br>        &#125;<br>    &#125;<br>&#125;<br><br>POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ]<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ],<br>            <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2<br>        &#125;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-6-单字符串多字段查询-Multi-Match-md\"><a href=\"#4-6-单字符串多字段查询-Multi-Match-md\" class=\"headerlink\" title=\"4.6-单字符串多字段查询-Multi-Match.md\"></a>4.6-单字符串多字段查询-Multi-Match.md</h1><h1 id=\"单字符串多字段查询：Multi-Match\"><a href=\"#单字符串多字段查询：Multi-Match\" class=\"headerlink\" title=\"单字符串多字段查询：Multi Match\"></a>单字符串多字段查询：Multi Match</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ],<br>            <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2<br>        &#125;<br>    &#125;<br>&#125;<br><br>POST blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;best_fields&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;body&quot;</span>],<br>      <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2,<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span>: <span class=\"hljs-string\">&quot;20%&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST books/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;Quick brown fox&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: <span class=\"hljs-string\">&quot;*_title&quot;</span><br>    &#125;<br>&#125;<br><br><br>POST books/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;Quick brown fox&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;*_title&quot;</span>, <span class=\"hljs-string\">&quot;chapter_title^2&quot;</span> ]<br>    &#125;<br>&#125;<br><br><br><br>DELETE /titles<br>PUT /titles<br>&#123;<br>    <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123; <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1 &#125;,<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;my_type&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>                        <span class=\"hljs-string\">&quot;std&quot;</span>:   &#123;<br>                            <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>                            <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span><br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br>PUT /titles<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST titles/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;My dog barks&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I see a lot of barking dogs on the road &quot;</span> &#125;<br><br><br>GET titles/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;barking dogs&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE /titles<br>PUT /titles<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<span class=\"hljs-string\">&quot;std&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>&#125;&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST titles/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;My dog barks&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I see a lot of barking dogs on the road &quot;</span> &#125;<br><br>GET /titles/_search<br>&#123;<br>   <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;barking dogs&quot;</span>,<br>            <span class=\"hljs-string\">&quot;type&quot;</span>:   <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>            <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;title.std&quot;</span> ]<br>        &#125;<br>    &#125;<br>&#125;<br><br>GET /titles/_search<br>&#123;<br>   <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;barking dogs&quot;</span>,<br>            <span class=\"hljs-string\">&quot;type&quot;</span>:   <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>            <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title^10&quot;</span>, <span class=\"hljs-string\">&quot;title.std&quot;</span> ]<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-7-多语言及中文分词与检索-md\"><a href=\"#4-7-多语言及中文分词与检索-md\" class=\"headerlink\" title=\"4.7-多语言及中文分词与检索.md\"></a>4.7-多语言及中文分词与检索.md</h1><h1 id=\"多语言及中文分词与检索\"><a href=\"#多语言及中文分词与检索\" class=\"headerlink\" title=\"多语言及中文分词与检索\"></a>多语言及中文分词与检索</h1><ul>\n<li><p>来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”</p>\n</li>\n<li><p>你也想犯范范玮琪犯过的错吗</p>\n</li>\n<li><p>校长说衣服上除了校徽别别别的</p>\n</li>\n<li><p>这几天天天天气不好</p>\n</li>\n<li><p>我背有点驼，麻麻说“你的背得背背背背佳</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#stop word</span><br><br>DELETE my_index<br>PUT /my_index/_doc/1<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m happy for this fox&quot;</span> &#125;<br><br>PUT /my_index/_doc/2<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m not happy about my fox problem&quot;</span> &#125;<br><br><br>POST my_index/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;not happy fox&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:</span><br><br>DELETE my_index<br><br>PUT /my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;blog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,<br>          <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>PUT /my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;blog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;english&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>              <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT /my_index/blog/1<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m happy for this fox&quot;</span> &#125;<br><br>PUT /my_index/blog/2<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m not happy about my fox problem&quot;</span> &#125;<br><br>GET /_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;not happy foxes&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;title.english&quot;</span> ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#安装插件</span><br>./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip<br><span class=\"hljs-comment\">#安装插件</span><br>bin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip<br><br><br><br><br><span class=\"hljs-comment\">#ik_max_word</span><br><span class=\"hljs-comment\">#ik_smart</span><br><span class=\"hljs-comment\">#hanlp: hanlp默认分词</span><br><span class=\"hljs-comment\">#hanlp_standard: 标准分词</span><br><span class=\"hljs-comment\">#hanlp_index: 索引分词</span><br><span class=\"hljs-comment\">#hanlp_nlp: NLP分词</span><br><span class=\"hljs-comment\">#hanlp_n_short: N-最短路分词</span><br><span class=\"hljs-comment\">#hanlp_dijkstra: 最短路分词</span><br><span class=\"hljs-comment\">#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）</span><br><span class=\"hljs-comment\">#hanlp_speed: 极速词典分词</span><br><br>POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;hanlp_standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜&quot;</span>]<br><br>&#125;     <br><br><span class=\"hljs-comment\">#Pinyin</span><br>PUT /artists/<br>&#123;<br>    <span class=\"hljs-string\">&quot;settings&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;analysis&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;analyzer&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;user_name_analyzer&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;tokenizer&quot;</span> : <span class=\"hljs-string\">&quot;whitespace&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;filter&quot;</span> : <span class=\"hljs-string\">&quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span><br>                &#125;<br>            &#125;,<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;pinyin&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;keep_first_letter&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_full_pinyin&quot;</span> : <span class=\"hljs-literal\">false</span>,<br>                    <span class=\"hljs-string\">&quot;keep_none_chinese&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_original&quot;</span> : <span class=\"hljs-literal\">false</span>,<br>                    <span class=\"hljs-string\">&quot;limit_first_letter_length&quot;</span> : 16,<br>                    <span class=\"hljs-string\">&quot;lowercase&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;trim_whitespace&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_none_chinese_in_first_letter&quot;</span> : <span class=\"hljs-literal\">true</span><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>GET /artists/_analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;刘德华 张学友 郭富城 黎明 四大天王&quot;</span>],<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;user_name_analyzer&quot;</span><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h2><ul>\n<li><p>Elasticsearch IK分词插件 <a href=\"https://github.com/medcl/elasticsearch-analysis-ik/releases\">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p>\n</li>\n<li><p>Elasticsearch hanlp 分词插件 <a href=\"https://github.com/KennFalcon/elasticsearch-analysis-hanlp\">https://github.com/KennFalcon/elasticsearch-analysis-hanlp</a></p>\n</li>\n<li><p>分词算法综述 <a href=\"https://zhuanlan.zhihu.com/p/50444885\">https://zhuanlan.zhihu.com/p/50444885</a></p>\n</li>\n</ul>\n<h3 id=\"一些分词工具，供参考：\"><a href=\"#一些分词工具，供参考：\" class=\"headerlink\" title=\"一些分词工具，供参考：\"></a>一些分词工具，供参考：</h3><ul>\n<li>中科院计算所NLPIR <a href=\"http://ictclas.nlpir.org/nlpir/\">http://ictclas.nlpir.org/nlpir/</a></li>\n<li>ansj分词器 <a href=\"https://github.com/NLPchina/ansj_seg\">https://github.com/NLPchina/ansj_seg</a></li>\n<li>哈工大的LTP <a href=\"https://github.com/HIT-SCIR/ltp\">https://github.com/HIT-SCIR/ltp</a></li>\n<li>清华大学THULAC <a href=\"https://github.com/thunlp/THULAC\">https://github.com/thunlp/THULAC</a></li>\n<li>斯坦福分词器 <a href=\"https://nlp.stanford.edu/software/segmenter.shtml\">https://nlp.stanford.edu/software/segmenter.shtml</a></li>\n<li>Hanlp分词器 <a href=\"https://github.com/hankcs/HanLP\">https://github.com/hankcs/HanLP</a></li>\n<li>结巴分词 <a href=\"https://github.com/yanyiwu/cppjieba\">https://github.com/yanyiwu/cppjieba</a></li>\n<li>KCWS分词器(字嵌入+Bi-LSTM+CRF) <a href=\"https://github.com/koth/kcws\">https://github.com/koth/kcws</a></li>\n<li>ZPar <a href=\"https://github.com/frcchang/zpar/releases\">https://github.com/frcchang/zpar/releases</a></li>\n<li>IKAnalyzer <a href=\"https://github.com/wks/ik-analyzer\">https://github.com/wks/ik-analyzer</a></li>\n</ul>\n<h1 id=\"4-8-SpaceJam一个全文搜索的实例-md\"><a href=\"#4-8-SpaceJam一个全文搜索的实例-md\" class=\"headerlink\" title=\"4.8-SpaceJam一个全文搜索的实例.md\"></a>4.8-SpaceJam一个全文搜索的实例.md</h1><h1 id=\"Space-Jam，一次全文搜索的实例\"><a href=\"#Space-Jam，一次全文搜索的实例\" class=\"headerlink\" title=\"Space Jam，一次全文搜索的实例\"></a>Space Jam，一次全文搜索的实例</h1><h2 id=\"环境要求\"><a href=\"#环境要求\" class=\"headerlink\" title=\"环境要求\"></a>环境要求</h2><ul>\n<li>Python 2.7.15</li>\n<li>可以使用pyenv管理多个python版本（可选）</li>\n</ul>\n<h2 id=\"进入-tmdb-search目录\"><a href=\"#进入-tmdb-search目录\" class=\"headerlink\" title=\"进入 tmdb-search目录\"></a>进入 tmdb-search目录</h2><p>Run<br>pip install -r requirements.txt<br>Run python .&#x2F;ingest_tmdb_from_file.py</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\"><span class=\"hljs-symbol\">POST</span> tmdb/<span class=\"hljs-symbol\">_search</span><br>&#123;<br><span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br> <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br> &#125;<br>&#125;<br><br><span class=\"hljs-symbol\">POST</span> tmdb/<span class=\"hljs-symbol\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;basketball with cartoon aliens&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>]<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;highlight&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;overview&quot;</span> : &#123; <span class=\"hljs-string\">&quot;pre_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0;32;40m&quot;</span>], <span class=\"hljs-string\">&quot;post_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0m&quot;</span>] &#125;,<br>            <span class=\"hljs-string\">&quot;title&quot;</span> : &#123; <span class=\"hljs-string\">&quot;pre_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0;32;40m&quot;</span>], <span class=\"hljs-string\">&quot;post_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0m&quot;</span>] &#125;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"相关\"><a href=\"#相关\" class=\"headerlink\" title=\"相关\"></a>相关</h2><ul>\n<li>Windows 安装 pyenv <a href=\"https://github.com/pyenv-win/pyenv-win\">https://github.com/pyenv-win/pyenv-win</a></li>\n<li>Mac 安装pyenv <a href=\"https://segmentfault.com/a/1190000017403221\">https://segmentfault.com/a/1190000017403221</a></li>\n<li>Linux 安装 pyenv <a href=\"https://blog.csdn.net/GX_1_11_real/article/details/80237064\">https://blog.csdn.net/GX_1_11_real/article/details/80237064</a></li>\n<li>Python.org <a href=\"https://www.python.org/\">https://www.python.org/</a></li>\n</ul>\n<h1 id=\"4-9-使用SearchTemplate和IndexAlias进行查询-md\"><a href=\"#4-9-使用SearchTemplate和IndexAlias进行查询-md\" class=\"headerlink\" title=\"4.9-使用SearchTemplate和IndexAlias进行查询.md\"></a>4.9-使用SearchTemplate和IndexAlias进行查询.md</h1><h1 id=\"使用-Search-Template-和-Index-Alias-查询\"><a href=\"#使用-Search-Template-和-Index-Alias-查询\" class=\"headerlink\" title=\"使用 Search Template 和 Index Alias 查询\"></a>使用 Search Template 和 Index Alias 查询</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">POST <span class=\"hljs-variable\">_scripts</span>/tmdb<br>&#123;<br>  <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;lang&quot;</span>: <span class=\"hljs-string\">&quot;mustache&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;_source&quot;</span>: [<br>        <span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span><br>      ],<br>      <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">20</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;&#123;&#123;q&#125;&#125;&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br>DELETE <span class=\"hljs-variable\">_scripts</span>/tmdb<br><br><span class=\"hljs-built_in\">GET</span> <span class=\"hljs-variable\">_scripts</span>/tmdb<br><br>POST tmdb/<span class=\"hljs-variable\">_search</span>/template<br>&#123;<br>    <span class=\"hljs-string\">&quot;id&quot;</span>:<span class=\"hljs-string\">&quot;tmdb&quot;</span>,<br>    <span class=\"hljs-string\">&quot;params&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;q&quot;</span>: <span class=\"hljs-string\">&quot;basketball with cartoon aliens&quot;</span><br>    &#125;<br>&#125;<br><br><br>PUT movies-<span class=\"hljs-number\">2019</span>/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">1</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;the matrix&quot;</span>,<br>  <span class=\"hljs-string\">&quot;rating&quot;</span>:<span class=\"hljs-number\">5</span><br>&#125;<br><br>PUT movies-<span class=\"hljs-number\">2019</span>/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">2</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;rating&quot;</span>:<span class=\"hljs-number\">3</span><br>&#125;<br><br>POST <span class=\"hljs-variable\">_aliases</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;movies-2019&quot;</span>,<br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;movies-latest&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br>POST movies-latest/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-variable\">_aliases</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;movies-2019&quot;</span>,<br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;movies-lastest-highrate&quot;</span>,<br>        <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">4</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br>POST movies-lastest-highrate/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-1-集群分布式模型及选主与脑裂问题-md\"><a href=\"#5-1-集群分布式模型及选主与脑裂问题-md\" class=\"headerlink\" title=\"5.1-集群分布式模型及选主与脑裂问题.md\"></a>5.1-集群分布式模型及选主与脑裂问题.md</h1><h1 id=\"集群分布式模型及选主与脑裂问题\"><a href=\"#集群分布式模型及选主与脑裂问题\" class=\"headerlink\" title=\"集群分布式模型及选主与脑裂问题\"></a>集群分布式模型及选主与脑裂问题</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data<br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data<br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node3 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node3_data<br><br></code></pre></td></tr></table></figure>\n<h1 id=\"5-2-分片与集群的故障转移-md\"><a href=\"#5-2-分片与集群的故障转移-md\" class=\"headerlink\" title=\"5.2-分片与集群的故障转移.md\"></a>5.2-分片与集群的故障转移.md</h1><h1 id=\"分片与集群的故障转移\"><a href=\"#分片与集群的故障转移\" class=\"headerlink\" title=\"分片与集群的故障转移\"></a>分片与集群的故障转移</h1><h1 id=\"5-3-文档分布式存储-md\"><a href=\"#5-3-文档分布式存储-md\" class=\"headerlink\" title=\"5.3-文档分布式存储.md\"></a>5.3-文档分布式存储.md</h1><h1 id=\"文档分布式存储\"><a href=\"#文档分布式存储\" class=\"headerlink\" title=\"文档分布式存储\"></a>文档分布式存储</h1><h1 id=\"5-4-分片及其生命周期-md\"><a href=\"#5-4-分片及其生命周期-md\" class=\"headerlink\" title=\"5.4-分片及其生命周期.md\"></a>5.4-分片及其生命周期.md</h1><h1 id=\"分片及其生命周期\"><a href=\"#分片及其生命周期\" class=\"headerlink\" title=\"分片及其生命周期\"></a>分片及其生命周期</h1><h1 id=\"5-5-剖析分布式查询及相关性评分-md\"><a href=\"#5-5-剖析分布式查询及相关性评分-md\" class=\"headerlink\" title=\"5.5-剖析分布式查询及相关性评分.md\"></a>5.5-剖析分布式查询及相关性评分.md</h1><h1 id=\"剖析分布式查询及相关性评分\"><a href=\"#剖析分布式查询及相关性评分\" class=\"headerlink\" title=\"剖析分布式查询及相关性评分\"></a>剖析分布式查询及相关性评分</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">DELETE message<br>PUT message<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 20<br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> message<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good&quot;</span><br>&#125;<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=2<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good morning&quot;</span><br>&#125;<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=3<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good morning everyone&quot;</span><br>&#125;<br><br>POST message/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br>POST message/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;good&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST message/_search?<span class=\"hljs-attribute\">search_type</span>=dfs_query_then_fetch<br>&#123;<br><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;good&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-6-排序及DocValues-Fielddata-md\"><a href=\"#5-6-排序及DocValues-Fielddata-md\" class=\"headerlink\" title=\"5.6-排序及DocValues&amp;Fielddata.md\"></a>5.6-排序及DocValues&amp;Fielddata.md</h1><h1 id=\"排序及Doc-Values-Fielddata\"><a href=\"#排序及Doc-Values-Fielddata\" class=\"headerlink\" title=\"排序及Doc Values &amp; Fielddata\"></a>排序及Doc Values &amp; Fielddata</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#单字段排序</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br><span class=\"hljs-comment\">#多字段排序</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;,<br>    &#123;<span class=\"hljs-string\">&quot;_doc&quot;</span>:&#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;&#125;,<br>    &#123;<span class=\"hljs-string\">&quot;_score&quot;</span>:&#123; <span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br>GET kibana_sample_data_ecommerce/_mapping<br><br><span class=\"hljs-comment\">#对 text 字段进行排序。默认会报错，需打开fielddata</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;customer_full_name&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br><span class=\"hljs-comment\">#打开 text的 fielddata</span><br>PUT kibana_sample_data_ecommerce/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;customer_full_name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 256<br>            &#125;<br>          &#125;<br>        &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#关闭 keyword的 doc values</span><br>PUT test_keyword<br>PUT test_keyword/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;user_name&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>      <span class=\"hljs-string\">&quot;doc_values&quot;</span>:<span class=\"hljs-literal\">false</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE test_keyword<br><br>PUT test_text<br>PUT test_text/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;intro&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>      <span class=\"hljs-string\">&quot;doc_values&quot;</span>:<span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE test_text<br><br><br>DELETE temp_users<br>PUT temp_users<br>PUT temp_users/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>    <span class=\"hljs-string\">&quot;desc&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;<br>  &#125;<br>&#125;<br><br>Post temp_users/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;Jack is a good boy!&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br><span class=\"hljs-comment\">#打开fielddata 后，查看 docvalue_fields数据</span><br>POST  temp_users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;docvalue_fields&quot;</span>: [<br>    <span class=\"hljs-string\">&quot;name&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span><br>    ]<br>&#125;<br><br><span class=\"hljs-comment\">#查看整型字段的docvalues</span><br>POST  temp_users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;docvalue_fields&quot;</span>: [<br>    <span class=\"hljs-string\">&quot;age&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-7-分页与遍历-FromSize-SearchAfter-ScrollAPI-md\"><a href=\"#5-7-分页与遍历-FromSize-SearchAfter-ScrollAPI-md\" class=\"headerlink\" title=\"5.7-分页与遍历-FromSize&amp;SearchAfter&amp;ScrollAPI.md\"></a>5.7-分页与遍历-FromSize&amp;SearchAfter&amp;ScrollAPI.md</h1><h1 id=\"分页与遍历-From-Size-Search-after-Scroll-API\"><a href=\"#分页与遍历-From-Size-Search-after-Scroll-API\" class=\"headerlink\" title=\"分页与遍历 - From, Size, Search_after &amp; Scroll API\"></a>分页与遍历 - From, Size, Search_after &amp; Scroll API</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>POST tmdb/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;from&quot;</span>: 10000,<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Scroll API</span><br>DELETE <span class=\"hljs-built_in\">users</span><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:11&#125;<br><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:12&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:13&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_count<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;age&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125; ,<br>        &#123;<span class=\"hljs-string\">&quot;_id&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;    <br>    ]<br>&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;search_after&quot;</span>:<br>        [<br>          10,<br>          <span class=\"hljs-string\">&quot;ZQ0vYGsBrR8X3IP75QqX&quot;</span>],<br>    <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;age&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125; ,<br>        &#123;<span class=\"hljs-string\">&quot;_id&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;    <br>    ]<br>&#125;<br><br><br><span class=\"hljs-comment\">#Scroll API</span><br>DELETE <span class=\"hljs-built_in\">users</span><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user3&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user4&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:40&#125;<br><br>POST /users/_search?scroll=5m<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user5&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:50&#125;<br>POST /_search/scroll<br>&#123;<br>    <span class=\"hljs-string\">&quot;scroll&quot;</span> : <span class=\"hljs-string\">&quot;1m&quot;</span>,<br>    <span class=\"hljs-string\">&quot;scroll_id&quot;</span> : <span class=\"hljs-string\">&quot;DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==&quot;</span><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-8-处理并发读写-md\"><a href=\"#5-8-处理并发读写-md\" class=\"headerlink\" title=\"5.8-处理并发读写.md\"></a>5.8-处理并发读写.md</h1><h1 id=\"处理并发读写操作\"><a href=\"#处理并发读写操作\" class=\"headerlink\" title=\"处理并发读写操作\"></a>处理并发读写操作</h1><figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"><br><span class=\"hljs-keyword\">DELETE</span> products<br><span class=\"hljs-keyword\">PUT</span> products<br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br>GET products/_doc/1<br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1?if_seq_no=1<span class=\"hljs-variable\">&amp;if_primary_term</span>=1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1?version=30000<span class=\"hljs-variable\">&amp;version_type</span>=external<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"6-1-Bucket-Metric聚合分析及嵌套聚合-md\"><a href=\"#6-1-Bucket-Metric聚合分析及嵌套聚合-md\" class=\"headerlink\" title=\"6.1-Bucket&amp;Metric聚合分析及嵌套聚合.md\"></a>6.1-Bucket&amp;Metric聚合分析及嵌套聚合.md</h1><h1 id=\"Bucket-Metric-Aggregation\"><a href=\"#Bucket-Metric-Aggregation\" class=\"headerlink\" title=\"Bucket &amp; Metric Aggregation\"></a>Bucket &amp; Metric Aggregation</h1><h2 id=\"demos\"><a href=\"#demos\" class=\"headerlink\" title=\"demos\"></a>demos</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /employees<br>PUT /employees/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;age&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;gender&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;job&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 50<br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;salary&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><span class=\"hljs-comment\"># Metric 聚合，找到最低的工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;min_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Metric 聚合，找到最高的工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多个 Metric 聚合，找到最低最高和平均工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;min_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 一个聚合，输出多值</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;stats_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br><span class=\"hljs-comment\"># 对keword 进行聚合</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 Text 字段进行 terms 聚合查询，失败</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 对 Text 字段打开 fielddata，支持terms aggregation</span><br>PUT employees/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>    <span class=\"hljs-string\">&quot;job&quot;</span>:&#123;<br>       <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;text&quot;</span>,<br>       <span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 Text 字段进行 terms 分词。分词后的terms</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cardinate&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cardinality&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 性别的 keyword 进行聚合</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;gender&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;gender&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#指定 bucket 的 size</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;ages_5&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:3<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 指定size，不同工种中，年纪最大的3个员工的具体信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;old_employee&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;top_hits&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;size&quot;</span>:3,<br>            <span class=\"hljs-string\">&quot;sort&quot;</span>:[<br>              &#123;<br>                <span class=\"hljs-string\">&quot;age&quot;</span>:&#123;<br>                  <span class=\"hljs-string\">&quot;order&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>                &#125;<br>              &#125;<br>            ]<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Salary Ranges 分桶，可以自己定义 key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;salary_range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span>,<br>        <span class=\"hljs-string\">&quot;ranges&quot;</span>:[<br>          &#123;<br>            <span class=\"hljs-string\">&quot;to&quot;</span>:10000<br>          &#125;,<br>          &#123;<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:10000,<br>            <span class=\"hljs-string\">&quot;to&quot;</span>:20000<br>          &#125;,<br>          &#123;<br>            <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;&gt;20000&quot;</span>,<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:20000<br>          &#125;<br>        ]<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Salary Histogram,工资0到10万，以 5000一个区间进行分桶</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;salary_histrogram&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span>,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>:5000,<br>        <span class=\"hljs-string\">&quot;extended_bounds&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;min&quot;</span>:0,<br>          <span class=\"hljs-string\">&quot;max&quot;</span>:100000<br><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 嵌套聚合1，按照工作类型分桶，并统计工资信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;Job_salary_stats&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;Job_gender_stats&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gender_stats&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;gender&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;salary_stats&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"6-2-Pipeline聚合分析-md\"><a href=\"#6-2-Pipeline聚合分析-md\" class=\"headerlink\" title=\"6.2-Pipeline聚合分析.md\"></a>6.2-Pipeline聚合分析.md</h1><h1 id=\"Pipeline-聚合分析\"><a href=\"#Pipeline-聚合分析\" class=\"headerlink\" title=\"Pipeline 聚合分析\"></a>Pipeline 聚合分析</h1><h2 id=\"课程-demo\"><a href=\"#课程-demo\" class=\"headerlink\" title=\"课程 demo\"></a>课程 demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE employees<br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><br><br><span class=\"hljs-comment\"># 平均工资最低的工作类型</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;min_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;min_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资最高的工作类型</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;max_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;max_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的平均工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;avg_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;avg_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的统计分析</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;stats_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;stats_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的百分位数</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;percentiles_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;percentiles_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#按照年龄对平均工资求导</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;derivative_avg_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;derivative&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Cumulative_sum</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cumulative_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;cumulative_sum&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Moving Function</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;moving_avg_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;moving_fn&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span>,<br>            <span class=\"hljs-string\">&quot;window&quot;</span>:10,<br>            <span class=\"hljs-string\">&quot;script&quot;</span>: <span class=\"hljs-string\">&quot;MovingFunctions.min(values)&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"6-3-作用范围与排序-md\"><a href=\"#6-3-作用范围与排序-md\" class=\"headerlink\" title=\"6.3-作用范围与排序.md\"></a>6.3-作用范围与排序.md</h1><h1 id=\"作用范围与排序\"><a href=\"#作用范围与排序\" class=\"headerlink\" title=\"作用范围与排序\"></a>作用范围与排序</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /employees<br>PUT /employees/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;age&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;gender&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;job&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 50<br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;salary&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><br><br><span class=\"hljs-comment\"># Query</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 20<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Filter</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;older_person&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;age&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:35<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>         <span class=\"hljs-string\">&quot;jobs&quot;</span>:&#123;<br>           <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>      &#125;<br>    &#125;&#125;,<br>    <span class=\"hljs-string\">&quot;all_jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;post_filter&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;job.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Dev Manager&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#global</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 40<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;,<br>    <br>    <span class=\"hljs-string\">&quot;all&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;global&quot;</span>:&#123;&#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;salary_avg&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 20<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[<br>          &#123;<span class=\"hljs-string\">&quot;_count&quot;</span>:<span class=\"hljs-string\">&quot;asc&quot;</span>&#125;,<br>          &#123;<span class=\"hljs-string\">&quot;_key&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span>&#125;<br>          ]<br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[  &#123;<br>            <span class=\"hljs-string\">&quot;avg_salary&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>          &#125;]<br>        <br>        <br>      &#125;,<br>    <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[  &#123;<br>            <span class=\"hljs-string\">&quot;stats_salary.min&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>          &#125;]<br>        <br>        <br>      &#125;,<br>    <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;stats_salary&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"6-4-聚合分析的原理及精准度问题-md\"><a href=\"#6-4-聚合分析的原理及精准度问题-md\" class=\"headerlink\" title=\"6.4-聚合分析的原理及精准度问题.md\"></a>6.4-聚合分析的原理及精准度问题.md</h1><h1 id=\"聚合分析的原理及精准度问题\"><a href=\"#聚合分析的原理及精准度问题\" class=\"headerlink\" title=\"聚合分析的原理及精准度问题\"></a>聚合分析的原理及精准度问题</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">DELETE my_flights<br>PUT my_flights<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: <span class=\"hljs-number\">20</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Cancelled&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;boolean&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Carrier&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Dest&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestAirportID&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestCityName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestCountry&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestLocation&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestRegion&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestWeather&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DistanceKilometers&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DistanceMiles&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelay&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;boolean&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelayMin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelayType&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightNum&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightTimeHour&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightTimeMin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Origin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginAirportID&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginCityName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginCountry&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginLocation&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginRegion&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginWeather&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;dayOfWeek&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;timestamp&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-variable\">_reindex</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;source&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;kibana_sample_data_flights&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;dest&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;my_flights&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_count</span><br><span class=\"hljs-built_in\">GET</span> my_flights/<span class=\"hljs-variable\">_count</span><br><br><span class=\"hljs-built_in\">get</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_search</span><br><br><br><span class=\"hljs-built_in\">GET</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">0</span>,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;OriginWeather&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:<span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-string\">&quot;show_term_doc_count_error&quot;</span>:<span class=\"hljs-literal\">true</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> my_flights/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">0</span>,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;OriginWeather&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">&quot;shard_size&quot;</span>:<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">&quot;show_term_doc_count_error&quot;</span>:<span class=\"hljs-literal\">true</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-1-对象及-Nested-对象-md\"><a href=\"#7-1-对象及-Nested-对象-md\" class=\"headerlink\" title=\"7.1-对象及 Nested 对象.md\"></a>7.1-对象及 Nested 对象.md</h1><h1 id=\"对象及Nested对象\"><a href=\"#对象及Nested对象\" class=\"headerlink\" title=\"对象及Nested对象\"></a>对象及Nested对象</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE blog<br><span class=\"hljs-comment\"># 设置blog的 Mapping</span><br>PUT /blog<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;time&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;user&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;city&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;userid&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;long&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;username&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 插入一条 Blog 信息</span><br>PUT blog/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;I like Elasticsearch&quot;</span>,<br>  <span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01T00:00:00&quot;</span>,<br>  <span class=\"hljs-string\">&quot;user&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;userid&quot;</span>:1,<br>    <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>    <span class=\"hljs-string\">&quot;city&quot;</span>:<span class=\"hljs-string\">&quot;Shanghai&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 查询 Blog 信息</span><br>POST blog/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;user.username&quot;</span>: <span class=\"hljs-string\">&quot;Jack&quot;</span>&#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE my_movies<br><br><span class=\"hljs-comment\"># 电影的Mapping信息</span><br>PUT my_movies<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;actors&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;first_name&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>            &#125;,<br>            <span class=\"hljs-string\">&quot;last_name&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 256<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 写入一条电影信息</span><br>POST my_movies/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;actors&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Keanu&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Reeves&quot;</span><br>    &#125;,<br><br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Dennis&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Hopper&quot;</span><br>    &#125;<br><br>  ]<br>&#125;<br><br><span class=\"hljs-comment\"># 查询电影信息</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;actors.first_name&quot;</span>: <span class=\"hljs-string\">&quot;Keanu&quot;</span>&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;actors.last_name&quot;</span>: <span class=\"hljs-string\">&quot;Hopper&quot;</span>&#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br><br>&#125;<br><br>DELETE my_movies<br><span class=\"hljs-comment\"># 创建 Nested 对象 Mapping</span><br>PUT my_movies<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;actors&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;nested&quot;</span>,<br>          <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;first_name&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>            <span class=\"hljs-string\">&quot;last_name&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;<br>          &#125;&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<span class=\"hljs-string\">&quot;keyword&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>:<span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;ignore_above&quot;</span>:256&#125;&#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>POST my_movies/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;actors&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Keanu&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Reeves&quot;</span><br>    &#125;,<br><br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Dennis&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Hopper&quot;</span><br>    &#125;<br><br>  ]<br>&#125;<br><br><span class=\"hljs-comment\"># Nested 查询</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Speed&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;actors&quot;</span>,<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>                  &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>: <span class=\"hljs-string\">&quot;Keanu&quot;</span><br>                  &#125;&#125;,<br><br>                  &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;actors.last_name&quot;</span>: <span class=\"hljs-string\">&quot;Hopper&quot;</span><br>                  &#125;&#125;<br>                ]<br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Nested Aggregation</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;actors&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;actors&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;actor_name&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>,<br>            <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 普通 aggregation不工作</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;NAME&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-2-文档的父子关系-md\"><a href=\"#7-2-文档的父子关系-md\" class=\"headerlink\" title=\"7.2-文档的父子关系.md\"></a>7.2-文档的父子关系.md</h1><h1 id=\"文档的父子关系\"><a href=\"#文档的父子关系\" class=\"headerlink\" title=\"文档的父子关系\"></a>文档的父子关系</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">DELETE my_blogs<br><br><span class=\"hljs-comment\"># 设定 Parent/Child Mapping</span><br>PUT my_blogs<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 2<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;join&quot;</span>,<br>        <span class=\"hljs-string\">&quot;relations&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;blog&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#索引父文档</span><br>PUT my_blogs/_doc/blog1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Learning Elasticsearch&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;learning ELK @ geektime&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;blog&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引父文档</span><br>PUT my_blogs/_doc/blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Learning Hadoop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;learning Hadoop&quot;</span>,<br>    <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;blog&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment1?<span class=\"hljs-attribute\">routing</span>=blog1<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;I am learning ELK&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog1&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment2?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;I like Hadoop!!!!!&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog2&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;Hello Hadoop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Bob&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog2&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 查询所有文档</span><br>POST my_blogs/_search<br>&#123;<br><br>&#125;<br><br><br><span class=\"hljs-comment\">#根据父文档ID查看</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/blog2<br><br><span class=\"hljs-comment\"># Parent Id 查询</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;parent_id&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;id&quot;</span>: <span class=\"hljs-string\">&quot;blog2&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Has Child 查询,返回父文档</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;has_child&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;username&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span><br>                &#125;<br>            &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Has Parent 查询，返回相关的子文档</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;has_parent&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;parent_type&quot;</span>: <span class=\"hljs-string\">&quot;blog&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Learning Hadoop&quot;</span><br>                &#125;<br>            &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#通过ID ，访问子文档</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/comment3<br><span class=\"hljs-comment\">#通过ID和routing ，访问子文档</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br><br><span class=\"hljs-comment\">#更新子文档</span><br>PUT my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>    <span class=\"hljs-string\">&quot;comment&quot;</span>: <span class=\"hljs-string\">&quot;Hello Hadoop??&quot;</span>,<br>    <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;parent&quot;</span>: <span class=\"hljs-string\">&quot;blog2&quot;</span><br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-5-Elasticsearch数据建模实例-md\"><a href=\"#7-5-Elasticsearch数据建模实例-md\" class=\"headerlink\" title=\"7.5-Elasticsearch数据建模实例.md\"></a>7.5-Elasticsearch数据建模实例.md</h1><h1 id=\"Elasticsearch-数据建模实例\"><a href=\"#Elasticsearch-数据建模实例\" class=\"headerlink\" title=\"Elasticsearch 数据建模实例\"></a>Elasticsearch 数据建模实例</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">###### Data Modeling Example</span><br><br><span class=\"hljs-comment\"># Index 一本书的信息</span><br>PUT books/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Mastering ElasticSearch 5.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;description&quot;</span>:<span class=\"hljs-string\">&quot;Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins&quot;</span>,<br>  <span class=\"hljs-string\">&quot;author&quot;</span>:<span class=\"hljs-string\">&quot;Bharvi Dixit&quot;</span>,<br>  <span class=\"hljs-string\">&quot;public_date&quot;</span>:<span class=\"hljs-string\">&quot;2017&quot;</span>,<br>  <span class=\"hljs-string\">&quot;cover_url&quot;</span>:<span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\">#查询自动创建的Mapping</span><br>GET books/_mapping<br><br>DELETE books<br><br><span class=\"hljs-comment\">#优化字段类型</span><br>PUT books<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;author&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;cover_url&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>&#125;,<br>        <span class=\"hljs-string\">&quot;description&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;public_date&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 100<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Cover URL index 设置成false，无法对该字段进行搜索</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cover_url&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Cover URL index 设置成false，依然支持聚合分析</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cover&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;cover_url&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE books<br><span class=\"hljs-comment\">#新增 Content字段。数据量很大。选择将Source 关闭</span><br>PUT books<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;_source&quot;</span>: &#123;<span class=\"hljs-string\">&quot;enabled&quot;</span>: <span class=\"hljs-literal\">false</span>&#125;,<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;author&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;cover_url&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;description&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>         <span class=\"hljs-string\">&quot;content&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;public_date&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 100<br>            &#125;<br>          &#125;,<br>          <span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Index 一本书的信息,包含Content</span><br>PUT books/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Mastering ElasticSearch 5.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;description&quot;</span>:<span class=\"hljs-string\">&quot;Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;The content of the book......Indexing data, aggregation, searching.    something else. something in the way............&quot;</span>,<br>  <span class=\"hljs-string\">&quot;author&quot;</span>:<span class=\"hljs-string\">&quot;Bharvi Dixit&quot;</span>,<br>  <span class=\"hljs-string\">&quot;public_date&quot;</span>:<span class=\"hljs-string\">&quot;2017&quot;</span>,<br>  <span class=\"hljs-string\">&quot;cover_url&quot;</span>:<span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\">#查询结果中，Source不包含数据</span><br>POST books/_search<br>&#123;&#125;<br><br><span class=\"hljs-comment\">#搜索，通过store 字段显示数据，同时高亮显示 conent的内容</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;stored_fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;author&quot;</span>,<span class=\"hljs-string\">&quot;public_date&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;searching&quot;</span><br>    &#125;<br>  &#125;,<br><br>  <span class=\"hljs-string\">&quot;highlight&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>:&#123;&#125;<br>    &#125;<br>  &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-6-Elasticsearch-数据建模最佳实践-md\"><a href=\"#7-6-Elasticsearch-数据建模最佳实践-md\" class=\"headerlink\" title=\"7.6-Elasticsearch 数据建模最佳实践.md\"></a>7.6-Elasticsearch 数据建模最佳实践.md</h1><h1 id=\"Elasticsearch-数据建模最佳实践\"><a href=\"#Elasticsearch-数据建模最佳实践\" class=\"headerlink\" title=\"Elasticsearch 数据建模最佳实践\"></a>Elasticsearch 数据建模最佳实践</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\">###### Cookie Service</span><br><br><span class=\"hljs-comment\">##索引数据，dynamic mapping 会不断加入新增字段</span><br>PUT cookie_service/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.google.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:&#123;<br>   <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;tom&quot;</span>,<br>   <span class=\"hljs-string\">&quot;age&quot;</span>:32<br> &#125;<br>&#125;<br><br>PUT cookie_service/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.amazon.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:&#123;<br>   <span class=\"hljs-string\">&quot;login&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>,<br>   <span class=\"hljs-string\">&quot;email&quot;</span>:<span class=\"hljs-string\">&quot;xyz@abc.com&quot;</span><br> &#125;<br>&#125;<br><br><br>DELETE cookie_service<br><span class=\"hljs-comment\">#使用 Nested 对象，增加key/value</span><br>PUT cookie_service<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cookies&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;nested&quot;</span>,<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;name&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;dateValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;keywordValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;IntValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;url&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;keyword&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>            <span class=\"hljs-string\">&quot;ignore_above&quot;</span>: 256<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">##写入数据，使用key和合适类型的value字段</span><br>PUT cookie_service/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.google.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;username&quot;</span>,<br>      <span class=\"hljs-string\">&quot;keywordValue&quot;</span>:<span class=\"hljs-string\">&quot;tom&quot;</span><br>    &#125;,<br>    &#123;<br>       <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;age&quot;</span>,<br>      <span class=\"hljs-string\">&quot;intValue&quot;</span>:32<br><br>    &#125;<br><br>   ]<br> &#125;<br><br><br>PUT cookie_service/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.amazon.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;login&quot;</span>,<br>      <span class=\"hljs-string\">&quot;dateValue&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;,<br>    &#123;<br>       <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;email&quot;</span>,<br>      <span class=\"hljs-string\">&quot;IntValue&quot;</span>:32<br><br>    &#125;<br><br>   ]<br> &#125;<br><br><br><span class=\"hljs-comment\"># Nested 查询，通过bool查询进行过滤</span><br>POST cookie_service/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;cookies&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>            &#123;<br>            <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;cookies.name&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span><br>            &#125;&#125;,<br>            &#123;<br>              <span class=\"hljs-string\">&quot;range&quot;</span>:&#123;<br>                <span class=\"hljs-string\">&quot;cookies.intValue&quot;</span>:&#123;<br>                  <span class=\"hljs-string\">&quot;gte&quot;</span>:30<br>                &#125;<br>              &#125;<br>            &#125;<br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 在Mapping中加入元信息，便于管理</span><br>PUT softwares/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;_meta&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;software_version_mapping&quot;</span>: <span class=\"hljs-string\">&quot;1.0&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>GET softwares/_mapping<br>PUT softwares/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;software_version&quot;</span>:<span class=\"hljs-string\">&quot;7.1.0&quot;</span><br>&#125;<br><br>DELETE softwares<br><span class=\"hljs-comment\"># 优化,使用inner object</span><br>PUT softwares/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;_meta&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;software_version_mapping&quot;</span>: <span class=\"hljs-string\">&quot;1.1&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;version&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;display_name&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;hot_fix&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;marjor&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;minor&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#通过 Inner Object 写入多个文档</span><br>PUT softwares/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.1.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:1,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:0  <br>  &#125;<br><br>&#125;<br><br>PUT softwares/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.2.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:2,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:0  <br>  &#125;<br>&#125;<br><br>PUT softwares/_doc/3<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.2.1&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:2,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:1  <br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 通过 bool 查询，</span><br>POST softwares/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;version.marjor&quot;</span>:7<br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;version.minor&quot;</span>:2<br>          &#125;<br>        &#125;<br><br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br><span class=\"hljs-comment\"># Not Null 解决聚合的问题</span><br>DELETE ratings<br>PUT ratings<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;float&quot;</span>,<br>          <span class=\"hljs-string\">&quot;null_value&quot;</span>: 1.0<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>PUT ratings/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;rating&quot;</span>:5<br>&#125;<br>PUT ratings/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;rating&quot;</span>:null<br>&#125;<br><br><br>POST ratings/_search<br>POST ratings/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;rating&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST ratings/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: 1<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"7-7-第二部分总结与测验-md\"><a href=\"#7-7-第二部分总结与测验-md\" class=\"headerlink\" title=\"7.7-第二部分总结与测验.md\"></a>7.7-第二部分总结与测验.md</h1><h1 id=\"第二部分总结与测验\"><a href=\"#第二部分总结与测验\" class=\"headerlink\" title=\"第二部分总结与测验\"></a>第二部分总结与测验</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">test</span><br>PUT <span class=\"hljs-built_in\">test</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Hello World&quot;</span><br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"8-1-集群身份认证与用户鉴权-md\"><a href=\"#8-1-集群身份认证与用户鉴权-md\" class=\"headerlink\" title=\"8.1-集群身份认证与用户鉴权.md\"></a>8.1-集群身份认证与用户鉴权.md</h1><h1 id=\"集群身份认证与用户鉴权\"><a href=\"#集群身份认证与用户鉴权\" class=\"headerlink\" title=\"集群身份认证与用户鉴权\"></a>集群身份认证与用户鉴权</h1><ul>\n<li>如何为集群启用X-Pack Security</li>\n<li>如何为内置用户设置密码</li>\n<li>设置 Kibana与ElasticSearch通信鉴权</li>\n<li>使用安全API创建对特定索引具有有限访问权限的用户</li>\n</ul>\n<p>This tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:</p>\n<p>discovery.type: single-node</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#启动单节点</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span><br><br><span class=\"hljs-comment\">#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误</span><br>curl <span class=\"hljs-string\">&#x27;localhost:9200/_cat/nodes?pretty&#x27;</span><br><br><span class=\"hljs-comment\">#运行密码设定的命令，设置ES内置用户及其初始密码。</span><br>bin/elasticsearch-setup-passwords interactive<br><br>curl -u elastic <span class=\"hljs-string\">&#x27;localhost:9200/_cat/nodes?pretty&#x27;</span><br><br><br><span class=\"hljs-comment\"># 修改 kibana.yml</span><br>elasticsearch.username: <span class=\"hljs-string\">&quot;kibana&quot;</span><br>elasticsearch.password: <span class=\"hljs-string\">&quot;changeme&quot;</span><br><br><span class=\"hljs-comment\">#启动。使用用户名，elastic，密码elastic</span><br>./bin/kibana<br><br><br>POST orders/_bulk<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 18,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;master&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;9876543210123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;jack&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 99,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;visa&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;1234567890123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;bob&quot;</span>&#125;<br><br><br><span class=\"hljs-comment\">#create a new role named read_only_orders, that satisfies the following criteria:</span><br><span class=\"hljs-comment\">#The role has no cluster privileges</span><br><span class=\"hljs-comment\">#The role only has access to indices that match the pattern sales_record</span><br><span class=\"hljs-comment\">#The index privileges are read, and view_index_metadata</span><br><br><br><span class=\"hljs-comment\">#create sales_user that satisfies the following criteria:</span><br><span class=\"hljs-comment\"># Use your own email address</span><br><span class=\"hljs-comment\"># Assign the user to two roles: read_only_orders and kibana_user</span><br><br><br><span class=\"hljs-comment\">#验证读权限,可以执行</span><br>POST orders/_search<br>&#123;&#125;<br><br><span class=\"hljs-comment\">#验证写权限,报错</span><br>POST orders/_bulk<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 18,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;master&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;9876543210123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;jack&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 99,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;visa&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;1234567890123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;bob&quot;</span>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"8-2-集群内部安全通信-md\"><a href=\"#8-2-集群内部安全通信-md\" class=\"headerlink\" title=\"8.2-集群内部安全通信.md\"></a>8.2-集群内部安全通信.md</h1><h1 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 生成证书</span><br><span class=\"hljs-comment\"># 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：</span><br>bin/elasticsearch-certutil ca<br><br><span class=\"hljs-comment\">#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：</span><br>bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12<br><br><span class=\"hljs-comment\">#将证书拷贝到 config/certs目录下</span><br>elastic-certificates.p12<br><br><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E http.<span class=\"hljs-attribute\">port</span>=9201 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br><br><span class=\"hljs-comment\">#不提供证书的节点，无法加入</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E http.<span class=\"hljs-attribute\">port</span>=9202 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate<br><br><br></code></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-comment\"># elasticsearch.yml 配置</span></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.enabled: <span class=\"hljs-literal\">true</span></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12</span><br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"8-3-集群与外部间的安全通信-md\"><a href=\"#8-3-集群与外部间的安全通信-md\" class=\"headerlink\" title=\"8.3-集群与外部间的安全通信.md\"></a>8.3-集群与外部间的安全通信.md</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.enabled</span>: true<br>xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.keystore</span><span class=\"hljs-selector-class\">.path</span>: certs/elastic-certificates<span class=\"hljs-selector-class\">.p12</span><br>xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.truststore</span><span class=\"hljs-selector-class\">.path</span>: certs/elastic-certificates<span class=\"hljs-selector-class\">.p12</span><br><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><br><br><span class=\"hljs-comment\"># ES 启用 https</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.http.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-meta\">#Kibana 连接 ES https</span><br><br><br><br><span class=\"hljs-meta\"># 为kibana生成pem</span><br>openssl pkcs12 -<span class=\"hljs-keyword\">in</span> elastic-certificates.p12 -cacerts -nokeys -<span class=\"hljs-keyword\">out</span> elastic-ca.pem<br><br><br><span class=\"hljs-symbol\">elasticsearch.hosts:</span> [<span class=\"hljs-string\">&quot;https://localhost:9200&quot;</span>]<br><span class=\"hljs-symbol\">elasticsearch.ssl.certificateAuthorities:</span> [ <span class=\"hljs-string\">&quot;/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem&quot;</span> ]<br><span class=\"hljs-symbol\">elasticsearch.ssl.verificationMode:</span> certificate<br><br><br><br><span class=\"hljs-meta\"># 为 Kibna 配置 HTTPS</span><br><span class=\"hljs-meta\"># 生成后解压，包含了instance.crt 和 instance.key</span><br>bin/elasticsearch-certutil ca --pem<br><br><span class=\"hljs-symbol\">server.ssl.enabled:</span> true<br><span class=\"hljs-symbol\">server.ssl.certificate:</span> config/certs/instance.crt<br><span class=\"hljs-symbol\">server.ssl.key:</span> config/certs/instance.key<br><br><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"9-1-常见的集群部署方式-md-1\"><a href=\"#9-1-常见的集群部署方式-md-1\" class=\"headerlink\" title=\"9.1-常见的集群部署方式.md\"></a>9.1-常见的集群部署方式.md</h1><h1 id=\"常见的集群部署方式-1\"><a href=\"#常见的集群部署方式-1\" class=\"headerlink\" title=\"常见的集群部署方式\"></a>常见的集群部署方式</h1><h1 id=\"9-2-Hot-Warm架构与ShardFiltering-md-1\"><a href=\"#9-2-Hot-Warm架构与ShardFiltering-md-1\" class=\"headerlink\" title=\"9.2-Hot&amp;Warm架构与ShardFiltering.md\"></a>9.2-Hot&amp;Warm架构与ShardFiltering.md</h1><h1 id=\"Hot-Warm-架构与-Shard-Filtering-1\"><a href=\"#Hot-Warm-架构与-Shard-Filtering-1\" class=\"headerlink\" title=\"Hot &amp; Warm 架构与 Shard Filtering\"></a>Hot &amp; Warm 架构与 Shard Filtering</h1><h2 id=\"课程代码-1\"><a href=\"#课程代码-1\" class=\"headerlink\" title=\"课程代码\"></a>课程代码</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 标记一个 Hot 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=hotnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=hot_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=hot<br><br><span class=\"hljs-comment\"># 标记一个 warm 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=warmnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=warm_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=warm<br><br><span class=\"hljs-comment\"># 查看节点</span><br><span class=\"hljs-built_in\">GET</span> /_cat/nodeattrs?v<br><br><span class=\"hljs-comment\"># 配置到 Hot节点</span><br>PUT logs-2019-06-27<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-comment\"># 配置到 warm 节点</span><br>PUT PUT logs-2019-06-27/_settings<br>&#123;  <br>  <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;warm&quot;</span><br>&#125;<br><br><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack2<br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span><br>  &#125;<br>&#125;<br><br>PUT my_index1<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1<br>  &#125;<br>&#125;<br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br>DELETE my_index1/_doc/1<br><br><br><br><span class=\"hljs-comment\"># Fore awareness</span><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span>,<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.force.my_rack_id.values&quot;</span>: <span class=\"hljs-string\">&quot;rack1,rack2&quot;</span><br>  &#125;<br>&#125;<br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 集群黄色</span><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 副本无法分配</span><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-built_in\">GET</span> _cluster/allocation/explain?pretty<br></code></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>以下是优化过的笔记，已加入注释并调整格式，使其更符合Markdown标准：</p>\n<hr>\n<h1 id=\"Elasticsearch-集群管理与优化笔记\"><a href=\"#Elasticsearch-集群管理与优化笔记\" class=\"headerlink\" title=\"Elasticsearch 集群管理与优化笔记\"></a>Elasticsearch 集群管理与优化笔记</h1><h2 id=\"1-移动分片到另一个节点\"><a href=\"#1-移动分片到另一个节点\" class=\"headerlink\" title=\"1. 移动分片到另一个节点\"></a>1. 移动分片到另一个节点</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cluster/reroute<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;move&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,   <span class=\"hljs-comment\"># 索引名称</span><br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,               <span class=\"hljs-comment\"># 分片编号</span><br>        <span class=\"hljs-string\">&quot;from_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_1&quot;</span>, <span class=\"hljs-comment\"># 源节点</span><br>        <span class=\"hljs-string\">&quot;to_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_2&quot;</span>   <span class=\"hljs-comment\"># 目标节点</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-强制分配未分配的分片（带原因说明）\"><a href=\"#2-强制分配未分配的分片（带原因说明）\" class=\"headerlink\" title=\"2. 强制分配未分配的分片（带原因说明）\"></a>2. 强制分配未分配的分片（带原因说明）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cluster/reroute?explain<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,   <span class=\"hljs-comment\"># 索引名称</span><br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,              <span class=\"hljs-comment\"># 分片编号</span><br>        <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-string\">&quot;nodename&quot;</span>       <span class=\"hljs-comment\"># 目标节点</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-从集群中移除节点\"><a href=\"#3-从集群中移除节点\" class=\"headerlink\" title=\"3. 从集群中移除节点\"></a>3. 从集群中移除节点</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.exclude._ip&quot;</span>: <span class=\"hljs-string\">&quot;the_IP_of_your_node&quot;</span>   <span class=\"hljs-comment\"># 要排除的节点IP</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-强制执行同步刷新\"><a href=\"#4-强制执行同步刷新\" class=\"headerlink\" title=\"4. 强制执行同步刷新\"></a>4. 强制执行同步刷新</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _flush/synced<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-调整集群平衡时移动的分片数量\"><a href=\"#5-调整集群平衡时移动的分片数量\" class=\"headerlink\" title=\"5. 调整集群平衡时移动的分片数量\"></a>5. 调整集群平衡时移动的分片数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.cluster_concurrent_rebalance&quot;</span>: 2   <span class=\"hljs-comment\"># 同时平衡的分片数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"6-调整每个节点同时恢复的分片数量\"><a href=\"#6-调整每个节点同时恢复的分片数量\" class=\"headerlink\" title=\"6. 调整每个节点同时恢复的分片数量\"></a>6. 调整每个节点同时恢复的分片数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.node_concurrent_recoveries&quot;</span>: 5   <span class=\"hljs-comment\"># 每个节点并行恢复的分片数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"7-调整恢复速度\"><a href=\"#7-调整恢复速度\" class=\"headerlink\" title=\"7. 调整恢复速度\"></a>7. 调整恢复速度</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.recovery.max_bytes_per_sec&quot;</span>: <span class=\"hljs-string\">&quot;80mb&quot;</span>   <span class=\"hljs-comment\"># 恢复速率</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"8-调整单节点恢复时并发流数量\"><a href=\"#8-调整单节点恢复时并发流数量\" class=\"headerlink\" title=\"8. 调整单节点恢复时并发流数量\"></a>8. 调整单节点恢复时并发流数量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.recovery.concurrent_streams&quot;</span>: 6   <span class=\"hljs-comment\"># 单节点恢复时的并发流数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"9-调整搜索队列大小\"><a href=\"#9-调整搜索队列大小\" class=\"headerlink\" title=\"9. 调整搜索队列大小\"></a>9. 调整搜索队列大小</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threadpool.search.queue_size&quot;</span>: 2000   <span class=\"hljs-comment\"># 搜索队列大小</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"10-清除节点缓存\"><a href=\"#10-清除节点缓存\" class=\"headerlink\" title=\"10. 清除节点缓存\"></a>10. 清除节点缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST _cache/clear<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"11-调整断路器配置\"><a href=\"#11-调整断路器配置\" class=\"headerlink\" title=\"11. 调整断路器配置\"></a>11. 调整断路器配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.total.limit&quot;</span>: <span class=\"hljs-string\">&quot;40%&quot;</span>   <span class=\"hljs-comment\"># 设置内存断路器的总内存限制</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"监控-Elasticsearch-集群\"><a href=\"#监控-Elasticsearch-集群\" class=\"headerlink\" title=\"监控 Elasticsearch 集群\"></a>监控 Elasticsearch 集群</h1><h2 id=\"1-节点统计\"><a href=\"#1-节点统计\" class=\"headerlink\" title=\"1. 节点统计\"></a>1. 节点统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _nodes/stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-集群统计\"><a href=\"#2-集群统计\" class=\"headerlink\" title=\"2. 集群统计\"></a>2. 集群统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-索引统计\"><a href=\"#3-索引统计\" class=\"headerlink\" title=\"3. 索引统计\"></a>3. 索引统计</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET kibana_sample_data_ecommerce/_stats<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-查看待处理的集群任务\"><a href=\"#4-查看待处理的集群任务\" class=\"headerlink\" title=\"4. 查看待处理的集群任务\"></a>4. 查看待处理的集群任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/pending_tasks<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-查看所有任务，支持取消任务\"><a href=\"#5-查看所有任务，支持取消任务\" class=\"headerlink\" title=\"5. 查看所有任务，支持取消任务\"></a>5. 查看所有任务，支持取消任务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _tasks<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看节点的线程池信息\"><a href=\"#6-查看节点的线程池信息\" class=\"headerlink\" title=\"6. 查看节点的线程池信息\"></a>6. 查看节点的线程池信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _nodes/thread_pool<br>GET _nodes/stats/thread_pool<br>GET _cat/thread_pool?v<br>GET _nodes/hot_threads<br>GET _nodes/stats/thread_pool<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"7-设置索引慢日志（Slowlog）\"><a href=\"#7-设置索引慢日志（Slowlog）\" class=\"headerlink\" title=\"7. 设置索引慢日志（Slowlog）\"></a>7. 设置索引慢日志（Slowlog）</h2><ul>\n<li><p>设置索引慢日志阈值：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT my_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;index.indexing.slowlog&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threshold.index&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,    <span class=\"hljs-comment\"># 警告级别</span><br>      <span class=\"hljs-string\">&quot;info&quot;</span>: <span class=\"hljs-string\">&quot;4s&quot;</span>,     <span class=\"hljs-comment\"># 信息级别</span><br>      <span class=\"hljs-string\">&quot;debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,    <span class=\"hljs-comment\"># 调试级别</span><br>      <span class=\"hljs-string\">&quot;trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>     <span class=\"hljs-comment\"># 跟踪级别</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;level&quot;</span>: <span class=\"hljs-string\">&quot;trace&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>: 1000   <span class=\"hljs-comment\"># 日志源的最大字符数</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>设置查询慢日志：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE my_index<br>PUT my_index/<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.search.slowlog.threshold&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query.warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志警告级别</span><br>      <span class=\"hljs-string\">&quot;query.info&quot;</span>: <span class=\"hljs-string\">&quot;3s&quot;</span>,    <span class=\"hljs-comment\"># 查询慢日志信息级别</span><br>      <span class=\"hljs-string\">&quot;query.debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志调试级别</span><br>      <span class=\"hljs-string\">&quot;query.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>,   <span class=\"hljs-comment\"># 查询慢日志跟踪级别</span><br>      <span class=\"hljs-string\">&quot;fetch.warn&quot;</span>: <span class=\"hljs-string\">&quot;1s&quot;</span>,    <span class=\"hljs-comment\"># 获取慢日志警告级别</span><br>      <span class=\"hljs-string\">&quot;fetch.info&quot;</span>: <span class=\"hljs-string\">&quot;600ms&quot;</span>, <span class=\"hljs-comment\"># 获取慢日志信息级别</span><br>      <span class=\"hljs-string\">&quot;fetch.debug&quot;</span>: <span class=\"hljs-string\">&quot;400ms&quot;</span>,<span class=\"hljs-comment\"># 获取慢日志调试级别</span><br>      <span class=\"hljs-string\">&quot;fetch.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>    <span class=\"hljs-comment\"># 获取慢日志跟踪级别</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h1 id=\"解决集群-Yellow-与-Red-状态问题\"><a href=\"#解决集群-Yellow-与-Red-状态问题\" class=\"headerlink\" title=\"解决集群 Yellow 与 Red 状态问题\"></a>解决集群 Yellow 与 Red 状态问题</h1><h2 id=\"1-检查集群健康状态\"><a href=\"#1-检查集群健康状态\" class=\"headerlink\" title=\"1. 检查集群健康状态\"></a>1. 检查集群健康状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-查看索引级别健康状态，找出红色索引\"><a href=\"#2-查看索引级别健康状态，找出红色索引\" class=\"headerlink\" title=\"2. 查看索引级别健康状态，找出红色索引\"></a>2. 查看索引级别健康状态，找出红色索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/health?level=indices<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-查看分片级别健康状态\"><a href=\"#3-查看分片级别健康状态\" class=\"headerlink\" title=\"3. 查看分片级别健康状态\"></a>3. 查看分片级别健康状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cluster/health?level=shards<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4-解释索引分片无法分配的原因\"><a href=\"#4-解释索引分片无法分配的原因\" class=\"headerlink\" title=\"4. 解释索引分片无法分配的原因\"></a>4. 解释索引分片无法分配的原因</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET /_cluster/allocation/explain<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"5-删除并重新创建索引\"><a href=\"#5-删除并重新创建索引\" class=\"headerlink\" title=\"5. 删除并重新创建索引\"></a>5. 删除并重新创建索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 3,    <span class=\"hljs-comment\"># 分片数</span><br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,   <span class=\"hljs-comment\"># 副本数</span><br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>: <span class=\"hljs-string\">&quot;hot&quot;</span>   <span class=\"hljs-comment\"># 指定节点类型</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"提升集群写性能\"><a href=\"#提升集群写性能\" class=\"headerlink\" title=\"提升集群写性能\"></a>提升集群写性能</h1><h2 id=\"1-设置优化写入性能的索引设置\"><a href=\"#1-设置优化写入性能的索引设置\" class=\"headerlink\" title=\"1. 设置优化写入性能的索引设置\"></a>1. 设置优化写入性能的索引设置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE myindex<br>PUT myindex<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;refresh_interval&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span>,     <span class=\"hljs-comment\"># 刷新间隔</span><br>      <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: <span class=\"hljs-string\">&quot;2&quot;</span>        <span class=\"hljs-comment\"># 分片数</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;routing&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;allocation&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;total_shards_per_node&quot;</span>: <span class=\"hljs-string\">&quot;3&quot;</span> <span class=\"hljs-comment\"># 每个节点的最大分片数</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;translog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;sync_interval&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span>,         <span class=\"hljs-comment\"># 事务日志同步间隔</span><br>      <span class=\"hljs-string\">&quot;durability&quot;</span>: <span class=\"hljs-string\">&quot;async&quot;</span>           <span class=\"hljs-comment\"># 异步持久化</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0          <span class=\"hljs-comment\"># 副本数</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dynamic&quot;</span>: <span class=\"hljs-literal\">false</span>,                <span class=\"hljs-comment\"># 禁用动态映射</span><br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"提升集群读性能\"><a href=\"#提升集群读性能\" class=\"headerlink\" title=\"提升集群读性能\"></a>提升集群读性能</h1><h2 id=\"1-示例：查询优化\"><a href=\"#1-示例：查询优化\" class=\"headerlink\" title=\"1. 示例：查询优化\"></a>1. 示例：查询优化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT blogs/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>&#125;<br><br>GET blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span> &#125;&#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;title.keyword&#x27;].value.length()&gt;5&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>GET blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;publish_date&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: 2017,<br>              <span class=\"hljs-string\">&quot;lte&quot;</span>: 2019<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"集群压力测试\"><a href=\"#集群压力测试\" class=\"headerlink\" title=\"集群压力测试\"></a>集群压力测试</h1><h2 id=\"1-安装并配置-esrally\"><a href=\"#1-安装并配置-esrally\" class=\"headerlink\" title=\"1. 安装并配置 esrally\"></a>1. 安装并配置 esrally</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip3 install esrally<br>esrally configure<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-执行简单的压力测试\"><a href=\"#2-执行简单的压力测试\" class=\"headerlink\" title=\"2. 执行简单的压力测试\"></a>2. 执行简单的压力测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">esrally --distribution-version=7.1.0 --test-mode<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3-执行完整数据测试\"><a href=\"#3-执行完整数据测试\" class=\"headerlink\" title=\"3. 执行完整数据测试\"></a>3. 执行完整数据测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">esrally --distribution-version=7.1.0<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"使用缓存与-Breaker-限制内存使用\"><a href=\"#使用缓存与-Breaker-限制内存使用\" class=\"headerlink\" title=\"使用缓存与 Breaker 限制内存使用\"></a>使用缓存与 Breaker 限制内存使用</h1><h2 id=\"1-获取节点统计信息\"><a href=\"#1-获取节点统计信息\" class=\"headerlink\" title=\"1. 获取节点统计信息\"></a>1. 获取节点统计信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">GET _cat/nodes?v<br>GET _nodes/stats/indices?pretty<br>GET _cat/nodes?v&amp;h=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-设置内存限制\"><a href=\"#2-设置内存限制\" class=\"headerlink\" title=\"2. 设置内存限制\"></a>2. 设置内存限制</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.request.limit&quot;</span>: <span class=\"hljs-string\">&quot;90%&quot;</span>   <span class=\"hljs-comment\"># 设置请求断路器内存限制</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"使用-Shrink-与-Rollover-API-管理索引\"><a href=\"#使用-Shrink-与-Rollover-API-管理索引\" class=\"headerlink\" title=\"使用 Shrink 与 Rollover API 管理索引\"></a>使用 Shrink 与 Rollover API 管理索引</h1><h2 id=\"1-Shrink-索引\"><a href=\"#1-Shrink-索引\" class=\"headerlink\" title=\"1. Shrink 索引\"></a>1. Shrink 索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-Rollover-索引\"><a href=\"#2-Rollover-索引\" class=\"headerlink\" title=\"2. Rollover 索引\"></a>2. Rollover 索引</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST nginx_logs_write/_rollover<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>: <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>: 5,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>: <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 11.2-索引全生命周期管理及工具介绍.md</span><br><br><span class=\"hljs-meta\"># 索引全生命周期管理及工具介绍</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"运行三个节点，分片-将box-type设置成-hot，warm和cold\"><a href=\"#运行三个节点，分片-将box-type设置成-hot，warm和cold\" class=\"headerlink\" title=\"运行三个节点，分片 将box_type设置成 hot，warm和cold\"></a>运行三个节点，分片 将box_type设置成 hot，warm和cold</h1><h1 id=\"具体参考-github下，docker-hot-warm-cold-下的docker-compose-文件\"><a href=\"#具体参考-github下，docker-hot-warm-cold-下的docker-compose-文件\" class=\"headerlink\" title=\"具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件\"></a>具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件</h1><p>DELETE *</p>\n<h1 id=\"设置-1秒刷新1次，生产环境10分种刷新一次\"><a href=\"#设置-1秒刷新1次，生产环境10分种刷新一次\" class=\"headerlink\" title=\"设置 1秒刷新1次，生产环境10分种刷新一次\"></a>设置 1秒刷新1次，生产环境10分种刷新一次</h1><p>PUT _cluster&#x2F;settings<br>{<br>  “persistent”: {<br>    “indices.lifecycle.poll_interval”:”1s”<br>  }<br>}</p>\n<h1 id=\"设置-Policy\"><a href=\"#设置-Policy\" class=\"headerlink\" title=\"设置 Policy\"></a>设置 Policy</h1><p>PUT &#x2F;_ilm&#x2F;policy&#x2F;log_ilm_policy<br>{<br>  “policy”: {<br>    “phases”: {<br>      “hot”: {<br>        “actions”: {<br>          “rollover”: {<br>            “max_docs”: 5<br>          }<br>        }<br>      },<br>      “warm”: {<br>        “min_age”: “10s”,<br>        “actions”: {<br>          “allocate”: {<br>            “include”: {<br>              “box_type”: “warm”<br>            }<br>          }<br>        }<br>      },<br>      “cold”: {<br>        “min_age”: “15s”,<br>        “actions”: {<br>          “allocate”: {<br>            “include”: {<br>              “box_type”: “cold”<br>            }<br>          }<br>        }<br>      },<br>      “delete”: {<br>        “min_age”: “20s”,<br>        “actions”: {<br>          “delete”: {}<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"设置索引模版\"><a href=\"#设置索引模版\" class=\"headerlink\" title=\"设置索引模版\"></a>设置索引模版</h1><p>PUT &#x2F;_template&#x2F;log_ilm_template<br>{<br>  “index_patterns” : [<br>      “ilm_index-*”<br>    ],<br>    “settings” : {<br>      “index” : {<br>        “lifecycle” : {<br>          “name” : “log_ilm_policy”,<br>          “rollover_alias” : “ilm_alias”<br>        },<br>        “routing” : {<br>          “allocation” : {<br>            “include” : {<br>              “box_type” : “hot”<br>            }<br>          }<br>        },<br>        “number_of_shards” : “1”,<br>        “number_of_replicas” : “0”<br>      }<br>    },<br>    “mappings” : { },<br>    “aliases” : { }<br>}</p>\n<p>#创建索引<br>PUT ilm_index-000001<br>{<br>  “settings”: {<br>    “number_of_shards”: 1,<br>    “number_of_replicas”: 0,<br>    “index.lifecycle.name”: “log_ilm_policy”,<br>    “index.lifecycle.rollover_alias”: “ilm_alias”,<br>    “index.routing.allocation.include.box_type”:”hot”<br>  },<br>  “aliases”: {<br>    “ilm_alias”: {<br>      “is_write_index”: true<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Alias写入文档\"><a href=\"#对-Alias写入文档\" class=\"headerlink\" title=\"对 Alias写入文档\"></a>对 Alias写入文档</h1><p>POST  ilm_alias&#x2F;_doc<br>{<br>  “dfd”:”dfdsf”<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 12.1-Logstash入门及架构介绍.md</span><br><br><span class=\"hljs-meta\"># Logstash 入门及架构介绍</span><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"一个-Demo，-demo-运行\"><a href=\"#一个-Demo，-demo-运行\" class=\"headerlink\" title=\"一个 Demo， demo 运行\"></a>一个 Demo， demo 运行</h1><p>sudo bin&#x2F;logstash -f logstash-filter.conf</p>\n<h1 id=\"demo数据\"><a href=\"#demo数据\" class=\"headerlink\" title=\"demo数据\"></a>demo数据</h1><p>127.0.0.1 - - [11&#x2F;Dec&#x2F;2013:00:01:45 -0800] “GET &#x2F;xampp&#x2F;status.php HTTP&#x2F;1.1” 200 3891 “<a href=\"http://cadenza/xampp/navi.php\">http://cadenza/xampp/navi.php</a>“ “Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko&#x2F;20100101 Firefox&#x2F;25.0”</p>\n<h1 id=\"codec-demo\"><a href=\"#codec-demo\" class=\"headerlink\" title=\"codec demo\"></a>codec demo</h1><p>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;line}}output{stdout{codec&#x3D;&gt; rubydebug}}”<br>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;json}}output{stdout{codec&#x3D;&gt; rubydebug}}”<br>sudo bin&#x2F;logstash -e “input{stdin{codec&#x3D;&gt;line}}output{stdout{codec&#x3D;&gt; dots}}”</p>\n<p>sudo bin&#x2F;logstash -f multiline-exception.conf</p>\n<h1 id=\"多行数据，异常\"><a href=\"#多行数据，异常\" class=\"headerlink\" title=\"多行数据，异常\"></a>多行数据，异常</h1><p>Exception in thread “main” java.lang.NullPointerException<br>        at com.example.myproject.Book.getTitle(Book.java:16)<br>        at com.example.myproject.Author.getBookTitles(Author.java:25)<br>        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)</p>\n<h1 id=\"一个实例\"><a href=\"#一个实例\" class=\"headerlink\" title=\"一个实例\"></a>一个实例</h1><p><a href=\"https://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf\">https://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.4-Logstash%E5%AE%89%E8%A3%85%E4%B8%8E%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE/movielens/logstash.conf</a></p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 12.2-利用JDBC插件导入数据到Elasticsearch.md</span><br><br><span class=\"hljs-meta\"># Logstash插件及文档介绍</span><br></code></pre></td></tr></table></figure>\n<p><a href=\"https://spring.io/guides/gs/accessing-data-mysql/\">https://spring.io/guides/gs/accessing-data-mysql/</a><br>create database db_example;<br>use db_example;<br>show tables;<br>drop table user;<br>select * from user;</p>\n<h1 id=\"新增用户\"><a href=\"#新增用户\" class=\"headerlink\" title=\"新增用户\"></a>新增用户</h1><p>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Mike -d email&#x3D;<a href=\"mailto:&#x6d;&#x69;&#x6b;&#x65;&#x40;&#x78;&#x79;&#x7a;&#46;&#99;&#111;&#109;\">&#x6d;&#x69;&#x6b;&#x65;&#x40;&#x78;&#x79;&#x7a;&#46;&#99;&#111;&#109;</a> -d tags&#x3D;Elasticsearch,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Jack -d email&#x3D;<a href=\"mailto:&#106;&#97;&#99;&#x6b;&#x40;&#120;&#121;&#x7a;&#46;&#x63;&#x6f;&#109;\">&#106;&#97;&#99;&#x6b;&#x40;&#120;&#121;&#x7a;&#46;&#x63;&#x6f;&#109;</a> -d tags&#x3D;Mysql,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Bob -d email&#x3D;<a href=\"mailto:&#x62;&#111;&#98;&#64;&#x78;&#121;&#x7a;&#46;&#99;&#x6f;&#109;\">&#x62;&#111;&#98;&#64;&#x78;&#121;&#x7a;&#46;&#99;&#x6f;&#109;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<p>#查看所有的用户<br>curl ‘localhost:8080&#x2F;demo&#x2F;all’</p>\n<h1 id=\"更新用户\"><a href=\"#更新用户\" class=\"headerlink\" title=\"更新用户\"></a>更新用户</h1><p>curl -X PUT localhost:8080&#x2F;demo&#x2F;update -d id&#x3D;16 -d name&#x3D;Bob2 -d email&#x3D;<a href=\"mailto:&#98;&#111;&#x62;&#x32;&#x40;&#120;&#x79;&#122;&#x2e;&#99;&#111;&#x6d;\">&#98;&#111;&#x62;&#x32;&#x40;&#120;&#x79;&#122;&#x2e;&#99;&#111;&#x6d;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<h1 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h1><p>curl -X DELETE localhost:8080&#x2F;demo&#x2F;delete -d id&#x3D;15</p>\n<p>mysql-demo.conf</p>\n<h1 id=\"创建-alias，只显示没有被标记-deleted的用户\"><a href=\"#创建-alias，只显示没有被标记-deleted的用户\" class=\"headerlink\" title=\"创建 alias，只显示没有被标记 deleted的用户\"></a>创建 alias，只显示没有被标记 deleted的用户</h1><p>POST &#x2F;_aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “users”,<br>        “alias”: “view_users”,<br>         “filter” : { “term” : { “is_deleted” : false } }<br>      }<br>    }<br>  ]<br>}</p>\n<h1 id=\"通过-Alias查询，查不到被标记成-deleted的用户\"><a href=\"#通过-Alias查询，查不到被标记成-deleted的用户\" class=\"headerlink\" title=\"通过 Alias查询，查不到被标记成 deleted的用户\"></a>通过 Alias查询，查不到被标记成 deleted的用户</h1><p>POST view_users&#x2F;_search<br>{</p>\n<p>}</p>\n<p>POST view_users&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “name.keyword”: {<br>        “value”: “Jack”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST users&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “name.keyword”: {<br>        “value”: “Jack”<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 12.3-Beats介绍.md</span><br><br><span class=\"hljs-meta\"># Beats介绍</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"查看-packetbeat-模块\"><a href=\"#查看-packetbeat-模块\" class=\"headerlink\" title=\"查看 packetbeat 模块\"></a>查看 packetbeat 模块</h1><h1 id=\"设置-packetbeat-的mysql-模块\"><a href=\"#设置-packetbeat-的mysql-模块\" class=\"headerlink\" title=\"设置 packetbeat 的mysql 模块\"></a>设置 packetbeat 的mysql 模块</h1><h1 id=\"启动运行\"><a href=\"#启动运行\" class=\"headerlink\" title=\"启动运行\"></a>启动运行</h1><h1 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h1><p>.&#x2F;metricbeat modules list<br>.&#x2F;metricbeat modules enable mysql<br>.&#x2F;metricbeat setup –dashboards</p>\n<h1 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h1><p>create database db_example<br>use db_example;<br>show tables;<br>select * from user</p>\n<p>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Mike -d email&#x3D;<a href=\"mailto:&#109;&#105;&#x6b;&#x65;&#64;&#x78;&#121;&#x7a;&#46;&#x63;&#x6f;&#x6d;\">&#109;&#105;&#x6b;&#x65;&#64;&#x78;&#121;&#x7a;&#46;&#x63;&#x6f;&#x6d;</a> -d tags&#x3D;Elasticsearch,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Jack -d email&#x3D;<a href=\"mailto:&#106;&#97;&#x63;&#x6b;&#64;&#x78;&#x79;&#122;&#46;&#x63;&#x6f;&#x6d;\">&#106;&#97;&#x63;&#x6b;&#64;&#x78;&#x79;&#122;&#46;&#x63;&#x6f;&#x6d;</a> -d tags&#x3D;Mysql,IntelliJ<br>curl localhost:8080&#x2F;demo&#x2F;add -d name&#x3D;Bob -d email&#x3D;<a href=\"mailto:&#98;&#111;&#x62;&#64;&#120;&#121;&#122;&#46;&#99;&#111;&#109;\">&#98;&#111;&#x62;&#64;&#120;&#121;&#122;&#46;&#99;&#111;&#109;</a> -d tags&#x3D;Mysql,IntelliJ</p>\n<p>curl ‘localhost:8080&#x2F;demo&#x2F;all’</p>\n<h1 id=\"配置-packetbeat\"><a href=\"#配置-packetbeat\" class=\"headerlink\" title=\"配置 packetbeat\"></a>配置 packetbeat</h1><h1 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h1><p>修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控</p>\n<p>sudo chown root packetbeat.yml<br>sudo .&#x2F;packetbeat setup –dashboards<br>sudo .&#x2F;packetbeat</p>\n<h1 id=\"查看所有-Filebeat-模块\"><a href=\"#查看所有-Filebeat-模块\" class=\"headerlink\" title=\"查看所有 Filebeat 模块\"></a>查看所有 Filebeat 模块</h1><h1 id=\"查看所有的modules\"><a href=\"#查看所有的modules\" class=\"headerlink\" title=\"查看所有的modules\"></a>查看所有的modules</h1><p>.&#x2F;filebeat modules list</p>\n<h1 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h1><p>.&#x2F;filebeat modules enable mysql</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.1-使用IndexPattern配置数据.md</span><br><br><br></code></pre></td></tr></table></figure>\n\n<p>localhost:5601&#x2F;status</p>\n<p>PUT &#x2F;logstash-2015.05.18<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;logstash-2015.05.19<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;logstash-2015.05.20<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “geo”: {<br>        “properties”: {<br>          “coordinates”: {<br>            “type”: “geo_point”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"For-Mac-Windows\"><a href=\"#For-Mac-Windows\" class=\"headerlink\" title=\"For Mac &amp; Windows\"></a>For Mac &amp; Windows</h1><p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;_bulk?pretty’ –data-binary @logs.jsonl</p>\n<p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;bank&#x2F;account&#x2F;_bulk?pretty’ –data-binary @accounts.json</p>\n<p>#For Windows<br>Invoke-RestMethod “<a href=\"http://localhost:9200/_bulk?pretty\">http://localhost:9200/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “logs.jsonl”</p>\n<p>GET &#x2F;_cat&#x2F;indices?v</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.2-使用KibanaDiscover探索数据.md</span><br><br><span class=\"hljs-meta\"># 使用Kibana Discovery 探索数据</span><br></code></pre></td></tr></table></figure>\n\n<p>设置时间过滤器<br>搜索你的数据<br>根据字段进行过滤<br>查看文档数据<br>查看文档上下文<br>暂时字段数据统计<br>Save Query</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.3-基本可视化组件介绍.md</span><br><br><span class=\"hljs-meta\"># 基本可视化组件介绍</span><br></code></pre></td></tr></table></figure>\n\n<p>PUT &#x2F;shakespeare<br>{<br>  “mappings”: {<br>    “properties”: {<br>    “speaker”: {“type”: “keyword”},<br>    “play_name”: {“type”: “keyword”},<br>    “line_id”: {“type”: “integer”},<br>    “speech_number”: {“type”: “integer”}<br>    }<br>  }<br>}</p>\n<h1 id=\"For-Mac-Windows-1\"><a href=\"#For-Mac-Windows-1\" class=\"headerlink\" title=\"For Mac &amp; Windows\"></a>For Mac &amp; Windows</h1><p>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;bank&#x2F;account&#x2F;_bulk?pretty’ –data-binary @accounts.json<br>curl -H ‘Content-Type: application&#x2F;x-ndjson’ -XPOST ‘localhost:9200&#x2F;shakespeare&#x2F;_bulk?pretty’ –data-binary @shakespeare.json</p>\n<p>#For Windows<br>Invoke-RestMethod “<a href=\"http://localhost:9200/bank/account/_bulk?pretty\">http://localhost:9200/bank/account/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “accounts.json”<br>Invoke-RestMethod “<a href=\"http://localhost:9200/shakespeare/_bulk?pretty\">http://localhost:9200/shakespeare/_bulk?pretty</a>“ -Method Post -ContentType ‘application&#x2F;x-ndjson’ -InFile “shakespeare.json”</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 13.4-构建Dashboard.md</span><br><br><span class=\"hljs-meta\"># 构建Dashboard</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>创建仪表潘</li>\n<li>加载仪表盘</li>\n<li>共享仪表盘</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><br><span class=\"hljs-comment\"># 14.3用机器学习实现时序数据的异常检测-上.md</span><br><br>mkdir server_metrics<br>cd server_metrics<br>wget https:<span class=\"hljs-regexp\">//</span>download.elasticsearch.org<span class=\"hljs-regexp\">/demos/m</span>achine_learning<span class=\"hljs-regexp\">/gettingstarted/</span>server_metrics.tar.gz<br>tar -xvf server_metrics.tar.gz<br><br><br><span class=\"hljs-comment\"># 14.5-用ELK进行日志管理.md</span><br><br><span class=\"hljs-comment\"># 用 ELK 来做日志管理</span><br></code></pre></td></tr></table></figure>\n<p>.&#x2F;filebeat modules list<br>.&#x2F;filebeat modules enable system<br>.&#x2F;filebeat modules enable elasticsearch</p>\n<h2 id=\"进-modules-d-编辑相应的文件，修改log路径\"><a href=\"#进-modules-d-编辑相应的文件，修改log路径\" class=\"headerlink\" title=\"进 modules.d 编辑相应的文件，修改log路径\"></a>进 modules.d 编辑相应的文件，修改log路径</h2><p>.&#x2F;filebeat setup –dashboards</p>\n<p>.&#x2F;filebeat export template | more</p>\n<p>.&#x2F;filebeat -e</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\"># 14.6-用Canvas做数据演示.md</span><br><br>POST elasticoffee/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0, <br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;by&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;beverage.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 4.1-基于词项和基于全文的搜索.md</span><br><br><span class=\"hljs-comment\"># 基于词项和基于全文的搜索</span><br><br><br></code></pre></td></tr></table></figure>\n<p>DELETE products<br>PUT products<br>{<br>  “settings”: {<br>    “number_of_shards”: 1<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “productID” : “XHDK-A-1293-#fJ3”,”desc”:”iPhone” }<br>{ “index”: { “_id”: 2 }}<br>{ “productID” : “KDKE-B-9947-#kL5”,”desc”:”iPad” }<br>{ “index”: { “_id”: 3 }}<br>{ “productID” : “JODL-X-1937-#pV7”,”desc”:”MBP” }</p>\n<p>GET &#x2F;products</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “desc”: {<br>        &#x2F;&#x2F;“value”: “iPhone”<br>        “value”:”iphone”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “desc.keyword”: {<br>        &#x2F;&#x2F;“value”: “iPhone”<br>        &#x2F;&#x2F;“value”:”iphone”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “productID”: {<br>        “value”: “XHDK-A-1293-#fJ3”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  &#x2F;&#x2F;“explain”: true,<br>  “query”: {<br>    “term”: {<br>      “productID.keyword”: {<br>        “value”: “XHDK-A-1293-#fJ3”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “productID.keyword”: “XHDK-A-1293-#fJ3”<br>        }<br>      }</p>\n<pre><code>&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#设置 position_increment_gap<br>DELETE groups<br>PUT groups<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “names”:{<br>        “type”: “text”,<br>        “position_increment_gap”: 0<br>      }<br>    }<br>  }<br>}</p>\n<p>GET groups&#x2F;_mapping</p>\n<p>POST groups&#x2F;_doc<br>{<br>  “names”: [ “John Water”, “Water Smith”]<br>}</p>\n<p>POST groups&#x2F;_search<br>{<br>  “query”: {<br>    “match_phrase”: {<br>      “names”: {<br>        “query”: “Water Water”,<br>        “slop”: 100<br>      }<br>    }<br>  }<br>}</p>\n<p>POST groups&#x2F;_search<br>{<br>  “query”: {<br>    “match_phrase”: {<br>      “names”: “Water Smith”<br>    }<br>  }<br>}</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\"><br># <span class=\"hljs-number\">4.10</span>-综合排序：<span class=\"hljs-keyword\">Function</span> <span class=\"hljs-title\">Score</span> Query 优化算分.md<br><br># 综合排序：<span class=\"hljs-keyword\">Function</span> <span class=\"hljs-title\">Score</span> Query 优化算分<br></code></pre></td></tr></table></figure>\n<p>DELETE blogs<br>PUT &#x2F;blogs&#x2F;_doc&#x2F;1<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   0<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;2<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   100<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;3<br>{<br>  “title”:   “About popularity”,<br>  “content”: “In this post we will talk about…”,<br>  “votes”:   1000000<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p” ,<br>        “factor”: 0.1<br>      }<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “query”: {<br>        “multi_match”: {<br>          “query”:    “popularity”,<br>          “fields”: [ “title”, “content” ]<br>        }<br>      },<br>      “field_value_factor”: {<br>        “field”: “votes”,<br>        “modifier”: “log1p” ,<br>        “factor”: 0.1<br>      },<br>      “boost_mode”: “sum”,<br>      “max_boost”: 3<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>  “query”: {<br>    “function_score”: {<br>      “random_score”: {<br>        “seed”: 911119<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.12-自动补全与基于上下文的提示.md</span><br><br><span class=\"hljs-meta\"># 自动补全与基于上下文的提示</span><br></code></pre></td></tr></table></figure>\n<p>DELETE articles<br>PUT articles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title_completion”:{<br>        “type”: “completion”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST articles&#x2F;_bulk<br>{ “index” : { } }<br>{ “title_completion”: “lucene is very cool”}<br>{ “index” : { } }<br>{ “title_completion”: “Elasticsearch builds on top of lucene”}<br>{ “index” : { } }<br>{ “title_completion”: “Elasticsearch rocks”}<br>{ “index” : { } }<br>{ “title_completion”: “elastic is the company behind ELK stack”}<br>{ “index” : { } }<br>{ “title_completion”: “Elk stack rocks”}<br>{ “index” : {} }</p>\n<p>POST articles&#x2F;_search?pretty<br>{<br>  “size”: 0,<br>  “suggest”: {<br>    “article-suggester”: {<br>      “prefix”: “elk “,<br>      “completion”: {<br>        “field”: “title_completion”<br>      }<br>    }<br>  }<br>}</p>\n<p>DELETE comments<br>PUT comments<br>PUT comments&#x2F;_mapping<br>{<br>  “properties”: {<br>    “comment_autocomplete”:{<br>      “type”: “completion”,<br>      “contexts”:[{<br>        “type”:”category”,<br>        “name”:”comment_category”<br>      }]<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_doc<br>{<br>  “comment”:”I love the star war movies”,<br>  “comment_autocomplete”:{<br>    “input”:[“star wars”],<br>    “contexts”:{<br>      “comment_category”:”movies”<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_doc<br>{<br>  “comment”:”Where can I find a Starbucks”,<br>  “comment_autocomplete”:{<br>    “input”:[“starbucks”],<br>    “contexts”:{<br>      “comment_category”:”coffee”<br>    }<br>  }<br>}</p>\n<p>POST comments&#x2F;_search<br>{<br>  “suggest”: {<br>    “MY_SUGGESTION”: {<br>      “prefix”: “sta”,<br>      “completion”:{<br>        “field”:”comment_autocomplete”,<br>        “contexts”:{<br>          “comment_category”:”coffee”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.13-跨集群搜索.md</span><br><br><span class=\"hljs-meta\"># 跨集群搜索</span><br></code></pre></td></tr></table></figure>\n<p>&#x2F;&#x2F;启动3个集群</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;cluster0node -E cluster.name&#x3D;cluster0 -E path.data&#x3D;cluster0_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9200 -E transport.port&#x3D;9300<br>bin&#x2F;elasticsearch -E node.name&#x3D;cluster1node -E cluster.name&#x3D;cluster1 -E path.data&#x3D;cluster1_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9201 -E transport.port&#x3D;9301<br>bin&#x2F;elasticsearch -E node.name&#x3D;cluster2node -E cluster.name&#x3D;cluster2 -E path.data&#x3D;cluster2_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9202 -E transport.port&#x3D;9302</p>\n<p>&#x2F;&#x2F;在每个集群上设置动态的设置<br>PUT _cluster&#x2F;settings<br>{<br>  “persistent”: {<br>    “cluster”: {<br>      “remote”: {<br>        “cluster0”: {<br>          “seeds”: [<br>            “127.0.0.1:9300”<br>          ],<br>          “transport.ping_schedule”: “30s”<br>        },<br>        “cluster1”: {<br>          “seeds”: [<br>            “127.0.0.1:9301”<br>          ],<br>          “transport.compress”: true,<br>          “skip_unavailable”: true<br>        },<br>        “cluster2”: {<br>          “seeds”: [<br>            “127.0.0.1:9302”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#cURL<br>curl -XPUT “<a href=\"http://localhost:9200/_cluster/settings\">http://localhost:9200/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>curl -XPUT “<a href=\"http://localhost:9201/_cluster/settings\">http://localhost:9201/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>curl -XPUT “<a href=\"http://localhost:9202/_cluster/settings\">http://localhost:9202/_cluster/settings</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“persistent”:{“cluster”:{“remote”:{“cluster0”:{“seeds”:[“127.0.0.1:9300”],”transport.ping_schedule”:”30s”},”cluster1”:{“seeds”:[“127.0.0.1:9301”],”transport.compress”:true,”skip_unavailable”:true},”cluster2”:{“seeds”:[“127.0.0.1:9302”]}}}}}’</p>\n<p>#创建测试数据<br>curl -XPOST “<a href=\"http://localhost:9200/users/_doc\">http://localhost:9200/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user1”,”age”:10}’</p>\n<p>curl -XPOST “<a href=\"http://localhost:9201/users/_doc\">http://localhost:9201/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user2”,”age”:20}’</p>\n<p>curl -XPOST “<a href=\"http://localhost:9202/users/_doc\">http://localhost:9202/users/_doc</a>“ -H ‘Content-Type: application&#x2F;json’ -d’<br>{“name”:”user3”,”age”:30}’</p>\n<p>#查询<br>GET &#x2F;users,cluster1:users,cluster2:users&#x2F;_search<br>{<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20,<br>        “lte”: 40<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.2-结构化搜索.md</span><br><br><span class=\"hljs-meta\"># 结构化搜索</span><br><br></code></pre></td></tr></table></figure>\n\n<p>#结构化搜索，精确匹配<br>DELETE products<br>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>GET products&#x2F;_mapping</p>\n<p>#对布尔值 match 查询，有算分<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “avaliable”: true<br>    }<br>  }<br>}</p>\n<p>#对布尔值，通过constant score 转成 filtering，没有算分<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “avaliable”: true<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#数字类型 Term<br>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “price”: 30<br>    }<br>  }<br>}</p>\n<p>#数字类型 terms<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “terms”: {<br>          “price”: [<br>            “20”,<br>            “30”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#数字 Range 查询<br>GET products&#x2F;_search<br>{<br>    “query” : {<br>        “constant_score” : {<br>            “filter” : {<br>                “range” : {<br>                    “price” : {<br>                        “gte” : 20,<br>                        “lte”  : 30<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<h1 id=\"日期-range\"><a href=\"#日期-range\" class=\"headerlink\" title=\"日期 range\"></a>日期 range</h1><p>POST products&#x2F;_search<br>{<br>    “query” : {<br>        “constant_score” : {<br>            “filter” : {<br>                “range” : {<br>                    “date” : {<br>                      “gte” : “now-1y”<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>#exists查询<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “exists”: {<br>          “field”: “date”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#处理多值字段<br>POST &#x2F;movies&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title” : “Father of the Bridge Part II”,”year”:1995, “genre”:”Comedy”}<br>{ “index”: { “_id”: 2 }}<br>{ “title” : “Dave”,”year”:1993,”genre”:[“Comedy”,”Romance”] }</p>\n<p>#处理多值字段，term 查询是包含，而不是等于<br>POST movies&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “genre.keyword”: “Comedy”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#字符类型 terms<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “terms”: {<br>          “productID.keyword”: [<br>            “QQPX-R-3956-#aD8”,<br>            “JODL-X-1937-#pV7”<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “price”: 30<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “date”: “2019-01-01”<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “date”: “2019-01-01”<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “productID.keyword”: “XHDK-A-1293-#fJ3”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “productID.keyword”: “XHDK-A-1293-#fJ3”<br>    }<br>  }<br>}</p>\n<p>#对布尔数值<br>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “term”: {<br>          “avaliable”: “false”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “avaliable”: {<br>        “value”: “false”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “price”: {<br>        “value”: “20”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “explain”: true,<br>  “query”: {<br>    “match”: {<br>      “price”: “20”<br>    }<br>    }<br>  }<br>}</p>\n<p>POST products&#x2F;_search<br>{<br>  “query”: {<br>    “constant_score”: {<br>      “filter”: {<br>        “bool”: {<br>          “must_not”: {<br>            “exists”: {<br>              “field”: “date”<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.3-搜索的相关性算分.md</span><br><br><span class=\"hljs-meta\"># 搜索的相关性算分</span><br><br></code></pre></td></tr></table></figure>\n\n\n<p>PUT testscore<br>{<br>  “settings”: {<br>    “number_of_shards”: 1<br>  },<br>  “mappings”: {<br>    “properties”: {<br>      “content”: {<br>        “type”: “text”<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT testscore&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “content”:”we use Elasticsearch to power the search” }<br>{ “index”: { “_id”: 2 }}<br>{ “content”:”we like elasticsearch” }<br>{ “index”: { “_id”: 3 }}<br>{ “content”:”The scoring of documents is caculated by the scoring formula” }<br>{ “index”: { “_id”: 4 }}<br>{ “content”:”you know, for search” }</p>\n<p>POST &#x2F;testscore&#x2F;_search<br>{<br>  &#x2F;&#x2F;“explain”: true,<br>  “query”: {<br>    “match”: {<br>      “content”:”you”<br>      &#x2F;&#x2F;“content”: “elasticsearch”<br>      &#x2F;&#x2F;“content”:”the”<br>      &#x2F;&#x2F;“content”: “the elasticsearch”<br>    }<br>  }<br>}</p>\n<p>POST testscore&#x2F;_search<br>{<br>    “query”: {<br>        “boosting” : {<br>            “positive” : {<br>                “term” : {<br>                    “content” : “elasticsearch”<br>                }<br>            },<br>            “negative” : {<br>                 “term” : {<br>                     “content” : “like”<br>                }<br>            },<br>            “negative_boost” : 0.2<br>        }<br>    }<br>}</p>\n<p>POST tmdb&#x2F;_search<br>{<br>  “_source”: [“title”,”overview”],<br>  “query”: {<br>    “more_like_this”: {<br>      “fields”: [<br>        “title^10”,”overview”<br>      ],<br>      “like”: [{“_id”:”14191”}],<br>      “min_term_freq”: 1,<br>      “max_query_terms”: 12<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 4.4-Query&amp;Filtering实现多字符串多字段查询.md</span><br><br><span class=\"hljs-meta\"># Query &amp; Filtering 与多字符串多字段查询</span><br><br></code></pre></td></tr></table></figure>\n<p>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>#基本语法<br>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool” : {<br>      “must” : {<br>        “term” : { “price” : “30” }<br>      },<br>      “filter”: {<br>        “term” : { “avaliable” : “true” }<br>      },<br>      “must_not” : {<br>        “range” : {<br>          “price” : { “lte” : 10 }<br>        }<br>      },<br>      “should” : [<br>        { “term” : { “productID.keyword” : “JODL-X-1937-#pV7” } },<br>        { “term” : { “productID.keyword” : “XHDK-A-1293-#fJ3” } }<br>      ],<br>      “minimum_should_match” :1<br>    }<br>  }<br>}</p>\n<p>#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题<br>POST &#x2F;newmovies&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title” : “Father of the Bridge Part II”,”year”:1995, “genre”:”Comedy”,”genre_count”:1 }<br>{ “index”: { “_id”: 2 }}<br>{ “title” : “Dave”,”year”:1993,”genre”:[“Comedy”,”Romance”],”genre_count”:2 }</p>\n<p>#must，有算分<br>POST &#x2F;newmovies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“term”: {“genre.keyword”: {“value”: “Comedy”}}},<br>        {“term”: {“genre_count”: {“value”: 1}}}</p>\n<pre><code>  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filter。不参与算分，结果的score是0<br>POST &#x2F;newmovies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “filter”: [<br>        {“term”: {“genre.keyword”: {“value”: “Comedy”}}},<br>        {“term”: {“genre_count”: {“value”: 1}}}<br>        ]</p>\n<pre><code>&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filtering Context<br>POST _search<br>{<br>  “query”: {<br>    “bool” : {</p>\n<pre><code>  &quot;filter&quot;: &#123;\n    &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;\n  &#125;,\n  &quot;must_not&quot; : &#123;\n    &quot;range&quot; : &#123;\n      &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Query Context<br>POST &#x2F;products&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “price” : 10,”avaliable”:true,”date”:”2018-01-01”, “productID” : “XHDK-A-1293-#fJ3” }<br>{ “index”: { “_id”: 2 }}<br>{ “price” : 20,”avaliable”:true,”date”:”2019-01-01”, “productID” : “KDKE-B-9947-#kL5” }<br>{ “index”: { “_id”: 3 }}<br>{ “price” : 30,”avaliable”:true, “productID” : “JODL-X-1937-#pV7” }<br>{ “index”: { “_id”: 4 }}<br>{ “price” : 30,”avaliable”:false, “productID” : “QQPX-R-3956-#aD8” }</p>\n<p>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        {<br>          “term”: {<br>            “productID.keyword”: {<br>              “value”: “JODL-X-1937-#pV7”}}<br>        },<br>        {“term”: {“avaliable”: {“value”: true}}<br>        }<br>      ]<br>    }<br>  }<br>}</p>\n<p>#嵌套，实现了 should not 逻辑<br>POST &#x2F;products&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “term”: {<br>          “price”: “30”<br>        }<br>      },<br>      “should”: [<br>        {<br>          “bool”: {<br>            “must_not”: {<br>              “term”: {<br>                “avaliable”: “false”<br>              }<br>            }<br>          }<br>        }<br>      ],<br>      “minimum_should_match”: 1<br>    }<br>  }<br>}</p>\n<p>#Controll the Precision<br>POST _search<br>{<br>  “query”: {<br>    “bool” : {<br>      “must” : {<br>        “term” : { “price” : “30” }<br>      },<br>      “filter”: {<br>        “term” : { “avaliable” : “true” }<br>      },<br>      “must_not” : {<br>        “range” : {<br>          “price” : { “lte” : 10 }<br>        }<br>      },<br>      “should” : [<br>        { “term” : { “productID.keyword” : “JODL-X-1937-#pV7” } },<br>        { “term” : { “productID.keyword” : “XHDK-A-1293-#fJ3” } }<br>      ],<br>      “minimum_should_match” :2<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;animals&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        { “term”: { “text”: “brown” }},<br>        { “term”: { “text”: “red” }},<br>        { “term”: { “text”: “quick”   }},<br>        { “term”: { “text”: “dog”   }}<br>      ]<br>    }<br>  }<br>}</p>\n<p>POST &#x2F;animals&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        { “term”: { “text”: “quick” }},<br>        { “term”: { “text”: “dog”   }},<br>        {<br>          “bool”:{<br>            “should”:[<br>               { “term”: { “text”: “brown” }},<br>                 { “term”: { “text”: “brown” }},<br>            ]<br>          }</p>\n<pre><code>    &#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>DELETE blogs<br>POST &#x2F;blogs&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{“title”:”Apple iPad”, “content”:”Apple iPad,Apple iPad” }<br>{ “index”: { “_id”: 2 }}<br>{“title”:”Apple iPad,Apple iPad”, “content”:”Apple iPad” }</p>\n<p>POST blogs&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “should”: [<br>        {“match”: {<br>          “title”: {<br>            “query”: “apple,ipad”,<br>            “boost”: 1.1<br>          }<br>        }},</p>\n<pre><code>    &#123;&quot;match&quot;: &#123;\n      &quot;content&quot;: &#123;\n        &quot;query&quot;: &quot;apple,ipad&quot;,\n        &quot;boost&quot;:\n      &#125;\n    &#125;&#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>DELETE news<br>POST &#x2F;news&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “content”:”Apple Mac” }<br>{ “index”: { “_id”: 2 }}<br>{ “content”:”Apple iPad” }<br>{ “index”: { “_id”: 3 }}<br>{ “content”:”Apple employee like Apple Pie and Apple Juice” }</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “match”:{“content”:”apple”}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: {<br>        “match”:{“content”:”apple”}<br>      },<br>      “must_not”: {<br>        “match”:{“content”:”pie”}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST news&#x2F;_search<br>{<br>  “query”: {<br>    “boosting”: {<br>      “positive”: {<br>        “match”: {<br>          “content”: “apple”<br>        }<br>      },<br>      “negative”: {<br>        “match”: {<br>          “content”: “pie”<br>        }<br>      },<br>      “negative_boost”: 0.5<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 4.5-单字符串多字段查询-DisMaxQuery.md</span><br><br><span class=\"hljs-meta\"># 单字符串多字段查询：Dis Max Query</span><br></code></pre></td></tr></table></figure>\n\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;1<br>{<br>    “title”: “Quick brown rabbits”,<br>    “body”:  “Brown rabbits are commonly seen.”<br>}</p>\n<p>PUT &#x2F;blogs&#x2F;_doc&#x2F;2<br>{<br>    “title”: “Keeping pets healthy”,<br>    “body”:  “My quick brown fox eats rabbits on a regular basis.”<br>}</p>\n<p>POST &#x2F;blogs&#x2F;_search<br>{<br>    “query”: {<br>        “bool”: {<br>            “should”: [<br>                { “match”: { “title”: “Brown fox” }},<br>                { “match”: { “body”:  “Brown fox” }}<br>            ]<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ]<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ],<br>            “tie_breaker”: 0.2<br>        }<br>    }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 4.6-单字符串多字段查询-Multi-Match.md</span><br><br><span class=\"hljs-meta\"># 单字符串多字段查询：Multi Match</span><br></code></pre></td></tr></table></figure>\n<p>POST blogs&#x2F;_search<br>{<br>    “query”: {<br>        “dis_max”: {<br>            “queries”: [<br>                { “match”: { “title”: “Quick pets” }},<br>                { “match”: { “body”:  “Quick pets” }}<br>            ],<br>            “tie_breaker”: 0.2<br>        }<br>    }<br>}</p>\n<p>POST blogs&#x2F;_search<br>{<br>  “query”: {<br>    “multi_match”: {<br>      “type”: “best_fields”,<br>      “query”: “Quick pets”,<br>      “fields”: [“title”,”body”],<br>      “tie_breaker”: 0.2,<br>      “minimum_should_match”: “20%”<br>    }<br>  }<br>}</p>\n<p>POST books&#x2F;_search<br>{<br>    “multi_match”: {<br>        “query”:  “Quick brown fox”,<br>        “fields”: “*_title”<br>    }<br>}</p>\n<p>POST books&#x2F;_search<br>{<br>    “multi_match”: {<br>        “query”:  “Quick brown fox”,<br>        “fields”: [ “*_title”, “chapter_title^2” ]<br>    }<br>}</p>\n<p>DELETE &#x2F;titles<br>PUT &#x2F;titles<br>{<br>    “settings”: { “number_of_shards”: 1 },<br>    “mappings”: {<br>        “my_type”: {<br>            “properties”: {<br>                “title”: {<br>                    “type”:     “string”,<br>                    “analyzer”: “english”,<br>                    “fields”: {<br>                        “std”:   {<br>                            “type”:     “string”,<br>                            “analyzer”: “standard”<br>                        }<br>                    }<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>PUT &#x2F;titles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title”: {<br>        “type”: “text”,<br>        “analyzer”: “english”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST titles&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title”: “My dog barks” }<br>{ “index”: { “_id”: 2 }}<br>{ “title”: “I see a lot of barking dogs on the road “ }</p>\n<p>GET titles&#x2F;_search<br>{<br>  “query”: {<br>    “match”: {<br>      “title”: “barking dogs”<br>    }<br>  }<br>}</p>\n<p>DELETE &#x2F;titles<br>PUT &#x2F;titles<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “title”: {<br>        “type”: “text”,<br>        “analyzer”: “english”,<br>        “fields”: {“std”: {“type”: “text”,”analyzer”: “standard”}}<br>      }<br>    }<br>  }<br>}</p>\n<p>POST titles&#x2F;_bulk<br>{ “index”: { “_id”: 1 }}<br>{ “title”: “My dog barks” }<br>{ “index”: { “_id”: 2 }}<br>{ “title”: “I see a lot of barking dogs on the road “ }</p>\n<p>GET &#x2F;titles&#x2F;_search<br>{<br>   “query”: {<br>        “multi_match”: {<br>            “query”:  “barking dogs”,<br>            “type”:   “most_fields”,<br>            “fields”: [ “title”, “title.std” ]<br>        }<br>    }<br>}</p>\n<p>GET &#x2F;titles&#x2F;_search<br>{<br>   “query”: {<br>        “multi_match”: {<br>            “query”:  “barking dogs”,<br>            “type”:   “most_fields”,<br>            “fields”: [ “title^10”, “title.std” ]<br>        }<br>    }<br>}</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><br><span class=\"hljs-section\"># 4.7-多语言及中文分词与检索.md</span><br><br><span class=\"hljs-section\"># 多语言及中文分词与检索</span><br><br><span class=\"hljs-bullet\">-</span> 来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”<br><br><span class=\"hljs-bullet\">-</span> 你也想犯范范玮琪犯过的错吗<br><span class=\"hljs-bullet\">-</span> 校长说衣服上除了校徽别别别的<br><span class=\"hljs-bullet\">-</span> 这几天天天天气不好<br><span class=\"hljs-bullet\">-</span> 我背有点驼，麻麻说“你的背得背背背背佳<br><br></code></pre></td></tr></table></figure>\n<p>#stop word</p>\n<p>DELETE my_index<br>PUT &#x2F;my_index&#x2F;_doc&#x2F;1<br>{ “title”: “I’m happy for this fox” }</p>\n<p>PUT &#x2F;my_index&#x2F;_doc&#x2F;2<br>{ “title”: “I’m not happy about my fox problem” }</p>\n<p>POST my_index&#x2F;_search<br>{<br>  “query”: {<br>    “match”: {<br>      “title”: “not happy fox”<br>    }<br>  }<br>}</p>\n<p>#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 <code>english</code>（英语）分析器，另一次使用 <code>standard</code>（标准）分析器:</p>\n<p>DELETE my_index</p>\n<p>PUT &#x2F;my_index<br>{<br>  “mappings”: {<br>    “blog”: {<br>      “properties”: {<br>        “title”: {<br>          “type”: “string”,<br>          “analyzer”: “english”<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;my_index<br>{<br>  “mappings”: {<br>    “blog”: {<br>      “properties”: {<br>        “title”: {<br>          “type”: “string”,<br>          “fields”: {<br>            “english”: {<br>              “type”:     “string”,<br>              “analyzer”: “english”<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>PUT &#x2F;my_index&#x2F;blog&#x2F;1<br>{ “title”: “I’m happy for this fox” }</p>\n<p>PUT &#x2F;my_index&#x2F;blog&#x2F;2<br>{ “title”: “I’m not happy about my fox problem” }</p>\n<p>GET &#x2F;_search<br>{<br>  “query”: {<br>    “multi_match”: {<br>      “type”:     “most_fields”,<br>      “query”:    “not happy foxes”,<br>      “fields”: [ “title”, “title.english” ]<br>    }<br>  }<br>}</p>\n<p>#安装插件<br>.&#x2F;elasticsearch-plugin install <a href=\"https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip\">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip</a><br>#安装插件<br>bin&#x2F;elasticsearch install <a href=\"https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip\">https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip</a></p>\n<p>#ik_max_word<br>#ik_smart<br>#hanlp: hanlp默认分词<br>#hanlp_standard: 标准分词<br>#hanlp_index: 索引分词<br>#hanlp_nlp: NLP分词<br>#hanlp_n_short: N-最短路分词<br>#hanlp_dijkstra: 最短路分词<br>#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）<br>#hanlp_speed: 极速词典分词</p>\n<p>POST _analyze<br>{<br>  “analyzer”: “hanlp_standard”,<br>  “text”: [“剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜”]</p>\n<p>}     </p>\n<p>#Pinyin<br>PUT &#x2F;artists&#x2F;<br>{<br>    “settings” : {<br>        “analysis” : {<br>            “analyzer” : {<br>                “user_name_analyzer” : {<br>                    “tokenizer” : “whitespace”,<br>                    “filter” : “pinyin_first_letter_and_full_pinyin_filter”<br>                }<br>            },<br>            “filter” : {<br>                “pinyin_first_letter_and_full_pinyin_filter” : {<br>                    “type” : “pinyin”,<br>                    “keep_first_letter” : true,<br>                    “keep_full_pinyin” : false,<br>                    “keep_none_chinese” : true,<br>                    “keep_original” : false,<br>                    “limit_first_letter_length” : 16,<br>                    “lowercase” : true,<br>                    “trim_whitespace” : true,<br>                    “keep_none_chinese_in_first_letter” : true<br>                }<br>            }<br>        }<br>    }<br>}</p>\n<p>GET &#x2F;artists&#x2F;_analyze<br>{<br>  “text”: [“刘德华 张学友 郭富城 黎明 四大天王”],<br>  “analyzer”: “user_name_analyzer”<br>}</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">## 相关资源</span><br>- Elasticsearch IK分词插件 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/medcl/</span>elasticsearch-analysis-ik/releases<br>- Elasticsearch hanlp 分词插件 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/KennFalcon/</span>elasticsearch-analysis-hanlp<br><br>- 分词算法综述 https:<span class=\"hljs-regexp\">//</span>zhuanlan.zhihu.com<span class=\"hljs-regexp\">/p/</span><span class=\"hljs-number\">50444885</span><br><br><span class=\"hljs-comment\">### 一些分词工具，供参考：</span><br>- 中科院计算所NLPIR http:<span class=\"hljs-regexp\">//i</span>ctclas.nlpir.org<span class=\"hljs-regexp\">/nlpir/</span><br>- ansj分词器 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/NLPchina/</span>ansj_seg<br>- 哈工大的LTP https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/HIT-SCIR/</span>ltp<br>- 清华大学THULAC https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/thunlp/</span>THULAC<br>- 斯坦福分词器 https:<span class=\"hljs-regexp\">//</span>nlp.stanford.edu<span class=\"hljs-regexp\">/software/</span>segmenter.shtml<br>- Hanlp分词器 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/hankcs/</span>HanLP<br>- 结巴分词 https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/yanyiwu/</span>cppjieba<br>- KCWS分词器(字嵌入+Bi-LSTM+CRF) https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/koth/</span>kcws<br>- ZPar https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/frcchang/</span>zpar/releases<br>- IKAnalyzer https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/wks/i</span>k-analyzer<br><br><br><span class=\"hljs-comment\"># 4.8-SpaceJam一个全文搜索的实例.md</span><br><br><span class=\"hljs-comment\"># Space Jam，一次全文搜索的实例</span><br><br><span class=\"hljs-comment\">## 环境要求</span><br>- Python <span class=\"hljs-number\">2.7</span>.<span class=\"hljs-number\">15</span><br>- 可以使用pyenv管理多个python版本（可选）<br><br><span class=\"hljs-comment\">## 进入 tmdb-search目录</span><br>Run<br>pip install -r requirements.txt<br>Run python ./ingest_tmdb_from_file.py<br></code></pre></td></tr></table></figure>\n<p>POST tmdb&#x2F;_search<br>{<br>“_source”: [“title”,”overview”],<br> “query”: {<br>   “match_all”: {}<br> }<br>}</p>\n<p>POST tmdb&#x2F;_search<br>{<br>  “_source”: [“title”,”overview”],<br>  “query”: {<br>    “multi_match”: {<br>      “query”: “basketball with cartoon aliens”,<br>      “fields”: [“title”,”overview”]<br>    }<br>  },<br>  “highlight” : {<br>        “fields” : {<br>            “overview” : { “pre_tags” : [“\\033[0;32;40m”], “post_tags” : [“\\033[0m”] },<br>            “title” : { “pre_tags” : [“\\033[0;32;40m”], “post_tags” : [“\\033[0m”] }</p>\n<pre><code>    &#125;\n&#125;\n</code></pre>\n<p>}</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><br><span class=\"hljs-comment\">## 相关</span><br>- Windows 安装 pyenv https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/pyenv-win/</span>pyenv-win<br>- Mac 安装pyenv https:<span class=\"hljs-regexp\">//</span>segmentfault.com<span class=\"hljs-regexp\">/a/</span><span class=\"hljs-number\">1190000017403221</span><br>- Linux 安装 pyenv https:<span class=\"hljs-regexp\">//</span>blog.csdn.net<span class=\"hljs-regexp\">/GX_1_11_real/</span>article<span class=\"hljs-regexp\">/details/</span><span class=\"hljs-number\">80237064</span><br>- Python.org https:<span class=\"hljs-regexp\">//</span>www.python.org/<br><br><br><span class=\"hljs-comment\"># 4.9-使用SearchTemplate和IndexAlias进行查询.md</span><br><br><span class=\"hljs-comment\"># 使用 Search Template 和 Index Alias 查询</span><br><br></code></pre></td></tr></table></figure>\n<p>POST _scripts&#x2F;tmdb<br>{<br>  “script”: {<br>    “lang”: “mustache”,<br>    “source”: {<br>      “_source”: [<br>        “title”,”overview”<br>      ],<br>      “size”: 20,<br>      “query”: {<br>        “multi_match”: {<br>          “query”: ““,<br>          “fields”: [“title”,”overview”]<br>        }<br>      }<br>    }<br>  }<br>}<br>DELETE _scripts&#x2F;tmdb</p>\n<p>GET _scripts&#x2F;tmdb</p>\n<p>POST tmdb&#x2F;_search&#x2F;template<br>{<br>    “id”:”tmdb”,<br>    “params”: {<br>        “q”: “basketball with cartoon aliens”<br>    }<br>}</p>\n<p>PUT movies-2019&#x2F;_doc&#x2F;1<br>{<br>  “name”:”the matrix”,<br>  “rating”:5<br>}</p>\n<p>PUT movies-2019&#x2F;_doc&#x2F;2<br>{<br>  “name”:”Speed”,<br>  “rating”:3<br>}</p>\n<p>POST _aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “movies-2019”,<br>        “alias”: “movies-latest”<br>      }<br>    }<br>  ]<br>}</p>\n<p>POST movies-latest&#x2F;_search<br>{<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<p>POST _aliases<br>{<br>  “actions”: [<br>    {<br>      “add”: {<br>        “index”: “movies-2019”,<br>        “alias”: “movies-lastest-highrate”,<br>        “filter”: {<br>          “range”: {<br>            “rating”: {<br>              “gte”: 4<br>            }<br>          }<br>        }<br>      }<br>    }<br>  ]<br>}</p>\n<p>POST movies-lastest-highrate&#x2F;_search<br>{<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.1-集群分布式模型及选主与脑裂问题.md</span><br><br><span class=\"hljs-meta\"># 集群分布式模型及选主与脑裂问题</span><br><br></code></pre></td></tr></table></figure>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.data&#x3D;node1_data<br>bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.data&#x3D;node2_data<br>bin&#x2F;elasticsearch -E node.name&#x3D;node3 -E cluster.name&#x3D;geektime -E path.data&#x3D;node3_data</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 5.2-分片与集群的故障转移.md</span><br><br><span class=\"hljs-meta\"># 分片与集群的故障转移</span><br><br><br><span class=\"hljs-meta\"># 5.3-文档分布式存储.md</span><br><br><span class=\"hljs-meta\"># 文档分布式存储</span><br><br><br><span class=\"hljs-meta\"># 5.4-分片及其生命周期.md</span><br><br><span class=\"hljs-meta\"># 分片及其生命周期</span><br><br><br><span class=\"hljs-meta\"># 5.5-剖析分布式查询及相关性评分.md</span><br><br><span class=\"hljs-meta\"># 剖析分布式查询及相关性评分</span><br></code></pre></td></tr></table></figure>\n<p>DELETE message<br>PUT message<br>{<br>  “settings”: {<br>    “number_of_shards”: 20<br>  }<br>}</p>\n<p>GET message</p>\n<p>POST message&#x2F;_doc?routing&#x3D;1<br>{<br>  “content”:”good”<br>}</p>\n<p>POST message&#x2F;_doc?routing&#x3D;2<br>{<br>  “content”:”good morning”<br>}</p>\n<p>POST message&#x2F;_doc?routing&#x3D;3<br>{<br>  “content”:”good morning everyone”<br>}</p>\n<p>POST message&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “match_all”: {}<br>  }<br>}</p>\n<p>POST message&#x2F;_search<br>{<br>  “explain”: true,<br>  “query”: {<br>    “term”: {<br>      “content”: {<br>        “value”: “good”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST message&#x2F;_search?search_type&#x3D;dfs_query_then_fetch<br>{</p>\n<p>  “query”: {<br>    “term”: {<br>      “content”: {<br>        “value”: “good”<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.6-排序及DocValues&amp;Fielddata.md</span><br><br><span class=\"hljs-meta\"># 排序及Doc Values &amp; Fielddata</span><br></code></pre></td></tr></table></figure>\n<p>#单字段排序<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code>&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“order_date”: {“order”: “desc”}}<br>  ]<br>}</p>\n<p>#多字段排序<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code>&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“order_date”: {“order”: “desc”}},<br>    {“_doc”:{“order”: “asc”}},<br>    {“_score”:{ “order”: “desc”}}<br>  ]<br>}</p>\n<p>GET kibana_sample_data_ecommerce&#x2F;_mapping</p>\n<p>#对 text 字段进行排序。默认会报错，需打开fielddata<br>POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search<br>{<br>  “size”: 5,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code>&#125;\n</code></pre>\n<p>  },<br>  “sort”: [<br>    {“customer_full_name”: {“order”: “desc”}}<br>  ]<br>}</p>\n<p>#打开 text的 fielddata<br>PUT kibana_sample_data_ecommerce&#x2F;_mapping<br>{<br>  “properties”: {<br>    “customer_full_name” : {<br>          “type” : “text”,<br>          “fielddata”: true,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 256<br>            }<br>          }<br>        }<br>  }<br>}</p>\n<p>#关闭 keyword的 doc values<br>PUT test_keyword<br>PUT test_keyword&#x2F;_mapping<br>{<br>  “properties”: {<br>    “user_name”:{<br>      “type”: “keyword”,<br>      “doc_values”:false<br>    }<br>  }<br>}</p>\n<p>DELETE test_keyword</p>\n<p>PUT test_text<br>PUT test_text&#x2F;_mapping<br>{<br>  “properties”: {<br>    “intro”:{<br>      “type”: “text”,<br>      “doc_values”:true<br>    }<br>  }<br>}</p>\n<p>DELETE test_text</p>\n<p>DELETE temp_users<br>PUT temp_users<br>PUT temp_users&#x2F;_mapping<br>{<br>  “properties”: {<br>    “name”:{“type”: “text”,”fielddata”: true},<br>    “desc”:{“type”: “text”,”fielddata”: true}<br>  }<br>}</p>\n<p>Post temp_users&#x2F;_doc<br>{“name”:”Jack”,”desc”:”Jack is a good boy!”,”age”:10}</p>\n<p>#打开fielddata 后，查看 docvalue_fields数据<br>POST  temp_users&#x2F;_search<br>{<br>  “docvalue_fields”: [<br>    “name”,”desc”<br>    ]<br>}</p>\n<p>#查看整型字段的docvalues<br>POST  temp_users&#x2F;_search<br>{<br>  “docvalue_fields”: [<br>    “age”<br>    ]<br>}</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"><br><br># 5.7-分页与遍历-FromSize<span class=\"hljs-variable\">&amp;SearchAfter</span><span class=\"hljs-variable\">&amp;ScrollAPI.</span>md<br><br># 分页与遍历 - <span class=\"hljs-keyword\">From</span>, Size, Search_after &amp; Scroll API<br></code></pre></td></tr></table></figure>\n\n<p>POST tmdb&#x2F;_search<br>{<br>  “from”: 10000,<br>  “size”: 1,<br>  “query”: {<br>    “match_all”: {</p>\n<pre><code>&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Scroll API<br>DELETE users</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user1”,”age”:10}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:11}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:12}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:13}</p>\n<p>POST users&#x2F;_count</p>\n<p>POST users&#x2F;_search<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all”: {}<br>    },<br>    “sort”: [<br>        {“age”: “desc”} ,<br>        {“_id”: “asc”}<br>    ]<br>}</p>\n<p>POST users&#x2F;_search<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all”: {}<br>    },<br>    “search_after”:<br>        [<br>          10,<br>          “ZQ0vYGsBrR8X3IP75QqX”],<br>    “sort”: [<br>        {“age”: “desc”} ,<br>        {“_id”: “asc”}<br>    ]<br>}</p>\n<p>#Scroll API<br>DELETE users<br>POST users&#x2F;_doc<br>{“name”:”user1”,”age”:10}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user2”,”age”:20}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user3”,”age”:30}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user4”,”age”:40}</p>\n<p>POST &#x2F;users&#x2F;_search?scroll&#x3D;5m<br>{<br>    “size”: 1,<br>    “query”: {<br>        “match_all” : {<br>        }<br>    }<br>}</p>\n<p>POST users&#x2F;_doc<br>{“name”:”user5”,”age”:50}<br>POST &#x2F;_search&#x2F;scroll<br>{<br>    “scroll” : “1m”,<br>    “scroll_id” : “DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ&#x3D;&#x3D;”<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><span class=\"hljs-meta\"># 5.8-处理并发读写.md</span><br><br><span class=\"hljs-meta\"># 处理并发读写操作</span><br></code></pre></td></tr></table></figure>\n\n<p>DELETE products<br>PUT products</p>\n<p>PUT products&#x2F;_doc&#x2F;1<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<p>GET products&#x2F;_doc&#x2F;1</p>\n<p>PUT products&#x2F;_doc&#x2F;1?if_seq_no&#x3D;1&amp;if_primary_term&#x3D;1<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<p>PUT products&#x2F;_doc&#x2F;1?version&#x3D;30000&amp;version_type&#x3D;external<br>{<br>  “title”:”iphone”,<br>  “count”:100<br>}</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br><br># <span class=\"hljs-number\">6.1</span>-Bucket&amp;Metric聚合分析及嵌套聚合.md<br><br># Bucket &amp; Metric Aggregation<br>## demos<br></code></pre></td></tr></table></figure>\n<p>DELETE &#x2F;employees<br>PUT &#x2F;employees&#x2F;<br>{<br>  “mappings” : {<br>      “properties” : {<br>        “age” : {<br>          “type” : “integer”<br>        },<br>        “gender” : {<br>          “type” : “keyword”<br>        },<br>        “job” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 50<br>            }<br>          }<br>        },<br>        “name” : {<br>          “type” : “keyword”<br>        },<br>        “salary” : {<br>          “type” : “integer”<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"Metric-聚合，找到最低的工资\"><a href=\"#Metric-聚合，找到最低的工资\" class=\"headerlink\" title=\"Metric 聚合，找到最低的工资\"></a>Metric 聚合，找到最低的工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “min_salary”: {<br>      “min”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"Metric-聚合，找到最高的工资\"><a href=\"#Metric-聚合，找到最高的工资\" class=\"headerlink\" title=\"Metric 聚合，找到最高的工资\"></a>Metric 聚合，找到最高的工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “max_salary”: {<br>      “max”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"多个-Metric-聚合，找到最低最高和平均工资\"><a href=\"#多个-Metric-聚合，找到最低最高和平均工资\" class=\"headerlink\" title=\"多个 Metric 聚合，找到最低最高和平均工资\"></a>多个 Metric 聚合，找到最低最高和平均工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “max_salary”: {<br>      “max”: {<br>        “field”: “salary”<br>      }<br>    },<br>    “min_salary”: {<br>      “min”: {<br>        “field”: “salary”<br>      }<br>    },<br>    “avg_salary”: {<br>      “avg”: {<br>        “field”: “salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"一个聚合，输出多值\"><a href=\"#一个聚合，输出多值\" class=\"headerlink\" title=\"一个聚合，输出多值\"></a>一个聚合，输出多值</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “stats_salary”: {<br>      “stats”: {<br>        “field”:”salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对keword-进行聚合\"><a href=\"#对keword-进行聚合\" class=\"headerlink\" title=\"对keword 进行聚合\"></a>对keword 进行聚合</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段进行-terms-聚合查询，失败\"><a href=\"#对-Text-字段进行-terms-聚合查询，失败\" class=\"headerlink\" title=\"对 Text 字段进行 terms 聚合查询，失败\"></a>对 Text 字段进行 terms 聚合查询，失败</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段打开-fielddata，支持terms-aggregation\"><a href=\"#对-Text-字段打开-fielddata，支持terms-aggregation\" class=\"headerlink\" title=\"对 Text 字段打开 fielddata，支持terms aggregation\"></a>对 Text 字段打开 fielddata，支持terms aggregation</h1><p>PUT employees&#x2F;_mapping<br>{<br>  “properties” : {<br>    “job”:{<br>       “type”:     “text”,<br>       “fielddata”: true<br>    }<br>  }<br>}</p>\n<h1 id=\"对-Text-字段进行-terms-分词。分词后的terms\"><a href=\"#对-Text-字段进行-terms-分词。分词后的terms\" class=\"headerlink\" title=\"对 Text 字段进行 terms 分词。分词后的terms\"></a>对 Text 字段进行 terms 分词。分词后的terms</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对job-keyword-和-job-进行-terms-聚合，分桶的总数并不一样\"><a href=\"#对job-keyword-和-job-进行-terms-聚合，分桶的总数并不一样\" class=\"headerlink\" title=\"对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样\"></a>对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “cardinate”: {<br>      “cardinality”: {<br>        “field”: “job”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"对-性别的-keyword-进行聚合\"><a href=\"#对-性别的-keyword-进行聚合\" class=\"headerlink\" title=\"对 性别的 keyword 进行聚合\"></a>对 性别的 keyword 进行聚合</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “gender”: {<br>      “terms”: {<br>        “field”:”gender”<br>      }<br>    }<br>  }<br>}</p>\n<p>#指定 bucket 的 size<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “ages_5”: {<br>      “terms”: {<br>        “field”:”age”,<br>        “size”:3<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"指定size，不同工种中，年纪最大的3个员工的具体信息\"><a href=\"#指定size，不同工种中，年纪最大的3个员工的具体信息\" class=\"headerlink\" title=\"指定size，不同工种中，年纪最大的3个员工的具体信息\"></a>指定size，不同工种中，年纪最大的3个员工的具体信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”<br>      },<br>      “aggs”:{<br>        “old_employee”:{<br>          “top_hits”:{<br>            “size”:3,<br>            “sort”:[<br>              {<br>                “age”:{<br>                  “order”:”desc”<br>                }<br>              }<br>            ]<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Salary Ranges 分桶，可以自己定义 key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “salary_range”: {<br>      “range”: {<br>        “field”:”salary”,<br>        “ranges”:[<br>          {<br>            “to”:10000<br>          },<br>          {<br>            “from”:10000,<br>            “to”:20000<br>          },<br>          {<br>            “key”:”&gt;20000”,<br>            “from”:20000<br>          }<br>        ]<br>      }<br>    }<br>  }<br>}</p>\n<p>#Salary Histogram,工资0到10万，以 5000一个区间进行分桶<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “salary_histrogram”: {<br>      “histogram”: {<br>        “field”:”salary”,<br>        “interval”:5000,<br>        “extended_bounds”:{<br>          “min”:0,<br>          “max”:100000</p>\n<pre><code>    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"嵌套聚合1，按照工作类型分桶，并统计工资信息\"><a href=\"#嵌套聚合1，按照工作类型分桶，并统计工资信息\" class=\"headerlink\" title=\"嵌套聚合1，按照工作类型分桶，并统计工资信息\"></a>嵌套聚合1，按照工作类型分桶，并统计工资信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “Job_salary_stats”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      },<br>      “aggs”: {<br>        “salary”: {<br>          “stats”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\"><a href=\"#多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\" class=\"headerlink\" title=\"多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息\"></a>多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “Job_gender_stats”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      },<br>      “aggs”: {<br>        “gender_stats”: {<br>          “terms”: {<br>            “field”: “gender”<br>          },<br>          “aggs”: {<br>            “salary_stats”: {<br>              “stats”: {<br>                “field”: “salary”<br>              }<br>            }<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\"><br><br># <span class=\"hljs-number\">6.2</span>-Pipeline聚合分析.md<br><br># Pipeline 聚合分析<br>## 课程 demo<br></code></pre></td></tr></table></figure>\n<p>DELETE employees<br>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"平均工资最低的工作类型\"><a href=\"#平均工资最低的工作类型\" class=\"headerlink\" title=\"平均工资最低的工作类型\"></a>平均工资最低的工作类型</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “min_salary_by_job”:{<br>      “min_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资最高的工作类型\"><a href=\"#平均工资最高的工作类型\" class=\"headerlink\" title=\"平均工资最高的工作类型\"></a>平均工资最高的工作类型</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “max_salary_by_job”:{<br>      “max_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的平均工资\"><a href=\"#平均工资的平均工资\" class=\"headerlink\" title=\"平均工资的平均工资\"></a>平均工资的平均工资</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “avg_salary_by_job”:{<br>      “avg_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的统计分析\"><a href=\"#平均工资的统计分析\" class=\"headerlink\" title=\"平均工资的统计分析\"></a>平均工资的统计分析</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “stats_salary_by_job”:{<br>      “stats_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"平均工资的百分位数\"><a href=\"#平均工资的百分位数\" class=\"headerlink\" title=\"平均工资的百分位数\"></a>平均工资的百分位数</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”,<br>        “size”: 10<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        }<br>      }<br>    },<br>    “percentiles_salary_by_job”:{<br>      “percentiles_bucket”: {<br>        “buckets_path”: “jobs&gt;avg_salary”<br>      }<br>    }<br>  }<br>}</p>\n<p>#按照年龄对平均工资求导<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “derivative_avg_salary”:{<br>          “derivative”: {<br>            “buckets_path”: “avg_salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Cumulative_sum<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “cumulative_salary”:{<br>          “cumulative_sum”: {<br>            “buckets_path”: “avg_salary”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#Moving Function<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “age”: {<br>      “histogram”: {<br>        “field”: “age”,<br>        “min_doc_count”: 1,<br>        “interval”: 1<br>      },<br>      “aggs”: {<br>        “avg_salary”: {<br>          “avg”: {<br>            “field”: “salary”<br>          }<br>        },<br>        “moving_avg_salary”:{<br>          “moving_fn”: {<br>            “buckets_path”: “avg_salary”,<br>            “window”:10,<br>            “script”: “MovingFunctions.min(values)”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 6.3-作用范围与排序.md</span><br><br><span class=\"hljs-meta\"># 作用范围与排序</span><br></code></pre></td></tr></table></figure>\n<p>DELETE &#x2F;employees<br>PUT &#x2F;employees&#x2F;<br>{<br>  “mappings” : {<br>      “properties” : {<br>        “age” : {<br>          “type” : “integer”<br>        },<br>        “gender” : {<br>          “type” : “keyword”<br>        },<br>        “job” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 50<br>            }<br>          }<br>        },<br>        “name” : {<br>          “type” : “keyword”<br>        },<br>        “salary” : {<br>          “type” : “integer”<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT &#x2F;employees&#x2F;_bulk<br>{ “index” : {  “_id” : “1” } }<br>{ “name” : “Emma”,”age”:32,”job”:”Product Manager”,”gender”:”female”,”salary”:35000 }<br>{ “index” : {  “_id” : “2” } }<br>{ “name” : “Underwood”,”age”:41,”job”:”Dev Manager”,”gender”:”male”,”salary”: 50000}<br>{ “index” : {  “_id” : “3” } }<br>{ “name” : “Tran”,”age”:25,”job”:”Web Designer”,”gender”:”male”,”salary”:18000 }<br>{ “index” : {  “_id” : “4” } }<br>{ “name” : “Rivera”,”age”:26,”job”:”Web Designer”,”gender”:”female”,”salary”: 22000}<br>{ “index” : {  “_id” : “5” } }<br>{ “name” : “Rose”,”age”:25,”job”:”QA”,”gender”:”female”,”salary”:18000 }<br>{ “index” : {  “_id” : “6” } }<br>{ “name” : “Lucy”,”age”:31,”job”:”QA”,”gender”:”female”,”salary”: 25000}<br>{ “index” : {  “_id” : “7” } }<br>{ “name” : “Byrd”,”age”:27,”job”:”QA”,”gender”:”male”,”salary”:20000 }<br>{ “index” : {  “_id” : “8” } }<br>{ “name” : “Foster”,”age”:27,”job”:”Java Programmer”,”gender”:”male”,”salary”: 20000}<br>{ “index” : {  “_id” : “9” } }<br>{ “name” : “Gregory”,”age”:32,”job”:”Java Programmer”,”gender”:”male”,”salary”:22000 }<br>{ “index” : {  “_id” : “10” } }<br>{ “name” : “Bryant”,”age”:20,”job”:”Java Programmer”,”gender”:”male”,”salary”: 9000}<br>{ “index” : {  “_id” : “11” } }<br>{ “name” : “Jenny”,”age”:36,”job”:”Java Programmer”,”gender”:”female”,”salary”:38000 }<br>{ “index” : {  “_id” : “12” } }<br>{ “name” : “Mcdonald”,”age”:31,”job”:”Java Programmer”,”gender”:”male”,”salary”: 32000}<br>{ “index” : {  “_id” : “13” } }<br>{ “name” : “Jonthna”,”age”:30,”job”:”Java Programmer”,”gender”:”female”,”salary”:30000 }<br>{ “index” : {  “_id” : “14” } }<br>{ “name” : “Marshall”,”age”:32,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 25000}<br>{ “index” : {  “_id” : “15” } }<br>{ “name” : “King”,”age”:33,”job”:”Java Programmer”,”gender”:”male”,”salary”:28000 }<br>{ “index” : {  “_id” : “16” } }<br>{ “name” : “Mccarthy”,”age”:21,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “17” } }<br>{ “name” : “Goodwin”,”age”:25,”job”:”Javascript Programmer”,”gender”:”male”,”salary”: 16000}<br>{ “index” : {  “_id” : “18” } }<br>{ “name” : “Catherine”,”age”:29,”job”:”Javascript Programmer”,”gender”:”female”,”salary”: 20000}<br>{ “index” : {  “_id” : “19” } }<br>{ “name” : “Boone”,”age”:30,”job”:”DBA”,”gender”:”male”,”salary”: 30000}<br>{ “index” : {  “_id” : “20” } }<br>{ “name” : “Kathy”,”age”:29,”job”:”DBA”,”gender”:”female”,”salary”: 20000}</p>\n<h1 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h1><p>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code>  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Filter<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “older_person”: {<br>      “filter”:{<br>        “range”:{<br>          “age”:{<br>            “from”:35<br>          }<br>        }<br>      },<br>      “aggs”:{<br>         “jobs”:{<br>           “terms”: {<br>        “field”:”job.keyword”<br>      }<br>      }<br>    }},<br>    “all_jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code>  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果<br>POST employees&#x2F;_search<br>{<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”: “job.keyword”<br>      }<br>    }<br>  },<br>  “post_filter”: {<br>    “match”: {<br>      “job.keyword”: “Dev Manager”<br>    }<br>  }<br>}</p>\n<p>#global<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 40<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”</p>\n<pre><code>  &#125;\n&#125;,\n\n&quot;all&quot;:&#123;\n  &quot;global&quot;:&#123;&#125;,\n  &quot;aggs&quot;:&#123;\n    &quot;salary_avg&quot;:&#123;\n      &quot;avg&quot;:&#123;\n        &quot;field&quot;:&quot;salary&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “query”: {<br>    “range”: {<br>      “age”: {<br>        “gte”: 20<br>      }<br>    }<br>  },<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[<br>          {“_count”:”asc”},<br>          {“_key”:”desc”}<br>          ]</p>\n<pre><code>  &#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[  {<br>            “avg_salary”:”desc”<br>          }]</p>\n<pre><code>  &#125;,\n&quot;aggs&quot;: &#123;\n  &quot;avg_salary&quot;: &#123;\n    &quot;avg&quot;: &#123;\n      &quot;field&quot;:&quot;salary&quot;\n    &#125;\n  &#125;\n&#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<p>#排序 order<br>#count and key<br>POST employees&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “jobs”: {<br>      “terms”: {<br>        “field”:”job.keyword”,<br>        “order”:[  {<br>            “stats_salary.min”:”desc”<br>          }]</p>\n<pre><code>  &#125;,\n&quot;aggs&quot;: &#123;\n  &quot;stats_salary&quot;: &#123;\n    &quot;stats&quot;: &#123;\n      &quot;field&quot;:&quot;salary&quot;\n    &#125;\n  &#125;\n&#125;\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 6.4-聚合分析的原理及精准度问题.md</span><br><br><span class=\"hljs-meta\"># 聚合分析的原理及精准度问题</span><br></code></pre></td></tr></table></figure>\n<p>DELETE my_flights<br>PUT my_flights<br>{<br>  “settings”: {<br>    “number_of_shards”: 20<br>  },<br>  “mappings” : {<br>      “properties” : {<br>        “AvgTicketPrice” : {<br>          “type” : “float”<br>        },<br>        “Cancelled” : {<br>          “type” : “boolean”<br>        },<br>        “Carrier” : {<br>          “type” : “keyword”<br>        },<br>        “Dest” : {<br>          “type” : “keyword”<br>        },<br>        “DestAirportID” : {<br>          “type” : “keyword”<br>        },<br>        “DestCityName” : {<br>          “type” : “keyword”<br>        },<br>        “DestCountry” : {<br>          “type” : “keyword”<br>        },<br>        “DestLocation” : {<br>          “type” : “geo_point”<br>        },<br>        “DestRegion” : {<br>          “type” : “keyword”<br>        },<br>        “DestWeather” : {<br>          “type” : “keyword”<br>        },<br>        “DistanceKilometers” : {<br>          “type” : “float”<br>        },<br>        “DistanceMiles” : {<br>          “type” : “float”<br>        },<br>        “FlightDelay” : {<br>          “type” : “boolean”<br>        },<br>        “FlightDelayMin” : {<br>          “type” : “integer”<br>        },<br>        “FlightDelayType” : {<br>          “type” : “keyword”<br>        },<br>        “FlightNum” : {<br>          “type” : “keyword”<br>        },<br>        “FlightTimeHour” : {<br>          “type” : “keyword”<br>        },<br>        “FlightTimeMin” : {<br>          “type” : “float”<br>        },<br>        “Origin” : {<br>          “type” : “keyword”<br>        },<br>        “OriginAirportID” : {<br>          “type” : “keyword”<br>        },<br>        “OriginCityName” : {<br>          “type” : “keyword”<br>        },<br>        “OriginCountry” : {<br>          “type” : “keyword”<br>        },<br>        “OriginLocation” : {<br>          “type” : “geo_point”<br>        },<br>        “OriginRegion” : {<br>          “type” : “keyword”<br>        },<br>        “OriginWeather” : {<br>          “type” : “keyword”<br>        },<br>        “dayOfWeek” : {<br>          “type” : “integer”<br>        },<br>        “timestamp” : {<br>          “type” : “date”<br>        }<br>      }<br>    }<br>}</p>\n<p>POST _reindex<br>{<br>  “source”: {<br>    “index”: “kibana_sample_data_flights”<br>  },<br>  “dest”: {<br>    “index”: “my_flights”<br>  }<br>}</p>\n<p>GET kibana_sample_data_flights&#x2F;_count<br>GET my_flights&#x2F;_count</p>\n<p>get kibana_sample_data_flights&#x2F;_search</p>\n<p>GET kibana_sample_data_flights&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “weather”: {<br>      “terms”: {<br>        “field”:”OriginWeather”,<br>        “size”:5,<br>        “show_term_doc_count_error”:true<br>      }<br>    }<br>  }<br>}</p>\n<p>GET my_flights&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “weather”: {<br>      “terms”: {<br>        “field”:”OriginWeather”,<br>        “size”:1,<br>        “shard_size”:1,<br>        “show_term_doc_count_error”:true<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 7.1-对象及 Nested 对象.md</span><br><br><span class=\"hljs-meta\"># 对象及Nested对象</span><br></code></pre></td></tr></table></figure>\n<p>DELETE blog</p>\n<h1 id=\"设置blog的-Mapping\"><a href=\"#设置blog的-Mapping\" class=\"headerlink\" title=\"设置blog的 Mapping\"></a>设置blog的 Mapping</h1><p>PUT &#x2F;blog<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “content”: {<br>        “type”: “text”<br>      },<br>      “time”: {<br>        “type”: “date”<br>      },<br>      “user”: {<br>        “properties”: {<br>          “city”: {<br>            “type”: “text”<br>          },<br>          “userid”: {<br>            “type”: “long”<br>          },<br>          “username”: {<br>            “type”: “keyword”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"插入一条-Blog-信息\"><a href=\"#插入一条-Blog-信息\" class=\"headerlink\" title=\"插入一条 Blog 信息\"></a>插入一条 Blog 信息</h1><p>PUT blog&#x2F;_doc&#x2F;1<br>{<br>  “content”:”I like Elasticsearch”,<br>  “time”:”2019-01-01T00:00:00”,<br>  “user”:{<br>    “userid”:1,<br>    “username”:”Jack”,<br>    “city”:”Shanghai”<br>  }<br>}</p>\n<h1 id=\"查询-Blog-信息\"><a href=\"#查询-Blog-信息\" class=\"headerlink\" title=\"查询 Blog 信息\"></a>查询 Blog 信息</h1><p>POST blog&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“content”: “Elasticsearch”}},<br>        {“match”: {“user.username”: “Jack”}}<br>      ]<br>    }<br>  }<br>}</p>\n<p>DELETE my_movies</p>\n<h1 id=\"电影的Mapping信息\"><a href=\"#电影的Mapping信息\" class=\"headerlink\" title=\"电影的Mapping信息\"></a>电影的Mapping信息</h1><p>PUT my_movies<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “actors” : {<br>          “properties” : {<br>            “first_name” : {<br>              “type” : “keyword”<br>            },<br>            “last_name” : {<br>              “type” : “keyword”<br>            }<br>          }<br>        },<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 256<br>            }<br>          }<br>        }<br>      }<br>    }<br>}</p>\n<h1 id=\"写入一条电影信息\"><a href=\"#写入一条电影信息\" class=\"headerlink\" title=\"写入一条电影信息\"></a>写入一条电影信息</h1><p>POST my_movies&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Speed”,<br>  “actors”:[<br>    {<br>      “first_name”:”Keanu”,<br>      “last_name”:”Reeves”<br>    },</p>\n<pre><code>&#123;\n  &quot;first_name&quot;:&quot;Dennis&quot;,\n  &quot;last_name&quot;:&quot;Hopper&quot;\n&#125;\n</code></pre>\n<p>  ]<br>}</p>\n<h1 id=\"查询电影信息\"><a href=\"#查询电影信息\" class=\"headerlink\" title=\"查询电影信息\"></a>查询电影信息</h1><p>POST my_movies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“actors.first_name”: “Keanu”}},<br>        {“match”: {“actors.last_name”: “Hopper”}}<br>      ]<br>    }<br>  }</p>\n<p>}</p>\n<p>DELETE my_movies</p>\n<h1 id=\"创建-Nested-对象-Mapping\"><a href=\"#创建-Nested-对象-Mapping\" class=\"headerlink\" title=\"创建 Nested 对象 Mapping\"></a>创建 Nested 对象 Mapping</h1><p>PUT my_movies<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “actors” : {<br>          “type”: “nested”,<br>          “properties” : {<br>            “first_name” : {“type” : “keyword”},<br>            “last_name” : {“type” : “keyword”}<br>          }},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {“keyword”:{“type”:”keyword”,”ignore_above”:256}}<br>        }<br>      }<br>    }<br>}</p>\n<p>POST my_movies&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Speed”,<br>  “actors”:[<br>    {<br>      “first_name”:”Keanu”,<br>      “last_name”:”Reeves”<br>    },</p>\n<pre><code>&#123;\n  &quot;first_name&quot;:&quot;Dennis&quot;,\n  &quot;last_name&quot;:&quot;Hopper&quot;\n&#125;\n</code></pre>\n<p>  ]<br>}</p>\n<h1 id=\"Nested-查询\"><a href=\"#Nested-查询\" class=\"headerlink\" title=\"Nested 查询\"></a>Nested 查询</h1><p>POST my_movies&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “must”: [<br>        {“match”: {“title”: “Speed”}},<br>        {<br>          “nested”: {<br>            “path”: “actors”,<br>            “query”: {<br>              “bool”: {<br>                “must”: [<br>                  {“match”: {<br>                    “actors.first_name”: “Keanu”<br>                  }},</p>\n<pre><code>              &#123;&quot;match&quot;: &#123;\n                &quot;actors.last_name&quot;: &quot;Hopper&quot;\n              &#125;&#125;\n            ]\n          &#125;\n        &#125;\n      &#125;\n    &#125;\n  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"Nested-Aggregation\"><a href=\"#Nested-Aggregation\" class=\"headerlink\" title=\"Nested Aggregation\"></a>Nested Aggregation</h1><p>POST my_movies&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “actors”: {<br>      “nested”: {<br>        “path”: “actors”<br>      },<br>      “aggs”: {<br>        “actor_name”: {<br>          “terms”: {<br>            “field”: “actors.first_name”,<br>            “size”: 10<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"普通-aggregation不工作\"><a href=\"#普通-aggregation不工作\" class=\"headerlink\" title=\"普通 aggregation不工作\"></a>普通 aggregation不工作</h1><p>POST my_movies&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “NAME”: {<br>      “terms”: {<br>        “field”: “actors.first_name”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 7.2-文档的父子关系.md</span><br><br><span class=\"hljs-meta\"># 文档的父子关系</span><br></code></pre></td></tr></table></figure>\n<p>DELETE my_blogs</p>\n<h1 id=\"设定-Parent-Child-Mapping\"><a href=\"#设定-Parent-Child-Mapping\" class=\"headerlink\" title=\"设定 Parent&#x2F;Child Mapping\"></a>设定 Parent&#x2F;Child Mapping</h1><p>PUT my_blogs<br>{<br>  “settings”: {<br>    “number_of_shards”: 2<br>  },<br>  “mappings”: {<br>    “properties”: {<br>      “blog_comments_relation”: {<br>        “type”: “join”,<br>        “relations”: {<br>          “blog”: “comment”<br>        }<br>      },<br>      “content”: {<br>        “type”: “text”<br>      },<br>      “title”: {<br>        “type”: “keyword”<br>      }<br>    }<br>  }<br>}</p>\n<p>#索引父文档<br>PUT my_blogs&#x2F;_doc&#x2F;blog1<br>{<br>  “title”:”Learning Elasticsearch”,<br>  “content”:”learning ELK @ geektime”,<br>  “blog_comments_relation”:{<br>    “name”:”blog”<br>  }<br>}</p>\n<p>#索引父文档<br>PUT my_blogs&#x2F;_doc&#x2F;blog2<br>{<br>  “title”:”Learning Hadoop”,<br>  “content”:”learning Hadoop”,<br>    “blog_comments_relation”:{<br>    “name”:”blog”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment1?routing&#x3D;blog1<br>{<br>  “comment”:”I am learning ELK”,<br>  “username”:”Jack”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog1”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment2?routing&#x3D;blog2<br>{<br>  “comment”:”I like Hadoop!!!!!”,<br>  “username”:”Jack”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog2”<br>  }<br>}</p>\n<p>#索引子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2<br>{<br>  “comment”:”Hello Hadoop”,<br>  “username”:”Bob”,<br>  “blog_comments_relation”:{<br>    “name”:”comment”,<br>    “parent”:”blog2”<br>  }<br>}</p>\n<h1 id=\"查询所有文档\"><a href=\"#查询所有文档\" class=\"headerlink\" title=\"查询所有文档\"></a>查询所有文档</h1><p>POST my_blogs&#x2F;_search<br>{</p>\n<p>}</p>\n<p>#根据父文档ID查看<br>GET my_blogs&#x2F;_doc&#x2F;blog2</p>\n<h1 id=\"Parent-Id-查询\"><a href=\"#Parent-Id-查询\" class=\"headerlink\" title=\"Parent Id 查询\"></a>Parent Id 查询</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “parent_id”: {<br>      “type”: “comment”,<br>      “id”: “blog2”<br>    }<br>  }<br>}</p>\n<h1 id=\"Has-Child-查询-返回父文档\"><a href=\"#Has-Child-查询-返回父文档\" class=\"headerlink\" title=\"Has Child 查询,返回父文档\"></a>Has Child 查询,返回父文档</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “has_child”: {<br>      “type”: “comment”,<br>      “query” : {<br>                “match”: {<br>                    “username” : “Jack”<br>                }<br>            }<br>    }<br>  }<br>}</p>\n<h1 id=\"Has-Parent-查询，返回相关的子文档\"><a href=\"#Has-Parent-查询，返回相关的子文档\" class=\"headerlink\" title=\"Has Parent 查询，返回相关的子文档\"></a>Has Parent 查询，返回相关的子文档</h1><p>POST my_blogs&#x2F;_search<br>{<br>  “query”: {<br>    “has_parent”: {<br>      “parent_type”: “blog”,<br>      “query” : {<br>                “match”: {<br>                    “title” : “Learning Hadoop”<br>                }<br>            }<br>    }<br>  }<br>}</p>\n<p>#通过ID ，访问子文档<br>GET my_blogs&#x2F;_doc&#x2F;comment3<br>#通过ID和routing ，访问子文档<br>GET my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2</p>\n<p>#更新子文档<br>PUT my_blogs&#x2F;_doc&#x2F;comment3?routing&#x3D;blog2<br>{<br>    “comment”: “Hello Hadoop??”,<br>    “blog_comments_relation”: {<br>      “name”: “comment”,<br>      “parent”: “blog2”<br>    }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 7.5-Elasticsearch数据建模实例.md</span><br><br><span class=\"hljs-meta\"># Elasticsearch 数据建模实例</span><br></code></pre></td></tr></table></figure>\n<h6 id=\"Data-Modeling-Example\"><a href=\"#Data-Modeling-Example\" class=\"headerlink\" title=\"Data Modeling Example\"></a>Data Modeling Example</h6><h1 id=\"Index-一本书的信息\"><a href=\"#Index-一本书的信息\" class=\"headerlink\" title=\"Index 一本书的信息\"></a>Index 一本书的信息</h1><p>PUT books&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Mastering ElasticSearch 5.0”,<br>  “description”:”Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins”,<br>  “author”:”Bharvi Dixit”,<br>  “public_date”:”2017”,<br>  “cover_url”:”<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>}</p>\n<p>#查询自动创建的Mapping<br>GET books&#x2F;_mapping</p>\n<p>DELETE books</p>\n<p>#优化字段类型<br>PUT books<br>{<br>      “mappings” : {<br>      “properties” : {<br>        “author” : {“type” : “keyword”},<br>        “cover_url” : {“type” : “keyword”,”index”: false},<br>        “description” : {“type” : “text”},<br>        “public_date” : {“type” : “date”},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 100<br>            }<br>          }<br>        }<br>      }<br>    }<br>}</p>\n<p>#Cover URL index 设置成false，无法对该字段进行搜索<br>POST books&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “cover_url”: {<br>        “value”: “<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>      }<br>    }<br>  }<br>}</p>\n<p>#Cover URL index 设置成false，依然支持聚合分析<br>POST books&#x2F;_search<br>{<br>  “aggs”: {<br>    “cover”: {<br>      “terms”: {<br>        “field”: “cover_url”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<p>DELETE books<br>#新增 Content字段。数据量很大。选择将Source 关闭<br>PUT books<br>{<br>      “mappings” : {<br>      “_source”: {“enabled”: false},<br>      “properties” : {<br>        “author” : {“type” : “keyword”,”store”: true},<br>        “cover_url” : {“type” : “keyword”,”index”: false,”store”: true},<br>        “description” : {“type” : “text”,”store”: true},<br>         “content” : {“type” : “text”,”store”: true},<br>        “public_date” : {“type” : “date”,”store”: true},<br>        “title” : {<br>          “type” : “text”,<br>          “fields” : {<br>            “keyword” : {<br>              “type” : “keyword”,<br>              “ignore_above” : 100<br>            }<br>          },<br>          “store”: true<br>        }<br>      }<br>    }<br>}</p>\n<h1 id=\"Index-一本书的信息-包含Content\"><a href=\"#Index-一本书的信息-包含Content\" class=\"headerlink\" title=\"Index 一本书的信息,包含Content\"></a>Index 一本书的信息,包含Content</h1><p>PUT books&#x2F;_doc&#x2F;1<br>{<br>  “title”:”Mastering ElasticSearch 5.0”,<br>  “description”:”Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins”,<br>  “content”:”The content of the book……Indexing data, aggregation, searching.    something else. something in the way…………”,<br>  “author”:”Bharvi Dixit”,<br>  “public_date”:”2017”,<br>  “cover_url”:”<a href=\"https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg\">https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg</a>“<br>}</p>\n<p>#查询结果中，Source不包含数据<br>POST books&#x2F;_search<br>{}</p>\n<p>#搜索，通过store 字段显示数据，同时高亮显示 conent的内容<br>POST books&#x2F;_search<br>{<br>  “stored_fields”: [“title”,”author”,”public_date”],<br>  “query”: {<br>    “match”: {<br>      “content”: “searching”<br>    }<br>  },</p>\n<p>  “highlight”: {<br>    “fields”: {<br>      “content”:{}<br>    }<br>  }</p>\n<p>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 7.6-Elasticsearch 数据建模最佳实践.md</span><br><br><span class=\"hljs-meta\"># Elasticsearch 数据建模最佳实践</span><br><br><br></code></pre></td></tr></table></figure>\n\n<h6 id=\"Cookie-Service\"><a href=\"#Cookie-Service\" class=\"headerlink\" title=\"Cookie Service\"></a>Cookie Service</h6><p>##索引数据，dynamic mapping 会不断加入新增字段<br>PUT cookie_service&#x2F;_doc&#x2F;1<br>{<br> “url”:”<a href=\"http://www.google.com/\">www.google.com</a>“,<br> “cookies”:{<br>   “username”:”tom”,<br>   “age”:32<br> }<br>}</p>\n<p>PUT cookie_service&#x2F;_doc&#x2F;2<br>{<br> “url”:”<a href=\"http://www.amazon.com/\">www.amazon.com</a>“,<br> “cookies”:{<br>   “login”:”2019-01-01”,<br>   “email”:”<a href=\"mailto:&#x78;&#x79;&#x7a;&#64;&#x61;&#x62;&#x63;&#46;&#x63;&#x6f;&#x6d;\">&#x78;&#x79;&#x7a;&#64;&#x61;&#x62;&#x63;&#46;&#x63;&#x6f;&#x6d;</a>“<br> }<br>}</p>\n<p>DELETE cookie_service<br>#使用 Nested 对象，增加key&#x2F;value<br>PUT cookie_service<br>{<br>  “mappings”: {<br>    “properties”: {<br>      “cookies”: {<br>        “type”: “nested”,<br>        “properties”: {<br>          “name”: {<br>            “type”: “keyword”<br>          },<br>          “dateValue”: {<br>            “type”: “date”<br>          },<br>          “keywordValue”: {<br>            “type”: “keyword”<br>          },<br>          “IntValue”: {<br>            “type”: “integer”<br>          }<br>        }<br>      },<br>      “url”: {<br>        “type”: “text”,<br>        “fields”: {<br>          “keyword”: {<br>            “type”: “keyword”,<br>            “ignore_above”: 256<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>##写入数据，使用key和合适类型的value字段<br>PUT cookie_service&#x2F;_doc&#x2F;1<br>{<br> “url”:”<a href=\"http://www.google.com/\">www.google.com</a>“,<br> “cookies”:[<br>    {<br>      “name”:”username”,<br>      “keywordValue”:”tom”<br>    },<br>    {<br>       “name”:”age”,<br>      “intValue”:32</p>\n<pre><code>&#125;\n</code></pre>\n<p>   ]<br> }</p>\n<p>PUT cookie_service&#x2F;_doc&#x2F;2<br>{<br> “url”:”<a href=\"http://www.amazon.com/\">www.amazon.com</a>“,<br> “cookies”:[<br>    {<br>      “name”:”login”,<br>      “dateValue”:”2019-01-01”<br>    },<br>    {<br>       “name”:”email”,<br>      “IntValue”:32</p>\n<pre><code>&#125;\n</code></pre>\n<p>   ]<br> }</p>\n<h1 id=\"Nested-查询，通过bool查询进行过滤\"><a href=\"#Nested-查询，通过bool查询进行过滤\" class=\"headerlink\" title=\"Nested 查询，通过bool查询进行过滤\"></a>Nested 查询，通过bool查询进行过滤</h1><p>POST cookie_service&#x2F;_search<br>{<br>  “query”: {<br>    “nested”: {<br>      “path”: “cookies”,<br>      “query”: {<br>        “bool”: {<br>          “filter”: [<br>            {<br>            “term”: {<br>              “cookies.name”: “age”<br>            }},<br>            {<br>              “range”:{<br>                “cookies.intValue”:{<br>                  “gte”:30<br>                }<br>              }<br>            }<br>          ]<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"在Mapping中加入元信息，便于管理\"><a href=\"#在Mapping中加入元信息，便于管理\" class=\"headerlink\" title=\"在Mapping中加入元信息，便于管理\"></a>在Mapping中加入元信息，便于管理</h1><p>PUT softwares&#x2F;<br>{<br>  “mappings”: {<br>    “_meta”: {<br>      “software_version_mapping”: “1.0”<br>    }<br>  }<br>}</p>\n<p>GET softwares&#x2F;_mapping<br>PUT softwares&#x2F;_doc&#x2F;1<br>{<br>  “software_version”:”7.1.0”<br>}</p>\n<p>DELETE softwares</p>\n<h1 id=\"优化-使用inner-object\"><a href=\"#优化-使用inner-object\" class=\"headerlink\" title=\"优化,使用inner object\"></a>优化,使用inner object</h1><p>PUT softwares&#x2F;<br>{<br>  “mappings”: {<br>    “_meta”: {<br>      “software_version_mapping”: “1.1”<br>    },<br>    “properties”: {<br>      “version”: {<br>        “properties”: {<br>          “display_name”: {<br>            “type”: “keyword”<br>          },<br>          “hot_fix”: {<br>            “type”: “byte”<br>          },<br>          “marjor”: {<br>            “type”: “byte”<br>          },<br>          “minor”: {<br>            “type”: “byte”<br>          }<br>        }<br>      }<br>    }<br>  }<br>}</p>\n<p>#通过 Inner Object 写入多个文档<br>PUT softwares&#x2F;_doc&#x2F;1<br>{<br>  “version”:{<br>  “display_name”:”7.1.0”,<br>  “marjor”:7,<br>  “minor”:1,<br>  “hot_fix”:0<br>  }</p>\n<p>}</p>\n<p>PUT softwares&#x2F;_doc&#x2F;2<br>{<br>  “version”:{<br>  “display_name”:”7.2.0”,<br>  “marjor”:7,<br>  “minor”:2,<br>  “hot_fix”:0<br>  }<br>}</p>\n<p>PUT softwares&#x2F;_doc&#x2F;3<br>{<br>  “version”:{<br>  “display_name”:”7.2.1”,<br>  “marjor”:7,<br>  “minor”:2,<br>  “hot_fix”:1<br>  }<br>}</p>\n<h1 id=\"通过-bool-查询，\"><a href=\"#通过-bool-查询，\" class=\"headerlink\" title=\"通过 bool 查询，\"></a>通过 bool 查询，</h1><p>POST softwares&#x2F;_search<br>{<br>  “query”: {<br>    “bool”: {<br>      “filter”: [<br>        {<br>          “match”:{<br>            “version.marjor”:7<br>          }<br>        },<br>        {<br>          “match”:{<br>            “version.minor”:2<br>          }<br>        }</p>\n<pre><code>  ]\n&#125;\n</code></pre>\n<p>  }<br>}</p>\n<h1 id=\"Not-Null-解决聚合的问题\"><a href=\"#Not-Null-解决聚合的问题\" class=\"headerlink\" title=\"Not Null 解决聚合的问题\"></a>Not Null 解决聚合的问题</h1><p>DELETE ratings<br>PUT ratings<br>{<br>  “mappings”: {<br>      “properties”: {<br>        “rating”: {<br>          “type”: “float”,<br>          “null_value”: 1.0<br>        }<br>      }<br>    }<br>}</p>\n<p>PUT ratings&#x2F;_doc&#x2F;1<br>{<br> “rating”:5<br>}<br>PUT ratings&#x2F;_doc&#x2F;2<br>{<br> “rating”:null<br>}</p>\n<p>POST ratings&#x2F;_search<br>POST ratings&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “avg”: {<br>      “avg”: {<br>        “field”: “rating”<br>      }<br>    }<br>  }<br>}</p>\n<p>POST ratings&#x2F;_search<br>{<br>  “query”: {<br>    “term”: {<br>      “rating”: {<br>        “value”: 1<br>      }<br>    }<br>  }<br>}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><br><br><span class=\"hljs-meta\"># 7.7-第二部分总结与测验.md</span><br><br><span class=\"hljs-meta\"># 第二部分总结与测验</span><br></code></pre></td></tr></table></figure>\n<p>DELETE test<br>PUT test&#x2F;_doc&#x2F;1<br>{<br>  “content”:”Hello World”<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content.keyword”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “match”: {<br>      “content.keyword”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content”: “Hello World”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content”: “hello world”<br>    }<br>  }<br>}</p>\n<p>POST test&#x2F;_search<br>{<br>  “profile”: “true”,<br>  “query”: {<br>    “term”: {<br>      “content.keyword”: “Hello World”<br>    }<br>  }<br>}</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\"><br><br><span class=\"hljs-comment\"># 8.1-集群身份认证与用户鉴权.md</span><br><br><span class=\"hljs-comment\"># 集群身份认证与用户鉴权</span><br>- 如何为集群启用X-Pack Security<br>- 如何为内置用户设置密码<br>- 设置 Kibana与ElasticSearch通信鉴权<br>- 使用安全API创建对特定索引具有有限访问权限的用户<br><br>This tutorial involves a single <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">cluster</span>, but if you had multiple nodes, you would enable Elasticsearch security features on every <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">in</span> the cluster <span class=\"hljs-keyword\">and</span> configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">discovery</span>, we are postponing the configuration of TLS. For example, add the following setting:<br><br>discovery.<span class=\"hljs-keyword\">type</span>: single-<span class=\"hljs-keyword\">node</span><br><span class=\"hljs-title\"></span><br></code></pre></td></tr></table></figure>\n<p>#启动单节点<br>bin&#x2F;elasticsearch -E node.name&#x3D;node0 -E cluster.name&#x3D;geektime -E path.data&#x3D;node0_data -E http.port&#x3D;9200 -E xpack.security.enabled&#x3D;true</p>\n<p>#使用Curl访问ES，或者浏览器访问 “localhost:9200&#x2F;_cat&#x2F;nodes?pretty”。返回401错误<br>curl ‘localhost:9200&#x2F;_cat&#x2F;nodes?pretty’</p>\n<p>#运行密码设定的命令，设置ES内置用户及其初始密码。<br>bin&#x2F;elasticsearch-setup-passwords interactive</p>\n<p>curl -u elastic ‘localhost:9200&#x2F;_cat&#x2F;nodes?pretty’</p>\n<h1 id=\"修改-kibana-yml\"><a href=\"#修改-kibana-yml\" class=\"headerlink\" title=\"修改 kibana.yml\"></a>修改 kibana.yml</h1><p>elasticsearch.username: “kibana”<br>elasticsearch.password: “changeme”</p>\n<p>#启动。使用用户名，elastic，密码elastic<br>.&#x2F;bin&#x2F;kibana</p>\n<p>POST orders&#x2F;_bulk<br>{“index”:{}}<br>{“product” : “1”,”price” : 18,”payment” : “master”,”card” : “9876543210123456”,”name” : “jack”}<br>{“index”:{}}<br>{“product” : “2”,”price” : 99,”payment” : “visa”,”card” : “1234567890123456”,”name” : “bob”}</p>\n<p>#create a new role named read_only_orders, that satisfies the following criteria:<br>#The role has no cluster privileges<br>#The role only has access to indices that match the pattern sales_record<br>#The index privileges are read, and view_index_metadata</p>\n<p>#create sales_user that satisfies the following criteria:</p>\n<h1 id=\"Use-your-own-email-address\"><a href=\"#Use-your-own-email-address\" class=\"headerlink\" title=\"Use your own email address\"></a>Use your own email address</h1><h1 id=\"Assign-the-user-to-two-roles-read-only-orders-and-kibana-user\"><a href=\"#Assign-the-user-to-two-roles-read-only-orders-and-kibana-user\" class=\"headerlink\" title=\"Assign the user to two roles: read_only_orders and kibana_user\"></a>Assign the user to two roles: read_only_orders and kibana_user</h1><p>#验证读权限,可以执行<br>POST orders&#x2F;_search<br>{}</p>\n<p>#验证写权限,报错<br>POST orders&#x2F;_bulk<br>{“index”:{}}<br>{“product” : “1”,”price” : 18,”payment” : “master”,”card” : “9876543210123456”,”name” : “jack”}<br>{“index”:{}}<br>{“product” : “2”,”price” : 99,”payment” : “visa”,”card” : “1234567890123456”,”name” : “bob”}</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 8.2-集群内部安全通信.md</span><br><br><span class=\"hljs-meta\">#</span><br><br></code></pre></td></tr></table></figure>\n<h1 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h1><h1 id=\"为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil-ca命令：\"><a href=\"#为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil-ca命令：\" class=\"headerlink\" title=\"为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：\"></a>为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：</h1><p>bin&#x2F;elasticsearch-certutil ca</p>\n<p>#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：<br>bin&#x2F;elasticsearch-certutil cert –ca elastic-stack-ca.p12</p>\n<p>#将证书拷贝到 config&#x2F;certs目录下<br>elastic-certificates.p12</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node0 -E cluster.name&#x3D;geektime -E path.data&#x3D;node0_data -E http.port&#x3D;9200 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate -E xpack.security.transport.ssl.keystore.path&#x3D;certs&#x2F;elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path&#x3D;certs&#x2F;elastic-certificates.p12</p>\n<p>bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.data&#x3D;node1_data -E http.port&#x3D;9201 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate -E xpack.security.transport.ssl.keystore.path&#x3D;certs&#x2F;elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.path&#x3D;certs&#x2F;elastic-certificates.p12</p>\n<p>#不提供证书的节点，无法加入<br>bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.data&#x3D;node2_data -E http.port&#x3D;9202 -E xpack.security.enabled&#x3D;true -E xpack.security.transport.ssl.enabled&#x3D;true -E xpack.security.transport.ssl.verification_mode&#x3D;certificate</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\"><br><br></code></pre></td></tr></table></figure>\n<h2 id=\"elasticsearch-yml-配置\"><a href=\"#elasticsearch-yml-配置\" class=\"headerlink\" title=\"elasticsearch.yml 配置\"></a>elasticsearch.yml 配置</h2><p>#xpack.security.transport.ssl.enabled: true<br>#xpack.security.transport.ssl.verification_mode: certificate</p>\n<p>#xpack.security.transport.ssl.keystore.path: certs&#x2F;elastic-certificates.p12<br>#xpack.security.transport.ssl.truststore.path: certs&#x2F;elastic-certificates.p12</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><br><span class=\"hljs-meta\"># 8.3-集群与外部间的安全通信.md</span><br><br><br><br></code></pre></td></tr></table></figure>\n<p>xpack.security.http.ssl.enabled: true<br>xpack.security.http.ssl.keystore.path: certs&#x2F;elastic-certificates.p12<br>xpack.security.http.ssl.truststore.path: certs&#x2F;elastic-certificates.p12</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">```<br><br><br><span class=\"hljs-comment\"># ES 启用 https</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.http.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-meta\">#Kibana 连接 ES https</span><br><br><br><br><span class=\"hljs-meta\"># 为kibana生成pem</span><br>openssl pkcs12 -<span class=\"hljs-keyword\">in</span> elastic-certificates.p12 -cacerts -nokeys -<span class=\"hljs-keyword\">out</span> elastic-ca.pem<br><br><br><span class=\"hljs-symbol\">elasticsearch.hosts:</span> [<span class=\"hljs-string\">&quot;https://localhost:9200&quot;</span>]<br><span class=\"hljs-symbol\">elasticsearch.ssl.certificateAuthorities:</span> [ <span class=\"hljs-string\">&quot;/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem&quot;</span> ]<br><span class=\"hljs-symbol\">elasticsearch.ssl.verificationMode:</span> certificate<br><br><br><br><span class=\"hljs-meta\"># 为 Kibna 配置 HTTPS</span><br><span class=\"hljs-meta\"># 生成后解压，包含了instance.crt 和 instance.key</span><br>bin/elasticsearch-certutil ca --pem<br><br><span class=\"hljs-symbol\">server.ssl.enabled:</span> true<br><span class=\"hljs-symbol\">server.ssl.certificate:</span> config/certs/instance.crt<br><span class=\"hljs-symbol\">server.ssl.key:</span> config/certs/instance.key<br><br><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"9-1-常见的集群部署方式-md\"><a href=\"#9-1-常见的集群部署方式-md\" class=\"headerlink\" title=\"9.1-常见的集群部署方式.md\"></a>9.1-常见的集群部署方式.md</h1><h1 id=\"常见的集群部署方式\"><a href=\"#常见的集群部署方式\" class=\"headerlink\" title=\"常见的集群部署方式\"></a>常见的集群部署方式</h1><h1 id=\"9-2-Hot-Warm架构与ShardFiltering-md\"><a href=\"#9-2-Hot-Warm架构与ShardFiltering-md\" class=\"headerlink\" title=\"9.2-Hot&amp;Warm架构与ShardFiltering.md\"></a>9.2-Hot&amp;Warm架构与ShardFiltering.md</h1><h1 id=\"Hot-Warm-架构与-Shard-Filtering\"><a href=\"#Hot-Warm-架构与-Shard-Filtering\" class=\"headerlink\" title=\"Hot &amp; Warm 架构与 Shard Filtering\"></a>Hot &amp; Warm 架构与 Shard Filtering</h1><h2 id=\"课程代码\"><a href=\"#课程代码\" class=\"headerlink\" title=\"课程代码\"></a>课程代码</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 标记一个 Hot 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=hotnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=hot_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=hot<br><br><span class=\"hljs-comment\"># 标记一个 warm 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=warmnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=warm_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=warm<br><br><span class=\"hljs-comment\"># 查看节点</span><br><span class=\"hljs-built_in\">GET</span> /_cat/nodeattrs?v<br><br><span class=\"hljs-comment\"># 配置到 Hot节点</span><br>PUT logs-2019-06-27<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-comment\"># 配置到 warm 节点</span><br>PUT PUT logs-2019-06-27/_settings<br>&#123;  <br>  <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;warm&quot;</span><br>&#125;<br><br><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack2<br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span><br>  &#125;<br>&#125;<br><br>PUT my_index1<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1<br>  &#125;<br>&#125;<br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br>DELETE my_index1/_doc/1<br><br><br><br><span class=\"hljs-comment\"># Fore awareness</span><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span>,<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.force.my_rack_id.values&quot;</span>: <span class=\"hljs-string\">&quot;rack1,rack2&quot;</span><br>  &#125;<br>&#125;<br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 集群黄色</span><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 副本无法分配</span><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-built_in\">GET</span> _cluster/allocation/explain?pretty<br></code></pre></td></tr></table></figure>\n<h1 id=\"9-3-如何对集群进行容量规划-md\"><a href=\"#9-3-如何对集群进行容量规划-md\" class=\"headerlink\" title=\"9.3-如何对集群进行容量规划.md\"></a>9.3-如何对集群进行容量规划.md</h1><h1 id=\"如何对集群进行容量规划\"><a href=\"#如何对集群进行容量规划\" class=\"headerlink\" title=\"如何对集群进行容量规划\"></a>如何对集群进行容量规划</h1><h2 id=\"代码Demo\"><a href=\"#代码Demo\" class=\"headerlink\" title=\"代码Demo\"></a>代码Demo</h2><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">PUT logs_<span class=\"hljs-number\">2019</span><span class=\"hljs-number\">-06</span><span class=\"hljs-number\">-27</span><br>PUT logs_<span class=\"hljs-number\">2019</span><span class=\"hljs-number\">-06</span><span class=\"hljs-number\">-26</span><br><br><br>POST _aliases<br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;logs_2019-06-27&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;logs_write&quot;</span><br>      &#125;<br>    &#125;<span class=\"hljs-punctuation\">,</span><br>    &#123;<br>      <span class=\"hljs-string\">&quot;remove&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;logs_2019-06-26&quot;</span><span class=\"hljs-punctuation\">,</span><br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;logs_write&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br># POST /&lt;logs-&#123;now/d&#125;/_search<br>POST /<span class=\"hljs-variable\">%3</span>Clogs-<span class=\"hljs-variable\">%7</span>Bnow<span class=\"hljs-variable\">%2</span>Fd<span class=\"hljs-variable\">%7</span>D<span class=\"hljs-variable\">%3</span>E/_search<br><br># POST /&lt;logs-&#123;now/w&#125;/_search<br>POST /<span class=\"hljs-variable\">%3</span>Clogs-<span class=\"hljs-variable\">%7</span>Bnow<span class=\"hljs-variable\">%2</span>Fw<span class=\"hljs-variable\">%7</span>D<span class=\"hljs-variable\">%3</span>E/_search<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"9-4-分片设计及管理-md\"><a href=\"#9-4-分片设计及管理-md\" class=\"headerlink\" title=\"9.4-分片设计及管理.md\"></a>9.4-分片设计及管理.md</h1><h1 id=\"分片设计及管理\"><a href=\"#分片设计及管理\" class=\"headerlink\" title=\"分片设计及管理\"></a>分片设计及管理</h1><h1 id=\"9-5-在私有云上管理与部署Elasticsearch集群-md\"><a href=\"#9-5-在私有云上管理与部署Elasticsearch集群-md\" class=\"headerlink\" title=\"9.5-在私有云上管理与部署Elasticsearch集群.md\"></a>9.5-在私有云上管理与部署Elasticsearch集群.md</h1><h1 id=\"在私有云上管理与部署-Elasticsearch-集群\"><a href=\"#在私有云上管理与部署-Elasticsearch-集群\" class=\"headerlink\" title=\"在私有云上管理与部署 Elasticsearch 集群\"></a>在私有云上管理与部署 Elasticsearch 集群</h1><h1 id=\"9-6-在公有云上管理与部署Elasticsearch集群-md\"><a href=\"#9-6-在公有云上管理与部署Elasticsearch集群-md\" class=\"headerlink\" title=\"9.6-在公有云上管理与部署Elasticsearch集群.md\"></a>9.6-在公有云上管理与部署Elasticsearch集群.md</h1><h1 id=\"在公有云上管理与部署-Elasticsearch-集群\"><a href=\"#在公有云上管理与部署-Elasticsearch-集群\" class=\"headerlink\" title=\"在公有云上管理与部署 Elasticsearch 集群\"></a>在公有云上管理与部署 Elasticsearch 集群</h1><h1 id=\"result-md\"><a href=\"#result-md\" class=\"headerlink\" title=\"result.md\"></a>result.md</h1><h1 id=\"10-1-生产环境常用配置与上线清单-md\"><a href=\"#10-1-生产环境常用配置与上线清单-md\" class=\"headerlink\" title=\"10.1-生产环境常用配置与上线清单.md\"></a>10.1-生产环境常用配置与上线清单.md</h1><h1 id=\"生产环境查用配置与线上清单\"><a href=\"#生产环境查用配置与线上清单\" class=\"headerlink\" title=\"生产环境查用配置与线上清单\"></a>生产环境查用配置与线上清单</h1><h1 id=\"10-10-一些运维相关的建议-md\"><a href=\"#10-10-一些运维相关的建议-md\" class=\"headerlink\" title=\"10.10-一些运维相关的建议.md\"></a>10.10-一些运维相关的建议.md</h1><h1 id=\"一些运维相关的建议\"><a href=\"#一些运维相关的建议\" class=\"headerlink\" title=\"一些运维相关的建议\"></a>一些运维相关的建议</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 移动一个分片从一个节点到另外一个节点</span><br><br>POST _cluster/reroute<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;move&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,<br>        <span class=\"hljs-string\">&quot;from_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_1&quot;</span>,<br>        <span class=\"hljs-string\">&quot;to_node&quot;</span>: <span class=\"hljs-string\">&quot;node_name_2&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br><span class=\"hljs-comment\"># Fore the allocation of an unassinged shard with a reason</span><br><br>POST _cluster/reroute?explain<br>&#123;<br>  <span class=\"hljs-string\">&quot;commands&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;index_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;shard&quot;</span>: 0,<br>        <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-string\">&quot;nodename&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br><br><span class=\"hljs-comment\"># remove the nodes from cluster </span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.exclude._ip&quot;</span>:<span class=\"hljs-string\">&quot;the_IP_of_your_node&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Force a synced flush</span><br>POST _flush/synced<br><br><br><span class=\"hljs-comment\"># change the number of moving shards to balance the cluster</span><br>PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;cluster.routing.allocation.cluster_concurrent_rebalance&quot;</span>:2&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># change the number of shards being recovered simultanceously per node</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;cluster.routing.allocation.node_concurrent_recoveries&quot;</span>:5&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Change the recovery speed</span><br>PUT /_cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;indices.recovery.max_bytes_per_sec&quot;</span>: <span class=\"hljs-string\">&quot;80mb&quot;</span>&#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Change the number of concurrent streams for a recovery on a single node</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<span class=\"hljs-string\">&quot;indices.recovery.concurrent_streams&quot;</span>:6&#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Change the sinze of the search queue</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;transient&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;threadpool.search.queue_size&quot;</span>:2000<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Clear the cache on a node</span><br>POST _cache/clear<br><br><br><span class=\"hljs-comment\">#Adjust the circuit breakers</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.breaker.total.limit&quot;</span>:<span class=\"hljs-string\">&quot;40%&quot;</span><br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-2-监控Elasticsearch集群-md\"><a href=\"#10-2-监控Elasticsearch集群-md\" class=\"headerlink\" title=\"10.2-监控Elasticsearch集群.md\"></a>10.2-监控Elasticsearch集群.md</h1><h1 id=\"监控-Elasticsearch-集群-1\"><a href=\"#监控-Elasticsearch-集群-1\" class=\"headerlink\" title=\"监控 Elasticsearch 集群\"></a>监控 Elasticsearch 集群</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Node Stats：</span><br>GET _nodes/stats<br><br><span class=\"hljs-comment\">#Cluster Stats:</span><br>GET _cluster/stats<br><br><span class=\"hljs-comment\">#Index Stats:</span><br>GET kibana_sample_data_ecommerce/_stats<br><br><span class=\"hljs-comment\">#Pending Cluster Tasks API:</span><br>GET _cluster/pending_tasks<br><br><span class=\"hljs-comment\"># 查看所有的 tasks，也支持 cancel task</span><br>GET _tasks<br><br><br>GET _nodes/thread_pool<br>GET _nodes/stats/thread_pool<br>GET _cat/thread_pool?v<br>GET _nodes/hot_threads<br>GET _nodes/stats/thread_pool<br><br><br><span class=\"hljs-comment\"># 设置 Index Slowlogs</span><br><span class=\"hljs-comment\"># the first 1000 characters of the doc&#x27;s source will be logged</span><br>PUT my_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;index.indexing.slowlog&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;threshold.index&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;warn&quot;</span>:<span class=\"hljs-string\">&quot;10s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;info&quot;</span>: <span class=\"hljs-string\">&quot;4s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;debug&quot;</span>:<span class=\"hljs-string\">&quot;2s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;trace&quot;</span>:<span class=\"hljs-string\">&quot;0s&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;level&quot;</span>:<span class=\"hljs-string\">&quot;trace&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>:1000  <br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 设置查询</span><br>DELETE my_index<br>//<span class=\"hljs-string\">&quot;0&quot;</span> logs all queries<br>PUT my_index/<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.search.slowlog.threshold&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query.warn&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.info&quot;</span>: <span class=\"hljs-string\">&quot;3s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.debug&quot;</span>: <span class=\"hljs-string\">&quot;2s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.warn&quot;</span>: <span class=\"hljs-string\">&quot;1s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.info&quot;</span>: <span class=\"hljs-string\">&quot;600ms&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.debug&quot;</span>: <span class=\"hljs-string\">&quot;400ms&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fetch.trace&quot;</span>: <span class=\"hljs-string\">&quot;0s&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>GET my_index<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-3-诊断集群的潜在问题-md\"><a href=\"#10-3-诊断集群的潜在问题-md\" class=\"headerlink\" title=\"10.3-诊断集群的潜在问题.md\"></a>10.3-诊断集群的潜在问题.md</h1><h1 id=\"诊断集群的潜在问题\"><a href=\"#诊断集群的潜在问题\" class=\"headerlink\" title=\"诊断集群的潜在问题\"></a>诊断集群的潜在问题</h1><h1 id=\"10-4-解决集群Yellow与Red的问题-md\"><a href=\"#10-4-解决集群Yellow与Red的问题-md\" class=\"headerlink\" title=\"10.4-解决集群Yellow与Red的问题.md\"></a>10.4-解决集群Yellow与Red的问题.md</h1><h1 id=\"集群健康与问题排查\"><a href=\"#集群健康与问题排查\" class=\"headerlink\" title=\"集群健康与问题排查\"></a>集群健康与问题排查</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#案例1</span><br>DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:3,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hott&quot;</span><br>  &#125;<br>&#125;<br><br><br><br><br><br><span class=\"hljs-comment\"># 检查集群状态，查看是否有节点丢失，有多少分片无法分配</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br><span class=\"hljs-comment\"># 查看索引级别,找到红色的索引</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/health?<span class=\"hljs-attribute\">level</span>=indices<br><br><br><span class=\"hljs-comment\">#查看索引的分片</span><br><span class=\"hljs-built_in\">GET</span> _cluster/health?<span class=\"hljs-attribute\">level</span>=shards<br><br><span class=\"hljs-comment\"># Explain 变红的原因</span><br><span class=\"hljs-built_in\">GET</span> /_cluster/allocation/explain<br><br><span class=\"hljs-built_in\">GET</span> /_cat/shards/mytest<br><span class=\"hljs-built_in\">GET</span> _cat/nodeattrs<br><br>DELETE mytest<br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:3,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> /_cluster/health/<br><br><span class=\"hljs-comment\">#案例2, Explain 看 hot 上的 explain</span><br>DELETE mytest<br>PUT mytest<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><span class=\"hljs-built_in\">GET</span> _cat/shards/mytest<br><span class=\"hljs-built_in\">GET</span> /_cluster/allocation/explain<br><br>PUT mytest/_settings<br>&#123;<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-5-提升集群写性能-md\"><a href=\"#10-5-提升集群写性能-md\" class=\"headerlink\" title=\"10.5-提升集群写性能.md\"></a>10.5-提升集群写性能.md</h1><h1 id=\"提升集群写性能-1\"><a href=\"#提升集群写性能-1\" class=\"headerlink\" title=\"提升集群写性能\"></a>提升集群写性能</h1><figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fsharp\">DELETE myindex<br>PUT <span class=\"hljs-keyword\">myindex</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;refresh_interval&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;30s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;number_of_shards&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;2&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;routing&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;allocation&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>        <span class=\"hljs-string\">&quot;total_shards_per_node&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;3&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;translog&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;sync_interval&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;30s&quot;</span>,<br>      <span class=\"hljs-string\">&quot;durability&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;async&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span><span class=\"hljs-operator\">:</span> 0<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;dynamic&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-literal\">false</span>,<br>    <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;&#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-6-提升集群读性能-md\"><a href=\"#10-6-提升集群读性能-md\" class=\"headerlink\" title=\"10.6-提升集群读性能.md\"></a>10.6-提升集群读性能.md</h1><h1 id=\"提升集群读性能-1\"><a href=\"#提升集群读性能-1\" class=\"headerlink\" title=\"提升集群读性能\"></a>提升集群读性能</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">PUT blogs/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">1</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>&#125;<br><span class=\"hljs-built_in\">GET</span> blogs/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>        &#125;&#125;<br>      ],<br>      <br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;source&quot;</span>: <span class=\"hljs-string\">&quot;doc[&#x27;title.keyword&#x27;].value.length()&gt;5&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> blogs/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;publish_date&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">2017</span>,<br>              <span class=\"hljs-string\">&quot;lte&quot;</span>: <span class=\"hljs-number\">2019</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"10-7-集群压力测试-md\"><a href=\"#10-7-集群压力测试-md\" class=\"headerlink\" title=\"10.7-集群压力测试.md\"></a>10.7-集群压力测试.md</h1><h1 id=\"集群压力测试-1\"><a href=\"#集群压力测试-1\" class=\"headerlink\" title=\"集群压力测试\"></a>集群压力测试</h1><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">pip3</span> install esrally<br><br><span class=\"hljs-attribute\">esrally</span> configure<br><br><span class=\"hljs-comment\"># 只测试 1000条数据</span><br><span class=\"hljs-attribute\">esrally</span> --distribution-version=<span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> --test-mode<br><br><span class=\"hljs-comment\"># 测试完整数据</span><br><span class=\"hljs-attribute\">esrally</span> --distribution-version=<span class=\"hljs-number\">7</span>.<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span><br><br></code></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://github.com/elastic/rally-tracks\">https://github.com/elastic/rally-tracks</a></li>\n<li><a href=\"https://logz.io/blog/rally/\">https://logz.io/blog/rally/</a></li>\n</ul>\n<h1 id=\"10-9-缓存及使用Breaker限制内存使用-md\"><a href=\"#10-9-缓存及使用Breaker限制内存使用-md\" class=\"headerlink\" title=\"10.9-缓存及使用Breaker限制内存使用.md\"></a>10.9-缓存及使用Breaker限制内存使用.md</h1><h1 id=\"缓存及使用Circuit-Breaker限制内存使用\"><a href=\"#缓存及使用Circuit-Breaker限制内存使用\" class=\"headerlink\" title=\"缓存及使用Circuit Breaker限制内存使用\"></a>缓存及使用Circuit Breaker限制内存使用</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">GET</span> _cat/nodes?v<br><br><span class=\"hljs-built_in\">GET</span> _nodes/stats/indices?pretty<br><br><span class=\"hljs-built_in\">GET</span> _cat/nodes?v&amp;<span class=\"hljs-attribute\">h</span>=name,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,request_cache.miss_count<br><br><span class=\"hljs-built_in\">GET</span> _cat/nodes?<span class=\"hljs-attribute\">h</span>=name,port,segments.memory,segments.index_writer_memory,fielddata.memory_size,query_cache.memory_size,request_cache.memory_size&amp;v<br><br><br>PUT /_cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>    <span class=\"hljs-string\">&quot;persistent&quot;</span> : &#123;<br>       <span class=\"hljs-string\">&quot;indices.breaker.request.limit&quot;</span> : <span class=\"hljs-string\">&quot;90%&quot;</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"补充阅读\"><a href=\"#补充阅读\" class=\"headerlink\" title=\"补充阅读\"></a>补充阅读</h2><ul>\n<li><a href=\"https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker\">https://www.elastic.co/blog/improving-node-resiliency-with-the-real-memory-circuit-breaker</a></li>\n</ul>\n<h1 id=\"11-1-使用Shrink与RolloverAPI有效管理时间序列索引-md\"><a href=\"#11-1-使用Shrink与RolloverAPI有效管理时间序列索引-md\" class=\"headerlink\" title=\"11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md\"></a>11.1-使用Shrink与RolloverAPI有效管理时间序列索引.md</h1><h1 id=\"使用-shrink与rolloverAPI有效的管理索引\"><a href=\"#使用-shrink与rolloverAPI有效的管理索引\" class=\"headerlink\" title=\"使用 shrink与rolloverAPI有效的管理索引\"></a>使用 shrink与rolloverAPI有效的管理索引</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><br><span class=\"hljs-comment\"># 打开关闭索引</span><br>DELETE <span class=\"hljs-built_in\">test</span><br><span class=\"hljs-comment\">#查看索引是否存在</span><br>HEAD <span class=\"hljs-built_in\">test</span><br><br>PUT <span class=\"hljs-built_in\">test</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\">#关闭索引</span><br>POST /test/_close<br><span class=\"hljs-comment\">#索引存在</span><br>HEAD <span class=\"hljs-built_in\">test</span><br><span class=\"hljs-comment\"># 无法查询</span><br>POST <span class=\"hljs-built_in\">test</span>/_count<br><br><span class=\"hljs-comment\">#打开索引</span><br>POST /test/_open<br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br>POST <span class=\"hljs-built_in\">test</span>/_count<br><br><br><span class=\"hljs-comment\"># 在一个 hot-warm-cold的集群上进行测试</span><br>GET _cat/nodes<br>GET _cat/nodeattrs<br><br>DELETE my_source_index<br>DELETE my_target_index<br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\"># 分片数3，会失败</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 3,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 报错，因为没有置成 readonly</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#将 my_source_index 设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 报错，必须都在一个节点</span><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>DELETE my_source_index<br><span class=\"hljs-comment\">## 确保分片都在 hot</span><br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,<br>   <span class=\"hljs-string\">&quot;index.routing.allocation.include.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\">#设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><br>POST my_source_index/_shrink/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 2,<br>    <span class=\"hljs-string\">&quot;index.codec&quot;</span>: <span class=\"hljs-string\">&quot;best_compression&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;my_search_indices&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br>GET _cat/shards/my_target_index<br><br><span class=\"hljs-comment\"># My target_index状态为也只读</span><br>PUT my_target_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\"># Split Index</span><br>DELETE my_source_index<br>DELETE my_target_index<br><br>PUT my_source_index<br>&#123;<br> <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 4,<br>   <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0<br> &#125;<br>&#125;<br><br>PUT my_source_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br>GET _cat/shards/my_source_index<br><br><span class=\"hljs-comment\"># 必须是倍数</span><br>POST my_source_index/_split/my_target<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 10<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 必须是只读</span><br>POST my_source_index/_split/my_target<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 8<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#设置为只读</span><br>PUT /my_source_index/_settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.blocks.write&quot;</span>: <span class=\"hljs-literal\">true</span><br>  &#125;<br>&#125;<br><br><br>POST my_source_index/_split/my_target_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index.number_of_shards&quot;</span>: 8,<br>    <span class=\"hljs-string\">&quot;index.number_of_replicas&quot;</span>:0<br>  &#125;<br>&#125;<br><br>GET _cat/shards/my_target_index<br><br><br><br><span class=\"hljs-comment\"># write block</span><br>PUT my_target_index/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Rollover API</span><br>DELETE nginx-logs*<br><span class=\"hljs-comment\"># 不设定 is_write_true</span><br><span class=\"hljs-comment\"># 名字符合命名规范</span><br>PUT /nginx-logs-000001<br>&#123;<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;nginx_logs_write&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多次写入文档</span><br>POST nginx_logs_write/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;log&quot;</span>:<span class=\"hljs-string\">&quot;something&quot;</span><br>&#125;<br><br><br>POST /nginx_logs_write/_rollover<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>:   <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>:  5,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>:  <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br><br>GET /nginx_logs_write/_count<br><span class=\"hljs-comment\"># 查看 Alias信息</span><br>GET /nginx_logs_write<br><br><br>DELETE apache-logs*<br><br><br><span class=\"hljs-comment\"># 设置 is_write_index</span><br>PUT apache-logs1<br>&#123;<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;apache_logs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;is_write_index&quot;</span>:<span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br>POST apache_logs/_count<br><br>POST apache_logs/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\"># 需要指定 target 的名字</span><br>POST /apache_logs/_rollover/apache-logs8xxxx<br>&#123;<br>  <span class=\"hljs-string\">&quot;conditions&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_age&quot;</span>:   <span class=\"hljs-string\">&quot;1d&quot;</span>,<br>    <span class=\"hljs-string\">&quot;max_docs&quot;</span>:  1,<br>    <span class=\"hljs-string\">&quot;max_size&quot;</span>:  <span class=\"hljs-string\">&quot;5gb&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 查看 Alias信息</span><br>GET /apache_logs<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"11-2-索引全生命周期管理及工具介绍-md\"><a href=\"#11-2-索引全生命周期管理及工具介绍-md\" class=\"headerlink\" title=\"11.2-索引全生命周期管理及工具介绍.md\"></a>11.2-索引全生命周期管理及工具介绍.md</h1><h1 id=\"索引全生命周期管理及工具介绍\"><a href=\"#索引全生命周期管理及工具介绍\" class=\"headerlink\" title=\"索引全生命周期管理及工具介绍\"></a>索引全生命周期管理及工具介绍</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\"># 运行三个节点，分片 将box_type设置成 hot，warm和cold</span><br><span class=\"hljs-comment\"># 具体参考 github下，docker-hot-warm-cold 下的docker-compose 文件</span><br><br><br><br>DELETE *<br><br><br><br><span class=\"hljs-comment\"># 设置 1秒刷新1次，生产环境10分种刷新一次</span><br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;indices.lifecycle.poll_interval&quot;</span>:<span class=\"hljs-string\">&quot;1s&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 设置 Policy</span><br>PUT /_ilm/policy/log_ilm_policy<br>&#123;<br>  <span class=\"hljs-string\">&quot;policy&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;phases&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;hot&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;rollover&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;max_docs&quot;</span>: 5<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;warm&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;10s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span>: <span class=\"hljs-string\">&quot;warm&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;cold&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;15s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;allocate&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span>: <span class=\"hljs-string\">&quot;cold&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;delete&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;min_age&quot;</span>: <span class=\"hljs-string\">&quot;20s&quot;</span>,<br>        <span class=\"hljs-string\">&quot;actions&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;delete&quot;</span>: &#123;&#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 设置索引模版</span><br>PUT /_template/log_ilm_template<br>&#123;<br>  <span class=\"hljs-string\">&quot;index_patterns&quot;</span> : [<br>      <span class=\"hljs-string\">&quot;ilm_index-*&quot;</span><br>    ],<br>    <span class=\"hljs-string\">&quot;settings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;lifecycle&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;log_ilm_policy&quot;</span>,<br>          <span class=\"hljs-string\">&quot;rollover_alias&quot;</span> : <span class=\"hljs-string\">&quot;ilm_alias&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;routing&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;allocation&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;include&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;box_type&quot;</span> : <span class=\"hljs-string\">&quot;hot&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;number_of_shards&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<br>        <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span> : <span class=\"hljs-string\">&quot;0&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123; &#125;,<br>    <span class=\"hljs-string\">&quot;aliases&quot;</span> : &#123; &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#创建索引</span><br>PUT ilm_index-000001<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>: 0,<br>    <span class=\"hljs-string\">&quot;index.lifecycle.name&quot;</span>: <span class=\"hljs-string\">&quot;log_ilm_policy&quot;</span>,<br>    <span class=\"hljs-string\">&quot;index.lifecycle.rollover_alias&quot;</span>: <span class=\"hljs-string\">&quot;ilm_alias&quot;</span>,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.include.box_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aliases&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;ilm_alias&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;is_write_index&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 对 Alias写入文档</span><br>POST  ilm_alias/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;dfd&quot;</span>:<span class=\"hljs-string\">&quot;dfdsf&quot;</span><br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"12-1-Logstash入门及架构介绍-md\"><a href=\"#12-1-Logstash入门及架构介绍-md\" class=\"headerlink\" title=\"12.1-Logstash入门及架构介绍.md\"></a>12.1-Logstash入门及架构介绍.md</h1><h1 id=\"Logstash-入门及架构介绍\"><a href=\"#Logstash-入门及架构介绍\" class=\"headerlink\" title=\"Logstash 入门及架构介绍\"></a>Logstash 入门及架构介绍</h1><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\"><br><br># 一个 Demo， demo 运行<br>sudo bin/logstash -f logstash-<span class=\"hljs-keyword\">filter</span>.conf<br><br># demo数据<br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> - - [<span class=\"hljs-number\">11</span>/Dec/<span class=\"hljs-number\">2013</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">01</span>:<span class=\"hljs-number\">45</span> <span class=\"hljs-number\">-0800</span>] <span class=\"hljs-string\">&quot;GET /xampp/status.php HTTP/1.1&quot;</span> <span class=\"hljs-number\">200</span> <span class=\"hljs-number\">3891</span> <span class=\"hljs-string\">&quot;http://cadenza/xampp/navi.php&quot;</span> <span class=\"hljs-string\">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0&quot;</span><br><br><br># codec demo<br><br><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;line&#125;&#125;output&#123;stdout&#123;codec=&gt; rubydebug&#125;&#125;&quot;</span><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;json&#125;&#125;output&#123;stdout&#123;codec=&gt; rubydebug&#125;&#125;&quot;</span><br>sudo bin/logstash -e <span class=\"hljs-string\">&quot;input&#123;stdin&#123;codec=&gt;line&#125;&#125;output&#123;stdout&#123;codec=&gt; dots&#125;&#125;&quot;</span><br><br><br>sudo bin/logstash -f multiline-exception.conf<br><br># 多行数据，异常<br>Exception in thread <span class=\"hljs-string\">&quot;main&quot;</span> java.lang.NullPointerException<br>        at com.example.myproject.Book.getTitle(Book.java:<span class=\"hljs-number\">16</span>)<br>        at com.example.myproject.Author.getBookTitles(Author.java:<span class=\"hljs-number\">25</span>)<br>        at com.example.myproject.Bootstrap.main(Bootstrap.java:<span class=\"hljs-number\">14</span>)<br><br><br><br># 一个实例<br><span class=\"hljs-symbol\">https:</span>//github.com/onebirdrocks/geektime-ELK/blob/master/part<span class=\"hljs-number\">-1</span>/<span class=\"hljs-number\">2.4</span>-Logstash<span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%AE</span><span class=\"hljs-variable\">%89</span><span class=\"hljs-variable\">%E8</span><span class=\"hljs-variable\">%A3</span><span class=\"hljs-variable\">%85</span><span class=\"hljs-variable\">%E4</span><span class=\"hljs-variable\">%B8</span><span class=\"hljs-variable\">%8</span>E<span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%AF</span><span class=\"hljs-variable\">%BC</span><span class=\"hljs-variable\">%E5</span><span class=\"hljs-variable\">%85</span><span class=\"hljs-variable\">%A5</span><span class=\"hljs-variable\">%E6</span><span class=\"hljs-variable\">%95</span><span class=\"hljs-variable\">%B0</span><span class=\"hljs-variable\">%E6</span><span class=\"hljs-variable\">%8</span>D<span class=\"hljs-variable\">%AE</span>/movielens/logstash.conf<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"12-2-利用JDBC插件导入数据到Elasticsearch-md\"><a href=\"#12-2-利用JDBC插件导入数据到Elasticsearch-md\" class=\"headerlink\" title=\"12.2-利用JDBC插件导入数据到Elasticsearch.md\"></a>12.2-利用JDBC插件导入数据到Elasticsearch.md</h1><h1 id=\"Logstash插件及文档介绍\"><a href=\"#Logstash插件及文档介绍\" class=\"headerlink\" title=\"Logstash插件及文档介绍\"></a>Logstash插件及文档介绍</h1><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">https://spring.io/guides/gs/accessing-data-mysql/<br><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> db_example;<br>use db_example;<br><span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">tables</span>;<br><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">user</span>;<br><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span>;<br><br><br><br># 新增用户<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Mike -d email=mike@xyz.com -d tags=Elasticsearch,IntelliJ<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Jack -d email=jack@xyz.com -d tags=Mysql,IntelliJ<br>curl localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">add</span> -d <span class=\"hljs-type\">name</span>=Bob -d email=bob@xyz.com -d tags=Mysql,IntelliJ<br><br>#查看所有的用户<br>curl <span class=\"hljs-string\">&#x27;localhost:8080/demo/all&#x27;</span><br><br># 更新用户<br>curl -X PUT localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">update</span> -d id=<span class=\"hljs-number\">16</span> -d <span class=\"hljs-type\">name</span>=Bob2 -d email=bob2@xyz.com -d tags=Mysql,IntelliJ<br><br># 删除用户<br>curl -X <span class=\"hljs-keyword\">DELETE</span> localhost:<span class=\"hljs-number\">8080</span>/demo/<span class=\"hljs-keyword\">delete</span> -d id=<span class=\"hljs-number\">15</span><br><br><br><br>mysql-demo.conf<br><br># 创建 <span class=\"hljs-keyword\">alias</span>，只显示没有被标记 deleted的用户<br>POST /_aliases<br>&#123;<br>  &quot;actions&quot;: [<br>    &#123;<br>      &quot;add&quot;: &#123;<br>        &quot;index&quot;: &quot;users&quot;,<br>        &quot;alias&quot;: &quot;view_users&quot;,<br>         &quot;filter&quot; : &#123; &quot;term&quot; : &#123; &quot;is_deleted&quot; : <span class=\"hljs-keyword\">false</span> &#125; &#125;<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br># 通过 <span class=\"hljs-keyword\">Alias</span>查询，查不到被标记成 deleted的用户<br>POST view_users/_search<br>&#123;<br><br>&#125;<br><br><br>POST view_users/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;name.keyword&quot;: &#123;<br>        &quot;value&quot;: &quot;Jack&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST users/_search<br>&#123;<br>  &quot;query&quot;: &#123;<br>    &quot;term&quot;: &#123;<br>      &quot;name.keyword&quot;: &#123;<br>        &quot;value&quot;: &quot;Jack&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"12-3-Beats介绍-md\"><a href=\"#12-3-Beats介绍-md\" class=\"headerlink\" title=\"12.3-Beats介绍.md\"></a>12.3-Beats介绍.md</h1><h1 id=\"Beats介绍\"><a href=\"#Beats介绍\" class=\"headerlink\" title=\"Beats介绍\"></a>Beats介绍</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><br><span class=\"hljs-comment\">##</span><br><span class=\"hljs-comment\"># 查看 packetbeat 模块</span><br><span class=\"hljs-comment\"># 设置 packetbeat 的mysql 模块</span><br><span class=\"hljs-comment\"># 启动运行</span><br><span class=\"hljs-comment\">#</span><br>./metricbeat modules list<br>./metricbeat modules <span class=\"hljs-built_in\">enable</span> mysql<br>./metricbeat setup --dashboards<br><br><span class=\"hljs-comment\"># 安装mysql</span><br>create database db_example<br>use db_example;<br>show tables;<br>select * <span class=\"hljs-keyword\">from</span><span class=\"hljs-built_in\"> user</span><br><span class=\"hljs-built_in\"></span><br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Mike -d <span class=\"hljs-attribute\">email</span>=mike@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Elasticsearch,IntelliJ<br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Jack -d <span class=\"hljs-attribute\">email</span>=jack@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Mysql,IntelliJ<br>curl localhost:8080/demo/<span class=\"hljs-built_in\">add</span> -d <span class=\"hljs-attribute\">name</span>=Bob -d <span class=\"hljs-attribute\">email</span>=bob@xyz.com -d <span class=\"hljs-attribute\">tags</span>=Mysql,IntelliJ<br><br>curl <span class=\"hljs-string\">&#x27;localhost:8080/demo/all&#x27;</span><br><br><br><span class=\"hljs-comment\"># 配置 packetbeat</span><br><span class=\"hljs-comment\"># 启动</span><br>修改 packetbeat，打开 http 5601 9200 和 mysql 3306监控<br><br>sudo chown root packetbeat.yml<br>sudo ./packetbeat setup --dashboards<br>sudo ./packetbeat<br><br><br><span class=\"hljs-comment\"># 查看所有 Filebeat 模块</span><br><span class=\"hljs-comment\"># 查看所有的modules</span><br>./filebeat modules list<br><br><span class=\"hljs-comment\">#</span><br>./filebeat modules <span class=\"hljs-built_in\">enable</span> mysql<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-1-使用IndexPattern配置数据-md\"><a href=\"#13-1-使用IndexPattern配置数据-md\" class=\"headerlink\" title=\"13.1-使用IndexPattern配置数据.md\"></a>13.1-使用IndexPattern配置数据.md</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>localhost:5601/status<br><br><br><br><br>PUT /logstash-2015.05.18<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>PUT /logstash-2015.05.19<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT /logstash-2015.05.20<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;geo&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;coordinates&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># For Mac &amp; Windows</span><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/_bulk?pretty&#x27;</span> --data-binary @logs.jsonl<br><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/bank/account/_bulk?pretty&#x27;</span> --data-binary @accounts.json<br><br><br><span class=\"hljs-comment\">#For Windows</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;logs.jsonl&quot;</span><br><br><br><br>GET /_cat/indices?v<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-2-使用KibanaDiscover探索数据-md\"><a href=\"#13-2-使用KibanaDiscover探索数据-md\" class=\"headerlink\" title=\"13.2-使用KibanaDiscover探索数据.md\"></a>13.2-使用KibanaDiscover探索数据.md</h1><h1 id=\"使用Kibana-Discovery-探索数据\"><a href=\"#使用Kibana-Discovery-探索数据\" class=\"headerlink\" title=\"使用Kibana Discovery 探索数据\"></a>使用Kibana Discovery 探索数据</h1><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><br>设置时间过滤器<br>搜索你的数据<br>根据字段进行过滤<br>查看文档数据<br>查看文档上下文<br>暂时字段数据统计<br><span class=\"hljs-built_in\">Save</span> <span class=\"hljs-built_in\">Query</span><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-3-基本可视化组件介绍-md\"><a href=\"#13-3-基本可视化组件介绍-md\" class=\"headerlink\" title=\"13.3-基本可视化组件介绍.md\"></a>13.3-基本可视化组件介绍.md</h1><h1 id=\"基本可视化组件介绍\"><a href=\"#基本可视化组件介绍\" class=\"headerlink\" title=\"基本可视化组件介绍\"></a>基本可视化组件介绍</h1><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\"><br>PUT /shakespeare<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;speaker&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;play_name&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;line_id&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span>&#125;,<br>    <span class=\"hljs-string\">&quot;speech_number&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span>&#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-meta\"># For Mac &amp; Windows</span><br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/bank/account/_bulk?pretty&#x27;</span> --data-<span class=\"hljs-built_in\">binary</span> <span class=\"hljs-symbol\">@accounts</span>.json<br>curl -H <span class=\"hljs-string\">&#x27;Content-Type: application/x-ndjson&#x27;</span> -XPOST <span class=\"hljs-string\">&#x27;localhost:9200/shakespeare/_bulk?pretty&#x27;</span> --data-<span class=\"hljs-built_in\">binary</span> <span class=\"hljs-symbol\">@shakespeare</span>.json<br><br><span class=\"hljs-meta\">#For Windows</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/bank/account/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;accounts.json&quot;</span><br>Invoke-RestMethod <span class=\"hljs-string\">&quot;http://localhost:9200/shakespeare/_bulk?pretty&quot;</span> -Method Post -ContentType <span class=\"hljs-string\">&#x27;application/x-ndjson&#x27;</span> -InFile <span class=\"hljs-string\">&quot;shakespeare.json&quot;</span><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"13-4-构建Dashboard-md\"><a href=\"#13-4-构建Dashboard-md\" class=\"headerlink\" title=\"13.4-构建Dashboard.md\"></a>13.4-构建Dashboard.md</h1><h1 id=\"构建Dashboard\"><a href=\"#构建Dashboard\" class=\"headerlink\" title=\"构建Dashboard\"></a>构建Dashboard</h1><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\"><span class=\"hljs-bullet\">- </span>创建仪表潘<br><span class=\"hljs-bullet\">- </span>加载仪表盘<br><span class=\"hljs-bullet\">- </span>共享仪表盘<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"14-3用机器学习实现时序数据的异常检测-上-md\"><a href=\"#14-3用机器学习实现时序数据的异常检测-上-md\" class=\"headerlink\" title=\"14.3用机器学习实现时序数据的异常检测-上.md\"></a>14.3用机器学习实现时序数据的异常检测-上.md</h1><p>mkdir server_metrics<br>cd server_metrics<br>wget <a href=\"https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz\">https://download.elasticsearch.org/demos/machine_learning/gettingstarted/server_metrics.tar.gz</a><br>tar -xvf server_metrics.tar.gz</p>\n<h1 id=\"14-5-用ELK进行日志管理-md\"><a href=\"#14-5-用ELK进行日志管理-md\" class=\"headerlink\" title=\"14.5-用ELK进行日志管理.md\"></a>14.5-用ELK进行日志管理.md</h1><h1 id=\"用-ELK-来做日志管理\"><a href=\"#用-ELK-来做日志管理\" class=\"headerlink\" title=\"用 ELK 来做日志管理\"></a>用 ELK 来做日志管理</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./filebeat modules list<br>./filebeat modules <span class=\"hljs-built_in\">enable</span> system<br>./filebeat modules <span class=\"hljs-built_in\">enable</span> elasticsearch<br><br><br><span class=\"hljs-comment\">## 进 modules.d 编辑相应的文件，修改log路径</span><br><br>./filebeat setup –dashboards<br><br>./filebeat <span class=\"hljs-built_in\">export</span> template | more<br><br>./filebeat -e<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"14-6-用Canvas做数据演示-md\"><a href=\"#14-6-用Canvas做数据演示-md\" class=\"headerlink\" title=\"14.6-用Canvas做数据演示.md\"></a>14.6-用Canvas做数据演示.md</h1><p>POST elasticoffee&#x2F;_search<br>{<br>  “size”: 0,<br>  “aggs”: {<br>    “by”: {<br>      “terms”: {<br>        “field”: “beverage.keyword”,<br>        “size”: 10<br>      }<br>    }<br>  }<br>}</p>\n<h1 id=\"4-1-基于词项和基于全文的搜索-md\"><a href=\"#4-1-基于词项和基于全文的搜索-md\" class=\"headerlink\" title=\"4.1-基于词项和基于全文的搜索.md\"></a>4.1-基于词项和基于全文的搜索.md</h1><h1 id=\"基于词项和基于全文的搜索\"><a href=\"#基于词项和基于全文的搜索\" class=\"headerlink\" title=\"基于词项和基于全文的搜索\"></a>基于词项和基于全文的搜索</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE products<br>PUT products<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1<br>  &#125;<br>&#125;<br><br><br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;iPhone&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;MBP&quot;</span> &#125;<br><br>GET /products<br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;desc&quot;</span>: &#123;<br>        //<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;iPhone&quot;</span><br>        <span class=\"hljs-string\">&quot;value&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;desc.keyword&quot;</span>: &#123;<br>        //<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;iPhone&quot;</span><br>        //<span class=\"hljs-string\">&quot;value&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /products/_search<br>&#123;<br>  //<span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>        &#125;<br>      &#125;<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#设置 position_increment_gap</span><br>DELETE <span class=\"hljs-built_in\">groups</span><br>PUT <span class=\"hljs-built_in\">groups</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;position_increment_gap&quot;</span>: 0<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>GET <span class=\"hljs-built_in\">groups</span>/_mapping<br><br>POST <span class=\"hljs-built_in\">groups</span>/_doc<br>&#123;<br>  <span class=\"hljs-string\">&quot;names&quot;</span>: [ <span class=\"hljs-string\">&quot;John Water&quot;</span>, <span class=\"hljs-string\">&quot;Water Smith&quot;</span>]<br>&#125;<br><br>POST <span class=\"hljs-built_in\">groups</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Water Water&quot;</span>,<br>        <span class=\"hljs-string\">&quot;slop&quot;</span>: 100<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-built_in\">groups</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_phrase&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;names&quot;</span>: <span class=\"hljs-string\">&quot;Water Smith&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-10-综合排序：Function-Score-Query-优化算分-md\"><a href=\"#4-10-综合排序：Function-Score-Query-优化算分-md\" class=\"headerlink\" title=\"4.10-综合排序：Function Score Query 优化算分.md\"></a>4.10-综合排序：Function Score Query 优化算分.md</h1><h1 id=\"综合排序：Function-Score-Query-优化算分\"><a href=\"#综合排序：Function-Score-Query-优化算分\" class=\"headerlink\" title=\"综合排序：Function Score Query 优化算分\"></a>综合排序：Function Score Query 优化算分</h1><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\">DELETE blogs<br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">1</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">0</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">2</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">100</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>PUT <span class=\"hljs-keyword\">/blogs/</span>_doc/<span class=\"hljs-number\">3</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;title&quot;</span>:   <span class=\"hljs-string\">&quot;About popularity&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;In this post we will talk about...&quot;</span>,<br>  <span class=\"hljs-string\">&quot;votes&quot;</span>:   <span class=\"hljs-number\">1000000</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span> ,<br>        <span class=\"hljs-string\">&quot;factor&quot;</span>: <span class=\"hljs-number\">0.1</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>          <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;popularity&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span> ]<br>        <span class=\"hljs-punctuation\">&#125;</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;field_value_factor&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;votes&quot;</span>,<br>        <span class=\"hljs-string\">&quot;modifier&quot;</span>: <span class=\"hljs-string\">&quot;log1p&quot;</span> ,<br>        <span class=\"hljs-string\">&quot;factor&quot;</span>: <span class=\"hljs-number\">0.1</span><br>      <span class=\"hljs-punctuation\">&#125;</span>,<br>      <span class=\"hljs-string\">&quot;boost_mode&quot;</span>: <span class=\"hljs-string\">&quot;sum&quot;</span>,<br>      <span class=\"hljs-string\">&quot;max_boost&quot;</span>: <span class=\"hljs-number\">3</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br><br>POST <span class=\"hljs-keyword\">/blogs/</span><span class=\"hljs-title class_\">_search</span><br><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-string\">&quot;function_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-string\">&quot;random_score&quot;</span>: <span class=\"hljs-punctuation\">&#123;</span><br>        <span class=\"hljs-string\">&quot;seed&quot;</span>: <span class=\"hljs-number\">911119</span><br>      <span class=\"hljs-punctuation\">&#125;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-12-自动补全与基于上下文的提示-md\"><a href=\"#4-12-自动补全与基于上下文的提示-md\" class=\"headerlink\" title=\"4.12-自动补全与基于上下文的提示.md\"></a>4.12-自动补全与基于上下文的提示.md</h1><h1 id=\"自动补全与基于上下文的提示\"><a href=\"#自动补全与基于上下文的提示\" class=\"headerlink\" title=\"自动补全与基于上下文的提示\"></a>自动补全与基于上下文的提示</h1><figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs fsharp\">DELETE articles<br>PUT <span class=\"hljs-keyword\">articles</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;completion&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST articles<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_bulk</span><br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;lucene is very cool&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elasticsearch builds on top of lucene&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elasticsearch rocks&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;elastic is the company behind ELK stack&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123; &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;title_completion&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;Elk stack rocks&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> <span class=\"hljs-operator\">:</span> &#123;&#125; &#125;<br><br><br>POST articles<span class=\"hljs-operator\">/</span>_search<span class=\"hljs-operator\">?</span><span class=\"hljs-keyword\">pretty</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span><span class=\"hljs-operator\">:</span> 0,<br>  <span class=\"hljs-string\">&quot;suggest&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;article-suggester&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;prefix&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;elk &quot;</span>,<br>      <span class=\"hljs-string\">&quot;completion&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;title_completion&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE comments<br>PUT comments<br>PUT comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_mapping</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;completion&quot;</span>,<br>      <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>[&#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;category&quot;</span>,<br>        <span class=\"hljs-string\">&quot;name&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;comment_category&quot;</span><br>      &#125;]<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_doc</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;I love the star war movies&quot;</span>,<br>  <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>    <span class=\"hljs-string\">&quot;input&quot;</span><span class=\"hljs-operator\">:</span>[<span class=\"hljs-string\">&quot;star wars&quot;</span>],<br>    <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;movies&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_doc</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;Where can I find a Starbucks&quot;</span>,<br>  <span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>    <span class=\"hljs-string\">&quot;input&quot;</span><span class=\"hljs-operator\">:</span>[<span class=\"hljs-string\">&quot;starbucks&quot;</span>],<br>    <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>      <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;coffee&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST comments<span class=\"hljs-operator\">/</span><span class=\"hljs-keyword\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;suggest&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>    <span class=\"hljs-string\">&quot;MY_SUGGESTION&quot;</span><span class=\"hljs-operator\">:</span> &#123;<br>      <span class=\"hljs-string\">&quot;prefix&quot;</span><span class=\"hljs-operator\">:</span> <span class=\"hljs-string\">&quot;sta&quot;</span>,<br>      <span class=\"hljs-string\">&quot;completion&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;comment_autocomplete&quot;</span>,<br>        <span class=\"hljs-string\">&quot;contexts&quot;</span><span class=\"hljs-operator\">:</span>&#123;<br>          <span class=\"hljs-string\">&quot;comment_category&quot;</span><span class=\"hljs-operator\">:</span><span class=\"hljs-string\">&quot;coffee&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-13-跨集群搜索-md\"><a href=\"#4-13-跨集群搜索-md\" class=\"headerlink\" title=\"4.13-跨集群搜索.md\"></a>4.13-跨集群搜索.md</h1><h1 id=\"跨集群搜索\"><a href=\"#跨集群搜索\" class=\"headerlink\" title=\"跨集群搜索\"></a>跨集群搜索</h1><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">//启动<span class=\"hljs-number\">3</span>个集群<br><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster0node -E cluster.<span class=\"hljs-attr\">name=</span>cluster0 -E path.<span class=\"hljs-attr\">data=</span>cluster0_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9200</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9300</span><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster1node -E cluster.<span class=\"hljs-attr\">name=</span>cluster1 -E path.<span class=\"hljs-attr\">data=</span>cluster1_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9201</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9301</span><br>bin/elasticsearch -E node.<span class=\"hljs-attr\">name=</span>cluster2node -E cluster.<span class=\"hljs-attr\">name=</span>cluster2 -E path.<span class=\"hljs-attr\">data=</span>cluster2_data -E discovery.<span class=\"hljs-attr\">type=</span>single-<span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">-E</span> http.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9202</span> -E transport.<span class=\"hljs-attr\">port=</span><span class=\"hljs-number\">9302</span><br><br><br>//在每个集群上设置动态的设置<br>PUT _cluster/settings<br>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;remote&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;cluster0&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span><br>          ],<br>          <span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>: <span class=\"hljs-string\">&quot;30s&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cluster1&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span><br>          ],<br>          <span class=\"hljs-string\">&quot;transport.compress&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cluster2&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;seeds&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#cURL</span><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9200/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9201/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br>curl -XPUT <span class=\"hljs-string\">&quot;http://localhost:9202/_cluster/settings&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;persistent&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster&quot;</span>:&#123;<span class=\"hljs-string\">&quot;remote&quot;</span>:&#123;<span class=\"hljs-string\">&quot;cluster0&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9300&quot;</span>],<span class=\"hljs-string\">&quot;transport.ping_schedule&quot;</span>:<span class=\"hljs-string\">&quot;30s&quot;</span>&#125;,<span class=\"hljs-string\">&quot;cluster1&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9301&quot;</span>],<span class=\"hljs-string\">&quot;transport.compress&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;skip_unavailable&quot;</span>:<span class=\"hljs-literal\">true</span>&#125;,<span class=\"hljs-string\">&quot;cluster2&quot;</span>:&#123;<span class=\"hljs-string\">&quot;seeds&quot;</span>:[<span class=\"hljs-string\">&quot;127.0.0.1:9302&quot;</span>]&#125;&#125;&#125;&#125;&#125;&#x27;<br><br><br><span class=\"hljs-comment\">#创建测试数据</span><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9200/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">10</span>&#125;&#x27;<br><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9201/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">20</span>&#125;&#x27;<br><br>curl -XPOST <span class=\"hljs-string\">&quot;http://localhost:9202/users/_doc&quot;</span> -H &#x27;Content-<span class=\"hljs-keyword\">Type</span>: application/json&#x27; -d&#x27;<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user3&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:<span class=\"hljs-number\">30</span>&#125;&#x27;<br><br><br><span class=\"hljs-comment\">#查询</span><br>GET /users,cluster1:users,cluster2:users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">20</span>,<br>        <span class=\"hljs-string\">&quot;lte&quot;</span>: <span class=\"hljs-number\">40</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-2-结构化搜索-md\"><a href=\"#4-2-结构化搜索-md\" class=\"headerlink\" title=\"4.2-结构化搜索.md\"></a>4.2-结构化搜索.md</h1><h1 id=\"结构化搜索\"><a href=\"#结构化搜索\" class=\"headerlink\" title=\"结构化搜索\"></a>结构化搜索</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\">#结构化搜索，精确匹配</span><br>DELETE products<br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br>GET products/_mapping<br><br><br><br><span class=\"hljs-comment\">#对布尔值 match 查询，有算分</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#对布尔值，通过constant score 转成 filtering，没有算分</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#数字类型 Term</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: 30<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#数字类型 terms</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;20&quot;</span>,<br>            <span class=\"hljs-string\">&quot;30&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#数字 Range 查询</span><br>GET products/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;constant_score&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;price&quot;</span> : &#123;<br>                        <span class=\"hljs-string\">&quot;gte&quot;</span> : 20,<br>                        <span class=\"hljs-string\">&quot;lte&quot;</span>  : 30<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 日期 range</span><br>POST products/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;constant_score&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;date&quot;</span> : &#123;<br>                      <span class=\"hljs-string\">&quot;gte&quot;</span> : <span class=\"hljs-string\">&quot;now-1y&quot;</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#exists查询</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;exists&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#处理多值字段</span><br>POST /movies/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Father of the Bridge Part II&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1995, <span class=\"hljs-string\">&quot;genre&quot;</span>:<span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Dave&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1993,<span class=\"hljs-string\">&quot;genre&quot;</span>:[<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;Romance&quot;</span>] &#125;<br><br><br><span class=\"hljs-comment\">#处理多值字段，term 查询是包含，而不是等于</span><br>POST movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#字符类型 terms</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: [<br>            <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span>,<br>            <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span><br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: 30<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;date&quot;</span>: <span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;date&quot;</span>: <span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#对布尔数值</span><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avaliable&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;20&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;price&quot;</span>: <span class=\"hljs-string\">&quot;20&quot;</span><br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;constant_score&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;exists&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-3-搜索的相关性算分-md\"><a href=\"#4-3-搜索的相关性算分-md\" class=\"headerlink\" title=\"4.3-搜索的相关性算分.md\"></a>4.3-搜索的相关性算分.md</h1><h1 id=\"搜索的相关性算分\"><a href=\"#搜索的相关性算分\" class=\"headerlink\" title=\"搜索的相关性算分\"></a>搜索的相关性算分</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><br><br>PUT testscore<br>&#123;<br>  &quot;settings&quot;: &#123;<br>    &quot;number_of_shards&quot;: <span class=\"hljs-number\">1</span><br>  &#125;,<br>  &quot;mappings&quot;: &#123;<br>    &quot;properties&quot;: &#123;<br>      &quot;<span class=\"hljs-attribute\">content</span>&quot;: &#123;<br>        &quot;type&quot;: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT testscore/_bulk<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">1</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;we use Elasticsearch to power the search&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">2</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;we like elasticsearch&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">3</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;The scoring of documents is caculated by the scoring formula&quot;</span> &#125;<br>&#123; &quot;index&quot;: &#123; &quot;_id&quot;: <span class=\"hljs-number\">4</span> &#125;&#125;<br>&#123; &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;you know, for search&quot;</span> &#125;<br><br><br><br>POST /testscore/_search<br>&#123;<br>  //&quot;explain&quot;: true,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    &quot;match&quot;: &#123;<br>      &quot;<span class=\"hljs-attribute\">content</span>&quot;:<span class=\"hljs-string\">&quot;you&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;the&quot;</span><br>      //<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;the elasticsearch&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST testscore/_search<br>&#123;<br>    &quot;query&quot;: &#123;<br>        &quot;boosting&quot; : &#123;<br>            &quot;positive&quot; : &#123;<br>                &quot;term&quot; : &#123;<br>                    &quot;<span class=\"hljs-attribute\">content</span>&quot; : <span class=\"hljs-string\">&quot;elasticsearch&quot;</span><br>                &#125;<br>            &#125;,<br>            &quot;negative&quot; : &#123;<br>                 &quot;term&quot; : &#123;<br>                     &quot;<span class=\"hljs-attribute\">content</span>&quot; : <span class=\"hljs-string\">&quot;like&quot;</span><br>                &#125;<br>            &#125;,<br>            &quot;negative_boost&quot; : <span class=\"hljs-number\">0.2</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST tmdb/_search<br>&#123;<br>  &quot;_source&quot;: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    &quot;more_like_this&quot;: &#123;<br>      &quot;fields&quot;: [<br>        <span class=\"hljs-string\">&quot;title^10&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span><br>      ],<br>      <span class=\"hljs-string\">&quot;like&quot;</span>: [&#123;&quot;_id&quot;:<span class=\"hljs-string\">&quot;14191&quot;</span>&#125;],<br>      &quot;min_term_freq&quot;: <span class=\"hljs-number\">1</span>,<br>      <span class=\"hljs-string\">&quot;max_query_terms&quot;</span>: <span class=\"hljs-number\">12</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"4-4-Query-Filtering实现多字符串多字段查询-md\"><a href=\"#4-4-Query-Filtering实现多字符串多字段查询-md\" class=\"headerlink\" title=\"4.4-Query&amp;Filtering实现多字符串多字段查询.md\"></a>4.4-Query&amp;Filtering实现多字符串多字段查询.md</h1><h1 id=\"Query-Filtering-与多字符串多字段查询\"><a href=\"#Query-Filtering-与多字符串多字段查询\" class=\"headerlink\" title=\"Query &amp; Filtering 与多字符串多字段查询\"></a>Query &amp; Filtering 与多字符串多字段查询</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br><br><br><span class=\"hljs-comment\">#基本语法</span><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;price&quot;</span> : <span class=\"hljs-string\">&quot;30&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span> : [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125; &#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125; &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span> :1<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题</span><br>POST /newmovies/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Father of the Bridge Part II&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1995, <span class=\"hljs-string\">&quot;genre&quot;</span>:<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;genre_count&quot;</span>:1 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Dave&quot;</span>,<span class=\"hljs-string\">&quot;year&quot;</span>:1993,<span class=\"hljs-string\">&quot;genre&quot;</span>:[<span class=\"hljs-string\">&quot;Comedy&quot;</span>,<span class=\"hljs-string\">&quot;Romance&quot;</span>],<span class=\"hljs-string\">&quot;genre_count&quot;</span>:2 &#125;<br><br><span class=\"hljs-comment\">#must，有算分</span><br>POST /newmovies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre_count&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: 1&#125;&#125;&#125;<br><br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Filter。不参与算分，结果的score是0</span><br>POST /newmovies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre.keyword&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;Comedy&quot;</span>&#125;&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;genre_count&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: 1&#125;&#125;&#125;<br>        ]<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Filtering Context</span><br>POST _search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br><br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Query Context</span><br>POST /products/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 10,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2018-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 20,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">&quot;date&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;KDKE-B-9947-#kL5&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 4 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;price&quot;</span> : 30,<span class=\"hljs-string\">&quot;avaliable&quot;</span>:<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;productID&quot;</span> : <span class=\"hljs-string\">&quot;QQPX-R-3956-#aD8&quot;</span> &#125;<br><br><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;productID.keyword&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span>&#125;&#125;<br>        &#125;,<br>        &#123;<span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<span class=\"hljs-string\">&quot;avaliable&quot;</span>: &#123;<span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;&#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#嵌套，实现了 should not 逻辑</span><br>POST /products/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span>: <span class=\"hljs-string\">&quot;30&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;avaliable&quot;</span>: <span class=\"hljs-string\">&quot;false&quot;</span><br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span>: 1<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Controll the Precision</span><br>POST _search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;price&quot;</span> : <span class=\"hljs-string\">&quot;30&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;avaliable&quot;</span> : <span class=\"hljs-string\">&quot;true&quot;</span> &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;price&quot;</span> : &#123; <span class=\"hljs-string\">&quot;lte&quot;</span> : 10 &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;should&quot;</span> : [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;JODL-X-1937-#pV7&quot;</span> &#125; &#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span> : &#123; <span class=\"hljs-string\">&quot;productID.keyword&quot;</span> : <span class=\"hljs-string\">&quot;XHDK-A-1293-#fJ3&quot;</span> &#125; &#125;<br>      ],<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span> :2<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST /animals/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;red&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;quick&quot;</span>   &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;dog&quot;</span>   &#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST /animals/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;quick&quot;</span> &#125;&#125;,<br>        &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;dog&quot;</span>   &#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;bool&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;should&quot;</span>:[<br>               &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>                 &#123; <span class=\"hljs-string\">&quot;term&quot;</span>: &#123; <span class=\"hljs-string\">&quot;text&quot;</span>: <span class=\"hljs-string\">&quot;brown&quot;</span> &#125;&#125;,<br>            ]<br>          &#125;<br><br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE blogs<br>POST /blogs/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad,Apple iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad,Apple iPad&quot;</span>, <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span> &#125;<br><br><br>POST blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;apple,ipad&quot;</span>,<br>            <span class=\"hljs-string\">&quot;boost&quot;</span>: 1.1<br>          &#125;<br>        &#125;&#125;,<br><br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;apple,ipad&quot;</span>,<br>            <span class=\"hljs-string\">&quot;boost&quot;</span>:<br>          &#125;<br>        &#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE news<br>POST /news/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple Mac&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple iPad&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 3 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Apple employee like Apple Pie and Apple Juice&quot;</span> &#125;<br><br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;apple&quot;</span>&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;apple&quot;</span>&#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;must_not&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;pie&quot;</span>&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST news/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;boosting&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;positive&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;apple&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;negative&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;pie&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;negative_boost&quot;</span>: 0.5<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-5-单字符串多字段查询-DisMaxQuery-md\"><a href=\"#4-5-单字符串多字段查询-DisMaxQuery-md\" class=\"headerlink\" title=\"4.5-单字符串多字段查询-DisMaxQuery.md\"></a>4.5-单字符串多字段查询-DisMaxQuery.md</h1><h1 id=\"单字符串多字段查询：Dis-Max-Query\"><a href=\"#单字符串多字段查询：Dis-Max-Query\" class=\"headerlink\" title=\"单字符串多字段查询：Dis Max Query\"></a>单字符串多字段查询：Dis Max Query</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>PUT /blogs/_doc/1<br>&#123;<br>    <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick brown rabbits&quot;</span>,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Brown rabbits are commonly seen.&quot;</span><br>&#125;<br><br>PUT /blogs/_doc/2<br>&#123;<br>    <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Keeping pets healthy&quot;</span>,<br>    <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span><br>&#125;<br><br>POST /blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;should&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Brown fox&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Brown fox&quot;</span> &#125;&#125;<br>            ]<br>        &#125;<br>    &#125;<br>&#125;<br><br>POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ]<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ],<br>            <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2<br>        &#125;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-6-单字符串多字段查询-Multi-Match-md\"><a href=\"#4-6-单字符串多字段查询-Multi-Match-md\" class=\"headerlink\" title=\"4.6-单字符串多字段查询-Multi-Match.md\"></a>4.6-单字符串多字段查询-Multi-Match.md</h1><h1 id=\"单字符串多字段查询：Multi-Match\"><a href=\"#单字符串多字段查询：Multi-Match\" class=\"headerlink\" title=\"单字符串多字段查询：Multi Match\"></a>单字符串多字段查询：Multi Match</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">POST blogs/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;dis_max&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;queries&quot;</span>: [<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;,<br>                &#123; <span class=\"hljs-string\">&quot;match&quot;</span>: &#123; <span class=\"hljs-string\">&quot;body&quot;</span>:  <span class=\"hljs-string\">&quot;Quick pets&quot;</span> &#125;&#125;<br>            ],<br>            <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2<br>        &#125;<br>    &#125;<br>&#125;<br><br>POST blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;best_fields&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;Quick pets&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;body&quot;</span>],<br>      <span class=\"hljs-string\">&quot;tie_breaker&quot;</span>: 0.2,<br>      <span class=\"hljs-string\">&quot;minimum_should_match&quot;</span>: <span class=\"hljs-string\">&quot;20%&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br>POST books/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;Quick brown fox&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: <span class=\"hljs-string\">&quot;*_title&quot;</span><br>    &#125;<br>&#125;<br><br><br>POST books/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;Quick brown fox&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;*_title&quot;</span>, <span class=\"hljs-string\">&quot;chapter_title^2&quot;</span> ]<br>    &#125;<br>&#125;<br><br><br><br>DELETE /titles<br>PUT /titles<br>&#123;<br>    <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123; <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 1 &#125;,<br>    <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;my_type&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>                        <span class=\"hljs-string\">&quot;std&quot;</span>:   &#123;<br>                            <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>                            <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span><br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br>PUT /titles<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST titles/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;My dog barks&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I see a lot of barking dogs on the road &quot;</span> &#125;<br><br><br>GET titles/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;barking dogs&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE /titles<br>PUT /titles<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<span class=\"hljs-string\">&quot;std&quot;</span>: &#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;standard&quot;</span>&#125;&#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST titles/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 1 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;My dog barks&quot;</span> &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span>: &#123; <span class=\"hljs-string\">&quot;_id&quot;</span>: 2 &#125;&#125;<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I see a lot of barking dogs on the road &quot;</span> &#125;<br><br>GET /titles/_search<br>&#123;<br>   <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;barking dogs&quot;</span>,<br>            <span class=\"hljs-string\">&quot;type&quot;</span>:   <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>            <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;title.std&quot;</span> ]<br>        &#125;<br>    &#125;<br>&#125;<br><br>GET /titles/_search<br>&#123;<br>   <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;query&quot;</span>:  <span class=\"hljs-string\">&quot;barking dogs&quot;</span>,<br>            <span class=\"hljs-string\">&quot;type&quot;</span>:   <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>            <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title^10&quot;</span>, <span class=\"hljs-string\">&quot;title.std&quot;</span> ]<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"4-7-多语言及中文分词与检索-md\"><a href=\"#4-7-多语言及中文分词与检索-md\" class=\"headerlink\" title=\"4.7-多语言及中文分词与检索.md\"></a>4.7-多语言及中文分词与检索.md</h1><h1 id=\"多语言及中文分词与检索\"><a href=\"#多语言及中文分词与检索\" class=\"headerlink\" title=\"多语言及中文分词与检索\"></a>多语言及中文分词与检索</h1><ul>\n<li><p>来到杨过曾经生活过的地方，小龙女动情地说：“我也想过过过儿过过的生活。”</p>\n</li>\n<li><p>你也想犯范范玮琪犯过的错吗</p>\n</li>\n<li><p>校长说衣服上除了校徽别别别的</p>\n</li>\n<li><p>这几天天天天气不好</p>\n</li>\n<li><p>我背有点驼，麻麻说“你的背得背背背背佳</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#stop word</span><br><br>DELETE my_index<br>PUT /my_index/_doc/1<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m happy for this fox&quot;</span> &#125;<br><br>PUT /my_index/_doc/2<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m not happy about my fox problem&quot;</span> &#125;<br><br><br>POST my_index/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;not happy fox&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 `english`（英语）分析器，另一次使用 `standard`（标准）分析器:</span><br><br>DELETE my_index<br><br>PUT /my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;blog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,<br>          <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>PUT /my_index<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;blog&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;string&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;english&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;string&quot;</span>,<br>              <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;english&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>PUT /my_index/blog/1<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m happy for this fox&quot;</span> &#125;<br><br>PUT /my_index/blog/2<br>&#123; <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;I&#x27;m not happy about my fox problem&quot;</span> &#125;<br><br>GET /_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;most_fields&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>:    <span class=\"hljs-string\">&quot;not happy foxes&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [ <span class=\"hljs-string\">&quot;title&quot;</span>, <span class=\"hljs-string\">&quot;title.english&quot;</span> ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#安装插件</span><br>./elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.1.0/elasticsearch-analysis-ik-7.1.0.zip<br><span class=\"hljs-comment\">#安装插件</span><br>bin/elasticsearch install https://github.com/KennFalcon/elasticsearch-analysis-hanlp/releases/download/v7.1.0/elasticsearch-analysis-hanlp-7.1.0.zip<br><br><br><br><br><span class=\"hljs-comment\">#ik_max_word</span><br><span class=\"hljs-comment\">#ik_smart</span><br><span class=\"hljs-comment\">#hanlp: hanlp默认分词</span><br><span class=\"hljs-comment\">#hanlp_standard: 标准分词</span><br><span class=\"hljs-comment\">#hanlp_index: 索引分词</span><br><span class=\"hljs-comment\">#hanlp_nlp: NLP分词</span><br><span class=\"hljs-comment\">#hanlp_n_short: N-最短路分词</span><br><span class=\"hljs-comment\">#hanlp_dijkstra: 最短路分词</span><br><span class=\"hljs-comment\">#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）</span><br><span class=\"hljs-comment\">#hanlp_speed: 极速词典分词</span><br><br>POST _analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;hanlp_standard&quot;</span>,<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜&quot;</span>]<br><br>&#125;     <br><br><span class=\"hljs-comment\">#Pinyin</span><br>PUT /artists/<br>&#123;<br>    <span class=\"hljs-string\">&quot;settings&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;analysis&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;analyzer&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;user_name_analyzer&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;tokenizer&quot;</span> : <span class=\"hljs-string\">&quot;whitespace&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;filter&quot;</span> : <span class=\"hljs-string\">&quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span><br>                &#125;<br>            &#125;,<br>            <span class=\"hljs-string\">&quot;filter&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span> : &#123;<br>                    <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;pinyin&quot;</span>,<br>                    <span class=\"hljs-string\">&quot;keep_first_letter&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_full_pinyin&quot;</span> : <span class=\"hljs-literal\">false</span>,<br>                    <span class=\"hljs-string\">&quot;keep_none_chinese&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_original&quot;</span> : <span class=\"hljs-literal\">false</span>,<br>                    <span class=\"hljs-string\">&quot;limit_first_letter_length&quot;</span> : 16,<br>                    <span class=\"hljs-string\">&quot;lowercase&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;trim_whitespace&quot;</span> : <span class=\"hljs-literal\">true</span>,<br>                    <span class=\"hljs-string\">&quot;keep_none_chinese_in_first_letter&quot;</span> : <span class=\"hljs-literal\">true</span><br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>GET /artists/_analyze<br>&#123;<br>  <span class=\"hljs-string\">&quot;text&quot;</span>: [<span class=\"hljs-string\">&quot;刘德华 张学友 郭富城 黎明 四大天王&quot;</span>],<br>  <span class=\"hljs-string\">&quot;analyzer&quot;</span>: <span class=\"hljs-string\">&quot;user_name_analyzer&quot;</span><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h2><ul>\n<li><p>Elasticsearch IK分词插件 <a href=\"https://github.com/medcl/elasticsearch-analysis-ik/releases\">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p>\n</li>\n<li><p>Elasticsearch hanlp 分词插件 <a href=\"https://github.com/KennFalcon/elasticsearch-analysis-hanlp\">https://github.com/KennFalcon/elasticsearch-analysis-hanlp</a></p>\n</li>\n<li><p>分词算法综述 <a href=\"https://zhuanlan.zhihu.com/p/50444885\">https://zhuanlan.zhihu.com/p/50444885</a></p>\n</li>\n</ul>\n<h3 id=\"一些分词工具，供参考：\"><a href=\"#一些分词工具，供参考：\" class=\"headerlink\" title=\"一些分词工具，供参考：\"></a>一些分词工具，供参考：</h3><ul>\n<li>中科院计算所NLPIR <a href=\"http://ictclas.nlpir.org/nlpir/\">http://ictclas.nlpir.org/nlpir/</a></li>\n<li>ansj分词器 <a href=\"https://github.com/NLPchina/ansj_seg\">https://github.com/NLPchina/ansj_seg</a></li>\n<li>哈工大的LTP <a href=\"https://github.com/HIT-SCIR/ltp\">https://github.com/HIT-SCIR/ltp</a></li>\n<li>清华大学THULAC <a href=\"https://github.com/thunlp/THULAC\">https://github.com/thunlp/THULAC</a></li>\n<li>斯坦福分词器 <a href=\"https://nlp.stanford.edu/software/segmenter.shtml\">https://nlp.stanford.edu/software/segmenter.shtml</a></li>\n<li>Hanlp分词器 <a href=\"https://github.com/hankcs/HanLP\">https://github.com/hankcs/HanLP</a></li>\n<li>结巴分词 <a href=\"https://github.com/yanyiwu/cppjieba\">https://github.com/yanyiwu/cppjieba</a></li>\n<li>KCWS分词器(字嵌入+Bi-LSTM+CRF) <a href=\"https://github.com/koth/kcws\">https://github.com/koth/kcws</a></li>\n<li>ZPar <a href=\"https://github.com/frcchang/zpar/releases\">https://github.com/frcchang/zpar/releases</a></li>\n<li>IKAnalyzer <a href=\"https://github.com/wks/ik-analyzer\">https://github.com/wks/ik-analyzer</a></li>\n</ul>\n<h1 id=\"4-8-SpaceJam一个全文搜索的实例-md\"><a href=\"#4-8-SpaceJam一个全文搜索的实例-md\" class=\"headerlink\" title=\"4.8-SpaceJam一个全文搜索的实例.md\"></a>4.8-SpaceJam一个全文搜索的实例.md</h1><h1 id=\"Space-Jam，一次全文搜索的实例\"><a href=\"#Space-Jam，一次全文搜索的实例\" class=\"headerlink\" title=\"Space Jam，一次全文搜索的实例\"></a>Space Jam，一次全文搜索的实例</h1><h2 id=\"环境要求\"><a href=\"#环境要求\" class=\"headerlink\" title=\"环境要求\"></a>环境要求</h2><ul>\n<li>Python 2.7.15</li>\n<li>可以使用pyenv管理多个python版本（可选）</li>\n</ul>\n<h2 id=\"进入-tmdb-search目录\"><a href=\"#进入-tmdb-search目录\" class=\"headerlink\" title=\"进入 tmdb-search目录\"></a>进入 tmdb-search目录</h2><p>Run<br>pip install -r requirements.txt<br>Run python .&#x2F;ingest_tmdb_from_file.py</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\"><span class=\"hljs-symbol\">POST</span> tmdb/<span class=\"hljs-symbol\">_search</span><br>&#123;<br><span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br> <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>   <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br> &#125;<br>&#125;<br><br><span class=\"hljs-symbol\">POST</span> tmdb/<span class=\"hljs-symbol\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;_source&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;basketball with cartoon aliens&quot;</span>,<br>      <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>]<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;highlight&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;overview&quot;</span> : &#123; <span class=\"hljs-string\">&quot;pre_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0;32;40m&quot;</span>], <span class=\"hljs-string\">&quot;post_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0m&quot;</span>] &#125;,<br>            <span class=\"hljs-string\">&quot;title&quot;</span> : &#123; <span class=\"hljs-string\">&quot;pre_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0;32;40m&quot;</span>], <span class=\"hljs-string\">&quot;post_tags&quot;</span> : [<span class=\"hljs-string\">&quot;\\\\033[0m&quot;</span>] &#125;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"相关\"><a href=\"#相关\" class=\"headerlink\" title=\"相关\"></a>相关</h2><ul>\n<li>Windows 安装 pyenv <a href=\"https://github.com/pyenv-win/pyenv-win\">https://github.com/pyenv-win/pyenv-win</a></li>\n<li>Mac 安装pyenv <a href=\"https://segmentfault.com/a/1190000017403221\">https://segmentfault.com/a/1190000017403221</a></li>\n<li>Linux 安装 pyenv <a href=\"https://blog.csdn.net/GX_1_11_real/article/details/80237064\">https://blog.csdn.net/GX_1_11_real/article/details/80237064</a></li>\n<li>Python.org <a href=\"https://www.python.org/\">https://www.python.org/</a></li>\n</ul>\n<h1 id=\"4-9-使用SearchTemplate和IndexAlias进行查询-md\"><a href=\"#4-9-使用SearchTemplate和IndexAlias进行查询-md\" class=\"headerlink\" title=\"4.9-使用SearchTemplate和IndexAlias进行查询.md\"></a>4.9-使用SearchTemplate和IndexAlias进行查询.md</h1><h1 id=\"使用-Search-Template-和-Index-Alias-查询\"><a href=\"#使用-Search-Template-和-Index-Alias-查询\" class=\"headerlink\" title=\"使用 Search Template 和 Index Alias 查询\"></a>使用 Search Template 和 Index Alias 查询</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">POST <span class=\"hljs-variable\">_scripts</span>/tmdb<br>&#123;<br>  <span class=\"hljs-string\">&quot;script&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;lang&quot;</span>: <span class=\"hljs-string\">&quot;mustache&quot;</span>,<br>    <span class=\"hljs-string\">&quot;source&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;_source&quot;</span>: [<br>        <span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span><br>      ],<br>      <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">20</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;multi_match&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;query&quot;</span>: <span class=\"hljs-string\">&quot;&#123;&#123;q&#125;&#125;&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;overview&quot;</span>]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br>DELETE <span class=\"hljs-variable\">_scripts</span>/tmdb<br><br><span class=\"hljs-built_in\">GET</span> <span class=\"hljs-variable\">_scripts</span>/tmdb<br><br>POST tmdb/<span class=\"hljs-variable\">_search</span>/template<br>&#123;<br>    <span class=\"hljs-string\">&quot;id&quot;</span>:<span class=\"hljs-string\">&quot;tmdb&quot;</span>,<br>    <span class=\"hljs-string\">&quot;params&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;q&quot;</span>: <span class=\"hljs-string\">&quot;basketball with cartoon aliens&quot;</span><br>    &#125;<br>&#125;<br><br><br>PUT movies-<span class=\"hljs-number\">2019</span>/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">1</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;the matrix&quot;</span>,<br>  <span class=\"hljs-string\">&quot;rating&quot;</span>:<span class=\"hljs-number\">5</span><br>&#125;<br><br>PUT movies-<span class=\"hljs-number\">2019</span>/<span class=\"hljs-variable\">_doc</span>/<span class=\"hljs-number\">2</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;rating&quot;</span>:<span class=\"hljs-number\">3</span><br>&#125;<br><br>POST <span class=\"hljs-variable\">_aliases</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;movies-2019&quot;</span>,<br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;movies-latest&quot;</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br>POST movies-latest/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-variable\">_aliases</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;actions&quot;</span>: [<br>    &#123;<br>      <span class=\"hljs-string\">&quot;add&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;movies-2019&quot;</span>,<br>        <span class=\"hljs-string\">&quot;alias&quot;</span>: <span class=\"hljs-string\">&quot;movies-lastest-highrate&quot;</span>,<br>        <span class=\"hljs-string\">&quot;filter&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;gte&quot;</span>: <span class=\"hljs-number\">4</span><br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br><br>POST movies-lastest-highrate/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-1-集群分布式模型及选主与脑裂问题-md\"><a href=\"#5-1-集群分布式模型及选主与脑裂问题-md\" class=\"headerlink\" title=\"5.1-集群分布式模型及选主与脑裂问题.md\"></a>5.1-集群分布式模型及选主与脑裂问题.md</h1><h1 id=\"集群分布式模型及选主与脑裂问题\"><a href=\"#集群分布式模型及选主与脑裂问题\" class=\"headerlink\" title=\"集群分布式模型及选主与脑裂问题\"></a>集群分布式模型及选主与脑裂问题</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data<br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data<br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node3 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node3_data<br><br></code></pre></td></tr></table></figure>\n<h1 id=\"5-2-分片与集群的故障转移-md\"><a href=\"#5-2-分片与集群的故障转移-md\" class=\"headerlink\" title=\"5.2-分片与集群的故障转移.md\"></a>5.2-分片与集群的故障转移.md</h1><h1 id=\"分片与集群的故障转移\"><a href=\"#分片与集群的故障转移\" class=\"headerlink\" title=\"分片与集群的故障转移\"></a>分片与集群的故障转移</h1><h1 id=\"5-3-文档分布式存储-md\"><a href=\"#5-3-文档分布式存储-md\" class=\"headerlink\" title=\"5.3-文档分布式存储.md\"></a>5.3-文档分布式存储.md</h1><h1 id=\"文档分布式存储\"><a href=\"#文档分布式存储\" class=\"headerlink\" title=\"文档分布式存储\"></a>文档分布式存储</h1><h1 id=\"5-4-分片及其生命周期-md\"><a href=\"#5-4-分片及其生命周期-md\" class=\"headerlink\" title=\"5.4-分片及其生命周期.md\"></a>5.4-分片及其生命周期.md</h1><h1 id=\"分片及其生命周期\"><a href=\"#分片及其生命周期\" class=\"headerlink\" title=\"分片及其生命周期\"></a>分片及其生命周期</h1><h1 id=\"5-5-剖析分布式查询及相关性评分-md\"><a href=\"#5-5-剖析分布式查询及相关性评分-md\" class=\"headerlink\" title=\"5.5-剖析分布式查询及相关性评分.md\"></a>5.5-剖析分布式查询及相关性评分.md</h1><h1 id=\"剖析分布式查询及相关性评分\"><a href=\"#剖析分布式查询及相关性评分\" class=\"headerlink\" title=\"剖析分布式查询及相关性评分\"></a>剖析分布式查询及相关性评分</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">DELETE message<br>PUT message<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 20<br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> message<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good&quot;</span><br>&#125;<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=2<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good morning&quot;</span><br>&#125;<br><br>POST message/_doc?<span class=\"hljs-attribute\">routing</span>=3<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;good morning everyone&quot;</span><br>&#125;<br><br>POST message/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br><br>POST message/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;explain&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;good&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>POST message/_search?<span class=\"hljs-attribute\">search_type</span>=dfs_query_then_fetch<br>&#123;<br><br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;good&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-6-排序及DocValues-Fielddata-md\"><a href=\"#5-6-排序及DocValues-Fielddata-md\" class=\"headerlink\" title=\"5.6-排序及DocValues&amp;Fielddata.md\"></a>5.6-排序及DocValues&amp;Fielddata.md</h1><h1 id=\"排序及Doc-Values-Fielddata\"><a href=\"#排序及Doc-Values-Fielddata\" class=\"headerlink\" title=\"排序及Doc Values &amp; Fielddata\"></a>排序及Doc Values &amp; Fielddata</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#单字段排序</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br><span class=\"hljs-comment\">#多字段排序</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;order_date&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;,<br>    &#123;<span class=\"hljs-string\">&quot;_doc&quot;</span>:&#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;&#125;,<br>    &#123;<span class=\"hljs-string\">&quot;_score&quot;</span>:&#123; <span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br>GET kibana_sample_data_ecommerce/_mapping<br><br><span class=\"hljs-comment\">#对 text 字段进行排序。默认会报错，需打开fielddata</span><br>POST /kibana_sample_data_ecommerce/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 5,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>    &#123;<span class=\"hljs-string\">&quot;customer_full_name&quot;</span>: &#123;<span class=\"hljs-string\">&quot;order&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125;&#125;<br>  ]<br>&#125;<br><br><span class=\"hljs-comment\">#打开 text的 fielddata</span><br>PUT kibana_sample_data_ecommerce/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;customer_full_name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 256<br>            &#125;<br>          &#125;<br>        &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#关闭 keyword的 doc values</span><br>PUT test_keyword<br>PUT test_keyword/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;user_name&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>      <span class=\"hljs-string\">&quot;doc_values&quot;</span>:<span class=\"hljs-literal\">false</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE test_keyword<br><br>PUT test_text<br>PUT test_text/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;intro&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>      <span class=\"hljs-string\">&quot;doc_values&quot;</span>:<span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>DELETE test_text<br><br><br>DELETE temp_users<br>PUT temp_users<br>PUT temp_users/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>    <span class=\"hljs-string\">&quot;desc&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;<br>  &#125;<br>&#125;<br><br>Post temp_users/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span>:<span class=\"hljs-string\">&quot;Jack is a good boy!&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br><span class=\"hljs-comment\">#打开fielddata 后，查看 docvalue_fields数据</span><br>POST  temp_users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;docvalue_fields&quot;</span>: [<br>    <span class=\"hljs-string\">&quot;name&quot;</span>,<span class=\"hljs-string\">&quot;desc&quot;</span><br>    ]<br>&#125;<br><br><span class=\"hljs-comment\">#查看整型字段的docvalues</span><br>POST  temp_users/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;docvalue_fields&quot;</span>: [<br>    <span class=\"hljs-string\">&quot;age&quot;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-7-分页与遍历-FromSize-SearchAfter-ScrollAPI-md\"><a href=\"#5-7-分页与遍历-FromSize-SearchAfter-ScrollAPI-md\" class=\"headerlink\" title=\"5.7-分页与遍历-FromSize&amp;SearchAfter&amp;ScrollAPI.md\"></a>5.7-分页与遍历-FromSize&amp;SearchAfter&amp;ScrollAPI.md</h1><h1 id=\"分页与遍历-From-Size-Search-after-Scroll-API\"><a href=\"#分页与遍历-From-Size-Search-after-Scroll-API\" class=\"headerlink\" title=\"分页与遍历 - From, Size, Search_after &amp; Scroll API\"></a>分页与遍历 - From, Size, Search_after &amp; Scroll API</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br>POST tmdb/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;from&quot;</span>: 10000,<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;<br><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Scroll API</span><br>DELETE <span class=\"hljs-built_in\">users</span><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:11&#125;<br><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:12&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:13&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_count<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;age&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125; ,<br>        &#123;<span class=\"hljs-string\">&quot;_id&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;    <br>    ]<br>&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_search<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span>: &#123;&#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;search_after&quot;</span>:<br>        [<br>          10,<br>          <span class=\"hljs-string\">&quot;ZQ0vYGsBrR8X3IP75QqX&quot;</span>],<br>    <span class=\"hljs-string\">&quot;sort&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;age&quot;</span>: <span class=\"hljs-string\">&quot;desc&quot;</span>&#125; ,<br>        &#123;<span class=\"hljs-string\">&quot;_id&quot;</span>: <span class=\"hljs-string\">&quot;asc&quot;</span>&#125;    <br>    ]<br>&#125;<br><br><br><span class=\"hljs-comment\">#Scroll API</span><br>DELETE <span class=\"hljs-built_in\">users</span><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user1&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:10&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user2&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user3&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30&#125;<br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user4&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:40&#125;<br><br>POST /users/_search?scroll=5m<br>&#123;<br>    <span class=\"hljs-string\">&quot;size&quot;</span>: 1,<br>    <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;match_all&quot;</span> : &#123;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-built_in\">users</span>/_doc<br>&#123;<span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;user5&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:50&#125;<br>POST /_search/scroll<br>&#123;<br>    <span class=\"hljs-string\">&quot;scroll&quot;</span> : <span class=\"hljs-string\">&quot;1m&quot;</span>,<br>    <span class=\"hljs-string\">&quot;scroll_id&quot;</span> : <span class=\"hljs-string\">&quot;DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ==&quot;</span><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"5-8-处理并发读写-md\"><a href=\"#5-8-处理并发读写-md\" class=\"headerlink\" title=\"5.8-处理并发读写.md\"></a>5.8-处理并发读写.md</h1><h1 id=\"处理并发读写操作\"><a href=\"#处理并发读写操作\" class=\"headerlink\" title=\"处理并发读写操作\"></a>处理并发读写操作</h1><figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"><br><span class=\"hljs-keyword\">DELETE</span> products<br><span class=\"hljs-keyword\">PUT</span> products<br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br>GET products/_doc/1<br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1?if_seq_no=1<span class=\"hljs-variable\">&amp;if_primary_term</span>=1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br><span class=\"hljs-keyword\">PUT</span> products/_doc/1?version=30000<span class=\"hljs-variable\">&amp;version_type</span>=external<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;iphone&quot;</span>,<br>  <span class=\"hljs-string\">&quot;count&quot;</span>:100<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"6-1-Bucket-Metric聚合分析及嵌套聚合-md\"><a href=\"#6-1-Bucket-Metric聚合分析及嵌套聚合-md\" class=\"headerlink\" title=\"6.1-Bucket&amp;Metric聚合分析及嵌套聚合.md\"></a>6.1-Bucket&amp;Metric聚合分析及嵌套聚合.md</h1><h1 id=\"Bucket-Metric-Aggregation\"><a href=\"#Bucket-Metric-Aggregation\" class=\"headerlink\" title=\"Bucket &amp; Metric Aggregation\"></a>Bucket &amp; Metric Aggregation</h1><h2 id=\"demos\"><a href=\"#demos\" class=\"headerlink\" title=\"demos\"></a>demos</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /employees<br>PUT /employees/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;age&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;gender&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;job&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 50<br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;salary&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><span class=\"hljs-comment\"># Metric 聚合，找到最低的工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;min_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Metric 聚合，找到最高的工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多个 Metric 聚合，找到最低最高和平均工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;max_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;max&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;min_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;min&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 一个聚合，输出多值</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;stats_salary&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br><span class=\"hljs-comment\"># 对keword 进行聚合</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 Text 字段进行 terms 聚合查询，失败</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 对 Text 字段打开 fielddata，支持terms aggregation</span><br>PUT employees/_mapping<br>&#123;<br>  <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>    <span class=\"hljs-string\">&quot;job&quot;</span>:&#123;<br>       <span class=\"hljs-string\">&quot;type&quot;</span>:     <span class=\"hljs-string\">&quot;text&quot;</span>,<br>       <span class=\"hljs-string\">&quot;fielddata&quot;</span>: <span class=\"hljs-literal\">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 Text 字段进行 terms 分词。分词后的terms</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对job.keyword 和 job 进行 terms 聚合，分桶的总数并不一样</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cardinate&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cardinality&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 对 性别的 keyword 进行聚合</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;gender&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;gender&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#指定 bucket 的 size</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;ages_5&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:3<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 指定size，不同工种中，年纪最大的3个员工的具体信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;old_employee&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;top_hits&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;size&quot;</span>:3,<br>            <span class=\"hljs-string\">&quot;sort&quot;</span>:[<br>              &#123;<br>                <span class=\"hljs-string\">&quot;age&quot;</span>:&#123;<br>                  <span class=\"hljs-string\">&quot;order&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>                &#125;<br>              &#125;<br>            ]<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Salary Ranges 分桶，可以自己定义 key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;salary_range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span>,<br>        <span class=\"hljs-string\">&quot;ranges&quot;</span>:[<br>          &#123;<br>            <span class=\"hljs-string\">&quot;to&quot;</span>:10000<br>          &#125;,<br>          &#123;<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:10000,<br>            <span class=\"hljs-string\">&quot;to&quot;</span>:20000<br>          &#125;,<br>          &#123;<br>            <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;&gt;20000&quot;</span>,<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:20000<br>          &#125;<br>        ]<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Salary Histogram,工资0到10万，以 5000一个区间进行分桶</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;salary_histrogram&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span>,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>:5000,<br>        <span class=\"hljs-string\">&quot;extended_bounds&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;min&quot;</span>:0,<br>          <span class=\"hljs-string\">&quot;max&quot;</span>:100000<br><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 嵌套聚合1，按照工作类型分桶，并统计工资信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;Job_salary_stats&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 多次嵌套。根据工作类型分桶，然后按照性别分桶，计算工资的统计信息</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;Job_gender_stats&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gender_stats&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;gender&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;salary_stats&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"6-2-Pipeline聚合分析-md\"><a href=\"#6-2-Pipeline聚合分析-md\" class=\"headerlink\" title=\"6.2-Pipeline聚合分析.md\"></a>6.2-Pipeline聚合分析.md</h1><h1 id=\"Pipeline-聚合分析\"><a href=\"#Pipeline-聚合分析\" class=\"headerlink\" title=\"Pipeline 聚合分析\"></a>Pipeline 聚合分析</h1><h2 id=\"课程-demo\"><a href=\"#课程-demo\" class=\"headerlink\" title=\"课程 demo\"></a>课程 demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE employees<br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><br><br><span class=\"hljs-comment\"># 平均工资最低的工作类型</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;min_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;min_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资最高的工作类型</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;max_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;max_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的平均工资</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;avg_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;avg_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的统计分析</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;stats_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;stats_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 平均工资的百分位数</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;,<br>    <span class=\"hljs-string\">&quot;percentiles_salary_by_job&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;percentiles_bucket&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;jobs&gt;avg_salary&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#按照年龄对平均工资求导</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;derivative_avg_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;derivative&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Cumulative_sum</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;cumulative_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;cumulative_sum&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Moving Function</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;histogram&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span>,<br>        <span class=\"hljs-string\">&quot;min_doc_count&quot;</span>: 1,<br>        <span class=\"hljs-string\">&quot;interval&quot;</span>: 1<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;moving_avg_salary&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;moving_fn&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;buckets_path&quot;</span>: <span class=\"hljs-string\">&quot;avg_salary&quot;</span>,<br>            <span class=\"hljs-string\">&quot;window&quot;</span>:10,<br>            <span class=\"hljs-string\">&quot;script&quot;</span>: <span class=\"hljs-string\">&quot;MovingFunctions.min(values)&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"6-3-作用范围与排序-md\"><a href=\"#6-3-作用范围与排序-md\" class=\"headerlink\" title=\"6.3-作用范围与排序.md\"></a>6.3-作用范围与排序.md</h1><h1 id=\"作用范围与排序\"><a href=\"#作用范围与排序\" class=\"headerlink\" title=\"作用范围与排序\"></a>作用范围与排序</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE /employees<br>PUT /employees/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;age&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;gender&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;job&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 50<br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;name&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;salary&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br>PUT /employees/_bulk<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Emma&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Product Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:35000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Underwood&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:41,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Dev Manager&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 50000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;3&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Tran&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;4&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rivera&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:26,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Web Designer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 22000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;5&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Rose&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:18000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;6&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Lucy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;7&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Byrd&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;QA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:20000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;8&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Foster&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:27,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;9&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Gregory&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:22000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;10&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Bryant&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:20,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 9000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;11&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jenny&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:36,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:38000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;12&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mcdonald&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:31,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 32000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;13&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Jonthna&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:30000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;14&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Marshall&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:32,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 25000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;15&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;King&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:33,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Java Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>:28000 &#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;16&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Mccarthy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:21,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;17&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Goodwin&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:25,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 16000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;18&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Catherine&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;Javascript Programmer&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;19&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Boone&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:30,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;male&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 30000&#125;<br>&#123; <span class=\"hljs-string\">&quot;index&quot;</span> : &#123;  <span class=\"hljs-string\">&quot;_id&quot;</span> : <span class=\"hljs-string\">&quot;20&quot;</span> &#125; &#125;<br>&#123; <span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;Kathy&quot;</span>,<span class=\"hljs-string\">&quot;age&quot;</span>:29,<span class=\"hljs-string\">&quot;job&quot;</span>:<span class=\"hljs-string\">&quot;DBA&quot;</span>,<span class=\"hljs-string\">&quot;gender&quot;</span>:<span class=\"hljs-string\">&quot;female&quot;</span>,<span class=\"hljs-string\">&quot;salary&quot;</span>: 20000&#125;<br><br><br><br><span class=\"hljs-comment\"># Query</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 20<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#Filter</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;older_person&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;range&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;age&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;from&quot;</span>:35<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>         <span class=\"hljs-string\">&quot;jobs&quot;</span>:&#123;<br>           <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>      &#125;<br>    &#125;&#125;,<br>    <span class=\"hljs-string\">&quot;all_jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#Post field. 一条语句，找出所有的job类型。还能找到聚合后符合条件的结果</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;post_filter&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;job.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Dev Manager&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#global</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 40<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span><br>        <br>      &#125;<br>    &#125;,<br>    <br>    <span class=\"hljs-string\">&quot;all&quot;</span>:&#123;<br>      <span class=\"hljs-string\">&quot;global&quot;</span>:&#123;&#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>:&#123;<br>        <span class=\"hljs-string\">&quot;salary_avg&quot;</span>:&#123;<br>          <span class=\"hljs-string\">&quot;avg&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;range&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;age&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;gte&quot;</span>: 20<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[<br>          &#123;<span class=\"hljs-string\">&quot;_count&quot;</span>:<span class=\"hljs-string\">&quot;asc&quot;</span>&#125;,<br>          &#123;<span class=\"hljs-string\">&quot;_key&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span>&#125;<br>          ]<br>        <br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[  &#123;<br>            <span class=\"hljs-string\">&quot;avg_salary&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>          &#125;]<br>        <br>        <br>      &#125;,<br>    <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg_salary&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#排序 order</span><br><span class=\"hljs-comment\">#count and key</span><br>POST employees/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;jobs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;job.keyword&quot;</span>,<br>        <span class=\"hljs-string\">&quot;order&quot;</span>:[  &#123;<br>            <span class=\"hljs-string\">&quot;stats_salary.min&quot;</span>:<span class=\"hljs-string\">&quot;desc&quot;</span><br>          &#125;]<br>        <br>        <br>      &#125;,<br>    <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;stats_salary&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;stats&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;salary&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"6-4-聚合分析的原理及精准度问题-md\"><a href=\"#6-4-聚合分析的原理及精准度问题-md\" class=\"headerlink\" title=\"6.4-聚合分析的原理及精准度问题.md\"></a>6.4-聚合分析的原理及精准度问题.md</h1><h1 id=\"聚合分析的原理及精准度问题\"><a href=\"#聚合分析的原理及精准度问题\" class=\"headerlink\" title=\"聚合分析的原理及精准度问题\"></a>聚合分析的原理及精准度问题</h1><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">DELETE my_flights<br>PUT my_flights<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: <span class=\"hljs-number\">20</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;AvgTicketPrice&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Cancelled&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;boolean&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Carrier&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Dest&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestAirportID&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestCityName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestCountry&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestLocation&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestRegion&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DestWeather&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DistanceKilometers&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;DistanceMiles&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelay&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;boolean&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelayMin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightDelayType&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightNum&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightTimeHour&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;FlightTimeMin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;float&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;Origin&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginAirportID&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginCityName&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginCountry&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginLocation&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;geo_point&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginRegion&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;OriginWeather&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;dayOfWeek&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;integer&quot;</span><br>        &#125;,<br>        <span class=\"hljs-string\">&quot;timestamp&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>POST <span class=\"hljs-variable\">_reindex</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;source&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;kibana_sample_data_flights&quot;</span><br>  &#125;,<br>  <span class=\"hljs-string\">&quot;dest&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-string\">&quot;my_flights&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-built_in\">GET</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_count</span><br><span class=\"hljs-built_in\">GET</span> my_flights/<span class=\"hljs-variable\">_count</span><br><br><span class=\"hljs-built_in\">get</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_search</span><br><br><br><span class=\"hljs-built_in\">GET</span> kibana_sample_data_flights/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">0</span>,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;OriginWeather&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:<span class=\"hljs-number\">5</span>,<br>        <span class=\"hljs-string\">&quot;show_term_doc_count_error&quot;</span>:<span class=\"hljs-literal\">true</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> my_flights/<span class=\"hljs-variable\">_search</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: <span class=\"hljs-number\">0</span>,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;weather&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>:<span class=\"hljs-string\">&quot;OriginWeather&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>:<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">&quot;shard_size&quot;</span>:<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">&quot;show_term_doc_count_error&quot;</span>:<span class=\"hljs-literal\">true</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-1-对象及-Nested-对象-md\"><a href=\"#7-1-对象及-Nested-对象-md\" class=\"headerlink\" title=\"7.1-对象及 Nested 对象.md\"></a>7.1-对象及 Nested 对象.md</h1><h1 id=\"对象及Nested对象\"><a href=\"#对象及Nested对象\" class=\"headerlink\" title=\"对象及Nested对象\"></a>对象及Nested对象</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE blog<br><span class=\"hljs-comment\"># 设置blog的 Mapping</span><br>PUT /blog<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;time&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;user&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;city&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;userid&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;long&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;username&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 插入一条 Blog 信息</span><br>PUT blog/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;I like Elasticsearch&quot;</span>,<br>  <span class=\"hljs-string\">&quot;time&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01T00:00:00&quot;</span>,<br>  <span class=\"hljs-string\">&quot;user&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;userid&quot;</span>:1,<br>    <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>    <span class=\"hljs-string\">&quot;city&quot;</span>:<span class=\"hljs-string\">&quot;Shanghai&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 查询 Blog 信息</span><br>POST blog/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Elasticsearch&quot;</span>&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;user.username&quot;</span>: <span class=\"hljs-string\">&quot;Jack&quot;</span>&#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE my_movies<br><br><span class=\"hljs-comment\"># 电影的Mapping信息</span><br>PUT my_movies<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;actors&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;first_name&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>            &#125;,<br>            <span class=\"hljs-string\">&quot;last_name&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span><br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 256<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 写入一条电影信息</span><br>POST my_movies/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;actors&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Keanu&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Reeves&quot;</span><br>    &#125;,<br><br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Dennis&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Hopper&quot;</span><br>    &#125;<br><br>  ]<br>&#125;<br><br><span class=\"hljs-comment\"># 查询电影信息</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;actors.first_name&quot;</span>: <span class=\"hljs-string\">&quot;Keanu&quot;</span>&#125;&#125;,<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;actors.last_name&quot;</span>: <span class=\"hljs-string\">&quot;Hopper&quot;</span>&#125;&#125;<br>      ]<br>    &#125;<br>  &#125;<br><br>&#125;<br><br>DELETE my_movies<br><span class=\"hljs-comment\"># 创建 Nested 对象 Mapping</span><br>PUT my_movies<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;actors&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;nested&quot;</span>,<br>          <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;first_name&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>            <span class=\"hljs-string\">&quot;last_name&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;<br>          &#125;&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<span class=\"hljs-string\">&quot;keyword&quot;</span>:&#123;<span class=\"hljs-string\">&quot;type&quot;</span>:<span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;ignore_above&quot;</span>:256&#125;&#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>POST my_movies/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Speed&quot;</span>,<br>  <span class=\"hljs-string\">&quot;actors&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Keanu&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Reeves&quot;</span><br>    &#125;,<br><br>    &#123;<br>      <span class=\"hljs-string\">&quot;first_name&quot;</span>:<span class=\"hljs-string\">&quot;Dennis&quot;</span>,<br>      <span class=\"hljs-string\">&quot;last_name&quot;</span>:<span class=\"hljs-string\">&quot;Hopper&quot;</span><br>    &#125;<br><br>  ]<br>&#125;<br><br><span class=\"hljs-comment\"># Nested 查询</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>        &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;Speed&quot;</span>&#125;&#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;actors&quot;</span>,<br>            <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>                <span class=\"hljs-string\">&quot;must&quot;</span>: [<br>                  &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>: <span class=\"hljs-string\">&quot;Keanu&quot;</span><br>                  &#125;&#125;,<br><br>                  &#123;<span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;actors.last_name&quot;</span>: <span class=\"hljs-string\">&quot;Hopper&quot;</span><br>                  &#125;&#125;<br>                ]<br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Nested Aggregation</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;actors&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;actors&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;actor_name&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>,<br>            <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 普通 aggregation不工作</span><br>POST my_movies/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;NAME&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;actors.first_name&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-2-文档的父子关系-md\"><a href=\"#7-2-文档的父子关系-md\" class=\"headerlink\" title=\"7.2-文档的父子关系.md\"></a>7.2-文档的父子关系.md</h1><h1 id=\"文档的父子关系\"><a href=\"#文档的父子关系\" class=\"headerlink\" title=\"文档的父子关系\"></a>文档的父子关系</h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">DELETE my_blogs<br><br><span class=\"hljs-comment\"># 设定 Parent/Child Mapping</span><br>PUT my_blogs<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>: 2<br>  &#125;,<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;join&quot;</span>,<br>        <span class=\"hljs-string\">&quot;relations&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;blog&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span><br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span><br>      &#125;,<br>      <span class=\"hljs-string\">&quot;title&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#索引父文档</span><br>PUT my_blogs/_doc/blog1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Learning Elasticsearch&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;learning ELK @ geektime&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;blog&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引父文档</span><br>PUT my_blogs/_doc/blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Learning Hadoop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;learning Hadoop&quot;</span>,<br>    <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;blog&quot;</span><br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment1?<span class=\"hljs-attribute\">routing</span>=blog1<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;I am learning ELK&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog1&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment2?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;I like Hadoop!!!!!&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Jack&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog2&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#索引子文档</span><br>PUT my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>  <span class=\"hljs-string\">&quot;comment&quot;</span>:<span class=\"hljs-string\">&quot;Hello Hadoop&quot;</span>,<br>  <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;Bob&quot;</span>,<br>  <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;comment&quot;</span>,<br>    <span class=\"hljs-string\">&quot;parent&quot;</span>:<span class=\"hljs-string\">&quot;blog2&quot;</span><br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># 查询所有文档</span><br>POST my_blogs/_search<br>&#123;<br><br>&#125;<br><br><br><span class=\"hljs-comment\">#根据父文档ID查看</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/blog2<br><br><span class=\"hljs-comment\"># Parent Id 查询</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;parent_id&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;id&quot;</span>: <span class=\"hljs-string\">&quot;blog2&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\"># Has Child 查询,返回父文档</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;has_child&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;username&quot;</span> : <span class=\"hljs-string\">&quot;Jack&quot;</span><br>                &#125;<br>            &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Has Parent 查询，返回相关的子文档</span><br>POST my_blogs/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;has_parent&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;parent_type&quot;</span>: <span class=\"hljs-string\">&quot;blog&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span> : &#123;<br>                <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>                    <span class=\"hljs-string\">&quot;title&quot;</span> : <span class=\"hljs-string\">&quot;Learning Hadoop&quot;</span><br>                &#125;<br>            &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\">#通过ID ，访问子文档</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/comment3<br><span class=\"hljs-comment\">#通过ID和routing ，访问子文档</span><br><span class=\"hljs-built_in\">GET</span> my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br><br><span class=\"hljs-comment\">#更新子文档</span><br>PUT my_blogs/_doc/comment3?<span class=\"hljs-attribute\">routing</span>=blog2<br>&#123;<br>    <span class=\"hljs-string\">&quot;comment&quot;</span>: <span class=\"hljs-string\">&quot;Hello Hadoop??&quot;</span>,<br>    <span class=\"hljs-string\">&quot;blog_comments_relation&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;comment&quot;</span>,<br>      <span class=\"hljs-string\">&quot;parent&quot;</span>: <span class=\"hljs-string\">&quot;blog2&quot;</span><br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-5-Elasticsearch数据建模实例-md\"><a href=\"#7-5-Elasticsearch数据建模实例-md\" class=\"headerlink\" title=\"7.5-Elasticsearch数据建模实例.md\"></a>7.5-Elasticsearch数据建模实例.md</h1><h1 id=\"Elasticsearch-数据建模实例\"><a href=\"#Elasticsearch-数据建模实例\" class=\"headerlink\" title=\"Elasticsearch 数据建模实例\"></a>Elasticsearch 数据建模实例</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">###### Data Modeling Example</span><br><br><span class=\"hljs-comment\"># Index 一本书的信息</span><br>PUT books/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Mastering ElasticSearch 5.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;description&quot;</span>:<span class=\"hljs-string\">&quot;Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins&quot;</span>,<br>  <span class=\"hljs-string\">&quot;author&quot;</span>:<span class=\"hljs-string\">&quot;Bharvi Dixit&quot;</span>,<br>  <span class=\"hljs-string\">&quot;public_date&quot;</span>:<span class=\"hljs-string\">&quot;2017&quot;</span>,<br>  <span class=\"hljs-string\">&quot;cover_url&quot;</span>:<span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-comment\">#查询自动创建的Mapping</span><br>GET books/_mapping<br><br>DELETE books<br><br><span class=\"hljs-comment\">#优化字段类型</span><br>PUT books<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;author&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;cover_url&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>&#125;,<br>        <span class=\"hljs-string\">&quot;description&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;public_date&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span>&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 100<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Cover URL index 设置成false，无法对该字段进行搜索</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cover_url&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: <span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#Cover URL index 设置成false，依然支持聚合分析</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cover&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;terms&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;cover_url&quot;</span>,<br>        <span class=\"hljs-string\">&quot;size&quot;</span>: 10<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br>DELETE books<br><span class=\"hljs-comment\">#新增 Content字段。数据量很大。选择将Source 关闭</span><br>PUT books<br>&#123;<br>      <span class=\"hljs-string\">&quot;mappings&quot;</span> : &#123;<br>      <span class=\"hljs-string\">&quot;_source&quot;</span>: &#123;<span class=\"hljs-string\">&quot;enabled&quot;</span>: <span class=\"hljs-literal\">false</span>&#125;,<br>      <span class=\"hljs-string\">&quot;properties&quot;</span> : &#123;<br>        <span class=\"hljs-string\">&quot;author&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;cover_url&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<span class=\"hljs-string\">&quot;index&quot;</span>: <span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;description&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>         <span class=\"hljs-string\">&quot;content&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;public_date&quot;</span> : &#123;<span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;date&quot;</span>,<span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span>&#125;,<br>        <span class=\"hljs-string\">&quot;title&quot;</span> : &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;text&quot;</span>,<br>          <span class=\"hljs-string\">&quot;fields&quot;</span> : &#123;<br>            <span class=\"hljs-string\">&quot;keyword&quot;</span> : &#123;<br>              <span class=\"hljs-string\">&quot;type&quot;</span> : <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>              <span class=\"hljs-string\">&quot;ignore_above&quot;</span> : 100<br>            &#125;<br>          &#125;,<br>          <span class=\"hljs-string\">&quot;store&quot;</span>: <span class=\"hljs-literal\">true</span><br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># Index 一本书的信息,包含Content</span><br>PUT books/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;title&quot;</span>:<span class=\"hljs-string\">&quot;Mastering ElasticSearch 5.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;description&quot;</span>:<span class=\"hljs-string\">&quot;Master the searching, indexing, and aggregation features in ElasticSearch Improve users’ search experience with Elasticsearch’s functionalities and develop your own Elasticsearch plugins&quot;</span>,<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;The content of the book......Indexing data, aggregation, searching.    something else. something in the way............&quot;</span>,<br>  <span class=\"hljs-string\">&quot;author&quot;</span>:<span class=\"hljs-string\">&quot;Bharvi Dixit&quot;</span>,<br>  <span class=\"hljs-string\">&quot;public_date&quot;</span>:<span class=\"hljs-string\">&quot;2017&quot;</span>,<br>  <span class=\"hljs-string\">&quot;cover_url&quot;</span>:<span class=\"hljs-string\">&quot;https://images-na.ssl-images-amazon.com/images/I/51OeaMFxcML.jpg&quot;</span><br>&#125;<br><br><span class=\"hljs-comment\">#查询结果中，Source不包含数据</span><br>POST books/_search<br>&#123;&#125;<br><br><span class=\"hljs-comment\">#搜索，通过store 字段显示数据，同时高亮显示 conent的内容</span><br>POST books/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;stored_fields&quot;</span>: [<span class=\"hljs-string\">&quot;title&quot;</span>,<span class=\"hljs-string\">&quot;author&quot;</span>,<span class=\"hljs-string\">&quot;public_date&quot;</span>],<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;searching&quot;</span><br>    &#125;<br>  &#125;,<br><br>  <span class=\"hljs-string\">&quot;highlight&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>:&#123;&#125;<br>    &#125;<br>  &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"7-6-Elasticsearch-数据建模最佳实践-md\"><a href=\"#7-6-Elasticsearch-数据建模最佳实践-md\" class=\"headerlink\" title=\"7.6-Elasticsearch 数据建模最佳实践.md\"></a>7.6-Elasticsearch 数据建模最佳实践.md</h1><h1 id=\"Elasticsearch-数据建模最佳实践\"><a href=\"#Elasticsearch-数据建模最佳实践\" class=\"headerlink\" title=\"Elasticsearch 数据建模最佳实践\"></a>Elasticsearch 数据建模最佳实践</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\">###### Cookie Service</span><br><br><span class=\"hljs-comment\">##索引数据，dynamic mapping 会不断加入新增字段</span><br>PUT cookie_service/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.google.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:&#123;<br>   <span class=\"hljs-string\">&quot;username&quot;</span>:<span class=\"hljs-string\">&quot;tom&quot;</span>,<br>   <span class=\"hljs-string\">&quot;age&quot;</span>:32<br> &#125;<br>&#125;<br><br>PUT cookie_service/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.amazon.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:&#123;<br>   <span class=\"hljs-string\">&quot;login&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span>,<br>   <span class=\"hljs-string\">&quot;email&quot;</span>:<span class=\"hljs-string\">&quot;xyz@abc.com&quot;</span><br> &#125;<br>&#125;<br><br><br>DELETE cookie_service<br><span class=\"hljs-comment\">#使用 Nested 对象，增加key/value</span><br>PUT cookie_service<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;cookies&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;nested&quot;</span>,<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;name&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;dateValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;date&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;keywordValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;IntValue&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;integer&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class=\"hljs-string\">&quot;url&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;text&quot;</span>,<br>        <span class=\"hljs-string\">&quot;fields&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;keyword&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span>,<br>            <span class=\"hljs-string\">&quot;ignore_above&quot;</span>: 256<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">##写入数据，使用key和合适类型的value字段</span><br>PUT cookie_service/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.google.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;username&quot;</span>,<br>      <span class=\"hljs-string\">&quot;keywordValue&quot;</span>:<span class=\"hljs-string\">&quot;tom&quot;</span><br>    &#125;,<br>    &#123;<br>       <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;age&quot;</span>,<br>      <span class=\"hljs-string\">&quot;intValue&quot;</span>:32<br><br>    &#125;<br><br>   ]<br> &#125;<br><br><br>PUT cookie_service/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;url&quot;</span>:<span class=\"hljs-string\">&quot;www.amazon.com&quot;</span>,<br> <span class=\"hljs-string\">&quot;cookies&quot;</span>:[<br>    &#123;<br>      <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;login&quot;</span>,<br>      <span class=\"hljs-string\">&quot;dateValue&quot;</span>:<span class=\"hljs-string\">&quot;2019-01-01&quot;</span><br>    &#125;,<br>    &#123;<br>       <span class=\"hljs-string\">&quot;name&quot;</span>:<span class=\"hljs-string\">&quot;email&quot;</span>,<br>      <span class=\"hljs-string\">&quot;IntValue&quot;</span>:32<br><br>    &#125;<br><br>   ]<br> &#125;<br><br><br><span class=\"hljs-comment\"># Nested 查询，通过bool查询进行过滤</span><br>POST cookie_service/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;nested&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;cookies&quot;</span>,<br>      <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>            &#123;<br>            <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>              <span class=\"hljs-string\">&quot;cookies.name&quot;</span>: <span class=\"hljs-string\">&quot;age&quot;</span><br>            &#125;&#125;,<br>            &#123;<br>              <span class=\"hljs-string\">&quot;range&quot;</span>:&#123;<br>                <span class=\"hljs-string\">&quot;cookies.intValue&quot;</span>:&#123;<br>                  <span class=\"hljs-string\">&quot;gte&quot;</span>:30<br>                &#125;<br>              &#125;<br>            &#125;<br>          ]<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><span class=\"hljs-comment\"># 在Mapping中加入元信息，便于管理</span><br>PUT softwares/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;_meta&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;software_version_mapping&quot;</span>: <span class=\"hljs-string\">&quot;1.0&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>GET softwares/_mapping<br>PUT softwares/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;software_version&quot;</span>:<span class=\"hljs-string\">&quot;7.1.0&quot;</span><br>&#125;<br><br>DELETE softwares<br><span class=\"hljs-comment\"># 优化,使用inner object</span><br>PUT softwares/<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;_meta&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;software_version_mapping&quot;</span>: <span class=\"hljs-string\">&quot;1.1&quot;</span><br>    &#125;,<br>    <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;version&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;display_name&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;keyword&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;hot_fix&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;marjor&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;,<br>          <span class=\"hljs-string\">&quot;minor&quot;</span>: &#123;<br>            <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;byte&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\">#通过 Inner Object 写入多个文档</span><br>PUT softwares/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.1.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:1,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:0  <br>  &#125;<br><br>&#125;<br><br>PUT softwares/_doc/2<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.2.0&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:2,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:0  <br>  &#125;<br>&#125;<br><br>PUT softwares/_doc/3<br>&#123;<br>  <span class=\"hljs-string\">&quot;version&quot;</span>:&#123;<br>  <span class=\"hljs-string\">&quot;display_name&quot;</span>:<span class=\"hljs-string\">&quot;7.2.1&quot;</span>,<br>  <span class=\"hljs-string\">&quot;marjor&quot;</span>:7,<br>  <span class=\"hljs-string\">&quot;minor&quot;</span>:2,<br>  <span class=\"hljs-string\">&quot;hot_fix&quot;</span>:1  <br>  &#125;<br>&#125;<br><br><br><span class=\"hljs-comment\"># 通过 bool 查询，</span><br>POST softwares/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;bool&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;filter&quot;</span>: [<br>        &#123;<br>          <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;version.marjor&quot;</span>:7<br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class=\"hljs-string\">&quot;match&quot;</span>:&#123;<br>            <span class=\"hljs-string\">&quot;version.minor&quot;</span>:2<br>          &#125;<br>        &#125;<br><br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br><br><br><br><br><span class=\"hljs-comment\"># Not Null 解决聚合的问题</span><br>DELETE ratings<br>PUT ratings<br>&#123;<br>  <span class=\"hljs-string\">&quot;mappings&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;properties&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>          <span class=\"hljs-string\">&quot;type&quot;</span>: <span class=\"hljs-string\">&quot;float&quot;</span>,<br>          <span class=\"hljs-string\">&quot;null_value&quot;</span>: 1.0<br>        &#125;<br>      &#125;<br>    &#125;<br>&#125;<br><br><br>PUT ratings/_doc/1<br>&#123;<br> <span class=\"hljs-string\">&quot;rating&quot;</span>:5<br>&#125;<br>PUT ratings/_doc/2<br>&#123;<br> <span class=\"hljs-string\">&quot;rating&quot;</span>:null<br>&#125;<br><br><br>POST ratings/_search<br>POST ratings/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;size&quot;</span>: 0,<br>  <span class=\"hljs-string\">&quot;aggs&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;avg&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;field&quot;</span>: <span class=\"hljs-string\">&quot;rating&quot;</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br>POST ratings/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;rating&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;value&quot;</span>: 1<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"7-7-第二部分总结与测验-md\"><a href=\"#7-7-第二部分总结与测验-md\" class=\"headerlink\" title=\"7.7-第二部分总结与测验.md\"></a>7.7-第二部分总结与测验.md</h1><h1 id=\"第二部分总结与测验\"><a href=\"#第二部分总结与测验\" class=\"headerlink\" title=\"第二部分总结与测验\"></a>第二部分总结与测验</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DELETE <span class=\"hljs-built_in\">test</span><br>PUT <span class=\"hljs-built_in\">test</span>/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;content&quot;</span>:<span class=\"hljs-string\">&quot;Hello World&quot;</span><br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;match&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content&quot;</span>: <span class=\"hljs-string\">&quot;hello world&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>POST <span class=\"hljs-built_in\">test</span>/_search<br>&#123;<br>  <span class=\"hljs-string\">&quot;profile&quot;</span>: <span class=\"hljs-string\">&quot;true&quot;</span>,<br>  <span class=\"hljs-string\">&quot;query&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;term&quot;</span>: &#123;<br>      <span class=\"hljs-string\">&quot;content.keyword&quot;</span>: <span class=\"hljs-string\">&quot;Hello World&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"8-1-集群身份认证与用户鉴权-md\"><a href=\"#8-1-集群身份认证与用户鉴权-md\" class=\"headerlink\" title=\"8.1-集群身份认证与用户鉴权.md\"></a>8.1-集群身份认证与用户鉴权.md</h1><h1 id=\"集群身份认证与用户鉴权\"><a href=\"#集群身份认证与用户鉴权\" class=\"headerlink\" title=\"集群身份认证与用户鉴权\"></a>集群身份认证与用户鉴权</h1><ul>\n<li>如何为集群启用X-Pack Security</li>\n<li>如何为内置用户设置密码</li>\n<li>设置 Kibana与ElasticSearch通信鉴权</li>\n<li>使用安全API创建对特定索引具有有限访问权限的用户</li>\n</ul>\n<p>This tutorial involves a single node cluster, but if you had multiple nodes, you would enable Elasticsearch security features on every node in the cluster and configure Transport Layer Security (TLS) for internode-communication, which is beyond the scope of this tutorial. By enabling single-node discovery, we are postponing the configuration of TLS. For example, add the following setting:</p>\n<p>discovery.type: single-node</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#启动单节点</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span><br><br><span class=\"hljs-comment\">#使用Curl访问ES，或者浏览器访问 “localhost:9200/_cat/nodes?pretty”。返回401错误</span><br>curl <span class=\"hljs-string\">&#x27;localhost:9200/_cat/nodes?pretty&#x27;</span><br><br><span class=\"hljs-comment\">#运行密码设定的命令，设置ES内置用户及其初始密码。</span><br>bin/elasticsearch-setup-passwords interactive<br><br>curl -u elastic <span class=\"hljs-string\">&#x27;localhost:9200/_cat/nodes?pretty&#x27;</span><br><br><br><span class=\"hljs-comment\"># 修改 kibana.yml</span><br>elasticsearch.username: <span class=\"hljs-string\">&quot;kibana&quot;</span><br>elasticsearch.password: <span class=\"hljs-string\">&quot;changeme&quot;</span><br><br><span class=\"hljs-comment\">#启动。使用用户名，elastic，密码elastic</span><br>./bin/kibana<br><br><br>POST orders/_bulk<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 18,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;master&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;9876543210123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;jack&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 99,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;visa&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;1234567890123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;bob&quot;</span>&#125;<br><br><br><span class=\"hljs-comment\">#create a new role named read_only_orders, that satisfies the following criteria:</span><br><span class=\"hljs-comment\">#The role has no cluster privileges</span><br><span class=\"hljs-comment\">#The role only has access to indices that match the pattern sales_record</span><br><span class=\"hljs-comment\">#The index privileges are read, and view_index_metadata</span><br><br><br><span class=\"hljs-comment\">#create sales_user that satisfies the following criteria:</span><br><span class=\"hljs-comment\"># Use your own email address</span><br><span class=\"hljs-comment\"># Assign the user to two roles: read_only_orders and kibana_user</span><br><br><br><span class=\"hljs-comment\">#验证读权限,可以执行</span><br>POST orders/_search<br>&#123;&#125;<br><br><span class=\"hljs-comment\">#验证写权限,报错</span><br>POST orders/_bulk<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;1&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 18,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;master&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;9876543210123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;jack&quot;</span>&#125;<br>&#123;<span class=\"hljs-string\">&quot;index&quot;</span>:&#123;&#125;&#125;<br>&#123;<span class=\"hljs-string\">&quot;product&quot;</span> : <span class=\"hljs-string\">&quot;2&quot;</span>,<span class=\"hljs-string\">&quot;price&quot;</span> : 99,<span class=\"hljs-string\">&quot;payment&quot;</span> : <span class=\"hljs-string\">&quot;visa&quot;</span>,<span class=\"hljs-string\">&quot;card&quot;</span> : <span class=\"hljs-string\">&quot;1234567890123456&quot;</span>,<span class=\"hljs-string\">&quot;name&quot;</span> : <span class=\"hljs-string\">&quot;bob&quot;</span>&#125;<br><br><br></code></pre></td></tr></table></figure>\n\n\n<h1 id=\"8-2-集群内部安全通信-md\"><a href=\"#8-2-集群内部安全通信-md\" class=\"headerlink\" title=\"8.2-集群内部安全通信.md\"></a>8.2-集群内部安全通信.md</h1><h1 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h1><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 生成证书</span><br><span class=\"hljs-comment\"># 为您的Elasticearch集群创建一个证书颁发机构。例如，使用elasticsearch-certutil ca命令：</span><br>bin/elasticsearch-certutil ca<br><br><span class=\"hljs-comment\">#为群集中的每个节点生成证书和私钥。例如，使用elasticsearch-certutil cert 命令：</span><br>bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12<br><br><span class=\"hljs-comment\">#将证书拷贝到 config/certs目录下</span><br>elastic-certificates.p12<br><br><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E http.<span class=\"hljs-attribute\">port</span>=9201 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.transport.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br><br><span class=\"hljs-comment\">#不提供证书的节点，无法加入</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E http.<span class=\"hljs-attribute\">port</span>=9202 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate<br><br><br></code></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-comment\"># elasticsearch.yml 配置</span></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.enabled: <span class=\"hljs-literal\">true</span></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12</span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12</span><br><br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"8-3-集群与外部间的安全通信-md\"><a href=\"#8-3-集群与外部间的安全通信-md\" class=\"headerlink\" title=\"8.3-集群与外部间的安全通信.md\"></a>8.3-集群与外部间的安全通信.md</h1><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.enabled</span>: true<br>xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.keystore</span><span class=\"hljs-selector-class\">.path</span>: certs/elastic-certificates<span class=\"hljs-selector-class\">.p12</span><br>xpack<span class=\"hljs-selector-class\">.security</span><span class=\"hljs-selector-class\">.http</span><span class=\"hljs-selector-class\">.ssl</span><span class=\"hljs-selector-class\">.truststore</span><span class=\"hljs-selector-class\">.path</span>: certs/elastic-certificates<span class=\"hljs-selector-class\">.p12</span><br><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><br><br><span class=\"hljs-comment\"># ES 启用 https</span><br>bin/elasticsearch -E node.<span class=\"hljs-attribute\">name</span>=node0 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node0_data -E http.<span class=\"hljs-attribute\">port</span>=9200 -E xpack.security.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.transport.ssl.<span class=\"hljs-attribute\">verification_mode</span>=certificate -E xpack.security.transport.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.<span class=\"hljs-attribute\">enabled</span>=<span class=\"hljs-literal\">true</span> -E xpack.security.http.ssl.keystore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12 -E xpack.security.http.ssl.truststore.<span class=\"hljs-attribute\">path</span>=certs/elastic-certificates.p12<br><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-meta\">#Kibana 连接 ES https</span><br><br><br><br><span class=\"hljs-meta\"># 为kibana生成pem</span><br>openssl pkcs12 -<span class=\"hljs-keyword\">in</span> elastic-certificates.p12 -cacerts -nokeys -<span class=\"hljs-keyword\">out</span> elastic-ca.pem<br><br><br><span class=\"hljs-symbol\">elasticsearch.hosts:</span> [<span class=\"hljs-string\">&quot;https://localhost:9200&quot;</span>]<br><span class=\"hljs-symbol\">elasticsearch.ssl.certificateAuthorities:</span> [ <span class=\"hljs-string\">&quot;/Users/yiruan/geektime/kibana-7.1.0/config/certs/elastic-ca.pem&quot;</span> ]<br><span class=\"hljs-symbol\">elasticsearch.ssl.verificationMode:</span> certificate<br><br><br><br><span class=\"hljs-meta\"># 为 Kibna 配置 HTTPS</span><br><span class=\"hljs-meta\"># 生成后解压，包含了instance.crt 和 instance.key</span><br>bin/elasticsearch-certutil ca --pem<br><br><span class=\"hljs-symbol\">server.ssl.enabled:</span> true<br><span class=\"hljs-symbol\">server.ssl.certificate:</span> config/certs/instance.crt<br><span class=\"hljs-symbol\">server.ssl.key:</span> config/certs/instance.key<br><br><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"9-1-常见的集群部署方式-md-1\"><a href=\"#9-1-常见的集群部署方式-md-1\" class=\"headerlink\" title=\"9.1-常见的集群部署方式.md\"></a>9.1-常见的集群部署方式.md</h1><h1 id=\"常见的集群部署方式-1\"><a href=\"#常见的集群部署方式-1\" class=\"headerlink\" title=\"常见的集群部署方式\"></a>常见的集群部署方式</h1><h1 id=\"9-2-Hot-Warm架构与ShardFiltering-md-1\"><a href=\"#9-2-Hot-Warm架构与ShardFiltering-md-1\" class=\"headerlink\" title=\"9.2-Hot&amp;Warm架构与ShardFiltering.md\"></a>9.2-Hot&amp;Warm架构与ShardFiltering.md</h1><h1 id=\"Hot-Warm-架构与-Shard-Filtering-1\"><a href=\"#Hot-Warm-架构与-Shard-Filtering-1\" class=\"headerlink\" title=\"Hot &amp; Warm 架构与 Shard Filtering\"></a>Hot &amp; Warm 架构与 Shard Filtering</h1><h2 id=\"课程代码-1\"><a href=\"#课程代码-1\" class=\"headerlink\" title=\"课程代码\"></a>课程代码</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 标记一个 Hot 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=hotnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=hot_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=hot<br><br><span class=\"hljs-comment\"># 标记一个 warm 节点</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=warmnode -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=warm_data -E node.attr.<span class=\"hljs-attribute\">my_node_type</span>=warm<br><br><span class=\"hljs-comment\"># 查看节点</span><br><span class=\"hljs-built_in\">GET</span> /_cat/nodeattrs?v<br><br><span class=\"hljs-comment\"># 配置到 Hot节点</span><br>PUT logs-2019-06-27<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:0,<br>    <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;hot&quot;</span><br>  &#125;<br>&#125;<br><br><br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-comment\"># 配置到 warm 节点</span><br>PUT PUT logs-2019-06-27/_settings<br>&#123;  <br>  <span class=\"hljs-string\">&quot;index.routing.allocation.require.my_node_type&quot;</span>:<span class=\"hljs-string\">&quot;warm&quot;</span><br>&#125;<br><br><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack2<br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span><br>  &#125;<br>&#125;<br><br>PUT my_index1<br>&#123;<br>  <span class=\"hljs-string\">&quot;settings&quot;</span>:&#123;<br>    <span class=\"hljs-string\">&quot;number_of_shards&quot;</span>:2,<br>    <span class=\"hljs-string\">&quot;number_of_replicas&quot;</span>:1<br>  &#125;<br>&#125;<br><br>PUT my_index1/_doc/1<br>&#123;<br>  <span class=\"hljs-string\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;value&quot;</span><br>&#125;<br><br><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br>DELETE my_index1/_doc/1<br><br><br><br><span class=\"hljs-comment\"># Fore awareness</span><br><span class=\"hljs-comment\"># 标记一个 rack 1</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node1 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node1_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><span class=\"hljs-comment\"># 标记一个 rack 2</span><br>bin/elasticsearch  -E node.<span class=\"hljs-attribute\">name</span>=node2 -E cluster.<span class=\"hljs-attribute\">name</span>=geektime -E path.<span class=\"hljs-attribute\">data</span>=node2_data -E node.attr.<span class=\"hljs-attribute\">my_rack_id</span>=rack1<br><br><br>PUT _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span>&#123;<br>  <span class=\"hljs-string\">&quot;persistent&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.attributes&quot;</span>: <span class=\"hljs-string\">&quot;my_rack_id&quot;</span>,<br>    <span class=\"hljs-string\">&quot;cluster.routing.allocation.awareness.force.my_rack_id.values&quot;</span>: <span class=\"hljs-string\">&quot;rack1,rack2&quot;</span><br>  &#125;<br>&#125;<br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/settings</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 集群黄色</span><br><span class=\"hljs-built_in\">GET</span> _cluster<span class=\"hljs-built_in\">/health</span><br><span class=\"hljs-built_in\"></span><br><span class=\"hljs-comment\"># 副本无法分配</span><br><span class=\"hljs-built_in\">GET</span> _cat/shards?v<br><br><br><span class=\"hljs-built_in\">GET</span> _cluster/allocation/explain?pretty<br></code></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\img.png","slug":"img.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806195901.png","slug":"微信截图_20240806195901.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200410.png","slug":"微信截图_20240806200410.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200518.png","slug":"微信截图_20240806200518.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200751.png","slug":"微信截图_20240806200751.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200831.png","slug":"微信截图_20240806200831.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200853.png","slug":"微信截图_20240806200853.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200913.png","slug":"微信截图_20240806200913.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\linux\\使用图形化对linux磁盘进行扩容\\微信截图_20240806200924.png","slug":"微信截图_20240806200924.png","post":"cm7a4vg3k000l8gjdhmb47yos","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_-m-m1AZh7M.png","slug":"image_-m-m1AZh7M.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_bUw4GOE3i3.png","slug":"image_bUw4GOE3i3.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_PEAqPgamQe.png","slug":"image_PEAqPgamQe.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_qBL4LWSs2U.png","slug":"image_qBL4LWSs2U.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_RtiUPlWbme.png","slug":"image_RtiUPlWbme.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_SOZXE0ImbY.png","slug":"image_SOZXE0ImbY.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_tMLd_Cap6a.png","slug":"image_tMLd_Cap6a.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0},{"_id":"source\\_posts\\分享\\学习it网站推荐\\image_zZOb0Uu1MN.png","slug":"image_zZOb0Uu1MN.png","post":"cm7a4vg3t00248gjd9tum3v6h","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cm7a4vg3g00088gjd2gtf1mly","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3i000f8gjdg037g4po"},{"post_id":"cm7a4vg3b00018gjda45v8l4v","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3k000j8gjd9jhc6y05"},{"post_id":"cm7a4vg3h00098gjd9bayeq03","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3k000m8gjd0rry3cr4"},{"post_id":"cm7a4vg3h000d8gjdcj5neqao","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3l000p8gjd9ptjf9aq"},{"post_id":"cm7a4vg3d00038gjddnru1t6w","category_id":"cm7a4vg3h000a8gjd3voefj9i","_id":"cm7a4vg3m000s8gjd6yxne37v"},{"post_id":"cm7a4vg3i000e8gjd70apegn2","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3m000v8gjd38bufo54"},{"post_id":"cm7a4vg3j000i8gjdgn1ka85m","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3n000z8gjdh0s17bb8"},{"post_id":"cm7a4vg3g00078gjd1f662wrg","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3n00118gjdbtxi9xni"},{"post_id":"cm7a4vg3k000l8gjdhmb47yos","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3o00168gjdamuahwpo"},{"post_id":"cm7a4vg3l000o8gjd6zpp3uay","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3o00188gjdf82yg8r4"},{"post_id":"cm7a4vg3m000u8gjdd1n224xz","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7a4vg3p001a8gjd6jzpfrv3"},{"post_id":"cm7a4vg3l000r8gjdd7n25r41","category_id":"cm7a4vg3m000x8gjd72fv3rf5","_id":"cm7a4vg3p001d8gjd4h169z0l"},{"post_id":"cm7a4vg3n000y8gjd8inehu90","category_id":"cm7a4vg3o00158gjd63c26pva","_id":"cm7a4vg3p001f8gjdf42w4ja6"},{"post_id":"cm7a4vg3n00108gjd2qeggfk5","category_id":"cm7a4vg3p001c8gjd06e2bmte","_id":"cm7a4vg3q001k8gjd92theb5t"},{"post_id":"cm7a4vg3o00148gjd872m7uzz","category_id":"cm7a4vg3p001c8gjd06e2bmte","_id":"cm7a4vg3r001n8gjdgvy4e5wf"},{"post_id":"cm7a4vg3o00178gjd1p7p6ny6","category_id":"cm7a4vg3q001j8gjdhjcm7m4z","_id":"cm7a4vg3r001q8gjdfrsefkya"},{"post_id":"cm7a4vg3t00238gjd2p3x1h26","category_id":"cm7a4vg3u00258gjd73fqfv6b","_id":"cm7a4vg3v002c8gjd779zgumg"},{"post_id":"cm7a4vg3t00248gjd9tum3v6h","category_id":"cm7a4vg3v00298gjd4qfxd6s7","_id":"cm7a4vg3w002g8gjd8b6s7jjo"},{"post_id":"cm7a4vg3u00278gjdg1mwg5i3","category_id":"cm7a4vg3v002d8gjd0nuw8psq","_id":"cm7a4vg3w002k8gjd5la290hm"},{"post_id":"cm7a4vg3v00288gjdgmjcd68z","category_id":"cm7a4vg3w002h8gjda7ds706c","_id":"cm7a4vg3w002m8gjd0lxc0oxf"},{"post_id":"cm7e5cdy900031gjdbypv7qk6","category_id":"cm7a4vg3q001j8gjdhjcm7m4z","_id":"cm7e5cdyb00071gjd26c88472"},{"post_id":"cm7e5cdy900041gjd2mjr4fj9","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7e5cdyb00081gjd3a44efbl"},{"post_id":"cm7e5cdy400001gjd96tu8p26","category_id":"cm7e5cdy600011gjdb312c8y3","_id":"cm7e5cdyb000a1gjde51qayv7"},{"post_id":"cm7lwfais000068jd0dgk14dq","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7lwfaj0000468jd3uh4bay9"},{"post_id":"cm7lwfaiw000168jd1qhhedpk","category_id":"cm7a4vg3e00048gjd06hy2h43","_id":"cm7lwfaj0000568jd3own92tv"},{"post_id":"cm7n27c2t000aigjd5hvzgp7j","category_id":"cm7n1afai0004pojdcisq26g5","_id":"cm7n27c2u000cigjd3mpx611y"},{"post_id":"cm7n2ijnu0001ccjd9eao6n60","category_id":"cm7n1afai0004pojdcisq26g5","_id":"cm7n2kmld0003ccjddrnahjh0"}],"PostTag":[{"post_id":"cm7a4vg3b00018gjda45v8l4v","tag_id":"cm7a4vg3f00058gjd7j80b5h5","_id":"cm7a4vg3h000c8gjd932102ow"},{"post_id":"cm7a4vg3d00038gjddnru1t6w","tag_id":"cm7a4vg3h000b8gjdgyv64pgn","_id":"cm7a4vg3k000k8gjd43ug3auk"},{"post_id":"cm7a4vg3g00078gjd1f662wrg","tag_id":"cm7a4vg3i000h8gjd4y3g11th","_id":"cm7a4vg3l000q8gjd3mw8fupe"},{"post_id":"cm7a4vg3g00088gjd2gtf1mly","tag_id":"cm7a4vg3l000n8gjdcxp6ehv1","_id":"cm7a4vg3m000w8gjd75vwdpq5"},{"post_id":"cm7a4vg3h00098gjd9bayeq03","tag_id":"cm7a4vg3m000t8gjdcsuicjin","_id":"cm7a4vg3n00138gjdb1hk31gd"},{"post_id":"cm7a4vg3h000d8gjdcj5neqao","tag_id":"cm7a4vg3n00128gjd172xhuo5","_id":"cm7a4vg3p001b8gjd29wvc1st"},{"post_id":"cm7a4vg3i000e8gjd70apegn2","tag_id":"cm7a4vg3o00198gjd5pio449o","_id":"cm7a4vg3p001g8gjdde5r8g4k"},{"post_id":"cm7a4vg3j000i8gjdgn1ka85m","tag_id":"cm7a4vg3p001e8gjd2o204p80","_id":"cm7a4vg3q001l8gjde93f53ar"},{"post_id":"cm7a4vg3k000l8gjdhmb47yos","tag_id":"cm7a4vg3p001i8gjd7jrkd6nb","_id":"cm7a4vg3r001o8gjddtfi3kyr"},{"post_id":"cm7a4vg3l000o8gjd6zpp3uay","tag_id":"cm7a4vg3n00128gjd172xhuo5","_id":"cm7a4vg3r001r8gjd12vs8tmd"},{"post_id":"cm7a4vg3l000r8gjdd7n25r41","tag_id":"cm7a4vg3r001p8gjd6wz924fd","_id":"cm7a4vg3r001t8gjd38pdaysu"},{"post_id":"cm7a4vg3m000u8gjdd1n224xz","tag_id":"cm7a4vg3p001i8gjd7jrkd6nb","_id":"cm7a4vg3r001v8gjdg4lp83wb"},{"post_id":"cm7a4vg3n000y8gjd8inehu90","tag_id":"cm7a4vg3r001u8gjdd8wa0jh8","_id":"cm7a4vg3r001x8gjd85zs2i24"},{"post_id":"cm7a4vg3n00108gjd2qeggfk5","tag_id":"cm7a4vg3r001w8gjd37qg9boi","_id":"cm7a4vg3s001z8gjd18gedgkv"},{"post_id":"cm7a4vg3o00148gjd872m7uzz","tag_id":"cm7a4vg3r001y8gjd7uo561ri","_id":"cm7a4vg3s00218gjdgjyvgcyz"},{"post_id":"cm7a4vg3o00178gjd1p7p6ny6","tag_id":"cm7a4vg3s00208gjddsqt7srq","_id":"cm7a4vg3s00228gjd25nj480i"},{"post_id":"cm7a4vg3t00238gjd2p3x1h26","tag_id":"cm7a4vg3u00268gjd222o2v6j","_id":"cm7a4vg3v002b8gjd4ueibmny"},{"post_id":"cm7a4vg3t00248gjd9tum3v6h","tag_id":"cm7a4vg3v002a8gjd2jrx4i7h","_id":"cm7a4vg3w002f8gjd716dfaqz"},{"post_id":"cm7a4vg3u00278gjdg1mwg5i3","tag_id":"cm7a4vg3w002e8gjdbdvq4ee7","_id":"cm7a4vg3w002j8gjd1ost2lna"},{"post_id":"cm7a4vg3v00288gjdgmjcd68z","tag_id":"cm7a4vg3w002i8gjd7zdp4l0q","_id":"cm7a4vg3w002l8gjdem1xed16"},{"post_id":"cm7e5cdy400001gjd96tu8p26","tag_id":"cm7e5cdy800021gjdar898gq0","_id":"cm7e5cdyb00061gjd5ylxan4x"},{"post_id":"cm7e5cdy900031gjdbypv7qk6","tag_id":"cm7e5cdya00051gjd0e4n8uy0","_id":"cm7e5cdyb000b1gjd8qtec9qx"},{"post_id":"cm7e5cdy900041gjd2mjr4fj9","tag_id":"cm7e5cdyb00091gjd7aj16rqu","_id":"cm7e5cdyb000c1gjddcfvgufd"},{"post_id":"cm7lwfais000068jd0dgk14dq","tag_id":"cm7a4vg3p001e8gjd2o204p80","_id":"cm7lwfaiy000268jd1g3f0f8n"},{"post_id":"cm7lwfaiw000168jd1qhhedpk","tag_id":"cm7lwfaiy000368jd8zwebqca","_id":"cm7lwfaj1000668jd07wg8n2n"},{"post_id":"cm7n27c2t000aigjd5hvzgp7j","tag_id":"cm7n1afal0005pojd8h581i0t","_id":"cm7n27c2t000bigjd83c03awx"},{"post_id":"cm7n2ijnu0001ccjd9eao6n60","tag_id":"cm7n253mt0004igjd8i6kcuxt","_id":"cm7n2kmld0002ccjddxmyaycl"}],"Tag":[{"name":"docker","_id":"cm7a4vg3f00058gjd7j80b5h5"},{"name":"并发","_id":"cm7a4vg3h000b8gjdgyv64pgn"},{"name":"git","_id":"cm7a4vg3i000h8gjd4y3g11th"},{"name":"报警","_id":"cm7a4vg3l000n8gjdcxp6ehv1"},{"name":"查找进程","_id":"cm7a4vg3m000t8gjdcsuicjin"},{"name":"openvpn","_id":"cm7a4vg3n00128gjd172xhuo5"},{"name":"网络","_id":"cm7a4vg3o00198gjd5pio449o"},{"name":"nginx","_id":"cm7a4vg3p001e8gjd2o204p80"},{"name":"扩容磁盘","_id":"cm7a4vg3p001i8gjd7jrkd6nb"},{"name":"翻墙","_id":"cm7a4vg3r001p8gjd6wz924fd"},{"name":"lua表达式","_id":"cm7a4vg3r001u8gjdd8wa0jh8"},{"name":"状态机","_id":"cm7a4vg3r001w8gjd37qg9boi"},{"name":"打印异常日志","_id":"cm7a4vg3r001y8gjd7uo561ri"},{"name":"事务","_id":"cm7a4vg3s00208gjddsqt7srq"},{"name":"账户资金","_id":"cm7a4vg3u00268gjd222o2v6j"},{"name":"网站资源","_id":"cm7a4vg3v002a8gjd2jrx4i7h"},{"name":"自学公式","_id":"cm7a4vg3w002e8gjdbdvq4ee7"},{"name":"漏洞","_id":"cm7a4vg3w002i8gjd7zdp4l0q"},{"name":"命令","_id":"cm7e5cdy800021gjdar898gq0"},{"name":"备份","_id":"cm7e5cdya00051gjd0e4n8uy0"},{"name":"常用命令","_id":"cm7e5cdyb00091gjd7aj16rqu"},{"name":"开机自启","_id":"cm7lwfaiy000368jd8zwebqca"},{"name":"docker部署","_id":"cm7n1afal0005pojd8h581i0t"},{"name":"学习","_id":"cm7n252jo0001igjdak6u0ge5"},{"name":"学习笔记","_id":"cm7n253mt0004igjd8i6kcuxt"}]}}